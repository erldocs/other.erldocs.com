 :: Extracting meta information
$ infinity  `git ls-remote --heads --tags 'https://github.com/ddossot/rabbitmq-http-safe'  2>&1`
>>> [repo] 1 branches, 1 tags
WTF {ok,{{"HTTP/1.1",200,"OK"},
         [{"cache-control","max-age=300"},
          {"connection","keep-alive"},
          {"date","Sat, 10 Oct 2015 16:23:50 GMT"},
          {"via","1.1 varnish"},
          {"accept-ranges","bytes"},
          {"etag","\"8e9607e813a3856b7372c05eb8e0170bfc1c7578\""},
          {"vary","Authorization,Accept-Encoding"},
          {"content-length","510"},
          {"content-type","text/plain; charset=utf-8"},
          {"expires","Sat, 10 Oct 2015 16:28:50 GMT"},
          {"content-security-policy","default-src 'none'"},
          {"x-xss-protection","1; mode=block"},
          {"x-frame-options","deny"},
          {"x-content-type-options","nosniff"},
          {"strict-transport-security","max-age=31536000"},
          {"x-served-by","cache-fra1247-FRA"},
          {"x-cache","MISS"},
          {"x-cache-hits","0"},
          {"access-control-allow-origin","*"},
          {"source-age","0"}],
         "{name,\"rabbitmq-http-safe\"}.\n{target_path,\"github.com/ddossot/rabbitmq-http-safe\"}.\n{url,\"https://github.com/ddossot/rabbitmq-http-safe\"}.\n{vsn_format,2}.\n{vsn_pass,101}.\n{time_begin,{{2015,9,21},{14,3,10}}}.\n{method,git}.\n{count_tags,1}.\n{count_branches,1}.\n{revisions,[{rev,branch,\"master\",\"b8724be89e0d67d43e3a0ca8c0ae3ed07cfc1509\",\n                 true,[],[]},\n            {rev,tag,\"v2.3.1.0\",\"da2a7f0a02df6e4ed23aed65740f3596feb1c436\",\n                 true,[],[]}]}.\n{time_end,{{2015,9,21},{14,3,11}}}.\n"}}
 :: Writing meta to "/home/pete/wefwefwef/docs/other/fd446dea497792fe52713b1c3443804e20b2a701/meta.txt"
 :: Skipping tag "v2.3.1.0"
 :: Skipping branch "master"
 :: Finishing up
$ 5000  `rm -r '/home/pete/wefwefwef/docs/other/fd446dea497792fe52713b1c3443804e20b2a701/rabbitmq-http-safe'  2>&1`
