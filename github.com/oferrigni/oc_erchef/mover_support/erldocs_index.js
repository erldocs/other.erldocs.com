var index = [['app','chef_authn','chef_authn','[application]'],['mod','chef_authn','chef_keygen_cache','chef_keygen_cache Precreates RSA key pairs and ser'],['mod','chef_authn','chef_keygen_worker','chef_keygen_worker makes RSA key pairs just for yo'],['mod','chef_authn','chef_keygen_worker_sup','supervisor for chef_keygen_worker throw-away key g'],['mod','chef_authn','chef_keyring',[]],['mod','chef_authn','chef_time_utils','chef_time_utils - helpers for converting between h'],['fun','chef_authn','chef_keygen_cache:code_change/3',[]],['fun','chef_authn','chef_keygen_cache:get_key_pair/0','Retrieve an RSA key pair from the cache.'],['fun','chef_authn','chef_keygen_cache:handle_call/3',[]],['fun','chef_authn','chef_keygen_cache:handle_cast/2',[]],['fun','chef_authn','chef_keygen_cache:handle_info/2',[]],['fun','chef_authn','chef_keygen_cache:init/1',[]],['fun','chef_authn','chef_keygen_cache:start_link/0',[]],['fun','chef_authn','chef_keygen_cache:status/0','Return a proplist of status information about the '],['fun','chef_authn','chef_keygen_cache:status_for_json/0',[]],['fun','chef_authn','chef_keygen_cache:stop/0',[]],['fun','chef_authn','chef_keygen_cache:terminate/2',[]],['fun','chef_authn','chef_keygen_cache:update_config/0','Instruct the cache to reread app config values.'],['fun','chef_authn','chef_keygen_worker:code_change/3',[]],['fun','chef_authn','chef_keygen_worker:get_key_pair/1',[]],['fun','chef_authn','chef_keygen_worker:handle_call/3',[]],['fun','chef_authn','chef_keygen_worker:handle_cast/2',[]],['fun','chef_authn','chef_keygen_worker:handle_info/2',[]],['fun','chef_authn','chef_keygen_worker:init/1',[]],['fun','chef_authn','chef_keygen_worker:start_link/1',[]],['fun','chef_authn','chef_keygen_worker:terminate/2',[]],['fun','chef_authn','chef_keygen_worker_sup:get_openssl/0',[]],['fun','chef_authn','chef_keygen_worker_sup:init/1',[]],['fun','chef_authn','chef_keygen_worker_sup:new_worker/0',[]],['fun','chef_authn','chef_keygen_worker_sup:new_worker/1',[]],['fun','chef_authn','chef_keygen_worker_sup:start_link/0',[]],['fun','chef_authn','chef_keyring:code_change/3',[]],['fun','chef_authn','chef_keyring:get_key/1',[]],['fun','chef_authn','chef_keyring:handle_call/3',[]],['fun','chef_authn','chef_keyring:handle_cast/2',[]],['fun','chef_authn','chef_keyring:handle_info/2',[]],['fun','chef_authn','chef_keyring:init/1',[]],['fun','chef_authn','chef_keyring:list_keys/0',[]],['fun','chef_authn','chef_keyring:reload/0',[]],['fun','chef_authn','chef_keyring:reload_if_changed/0',[]],['fun','chef_authn','chef_keyring:start_link/0',[]],['fun','chef_authn','chef_keyring:stats/0',[]],['fun','chef_authn','chef_keyring:terminate/2',[]],['fun','chef_authn','chef_time_utils:canonical_time/1','Convert a string or binary HTTP request time to is'],['fun','chef_authn','chef_time_utils:time_in_bounds/1','Check if two times are equal within a given Skew i'],['fun','chef_authn','chef_time_utils:time_in_bounds/1','Check if a time, expressed as an ISO8601 string is'],['fun','chef_authn','chef_time_utils:time_iso8601/1','Converts Erlang time-tuple to iso8601 formatted da'],['fun','chef_authn','chef_time_utils:time_iso8601_to_date_time/1','Convert an iso8601 time string to Erlang date time'],['app','chef_db','chef_db','[application]'],['mod','chef_db','chef_cache',[]],['mod','chef_db','chef_db_darklaunch',[]],['mod','chef_db','chefp','chefp is a functional programming helpers module.'],['fun','chef_db','chef_cache:clear/1',[]],['fun','chef_db','chef_cache:close/1',[]],['fun','chef_db','chef_cache:current_size/1',[]],['fun','chef_db','chef_cache:del/2',[]],['fun','chef_db','chef_cache:get/2',[]],['fun','chef_db','chef_cache:init/1',[]],['fun','chef_db','chef_cache:max_size/1',[]],['fun','chef_db','chef_cache:now_ts/0',[]],['fun','chef_db','chef_cache:prune_worker/1',[]],['fun','chef_db','chef_cache:put/3',[]],['fun','chef_db','chef_cache:ttl/1',[]],['fun','chef_db','chef_db_darklaunch:is_enabled/2',[]],['fun','chef_db','chefp:batch_fold/2','Generic batch processing as a foldl.'],['app','chef_index','chef_index','[application]'],['mod','chef_index','chef_lucene',[]],['mod','chef_index','chef_solr','Helper module for calling various Chef REST endpoi'],['mod','chef_index','lucene',[]],['mod','chef_index','lucene_sexp',[]],['mod','chef_index','lucene_txfm',[]],['fun','chef_index','chef_lucene:file/1',[]],['fun','chef_index','chef_lucene:parse/1',[]],['fun','chef_index','chef_solr:add_org_guid_to_query/1',[]],['fun','chef_index','chef_solr:delete_search_db/1','Delete all search index entries for a given organi'],['fun','chef_index','chef_solr:delete_search_db_by_type/1','Delete all search index entries for a given  orga'],['fun','chef_index','chef_solr:make_query_from_params/1',[]],['fun','chef_index','chef_solr:ping/0',[]],['fun','chef_index','chef_solr:search/1',[]],['fun','chef_index','chef_solr:search/1',[]],['fun','chef_index','chef_solr:solr_commit/0','Sends a "commit" message directly to Solr  This i'],['fun','chef_index','lucene:file/1',[]],['fun','chef_index','lucene:parse/1',[]],['fun','chef_index','lucene_sexp:transform/3',[]],['fun','chef_index','lucene_txfm:transform/3',[]],['app','chef_objects','chef_objects','[application]'],['mod','chef_objects','chef_cert_http','interface to the certificate generation service.'],['mod','chef_objects','chef_config','Provides functions for retrieving application conf'],['mod','chef_objects','chef_db_compression',[]],['mod','chef_objects','chef_deep_merge',[]],['mod','chef_objects','chef_depsolver',[]],['mod','chef_objects','chef_json',[]],['mod','chef_objects','chef_parallel','Utility functions for performing work in parallel.'],['mod','chef_objects','chef_password',[]],['fun','chef_objects','chef_cert_http:gen_cert/1','Handle HTTP interaction with remote certificate se'],['fun','chef_objects','chef_config:config_option/1',[]],['fun','chef_objects','chef_db_compression:compress/1',[]],['fun','chef_objects','chef_db_compression:decompress/1','Decompresses gzip data and lets non-gzip data pass'],['fun','chef_objects','chef_db_compression:decompress_and_decode/1','Does what it says on the tin.'],['fun','chef_objects','chef_deep_merge:merge/1',[]],['fun','chef_objects','chef_depsolver:parse_binary_json/1','Convert a binary JSON string representing a Chef r'],['fun','chef_objects','chef_depsolver:solve_dependencies/1','Main entry point into the depsolver.'],['fun','chef_objects','chef_json:decode/1',[]],['fun','chef_objects','chef_json:decode_body/1','Decodes JSON body and verifies valid payload type.'],['fun','chef_objects','chef_json:encode/1',[]],['fun','chef_objects','chef_parallel:parallelize_all_with_timeout/1','Parallelizes the map of Fun across Items, with eac'],['fun','chef_objects','chef_password:encrypt/1','Return hashed password, salt, and hash type.'],['fun','chef_objects','chef_password:upgrade/1','if required, upgrade password encryption from SHA1'],['fun','chef_objects','chef_password:verify/1','Return true if the plain password hashes to the sa'],['app','chef_wm','chef_wm','[application]'],['mod','chef_wm','chef_wm_app',[]],['mod','chef_wm','chef_wm_darklaunch',[]],['fun','chef_wm','chef_wm_app:start/2',[]],['fun','chef_wm','chef_wm_app:stop/1',[]],['fun','chef_wm','chef_wm_darklaunch:get_proplist/1',[]],['fun','chef_wm','chef_wm_darklaunch:is_enabled/2',[]],['app','depsolver','depsolver','[application]'],['mod','depsolver','depsolver_app','.'],['mod','depsolver','depsolver_culprit','    This app does the culprit search for a failed'],['mod','depsolver','depsolver_event_logger','Capture depsolver problems and solutions to files '],['mod','depsolver','depsolver_sup',[]],['mod','depsolver','depsolver_worker','.'],['mod','depsolver','depsolver_worker_sup','.'],['fun','depsolver','depsolver_app:start/0',[]],['fun','depsolver','depsolver_app:start/2',[]],['fun','depsolver','depsolver_app:stop/0',[]],['fun','depsolver','depsolver_app:stop/1',[]],['fun','depsolver','depsolver_culprit:format_constraint/1',[]],['fun','depsolver','depsolver_culprit:format_culprits/1',[]],['fun','depsolver','depsolver_culprit:format_error/1',[]],['fun','depsolver','depsolver_culprit:format_roots/1',[]],['fun','depsolver','depsolver_culprit:format_version/1',[]],['fun','depsolver','depsolver_culprit:search/1','start running the solver, with each run reduce the'],['fun','depsolver','depsolver_event_logger:add_handler/0',[]],['fun','depsolver','depsolver_event_logger:add_handler/1',[]],['fun','depsolver','depsolver_event_logger:code_change/3',[]],['fun','depsolver','depsolver_event_logger:handle_call/2',[]],['fun','depsolver','depsolver_event_logger:handle_event/2',[]],['fun','depsolver','depsolver_event_logger:handle_info/2',[]],['fun','depsolver','depsolver_event_logger:init/1',[]],['fun','depsolver','depsolver_event_logger:log/3',[]],['fun','depsolver','depsolver_event_logger:remove_handler/0',[]],['fun','depsolver','depsolver_event_logger:start_link/0',[]],['fun','depsolver','depsolver_event_logger:terminate/2',[]],['fun','depsolver','depsolver_sup:init/1',[]],['fun','depsolver','depsolver_sup:start_link/0',[]],['fun','depsolver','depsolver_worker:solve/4',[]],['fun','depsolver','depsolver_worker:start_link/0','  Starts the server.'],['fun','depsolver','depsolver_worker_sup:solve/3',[]],['fun','depsolver','depsolver_worker_sup:start_link/0','  Starts the supervisor.'],['app','oc_chef_authz','oc_chef_authz','[application]'],['mod','oc_chef_authz','oc_chef_authz_acl',[]],['mod','oc_chef_authz','oc_chef_authz_app',[]],['mod','oc_chef_authz','oc_chef_authz_http','oc_chef_authzs interface to the authz server.'],['mod','oc_chef_authz','oc_chef_authz_org_creator',[]],['mod','oc_chef_authz','oc_chef_authz_sup',[]],['fun','oc_chef_authz','oc_chef_authz_acl:acl_auth_path/3',[]],['fun','oc_chef_authz','oc_chef_authz_acl:acl_path/2',[]],['fun','oc_chef_authz','oc_chef_authz_acl:acl_path/3',[]],['fun','oc_chef_authz','oc_chef_authz_acl:fetch/2',[]],['fun','oc_chef_authz','oc_chef_authz_acl:fetch_cookbook_id/3',[]],['fun','oc_chef_authz','oc_chef_authz_acl:fetch_id/4',[]],['fun','oc_chef_authz','oc_chef_authz_acl:has_grant_on/3',[]],['fun','oc_chef_authz','oc_chef_authz_acl:update_part/5',[]],['fun','oc_chef_authz','oc_chef_authz_app:start/0',[]],['fun','oc_chef_authz','oc_chef_authz_app:start/2',[]],['fun','oc_chef_authz','oc_chef_authz_app:stop/0',[]],['fun','oc_chef_authz','oc_chef_authz_app:stop/1',[]],['fun','oc_chef_authz','oc_chef_authz_http:create_pool/0',[]],['fun','oc_chef_authz','oc_chef_authz_http:delete_pool/0',[]],['fun','oc_chef_authz','oc_chef_authz_http:ping/0',[]],['fun','oc_chef_authz','oc_chef_authz_http:request/1',[]],['fun','oc_chef_authz','oc_chef_authz_http:request/1',[]],['fun','oc_chef_authz','oc_chef_authz_http:request/1',[]],['fun','oc_chef_authz','oc_chef_authz_http:with_new_http_client/1',[]],['fun','oc_chef_authz','oc_chef_authz_http:with_new_http_client/1','Create a new HTTP connection to the authz service '],['fun','oc_chef_authz','oc_chef_authz_org_creator:create_org/2',[]],['fun','oc_chef_authz','oc_chef_authz_org_creator:create_org/3',[]],['fun','oc_chef_authz','oc_chef_authz_sup:init/1',[]],['fun','oc_chef_authz','oc_chef_authz_sup:start_link/0',[]],['app','oc_chef_wm','oc_chef_wm','[application]'],['mod','oc_chef_wm','oc_chef_action_queue',[]],['mod','oc_chef_wm','oc_chef_sql',[]],['mod','oc_chef_wm','oc_chef_wm_app',[]],['mod','oc_chef_wm','oc_chef_wm_authn_ldap',[]],['fun','oc_chef_wm','oc_chef_action_queue:publish/1',[]],['fun','oc_chef_wm','oc_chef_sql:statements/1','Private Chef Server queries.'],['fun','oc_chef_wm','oc_chef_wm_app:remsh_welcome/0','Print an informative message about how to use a re'],['fun','oc_chef_wm','oc_chef_wm_app:start/2',[]],['fun','oc_chef_wm','oc_chef_wm_app:stop/1',[]],['fun','oc_chef_wm','oc_chef_wm_authn_ldap:auth_method/1',[]],['fun','oc_chef_wm','oc_chef_wm_authn_ldap:authenticate/1',[]],['app','oc_erchef','oc_erchef','[application]'],['mod','oc_erchef','oc_erchef_app',[]],['mod','oc_erchef','oc_erchef_sup',[]],['fun','oc_erchef','oc_erchef_app:start/2',[]],['fun','oc_erchef','oc_erchef_app:stop/1',[]],['fun','oc_erchef','oc_erchef_sup:init/1',[]],['fun','oc_erchef','oc_erchef_sup:start_link/0',[]]];