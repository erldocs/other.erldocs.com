var index = [['app','llevm','llevm','[application]'],['mod','llevm','llevm',[]],['mod','llevm','llvm_nif',[]],['fun','llevm','llevm:EDBranchTargetID/1','EDBranchTargetID instThe instruction to be queried'],['fun','llevm','llevm:EDCreateInsts/1','Creating and querying instructionsEDCreateInst Get'],['fun','llevm','llevm:EDEvaluateOperand/1','EDEvaluateOperand Evaluates an operand using a cli'],['fun','llevm','llevm:EDGetDisassembler/1','Getting a disassemblerEDGetDisassembler Gets the d'],['fun','llevm','llevm:EDGetInstString/1','EDGetInstString Gets the disassembled text equival'],['fun','llevm','llevm:EDGetOperand/1','EDGetOperand Retrieves an operand from an instruct'],['fun','llevm','llevm:EDGetRegisterName/1','Generic architectural queriesEDGetRegisterName Get'],['fun','llevm','llevm:EDGetToken/1','EDGetToken Retrieves a token from an instruction.'],['fun','llevm','llevm:EDGetTokenString/1','EDGetTokenString Gets the disassembled text for a '],['fun','llevm','llevm:EDImmediateOperandValue/1','EDImmediateOperandValue valueA pointer whose targe'],['fun','llevm','llevm:EDInstByteSize/1','EDInstByteSize instThe instruction to be queried.'],['fun','llevm','llevm:EDInstIsBranch/1','EDInstIsBranch instThe instruction to be queried.'],['fun','llevm','llevm:EDInstIsMove/1','EDInstIsMove instThe instruction to be queried.'],['fun','llevm','llevm:EDLiteralTokenAbsoluteValue/1','EDLiteralTokenAbsoluteValue valueA pointer whose t'],['fun','llevm','llevm:EDMoveSourceID/1','EDMoveSourceID instThe instruction to be queried.'],['fun','llevm','llevm:EDMoveTargetID/1','EDMoveTargetID instThe instruction to be queried.'],['fun','llevm','llevm:EDNumOperands/1','Creating and querying operandsEDNumOperands instTh'],['fun','llevm','llevm:EDNumTokens/1','Creating and querying tokensEDNumTokens instThe in'],['fun','llevm','llevm:EDOperandIndexForToken/1','EDOperandIndexForToken Returns the index of the op'],['fun','llevm','llevm:EDOperandIsImmediate/1','EDOperandIsImmediate operandThe operand to be quer'],['fun','llevm','llevm:EDOperandIsMemory/1','EDOperandIsMemory operandThe operand to be queried'],['fun','llevm','llevm:EDOperandIsRegister/1','EDOperandIsRegister operandThe operand to be queri'],['fun','llevm','llevm:EDRegisterIsProgramCounter/1','EDRegisterIsProgramCounter Determines if a registe'],['fun','llevm','llevm:EDRegisterIsStackPointer/1','EDRegisterIsStackPointer Determines if a register '],['fun','llevm','llevm:EDRegisterOperandValue/1','EDRegisterOperandValue valueA pointer whose target'],['fun','llevm','llevm:EDRegisterTokenValue/1','EDRegisterTokenValue registerIDA pointer whose tar'],['fun','llevm','llevm:EDReleaseInst/1','EDReleaseInst Frees the memory for an instruction.'],['fun','llevm','llevm:EDTokenIsLiteral/1','EDTokenIsLiteral tokenThe token to be queried.'],['fun','llevm','llevm:EDTokenIsNegativeLiteral/1','EDTokenIsNegativeLiteral tokenThe token to be quer'],['fun','llevm','llevm:EDTokenIsOpcode/1','EDTokenIsOpcode tokenThe token to be queried.'],['fun','llevm','llevm:EDTokenIsPunctuation/1','EDTokenIsPunctuation tokenThe token to be queried.'],['fun','llevm','llevm:EDTokenIsRegister/1','EDTokenIsRegister tokenThe token to be queried.'],['fun','llevm','llevm:EDTokenIsWhitespace/1','EDTokenIsWhitespace tokenThe token to be queried.'],['fun','llevm','llevm:LLVMABIAlignmentOfType/1','Computes the ABI alignment of a type in bytes for '],['fun','llevm','llevm:LLVMABISizeOfType/1','Computes the ABI size of a type in bytes for a tar'],['fun','llevm','llevm:LLVMAddAggressiveDCEPass/1','See llvm::createAggressiveDCEPass function.'],['fun','llevm','llevm:LLVMAddAlias/1',[]],['fun','llevm','llevm:LLVMAddAlwaysInlinerPass/1','See llvm::createAlwaysInlinerPass function.'],['fun','llevm','llevm:LLVMAddArgumentPromotionPass/1','See llvm::createArgumentPromotionPass function.'],['fun','llevm','llevm:LLVMAddAttribute/1',[]],['fun','llevm','llevm:LLVMAddBasicAliasAnalysisPass/1','See llvm::createBasicAliasAnalysisPass function.'],['fun','llevm','llevm:LLVMAddBBVectorizePass/1','See llvm::createBBVectorizePass function.'],['fun','llevm','llevm:LLVMAddCase/1',[]],['fun','llevm','llevm:LLVMAddCFGSimplificationPass/1','See llvm::createCFGSimplificationPass function.'],['fun','llevm','llevm:LLVMAddClause/1',[]],['fun','llevm','llevm:LLVMAddConstantMergePass/1','See llvm::createConstantMergePass function.'],['fun','llevm','llevm:LLVMAddConstantPropagationPass/1','See llvm::createConstantPropagationPass function.'],['fun','llevm','llevm:LLVMAddCorrelatedValuePropagationPass/1','See llvm::createCorrelatedValuePropagationPass fun'],['fun','llevm','llevm:LLVMAddDeadArgEliminationPass/1','See llvm::createDeadArgEliminationPass function.'],['fun','llevm','llevm:LLVMAddDeadStoreEliminationPass/1','See llvm::createDeadStoreEliminationPass function.'],['fun','llevm','llevm:LLVMAddDemoteMemoryToRegisterPass/1','See llvm::demotePromoteMemoryToRegisterPass functi'],['fun','llevm','llevm:LLVMAddDestination/1',[]],['fun','llevm','llevm:LLVMAddEarlyCSEPass/1','See llvm::createEarlyCSEPass function.'],['fun','llevm','llevm:LLVMAddFunction/1',[]],['fun','llevm','llevm:LLVMAddFunctionAttr/1',[]],['fun','llevm','llevm:LLVMAddFunctionAttrsPass/1','See llvm::createFunctionAttrsPass function.'],['fun','llevm','llevm:LLVMAddFunctionInliningPass/1','See llvm::createFunctionInliningPass function.'],['fun','llevm','llevm:LLVMAddGlobal/1',[]],['fun','llevm','llevm:LLVMAddGlobalDCEPass/1','See llvm::createGlobalDCEPass function.'],['fun','llevm','llevm:LLVMAddGlobalInAddressSpace/1',[]],['fun','llevm','llevm:LLVMAddGlobalMapping/1',[]],['fun','llevm','llevm:LLVMAddGlobalOptimizerPass/1','See llvm::createGlobalOptimizerPass function.'],['fun','llevm','llevm:LLVMAddGVNPass/1','See llvm::createGVNPass function.'],['fun','llevm','llevm:LLVMAddIncoming/1',[]],['fun','llevm','llevm:LLVMAddIndVarSimplifyPass/1','See llvm::createIndVarSimplifyPass function.'],['fun','llevm','llevm:LLVMAddInstrAttribute/1',[]],['fun','llevm','llevm:LLVMAddInstructionCombiningPass/1','See llvm::createInstructionCombiningPass function.'],['fun','llevm','llevm:LLVMAddInternalizePass/1','See llvm::createInternalizePass function.'],['fun','llevm','llevm:LLVMAddIPConstantPropagationPass/1','See llvm::createIPConstantPropagationPass function'],['fun','llevm','llevm:LLVMAddIPSCCPPass/1','See llvm::createIPSCCPPass function.'],['fun','llevm','llevm:LLVMAddJumpThreadingPass/1','See llvm::createJumpThreadingPass function.'],['fun','llevm','llevm:LLVMAddLICMPass/1','See llvm::createLICMPass function.'],['fun','llevm','llevm:LLVMAddLoopDeletionPass/1','See llvm::createLoopDeletionPass function.'],['fun','llevm','llevm:LLVMAddLoopIdiomPass/1','See llvm::createLoopIdiomPass function.'],['fun','llevm','llevm:LLVMAddLoopRotatePass/1','See llvm::createLoopRotatePass function.'],['fun','llevm','llevm:LLVMAddLoopUnrollPass/1','See llvm::createLoopUnrollPass function.'],['fun','llevm','llevm:LLVMAddLoopUnswitchPass/1','See llvm::createLoopUnswitchPass function.'],['fun','llevm','llevm:LLVMAddLowerExpectIntrinsicPass/1','See llvm::createLowerExpectIntrinsicPass function.'],['fun','llevm','llevm:LLVMAddMemCpyOptPass/1','See llvm::createMemCpyOptPass function.'],['fun','llevm','llevm:LLVMAddModule/1',[]],['fun','llevm','llevm:LLVMAddModuleProvider/1','Deprecated: Use LLVMAddModule instead.'],['fun','llevm','llevm:LLVMAddNamedMetadataOperand/1',[]],['fun','llevm','llevm:LLVMAddPromoteMemoryToRegisterPass/1','See llvm::createPromoteMemoryToRegisterPass functi'],['fun','llevm','llevm:LLVMAddPruneEHPass/1','See llvm::createPruneEHPass function.'],['fun','llevm','llevm:LLVMAddReassociatePass/1','See llvm::createReassociatePass function.'],['fun','llevm','llevm:LLVMAddScalarReplAggregatesPass/1','See llvm::createScalarReplAggregatesPass function.'],['fun','llevm','llevm:LLVMAddScalarReplAggregatesPassSSA/1','See llvm::createScalarReplAggregatesPass function.'],['fun','llevm','llevm:LLVMAddScalarReplAggregatesPassWithThreshold/1','See llvm::createScalarReplAggregatesPass function.'],['fun','llevm','llevm:LLVMAddSCCPPass/1','See llvm::createSCCPPass function.'],['fun','llevm','llevm:LLVMAddSimplifyLibCallsPass/1','See llvm::createSimplifyLibCallsPass function.'],['fun','llevm','llevm:LLVMAddStripDeadPrototypesPass/1','See llvm::createStripDeadPrototypesPass function.'],['fun','llevm','llevm:LLVMAddStripSymbolsPass/1','See llvm::createStripSymbolsPass function.'],['fun','llevm','llevm:LLVMAddTailCallEliminationPass/1','See llvm::createTailCallEliminationPass function.'],['fun','llevm','llevm:LLVMAddTargetData/1','Adds target data information to a pass manager.'],['fun','llevm','llevm:LLVMAddTargetLibraryInfo/1','Adds target library information to a pass manager.'],['fun','llevm','llevm:LLVMAddTypeBasedAliasAnalysisPass/1','See llvm::createTypeBasedAliasAnalysisPass functio'],['fun','llevm','llevm:LLVMAddVerifierPass/1','See llvm::createVerifierPass function.'],['fun','llevm','llevm:LLVMAlignOf/1',[]],['fun','llevm','llevm:LLVMAppendBasicBlock/1',[]],['fun','llevm','llevm:LLVMAppendBasicBlockInContext/1',[]],['fun','llevm','llevm:LLVMArrayType/1',[]],['fun','llevm','llevm:LLVMBasicBlockAsValue/1',[]],['fun','llevm','llevm:LLVMBlockAddress/1',[]],['fun','llevm','llevm:LLVMBuildAdd/1',[]],['fun','llevm','llevm:LLVMBuildAggregateRet/1',[]],['fun','llevm','llevm:LLVMBuildAlloca/1',[]],['fun','llevm','llevm:LLVMBuildAnd/1',[]],['fun','llevm','llevm:LLVMBuildArrayAlloca/1',[]],['fun','llevm','llevm:LLVMBuildArrayMalloc/1',[]],['fun','llevm','llevm:LLVMBuildAShr/1',[]],['fun','llevm','llevm:LLVMBuildBinOp/1',[]],['fun','llevm','llevm:LLVMBuildBitCast/1',[]],['fun','llevm','llevm:LLVMBuildBr/1',[]],['fun','llevm','llevm:LLVMBuildCall/1',[]],['fun','llevm','llevm:LLVMBuildCast/1',[]],['fun','llevm','llevm:LLVMBuildCondBr/1',[]],['fun','llevm','llevm:LLVMBuildExactSDiv/1',[]],['fun','llevm','llevm:LLVMBuildExtractElement/1',[]],['fun','llevm','llevm:LLVMBuildExtractValue/1',[]],['fun','llevm','llevm:LLVMBuildFAdd/1',[]],['fun','llevm','llevm:LLVMBuildFCmp/1',[]],['fun','llevm','llevm:LLVMBuildFDiv/1',[]],['fun','llevm','llevm:LLVMBuildFMul/1',[]],['fun','llevm','llevm:LLVMBuildFNeg/1',[]],['fun','llevm','llevm:LLVMBuildFPCast/1',[]],['fun','llevm','llevm:LLVMBuildFPExt/1',[]],['fun','llevm','llevm:LLVMBuildFPToSI/1',[]],['fun','llevm','llevm:LLVMBuildFPToUI/1',[]],['fun','llevm','llevm:LLVMBuildFPTrunc/1',[]],['fun','llevm','llevm:LLVMBuildFree/1',[]],['fun','llevm','llevm:LLVMBuildFRem/1',[]],['fun','llevm','llevm:LLVMBuildFSub/1',[]],['fun','llevm','llevm:LLVMBuildGEP/1',[]],['fun','llevm','llevm:LLVMBuildGlobalString/1',[]],['fun','llevm','llevm:LLVMBuildGlobalStringPtr/1',[]],['fun','llevm','llevm:LLVMBuildICmp/1',[]],['fun','llevm','llevm:LLVMBuildInBoundsGEP/1',[]],['fun','llevm','llevm:LLVMBuildIndirectBr/1',[]],['fun','llevm','llevm:LLVMBuildInsertElement/1',[]],['fun','llevm','llevm:LLVMBuildInsertValue/1',[]],['fun','llevm','llevm:LLVMBuildIntCast/1',[]],['fun','llevm','llevm:LLVMBuildIntToPtr/1',[]],['fun','llevm','llevm:LLVMBuildInvoke/1',[]],['fun','llevm','llevm:LLVMBuildIsNotNull/1',[]],['fun','llevm','llevm:LLVMBuildIsNull/1',[]],['fun','llevm','llevm:LLVMBuildLandingPad/1',[]],['fun','llevm','llevm:LLVMBuildLoad/1',[]],['fun','llevm','llevm:LLVMBuildLShr/1',[]],['fun','llevm','llevm:LLVMBuildMalloc/1',[]],['fun','llevm','llevm:LLVMBuildMul/1',[]],['fun','llevm','llevm:LLVMBuildNeg/1',[]],['fun','llevm','llevm:LLVMBuildNot/1',[]],['fun','llevm','llevm:LLVMBuildNSWAdd/1',[]],['fun','llevm','llevm:LLVMBuildNSWMul/1',[]],['fun','llevm','llevm:LLVMBuildNSWNeg/1',[]],['fun','llevm','llevm:LLVMBuildNSWSub/1',[]],['fun','llevm','llevm:LLVMBuildNUWAdd/1',[]],['fun','llevm','llevm:LLVMBuildNUWMul/1',[]],['fun','llevm','llevm:LLVMBuildNUWNeg/1',[]],['fun','llevm','llevm:LLVMBuildNUWSub/1',[]],['fun','llevm','llevm:LLVMBuildOr/1',[]],['fun','llevm','llevm:LLVMBuildPhi/1',[]],['fun','llevm','llevm:LLVMBuildPointerCast/1',[]],['fun','llevm','llevm:LLVMBuildPtrDiff/1',[]],['fun','llevm','llevm:LLVMBuildPtrToInt/1',[]],['fun','llevm','llevm:LLVMBuildResume/1',[]],['fun','llevm','llevm:LLVMBuildRet/1',[]],['fun','llevm','llevm:LLVMBuildRetVoid/1',[]],['fun','llevm','llevm:LLVMBuildSDiv/1',[]],['fun','llevm','llevm:LLVMBuildSelect/1',[]],['fun','llevm','llevm:LLVMBuildSExt/1',[]],['fun','llevm','llevm:LLVMBuildSExtOrBitCast/1',[]],['fun','llevm','llevm:LLVMBuildShl/1',[]],['fun','llevm','llevm:LLVMBuildShuffleVector/1',[]],['fun','llevm','llevm:LLVMBuildSIToFP/1',[]],['fun','llevm','llevm:LLVMBuildSRem/1',[]],['fun','llevm','llevm:LLVMBuildStore/1',[]],['fun','llevm','llevm:LLVMBuildStructGEP/1',[]],['fun','llevm','llevm:LLVMBuildSub/1',[]],['fun','llevm','llevm:LLVMBuildSwitch/1',[]],['fun','llevm','llevm:LLVMBuildTrunc/1',[]],['fun','llevm','llevm:LLVMBuildTruncOrBitCast/1',[]],['fun','llevm','llevm:LLVMBuildUDiv/1',[]],['fun','llevm','llevm:LLVMBuildUIToFP/1',[]],['fun','llevm','llevm:LLVMBuildUnreachable/1',[]],['fun','llevm','llevm:LLVMBuildURem/1',[]],['fun','llevm','llevm:LLVMBuildVAArg/1',[]],['fun','llevm','llevm:LLVMBuildXor/1',[]],['fun','llevm','llevm:LLVMBuildZExt/1',[]],['fun','llevm','llevm:LLVMBuildZExtOrBitCast/1',[]],['fun','llevm','llevm:LLVMByteOrder/1','Returns the byte order of a target, either LLVMBig'],['fun','llevm','llevm:LLVMCallFrameAlignmentOfType/1','Computes the call frame alignment of a type in byt'],['fun','llevm','llevm:LLVMClearInsertionPosition/1',[]],['fun','llevm','llevm:LLVMConstAdd/1',[]],['fun','llevm','llevm:LLVMConstAllOnes/1',[]],['fun','llevm','llevm:LLVMConstAnd/1',[]],['fun','llevm','llevm:LLVMConstArray/1',[]],['fun','llevm','llevm:LLVMConstAShr/1',[]],['fun','llevm','llevm:LLVMConstBitCast/1',[]],['fun','llevm','llevm:LLVMConstExactSDiv/1',[]],['fun','llevm','llevm:LLVMConstExtractElement/1',[]],['fun','llevm','llevm:LLVMConstExtractValue/1',[]],['fun','llevm','llevm:LLVMConstFAdd/1',[]],['fun','llevm','llevm:LLVMConstFCmp/1',[]],['fun','llevm','llevm:LLVMConstFDiv/1',[]],['fun','llevm','llevm:LLVMConstFMul/1',[]],['fun','llevm','llevm:LLVMConstFNeg/1',[]],['fun','llevm','llevm:LLVMConstFPCast/1',[]],['fun','llevm','llevm:LLVMConstFPExt/1',[]],['fun','llevm','llevm:LLVMConstFPToSI/1',[]],['fun','llevm','llevm:LLVMConstFPToUI/1',[]],['fun','llevm','llevm:LLVMConstFPTrunc/1',[]],['fun','llevm','llevm:LLVMConstFRem/1',[]],['fun','llevm','llevm:LLVMConstFSub/1',[]],['fun','llevm','llevm:LLVMConstGEP/1',[]],['fun','llevm','llevm:LLVMConstICmp/1',[]],['fun','llevm','llevm:LLVMConstInBoundsGEP/1',[]],['fun','llevm','llevm:LLVMConstInlineAsm/1',[]],['fun','llevm','llevm:LLVMConstInsertElement/1',[]],['fun','llevm','llevm:LLVMConstInsertValue/1',[]],['fun','llevm','llevm:LLVMConstInt/1',[]],['fun','llevm','llevm:LLVMConstIntCast/1',[]],['fun','llevm','llevm:LLVMConstIntGetSExtValue/1',[]],['fun','llevm','llevm:LLVMConstIntGetZExtValue/1',[]],['fun','llevm','llevm:LLVMConstIntOfString/1',[]],['fun','llevm','llevm:LLVMConstIntOfStringAndSize/1',[]],['fun','llevm','llevm:LLVMConstIntToPtr/1',[]],['fun','llevm','llevm:LLVMConstLShr/1',[]],['fun','llevm','llevm:LLVMConstMul/1',[]],['fun','llevm','llevm:LLVMConstNamedStruct/1',[]],['fun','llevm','llevm:LLVMConstNeg/1',[]],['fun','llevm','llevm:LLVMConstNot/1',[]],['fun','llevm','llevm:LLVMConstNSWAdd/1',[]],['fun','llevm','llevm:LLVMConstNSWMul/1',[]],['fun','llevm','llevm:LLVMConstNSWNeg/1',[]],['fun','llevm','llevm:LLVMConstNSWSub/1',[]],['fun','llevm','llevm:LLVMConstNull/1',[]],['fun','llevm','llevm:LLVMConstNUWAdd/1',[]],['fun','llevm','llevm:LLVMConstNUWMul/1',[]],['fun','llevm','llevm:LLVMConstNUWNeg/1',[]],['fun','llevm','llevm:LLVMConstNUWSub/1',[]],['fun','llevm','llevm:LLVMConstOr/1',[]],['fun','llevm','llevm:LLVMConstPointerCast/1',[]],['fun','llevm','llevm:LLVMConstPointerNull/1',[]],['fun','llevm','llevm:LLVMConstPtrToInt/1',[]],['fun','llevm','llevm:LLVMConstReal/1',[]],['fun','llevm','llevm:LLVMConstRealOfString/1',[]],['fun','llevm','llevm:LLVMConstRealOfStringAndSize/1',[]],['fun','llevm','llevm:LLVMConstSDiv/1',[]],['fun','llevm','llevm:LLVMConstSelect/1',[]],['fun','llevm','llevm:LLVMConstSExt/1',[]],['fun','llevm','llevm:LLVMConstSExtOrBitCast/1',[]],['fun','llevm','llevm:LLVMConstShl/1',[]],['fun','llevm','llevm:LLVMConstShuffleVector/1',[]],['fun','llevm','llevm:LLVMConstSIToFP/1',[]],['fun','llevm','llevm:LLVMConstSRem/1',[]],['fun','llevm','llevm:LLVMConstString/1',[]],['fun','llevm','llevm:LLVMConstStringInContext/1',[]],['fun','llevm','llevm:LLVMConstStruct/1',[]],['fun','llevm','llevm:LLVMConstStructInContext/1',[]],['fun','llevm','llevm:LLVMConstSub/1',[]],['fun','llevm','llevm:LLVMConstTrunc/1',[]],['fun','llevm','llevm:LLVMConstTruncOrBitCast/1',[]],['fun','llevm','llevm:LLVMConstUDiv/1',[]],['fun','llevm','llevm:LLVMConstUIToFP/1',[]],['fun','llevm','llevm:LLVMConstURem/1',[]],['fun','llevm','llevm:LLVMConstVector/1',[]],['fun','llevm','llevm:LLVMConstXor/1',[]],['fun','llevm','llevm:LLVMConstZExt/1',[]],['fun','llevm','llevm:LLVMConstZExtOrBitCast/1',[]],['fun','llevm','llevm:LLVMContextCreate/0',[]],['fun','llevm','llevm:LLVMContextDispose/1',[]],['fun','llevm','llevm:LLVMCopyStringRepOfTargetData/1','Converts target data to a target layout string.'],['fun','llevm','llevm:LLVMCountBasicBlocks/1',[]],['fun','llevm','llevm:LLVMCountIncoming/1',[]],['fun','llevm','llevm:LLVMCountParams/1',[]],['fun','llevm','llevm:LLVMCountParamTypes/1',[]],['fun','llevm','llevm:LLVMCountStructElementTypes/1',[]],['fun','llevm','llevm:LLVMCreateBuilder/0',[]],['fun','llevm','llevm:LLVMCreateBuilderInContext/1',[]],['fun','llevm','llevm:LLVMCreateDisasm/1','Create a disassembler for the TripleName.'],['fun','llevm','llevm:LLVMCreateExecutionEngine/1','Deprecated: Use LLVMCreateExecutionEngineForModule'],['fun','llevm','llevm:LLVMCreateExecutionEngineForModule/1',[]],['fun','llevm','llevm:LLVMCreateFunctionPassManager/1','Deprecated: Use LLVMCreateFunctionPassManagerForMo'],['fun','llevm','llevm:LLVMCreateFunctionPassManagerForModule/1','Constructs a new function-by-function pass pipelin'],['fun','llevm','llevm:LLVMCreateGenericValueOfFloat/1',[]],['fun','llevm','llevm:LLVMCreateGenericValueOfInt/1',[]],['fun','llevm','llevm:LLVMCreateGenericValueOfPointer/1',[]],['fun','llevm','llevm:LLVMCreateInterpreter/1','Deprecated: Use LLVMCreateInterpreterForModule ins'],['fun','llevm','llevm:LLVMCreateInterpreterForModule/1',[]],['fun','llevm','llevm:LLVMCreateJITCompiler/1','Deprecated: Use LLVMCreateJITCompilerForModule ins'],['fun','llevm','llevm:LLVMCreateJITCompilerForModule/1',[]],['fun','llevm','llevm:LLVMCreateMemoryBufferWithContentsOfFile/1',[]],['fun','llevm','llevm:LLVMCreateModuleProviderForExistingModule/1',[]],['fun','llevm','llevm:LLVMCreateObjectFile/1',[]],['fun','llevm','llevm:LLVMCreatePassManager/0','Constructs a new whole-module pass pipeline.'],['fun','llevm','llevm:LLVMCreateTargetData/1','Creates target data from a target layout string.'],['fun','llevm','llevm:LLVMDeleteBasicBlock/1',[]],['fun','llevm','llevm:LLVMDeleteFunction/1',[]],['fun','llevm','llevm:LLVMDeleteGlobal/1',[]],['fun','llevm','llevm:LLVMDisasmDispose/1','Dispose of a disassembler context.'],['fun','llevm','llevm:LLVMDisposeBuilder/1',[]],['fun','llevm','llevm:LLVMDisposeExecutionEngine/1',[]],['fun','llevm','llevm:LLVMDisposeGenericValue/1',[]],['fun','llevm','llevm:LLVMDisposeMemoryBuffer/1',[]],['fun','llevm','llevm:LLVMDisposeMessage/1',[]],['fun','llevm','llevm:LLVMDisposeModule/1','See llvm::Module::~Module.'],['fun','llevm','llevm:LLVMDisposeModuleProvider/1',[]],['fun','llevm','llevm:LLVMDisposeObjectFile/1',[]],['fun','llevm','llevm:LLVMDisposePassManager/1','Frees the memory of a pass pipeline.'],['fun','llevm','llevm:LLVMDisposeRelocationIterator/1',[]],['fun','llevm','llevm:LLVMDisposeSectionIterator/1',[]],['fun','llevm','llevm:LLVMDisposeSymbolIterator/1',[]],['fun','llevm','llevm:LLVMDisposeTargetData/1','Deallocates a TargetData.'],['fun','llevm','llevm:LLVMDoubleType/0',[]],['fun','llevm','llevm:LLVMDoubleTypeInContext/1',[]],['fun','llevm','llevm:LLVMDumpModule/1','See Module::dump.'],['fun','llevm','llevm:LLVMDumpValue/1',[]],['fun','llevm','llevm:LLVMElementAtOffset/1','Computes the structure element that contains the b'],['fun','llevm','llevm:LLVMFinalizeFunctionPassManager/1','Finalizes all of the function passes scheduled in '],['fun','llevm','llevm:LLVMFindFunction/1',[]],['fun','llevm','llevm:LLVMFloatType/0',[]],['fun','llevm','llevm:LLVMFloatTypeInContext/1',[]],['fun','llevm','llevm:LLVMFP128Type/0',[]],['fun','llevm','llevm:LLVMFP128TypeInContext/1',[]],['fun','llevm','llevm:LLVMFreeMachineCodeForFunction/1',[]],['fun','llevm','llevm:LLVMFunctionType/1',[]],['fun','llevm','llevm:LLVMGenericValueIntWidth/1',[]],['fun','llevm','llevm:LLVMGenericValueToFloat/1',[]],['fun','llevm','llevm:LLVMGenericValueToInt/1',[]],['fun','llevm','llevm:LLVMGenericValueToPointer/1',[]],['fun','llevm','llevm:LLVMGetAlignment/1',[]],['fun','llevm','llevm:LLVMGetArrayLength/1',[]],['fun','llevm','llevm:LLVMGetAttribute/1',[]],['fun','llevm','llevm:LLVMGetBasicBlockParent/1',[]],['fun','llevm','llevm:LLVMGetBasicBlocks/1',[]],['fun','llevm','llevm:LLVMGetBasicBlockTerminator/1',[]],['fun','llevm','llevm:LLVMGetBitcodeModule/1',[]],['fun','llevm','llevm:LLVMGetBitcodeModuleInContext/1','Reads a module from the specified path, returning '],['fun','llevm','llevm:LLVMGetBitcodeModuleProvider/1','Deprecated: Use LLVMGetBitcodeModule instead.'],['fun','llevm','llevm:LLVMGetBitcodeModuleProviderInContext/1','Deprecated: Use LLVMGetBitcodeModuleInContext inst'],['fun','llevm','llevm:LLVMGetConstOpcode/1',[]],['fun','llevm','llevm:LLVMGetCurrentDebugLocation/1',[]],['fun','llevm','llevm:LLVMGetDataLayout/1','Data layout.'],['fun','llevm','llevm:LLVMGetElementType/1',[]],['fun','llevm','llevm:LLVMGetEntryBasicBlock/1',[]],['fun','llevm','llevm:LLVMGetExecutionEngineTargetData/1',[]],['fun','llevm','llevm:LLVMGetFirstBasicBlock/1',[]],['fun','llevm','llevm:LLVMGetFirstFunction/1',[]],['fun','llevm','llevm:LLVMGetFirstGlobal/1',[]],['fun','llevm','llevm:LLVMGetFirstInstruction/1',[]],['fun','llevm','llevm:LLVMGetFirstParam/1',[]],['fun','llevm','llevm:LLVMGetFirstUse/1',[]],['fun','llevm','llevm:LLVMGetFunctionAttr/1',[]],['fun','llevm','llevm:LLVMGetFunctionCallConv/1',[]],['fun','llevm','llevm:LLVMGetGC/1',[]],['fun','llevm','llevm:LLVMGetGlobalContext/0',[]],['fun','llevm','llevm:LLVMGetGlobalParent/1',[]],['fun','llevm','llevm:LLVMGetGlobalPassRegistry/0','Return the global pass registry, for use with init'],['fun','llevm','llevm:LLVMGetICmpPredicate/1',[]],['fun','llevm','llevm:LLVMGetIncomingBlock/1',[]],['fun','llevm','llevm:LLVMGetIncomingValue/1',[]],['fun','llevm','llevm:LLVMGetInitializer/1',[]],['fun','llevm','llevm:LLVMGetInsertBlock/1',[]],['fun','llevm','llevm:LLVMGetInstructionCallConv/1',[]],['fun','llevm','llevm:LLVMGetInstructionOpcode/1',[]],['fun','llevm','llevm:LLVMGetInstructionParent/1',[]],['fun','llevm','llevm:LLVMGetIntrinsicID/1',[]],['fun','llevm','llevm:LLVMGetIntTypeWidth/1',[]],['fun','llevm','llevm:LLVMGetLastBasicBlock/1',[]],['fun','llevm','llevm:LLVMGetLastFunction/1',[]],['fun','llevm','llevm:LLVMGetLastGlobal/1',[]],['fun','llevm','llevm:LLVMGetLastInstruction/1',[]],['fun','llevm','llevm:LLVMGetLastParam/1',[]],['fun','llevm','llevm:LLVMGetLinkage/1',[]],['fun','llevm','llevm:LLVMGetMDKindID/1',[]],['fun','llevm','llevm:LLVMGetMDKindIDInContext/1',[]],['fun','llevm','llevm:LLVMGetMDString/1',[]],['fun','llevm','llevm:LLVMGetMetadata/1',[]],['fun','llevm','llevm:LLVMGetModuleContext/1','See Module::getContext.'],['fun','llevm','llevm:LLVMGetNamedFunction/1',[]],['fun','llevm','llevm:LLVMGetNamedGlobal/1',[]],['fun','llevm','llevm:LLVMGetNamedMetadataNumOperands/1',[]],['fun','llevm','llevm:LLVMGetNamedMetadataOperands/1',[]],['fun','llevm','llevm:LLVMGetNextBasicBlock/1',[]],['fun','llevm','llevm:LLVMGetNextFunction/1',[]],['fun','llevm','llevm:LLVMGetNextGlobal/1',[]],['fun','llevm','llevm:LLVMGetNextInstruction/1',[]],['fun','llevm','llevm:LLVMGetNextParam/1',[]],['fun','llevm','llevm:LLVMGetNextUse/1',[]],['fun','llevm','llevm:LLVMGetNumOperands/1',[]],['fun','llevm','llevm:LLVMGetOperand/1',[]],['fun','llevm','llevm:LLVMGetParam/1',[]],['fun','llevm','llevm:LLVMGetParamParent/1',[]],['fun','llevm','llevm:LLVMGetParams/1',[]],['fun','llevm','llevm:LLVMGetParamTypes/1',[]],['fun','llevm','llevm:LLVMGetPointerAddressSpace/1',[]],['fun','llevm','llevm:LLVMGetPointerToGlobal/1',[]],['fun','llevm','llevm:LLVMGetPreviousBasicBlock/1',[]],['fun','llevm','llevm:LLVMGetPreviousFunction/1',[]],['fun','llevm','llevm:LLVMGetPreviousGlobal/1',[]],['fun','llevm','llevm:LLVMGetPreviousInstruction/1',[]],['fun','llevm','llevm:LLVMGetPreviousParam/1',[]],['fun','llevm','llevm:LLVMGetRelocationAddress/1',[]],['fun','llevm','llevm:LLVMGetRelocationOffset/1',[]],['fun','llevm','llevm:LLVMGetRelocations/1',[]],['fun','llevm','llevm:LLVMGetRelocationSymbol/1',[]],['fun','llevm','llevm:LLVMGetRelocationType/1',[]],['fun','llevm','llevm:LLVMGetRelocationTypeName/1',[]],['fun','llevm','llevm:LLVMGetRelocationValueString/1',[]],['fun','llevm','llevm:LLVMGetReturnType/1',[]],['fun','llevm','llevm:LLVMGetSection/1',[]],['fun','llevm','llevm:LLVMGetSectionAddress/1',[]],['fun','llevm','llevm:LLVMGetSectionContainsSymbol/1',[]],['fun','llevm','llevm:LLVMGetSectionContents/1',[]],['fun','llevm','llevm:LLVMGetSectionName/1',[]],['fun','llevm','llevm:LLVMGetSections/1',[]],['fun','llevm','llevm:LLVMGetSectionSize/1',[]],['fun','llevm','llevm:LLVMGetStructElementTypes/1',[]],['fun','llevm','llevm:LLVMGetStructName/1',[]],['fun','llevm','llevm:LLVMGetSwitchDefaultDest/1',[]],['fun','llevm','llevm:LLVMGetSymbolAddress/1',[]],['fun','llevm','llevm:LLVMGetSymbolFileOffset/1',[]],['fun','llevm','llevm:LLVMGetSymbolName/1',[]],['fun','llevm','llevm:LLVMGetSymbols/1',[]],['fun','llevm','llevm:LLVMGetSymbolSize/1',[]],['fun','llevm','llevm:LLVMGetTarget/1','Target triple.'],['fun','llevm','llevm:LLVMGetTypeByName/1',[]],['fun','llevm','llevm:LLVMGetTypeContext/1','See llvm::LLVMType::getContext.'],['fun','llevm','llevm:LLVMGetTypeKind/1','See llvm::LLVMTypeKind::getTypeID.'],['fun','llevm','llevm:LLVMGetUndef/1',[]],['fun','llevm','llevm:LLVMGetUsedValue/1',[]],['fun','llevm','llevm:LLVMGetUser/1',[]],['fun','llevm','llevm:LLVMGetValueName/1',[]],['fun','llevm','llevm:LLVMGetVectorSize/1',[]],['fun','llevm','llevm:LLVMGetVisibility/1',[]],['fun','llevm','llevm:LLVMHalfType/0',[]],['fun','llevm','llevm:LLVMHalfTypeInContext/1',[]],['fun','llevm','llevm:LLVMHasMetadata/1',[]],['fun','llevm','llevm:LLVMInitializeAllAsmParsers/0','LLVMInitializeAllAsmParsers - The main program sho'],['fun','llevm','llevm:LLVMInitializeAllAsmPrinters/0','LLVMInitializeAllAsmPrinters - The main program sh'],['fun','llevm','llevm:LLVMInitializeAllDisassemblers/0','LLVMInitializeAllDisassemblers - The main program '],['fun','llevm','llevm:LLVMInitializeAllTargetInfos/0','LLVMInitializeAllTargetInfos - The main program sh'],['fun','llevm','llevm:LLVMInitializeAllTargetMCs/0','LLVMInitializeAllTargetMCs - The main program shou'],['fun','llevm','llevm:LLVMInitializeAllTargets/0','LLVMInitializeAllTargets - The main program should'],['fun','llevm','llevm:LLVMInitializeCodeGen/1',[]],['fun','llevm','llevm:LLVMInitializeFunctionPassManager/1','Initializes all of the function passes scheduled i'],['fun','llevm','llevm:LLVMInitializeInstCombine/1',[]],['fun','llevm','llevm:LLVMInitializeInstrumentation/1',[]],['fun','llevm','llevm:LLVMInitializeIPA/1',[]],['fun','llevm','llevm:LLVMInitializeNativeTarget/0','LLVMInitializeNativeTarget - The main program shou'],['fun','llevm','llevm:LLVMInitializeScalarOpts/1',[]],['fun','llevm','llevm:LLVMInitializeTarget/1',[]],['fun','llevm','llevm:LLVMInitializeTransformUtils/1',[]],['fun','llevm','llevm:LLVMInitializeVectorization/1',[]],['fun','llevm','llevm:LLVMInsertBasicBlock/1',[]],['fun','llevm','llevm:LLVMInsertBasicBlockInContext/1',[]],['fun','llevm','llevm:LLVMInsertIntoBuilder/1',[]],['fun','llevm','llevm:LLVMInsertIntoBuilderWithName/1',[]],['fun','llevm','llevm:LLVMInstructionEraseFromParent/1',[]],['fun','llevm','llevm:LLVMInt16Type/0',[]],['fun','llevm','llevm:LLVMInt16TypeInContext/1',[]],['fun','llevm','llevm:LLVMInt1Type/0',[]],['fun','llevm','llevm:LLVMInt1TypeInContext/1',[]],['fun','llevm','llevm:LLVMInt32Type/0',[]],['fun','llevm','llevm:LLVMInt32TypeInContext/1',[]],['fun','llevm','llevm:LLVMInt64Type/0',[]],['fun','llevm','llevm:LLVMInt64TypeInContext/1',[]],['fun','llevm','llevm:LLVMInt8Type/0',[]],['fun','llevm','llevm:LLVMInt8TypeInContext/1',[]],['fun','llevm','llevm:LLVMIntPtrType/1','Returns the integer type that is the same size as '],['fun','llevm','llevm:LLVMIntType/1',[]],['fun','llevm','llevm:LLVMIntTypeInContext/1',[]],['fun','llevm','llevm:LLVMIsAAllocaInst/1',[]],['fun','llevm','llevm:LLVMIsAArgument/1',[]],['fun','llevm','llevm:LLVMIsABasicBlock/1',[]],['fun','llevm','llevm:LLVMIsABinaryOperator/1',[]],['fun','llevm','llevm:LLVMIsABitCastInst/1',[]],['fun','llevm','llevm:LLVMIsABlockAddress/1',[]],['fun','llevm','llevm:LLVMIsABranchInst/1',[]],['fun','llevm','llevm:LLVMIsACallInst/1',[]],['fun','llevm','llevm:LLVMIsACastInst/1',[]],['fun','llevm','llevm:LLVMIsACmpInst/1',[]],['fun','llevm','llevm:LLVMIsAConstant/1',[]],['fun','llevm','llevm:LLVMIsAConstantAggregateZero/1',[]],['fun','llevm','llevm:LLVMIsAConstantArray/1',[]],['fun','llevm','llevm:LLVMIsAConstantExpr/1',[]],['fun','llevm','llevm:LLVMIsAConstantFP/1',[]],['fun','llevm','llevm:LLVMIsAConstantInt/1',[]],['fun','llevm','llevm:LLVMIsAConstantPointerNull/1',[]],['fun','llevm','llevm:LLVMIsAConstantStruct/1',[]],['fun','llevm','llevm:LLVMIsAConstantVector/1',[]],['fun','llevm','llevm:LLVMIsADbgDeclareInst/1',[]],['fun','llevm','llevm:LLVMIsADbgInfoIntrinsic/1',[]],['fun','llevm','llevm:LLVMIsAExtractElementInst/1',[]],['fun','llevm','llevm:LLVMIsAExtractValueInst/1',[]],['fun','llevm','llevm:LLVMIsAFCmpInst/1',[]],['fun','llevm','llevm:LLVMIsAFPExtInst/1',[]],['fun','llevm','llevm:LLVMIsAFPToSIInst/1',[]],['fun','llevm','llevm:LLVMIsAFPToUIInst/1',[]],['fun','llevm','llevm:LLVMIsAFPTruncInst/1',[]],['fun','llevm','llevm:LLVMIsAFunction/1',[]],['fun','llevm','llevm:LLVMIsAGetElementPtrInst/1',[]],['fun','llevm','llevm:LLVMIsAGlobalAlias/1',[]],['fun','llevm','llevm:LLVMIsAGlobalValue/1',[]],['fun','llevm','llevm:LLVMIsAGlobalVariable/1',[]],['fun','llevm','llevm:LLVMIsAICmpInst/1',[]],['fun','llevm','llevm:LLVMIsAIndirectBrInst/1',[]],['fun','llevm','llevm:LLVMIsAInlineAsm/1',[]],['fun','llevm','llevm:LLVMIsAInsertElementInst/1',[]],['fun','llevm','llevm:LLVMIsAInsertValueInst/1',[]],['fun','llevm','llevm:LLVMIsAInstruction/1',[]],['fun','llevm','llevm:LLVMIsAIntrinsicInst/1',[]],['fun','llevm','llevm:LLVMIsAIntToPtrInst/1',[]],['fun','llevm','llevm:LLVMIsAInvokeInst/1',[]],['fun','llevm','llevm:LLVMIsALandingPadInst/1',[]],['fun','llevm','llevm:LLVMIsALoadInst/1',[]],['fun','llevm','llevm:LLVMIsAMDNode/1',[]],['fun','llevm','llevm:LLVMIsAMDString/1',[]],['fun','llevm','llevm:LLVMIsAMemCpyInst/1',[]],['fun','llevm','llevm:LLVMIsAMemIntrinsic/1',[]],['fun','llevm','llevm:LLVMIsAMemMoveInst/1',[]],['fun','llevm','llevm:LLVMIsAMemSetInst/1',[]],['fun','llevm','llevm:LLVMIsAPHINode/1',[]],['fun','llevm','llevm:LLVMIsAPtrToIntInst/1',[]],['fun','llevm','llevm:LLVMIsAResumeInst/1',[]],['fun','llevm','llevm:LLVMIsAReturnInst/1',[]],['fun','llevm','llevm:LLVMIsASelectInst/1',[]],['fun','llevm','llevm:LLVMIsASExtInst/1',[]],['fun','llevm','llevm:LLVMIsAShuffleVectorInst/1',[]],['fun','llevm','llevm:LLVMIsASIToFPInst/1',[]],['fun','llevm','llevm:LLVMIsAStoreInst/1',[]],['fun','llevm','llevm:LLVMIsASwitchInst/1',[]],['fun','llevm','llevm:LLVMIsATerminatorInst/1',[]],['fun','llevm','llevm:LLVMIsATruncInst/1',[]],['fun','llevm','llevm:LLVMIsAUIToFPInst/1',[]],['fun','llevm','llevm:LLVMIsAUnaryInstruction/1',[]],['fun','llevm','llevm:LLVMIsAUndefValue/1',[]],['fun','llevm','llevm:LLVMIsAUnreachableInst/1',[]],['fun','llevm','llevm:LLVMIsAUser/1',[]],['fun','llevm','llevm:LLVMIsAVAArgInst/1',[]],['fun','llevm','llevm:LLVMIsAZExtInst/1',[]],['fun','llevm','llevm:LLVMIsConstant/1',[]],['fun','llevm','llevm:LLVMIsDeclaration/1',[]],['fun','llevm','llevm:LLVMIsFunctionVarArg/1',[]],['fun','llevm','llevm:LLVMIsGlobalConstant/1',[]],['fun','llevm','llevm:LLVMIsNull/1',[]],['fun','llevm','llevm:LLVMIsOpaqueStruct/1',[]],['fun','llevm','llevm:LLVMIsPackedStruct/1',[]],['fun','llevm','llevm:LLVMIsRelocationIteratorAtEnd/1',[]],['fun','llevm','llevm:LLVMIsSectionIteratorAtEnd/1',[]],['fun','llevm','llevm:LLVMIsSymbolIteratorAtEnd/1',[]],['fun','llevm','llevm:LLVMIsTailCall/1',[]],['fun','llevm','llevm:LLVMIsThreadLocal/1',[]],['fun','llevm','llevm:LLVMIsUndef/1',[]],['fun','llevm','llevm:LLVMLabelType/0',[]],['fun','llevm','llevm:LLVMLabelTypeInContext/1',[]],['fun','llevm','llevm:LLVMLinkInInterpreter/0',[]],['fun','llevm','llevm:LLVMLinkInJIT/0',[]],['fun','llevm','llevm:LLVMMDNode/1',[]],['fun','llevm','llevm:LLVMMDNodeInContext/1',[]],['fun','llevm','llevm:LLVMMDString/1',[]],['fun','llevm','llevm:LLVMMDStringInContext/1',[]],['fun','llevm','llevm:LLVMModuleCreateWithName/1','See llvm::Module::Module.'],['fun','llevm','llevm:LLVMModuleCreateWithNameInContext/1',[]],['fun','llevm','llevm:LLVMMoveBasicBlockAfter/1',[]],['fun','llevm','llevm:LLVMMoveBasicBlockBefore/1',[]],['fun','llevm','llevm:LLVMMoveToContainingSection/1',[]],['fun','llevm','llevm:LLVMMoveToNextRelocation/1',[]],['fun','llevm','llevm:LLVMMoveToNextSection/1',[]],['fun','llevm','llevm:LLVMMoveToNextSymbol/1',[]],['fun','llevm','llevm:LLVMOffsetOfElement/1','Computes the byte offset of the indexed struct ele'],['fun','llevm','llevm:LLVMParseBitcode/1',[]],['fun','llevm','llevm:LLVMParseBitcodeInContext/1',[]],['fun','llevm','llevm:LLVMPassManagerBuilderCreate/0','See llvm::PassManagerBuilder.'],['fun','llevm','llevm:LLVMPassManagerBuilderDispose/1',[]],['fun','llevm','llevm:LLVMPassManagerBuilderPopulateFunctionPassManager/1','See llvm::PassManagerBuilder::populateFunctionPass'],['fun','llevm','llevm:LLVMPassManagerBuilderPopulateLTOPassManager/1','See llvm::PassManagerBuilder::populateLTOPassManag'],['fun','llevm','llevm:LLVMPassManagerBuilderPopulateModulePassManager/1','See llvm::PassManagerBuilder::populateModulePassMa'],['fun','llevm','llevm:LLVMPassManagerBuilderSetDisableSimplifyLibCalls/1','See llvm::PassManagerBuilder::DisableSimplifyLibCa'],['fun','llevm','llevm:LLVMPassManagerBuilderSetDisableUnitAtATime/1','See llvm::PassManagerBuilder::DisableUnitAtATime.'],['fun','llevm','llevm:LLVMPassManagerBuilderSetDisableUnrollLoops/1','See llvm::PassManagerBuilder::DisableUnrollLoops.'],['fun','llevm','llevm:LLVMPassManagerBuilderSetOptLevel/1','See llvm::PassManagerBuilder::OptLevel.'],['fun','llevm','llevm:LLVMPassManagerBuilderSetSizeLevel/1','See llvm::PassManagerBuilder::SizeLevel.'],['fun','llevm','llevm:LLVMPassManagerBuilderUseInlinerWithThreshold/1','See llvm::PassManagerBuilder::Inliner.'],['fun','llevm','llevm:LLVMPointerSize/1','Returns the pointer size in bytes for a target.'],['fun','llevm','llevm:LLVMPointerType/1',[]],['fun','llevm','llevm:LLVMPositionBuilder/1',[]],['fun','llevm','llevm:LLVMPositionBuilderAtEnd/1',[]],['fun','llevm','llevm:LLVMPositionBuilderBefore/1',[]],['fun','llevm','llevm:LLVMPPCFP128Type/0',[]],['fun','llevm','llevm:LLVMPPCFP128TypeInContext/1',[]],['fun','llevm','llevm:LLVMPreferredAlignmentOfGlobal/1','Computes the preferred alignment of a global varia'],['fun','llevm','llevm:LLVMPreferredAlignmentOfType/1','Computes the preferred alignment of a type in byte'],['fun','llevm','llevm:LLVMRecompileAndRelinkFunction/1',[]],['fun','llevm','llevm:LLVMRemoveAttribute/1',[]],['fun','llevm','llevm:LLVMRemoveBasicBlockFromParent/1',[]],['fun','llevm','llevm:LLVMRemoveFunctionAttr/1',[]],['fun','llevm','llevm:LLVMRemoveInstrAttribute/1',[]],['fun','llevm','llevm:LLVMRemoveModule/1',[]],['fun','llevm','llevm:LLVMRemoveModuleProvider/1','Deprecated: Use LLVMRemoveModule instead.'],['fun','llevm','llevm:LLVMReplaceAllUsesWith/1',[]],['fun','llevm','llevm:LLVMRunFunction/1',[]],['fun','llevm','llevm:LLVMRunFunctionAsMain/1',[]],['fun','llevm','llevm:LLVMRunFunctionPassManager/1','Executes all of the function passes scheduled in t'],['fun','llevm','llevm:LLVMRunPassManager/1','Initializes, executes on the provided module, and '],['fun','llevm','llevm:LLVMRunStaticConstructors/1',[]],['fun','llevm','llevm:LLVMRunStaticDestructors/1',[]],['fun','llevm','llevm:LLVMSetAlignment/1',[]],['fun','llevm','llevm:LLVMSetCleanup/1',[]],['fun','llevm','llevm:LLVMSetCurrentDebugLocation/1',[]],['fun','llevm','llevm:LLVMSetDataLayout/1',[]],['fun','llevm','llevm:LLVMSetFunctionCallConv/1',[]],['fun','llevm','llevm:LLVMSetGC/1',[]],['fun','llevm','llevm:LLVMSetGlobalConstant/1',[]],['fun','llevm','llevm:LLVMSetInitializer/1',[]],['fun','llevm','llevm:LLVMSetInstDebugLocation/1',[]],['fun','llevm','llevm:LLVMSetInstrParamAlignment/1',[]],['fun','llevm','llevm:LLVMSetInstructionCallConv/1',[]],['fun','llevm','llevm:LLVMSetLinkage/1',[]],['fun','llevm','llevm:LLVMSetMetadata/1',[]],['fun','llevm','llevm:LLVMSetModuleInlineAsm/1','See Module::setModuleInlineAsm.'],['fun','llevm','llevm:LLVMSetOperand/1',[]],['fun','llevm','llevm:LLVMSetParamAlignment/1',[]],['fun','llevm','llevm:LLVMSetSection/1',[]],['fun','llevm','llevm:LLVMSetTailCall/1',[]],['fun','llevm','llevm:LLVMSetTarget/1',[]],['fun','llevm','llevm:LLVMSetThreadLocal/1',[]],['fun','llevm','llevm:LLVMSetValueName/1',[]],['fun','llevm','llevm:LLVMSetVisibility/1',[]],['fun','llevm','llevm:LLVMSizeOf/1',[]],['fun','llevm','llevm:LLVMSizeOfTypeInBits/1','Computes the size of a type in bytes for a target.'],['fun','llevm','llevm:LLVMStoreSizeOfType/1','Computes the storage size of a type in bytes for a'],['fun','llevm','llevm:LLVMStructCreateNamed/1',[]],['fun','llevm','llevm:LLVMStructSetBody/1',[]],['fun','llevm','llevm:LLVMStructType/1',[]],['fun','llevm','llevm:LLVMStructTypeInContext/1',[]],['fun','llevm','llevm:LLVMTypeIsSized/1',[]],['fun','llevm','llevm:LLVMTypeOf/1',[]],['fun','llevm','llevm:LLVMValueAsBasicBlock/1',[]],['fun','llevm','llevm:LLVMValueIsBasicBlock/1',[]],['fun','llevm','llevm:LLVMVectorType/1',[]],['fun','llevm','llevm:LLVMVerifyFunction/1',[]],['fun','llevm','llevm:LLVMVerifyModule/1',[]],['fun','llevm','llevm:LLVMViewFunctionCFG/1',[]],['fun','llevm','llevm:LLVMViewFunctionCFGOnly/1',[]],['fun','llevm','llevm:LLVMVoidType/0',[]],['fun','llevm','llevm:LLVMVoidTypeInContext/1',[]],['fun','llevm','llevm:LLVMWriteBitcodeToFD/1','Writes a module to an open file descriptor.'],['fun','llevm','llevm:LLVMWriteBitcodeToFile/1','Writes a module to the specified path.'],['fun','llevm','llevm:LLVMWriteBitcodeToFileHandle/1','Deprecated for LLVMWriteBitcodeToFD.'],['fun','llevm','llevm:LLVMX86FP80Type/0',[]],['fun','llevm','llevm:LLVMX86FP80TypeInContext/1',[]],['fun','llevm','llevm:LLVMX86MMXType/0',[]],['fun','llevm','llevm:LLVMX86MMXTypeInContext/1',[]],['fun','llevm','llevm:lto_codegen_add_module/1','Add an object module to the set of modules for whi'],['fun','llevm','llevm:lto_codegen_add_must_preserve_symbol/1','Adds to a list of all global symbols that must exi'],['fun','llevm','llevm:lto_codegen_compile/1','Generates code for all added modules into one nati'],['fun','llevm','llevm:lto_codegen_compile_to_file/1','Generates code for all added modules into one nati'],['fun','llevm','llevm:lto_codegen_create/0','Instantiates a code generator.'],['fun','llevm','llevm:lto_codegen_debug_options/1','Sets options to help debug codegen bugs.'],['fun','llevm','llevm:lto_codegen_dispose/1','Frees all code generator and all memory it interna'],['fun','llevm','llevm:lto_codegen_set_assembler_args/1','Sets extra arguments that libLTO should pass to th'],['fun','llevm','llevm:lto_codegen_set_assembler_path/1','Sets the location of the assembler tool to run.'],['fun','llevm','llevm:lto_codegen_set_cpu/1','Sets the cpu to generate code for.'],['fun','llevm','llevm:lto_codegen_set_debug_model/1','Sets if debug info should be generated.'],['fun','llevm','llevm:lto_codegen_set_pic_model/1','Sets which PIC code model to generated.'],['fun','llevm','llevm:lto_codegen_write_merged_modules/1','Writes a new object file at the specified path tha'],['fun','llevm','llevm:lto_get_error_message/0','Returns the last error string or NULL if last oper'],['fun','llevm','llevm:lto_get_version/0','Returns a printable string.'],['fun','llevm','llevm:lto_module_create/1','Loads an object file from disk.'],['fun','llevm','llevm:lto_module_create_from_fd_at_offset/1','Loads an object file from disk.'],['fun','llevm','llevm:lto_module_create_from_memory/1','Loads an object file from memory.'],['fun','llevm','llevm:lto_module_dispose/1','Frees all memory internally allocated by the modul'],['fun','llevm','llevm:lto_module_get_num_symbols/1','Returns the number of symbols in the object module'],['fun','llevm','llevm:lto_module_get_symbol_attribute/1','Returns the attributes of the ith symbol in the ob'],['fun','llevm','llevm:lto_module_get_symbol_name/1','Returns the name of the ith symbol in the object m'],['fun','llevm','llevm:lto_module_get_target_triple/1','Returns triple string which the object module was '],['fun','llevm','llevm:lto_module_is_object_file/1','Checks if a file is a loadable object file.'],['fun','llevm','llevm:lto_module_is_object_file_for_target/1','Checks if a file is a loadable object compiled for'],['fun','llevm','llevm:lto_module_is_object_file_in_memory/1','Checks if a buffer is a loadable object file.'],['fun','llevm','llevm:lto_module_is_object_file_in_memory_for_target/1','Checks if a buffer is a loadable object compiled f'],['fun','llevm','llevm:lto_module_set_target_triple/1','Sets triple string with which the object will be c'],['fun','llevm','llvm_nif:module_dump/1',[]],['fun','llevm','llvm_nif:module_getFunction/2',[]],['fun','llevm','llvm_nif:module_new/1',[]]];