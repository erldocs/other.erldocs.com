var index = [['app','chef_objects','chef_objects','[application]'],['mod','chef_objects','chef_cert_http','interface to the certificate generation service.'],['mod','chef_objects','chef_cookbook',[]],['mod','chef_objects','chef_data_bag',[]],['mod','chef_objects','chef_data_bag_item',[]],['mod','chef_objects','chef_db_compression',[]],['mod','chef_objects','chef_deep_merge',[]],['mod','chef_objects','chef_depsolver',[]],['mod','chef_objects','chef_environment',[]],['mod','chef_objects','chef_json',[]],['mod','chef_objects','chef_json_validator',[]],['mod','chef_objects','chef_node',[]],['mod','chef_objects','chef_s3_ops',[]],['mod','chef_objects','chef_sandbox',[]],['fun','chef_objects','chef_cert_http:gen_cert/1','Handle HTTP interaction with remote certificate se'],['fun','chef_objects','chef_cookbook:assemble_cookbook_ejson/1','"Rehydrates" a versioned cookbook as a complete, f'],['fun','chef_objects','chef_cookbook:extract_checksums/1',[]],['fun','chef_objects','chef_cookbook:minimal_cookbook_ejson/1',[]],['fun','chef_objects','chef_cookbook:parse_binary_json/1','Convert a binary JSON string representing a Chef C'],['fun','chef_objects','chef_cookbook:parse_version/1',[]],['fun','chef_objects','chef_cookbook:qualified_recipe_names/1','Return a sorted list of cookbook-qualified names, '],['fun','chef_objects','chef_cookbook:version_to_binary/1','given a version tuple {Major, Minor, Patch} return'],['fun','chef_objects','chef_data_bag:parse_binary_json/1','Convert a binary JSON string representing a Chef d'],['fun','chef_objects','chef_data_bag_item:add_type_and_bag/1','Returns data bag item EJSON Item with keys chef_ty'],['fun','chef_objects','chef_data_bag_item:parse_binary_json/1','Convert a binary JSON string representing a Chef d'],['fun','chef_objects','chef_data_bag_item:wrap_item/1','Returns a wrapped EJSON Chef::DataBagItem structur'],['fun','chef_objects','chef_db_compression:compress/1',[]],['fun','chef_objects','chef_db_compression:decompress/1','Decompresses gzip data and lets non-gzip data pass'],['fun','chef_objects','chef_db_compression:decompress_and_decode/1','Does what it says on the tin.'],['fun','chef_objects','chef_deep_merge:merge/1',[]],['fun','chef_objects','chef_depsolver:parse_binary_json/1','Convert a binary JSON string representing a Chef r'],['fun','chef_objects','chef_depsolver:solve_dependencies/1','Main entry point into the depsolver.'],['fun','chef_objects','chef_environment:parse_binary_json/1','Convert a binary JSON string representing a Chef E'],['fun','chef_objects','chef_environment:set_default_values/1','If certain fields are missing from a Environment, '],['fun','chef_objects','chef_json:decode/1',[]],['fun','chef_objects','chef_json:decode_body/1','Decodes JSON body and verifies valid payload type.'],['fun','chef_objects','chef_json:encode/1',[]],['fun','chef_objects','chef_json_validator:validate_json_by_regex_constraints/2',[]],['fun','chef_objects','chef_node:extract_recipes/1',[]],['fun','chef_objects','chef_node:extract_roles/1',[]],['fun','chef_objects','chef_node:insert_autofill_fields/1',[]],['fun','chef_objects','chef_node:parse_check_binary_as_json_node/1','Parses, validates, and normalizes node JSON binary'],['fun','chef_objects','chef_node:validate_json_node/1',[]],['fun','chef_objects','chef_s3_ops:delete/2','Delete each checksummed file in S3.'],['fun','chef_objects','chef_s3_ops:fetch_md/2','Verify that each checksummed file is stored in S3 '],['fun','chef_objects','chef_sandbox:parse_binary_json/1','Convert a binary JSON string representing a Chef R']];