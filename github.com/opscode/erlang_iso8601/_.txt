 :: Extracting meta information
$ infinity  `git ls-remote --heads --tags 'https://github.com/opscode/erlang_iso8601'  2>&1`
>>> [repo] 1 branches, 2 tags
WTF {ok,{{"HTTP/1.1",200,"OK"},
         [{"cache-control","max-age=300"},
          {"connection","keep-alive"},
          {"date","Sun, 11 Oct 2015 21:42:04 GMT"},
          {"via","1.1 varnish"},
          {"accept-ranges","bytes"},
          {"etag","\"518ece374af2a4012dff08b1cd8a7c1e1384def4\""},
          {"vary","Authorization,Accept-Encoding"},
          {"content-length","592"},
          {"content-type","text/plain; charset=utf-8"},
          {"expires","Sun, 11 Oct 2015 21:47:04 GMT"},
          {"content-security-policy","default-src 'none'"},
          {"x-xss-protection","1; mode=block"},
          {"x-frame-options","deny"},
          {"x-content-type-options","nosniff"},
          {"strict-transport-security","max-age=31536000"},
          {"x-served-by","cache-lcy1128-LCY"},
          {"x-cache","MISS"},
          {"x-cache-hits","0"},
          {"access-control-allow-origin","*"},
          {"source-age","0"}],
         "{name,\"erlang_iso8601\"}.\n{target_path,\"github.com/opscode/erlang_iso8601\"}.\n{url,\"https://github.com/opscode/erlang_iso8601\"}.\n{vsn_format,2}.\n{vsn_pass,101}.\n{time_begin,{{2015,9,22},{0,31,42}}}.\n{method,git}.\n{count_tags,2}.\n{count_branches,1}.\n{revisions,[{rev,branch,\"master\",\"25675e1df8b2bade1fb539cd9a913d61b90468dd\",\n                 true,[],[]},\n            {rev,tag,\"1\",\"926bf271206232911f8f33f5daebe8ac518ad1b9\",true,[],\n                 []},\n            {rev,tag,\"1.1\",\"d375ae8be1fcd41a002325749eb8bdca20242a2b\",true,[],\n                 []}]}.\n{time_end,{{2015,9,22},{0,31,42}}}.\n"}}
 :: Writing meta to "/home/pete/wefwefwef/docs/other/537d396e937851059005278c21db57800ba2b174/meta.txt"
 :: Skipping tag "1"
 :: Skipping tag "1.1"
 :: Skipping branch "master"
 :: Finishing up
$ 5000  `rm -r '/home/pete/wefwefwef/docs/other/537d396e937851059005278c21db57800ba2b174/erlang_iso8601'  2>&1`
