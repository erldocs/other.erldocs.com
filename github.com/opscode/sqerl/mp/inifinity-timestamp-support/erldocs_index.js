var index = [['app','sqerl','sqerl','[application]'],['mod','sqerl','sqerl',[]],['mod','sqerl','sqerl_adhoc','SQL generation library.'],['mod','sqerl','sqerl_client','Abstraction around interacting with SQL databases '],['mod','sqerl','sqerl_gobot',[]],['mod','sqerl','sqerl_pgsql_client','Abstraction around interacting with pgsql database'],['mod','sqerl','sqerl_pgsql_errors','Translates Postgres error codes into human-friendl'],['mod','sqerl','sqerl_rec','Record to DB mapping module and behaviour.'],['mod','sqerl','sqerl_transformers','Abstraction around interacting with database resul'],['fun','sqerl','sqerl:adhoc_delete/1','Adhoc delete.'],['fun','sqerl','sqerl:adhoc_insert/2','Insert Rows into Table with default batch size.'],['fun','sqerl','sqerl:adhoc_insert/3','Insert Rows into Table with given batch size.'],['fun','sqerl','sqerl:adhoc_insert/4','Insert records defined by {Columns, RowsValues}  '],['fun','sqerl','sqerl:adhoc_select/1','Execute an adhoc select query with additional clau'],['fun','sqerl','sqerl:adhoc_select/1','Execute an adhoc select query.'],['fun','sqerl','sqerl:checkin/1',[]],['fun','sqerl','sqerl:checkout/0',[]],['fun','sqerl','sqerl:execute/1','Execute query or statement with parameters.'],['fun','sqerl','sqerl:execute/1','Execute query or statement with no parameters.'],['fun','sqerl','sqerl:extract_insert_data/1','Extract insert data from Rows.'],['fun','sqerl','sqerl:select/2',[]],['fun','sqerl','sqerl:select/3',[]],['fun','sqerl','sqerl:select/4',[]],['fun','sqerl','sqerl:statement/2',[]],['fun','sqerl','sqerl:statement/3',[]],['fun','sqerl','sqerl:statement/4',[]],['fun','sqerl','sqerl:with_db/1',[]],['fun','sqerl','sqerl_adhoc:delete/1','Generate DELETE statement.'],['fun','sqerl','sqerl_adhoc:insert/1','Generate INSERT statement for N rows.'],['fun','sqerl','sqerl_adhoc:select/1','Generates SELECT SQL.'],['fun','sqerl','sqerl_adhoc:update/1','Generate UPDATE statement.'],['fun','sqerl','sqerl_client:close/1',[]],['fun','sqerl','sqerl_client:code_change/3',[]],['fun','sqerl','sqerl_client:execute/1','Execute SQL or prepared statement with parameters.'],['fun','sqerl','sqerl_client:execute/1','Execute SQL or prepared statement with no paramete'],['fun','sqerl','sqerl_client:handle_call/3',[]],['fun','sqerl','sqerl_client:handle_cast/2',[]],['fun','sqerl','sqerl_client:handle_info/2',[]],['fun','sqerl','sqerl_client:init/1',[]],['fun','sqerl','sqerl_client:prepare/1','Prepare a statement.'],['fun','sqerl','sqerl_client:sql_parameter_style/0','Returns SQL parameter style atom, e.g.'],['fun','sqerl','sqerl_client:start_link/0',[]],['fun','sqerl','sqerl_client:start_link/1',[]],['fun','sqerl','sqerl_client:terminate/2',[]],['fun','sqerl','sqerl_client:unprepare/1','Unprepare a previously prepared statement.'],['fun','sqerl','sqerl_gobot:parse_transform/2','Parse transform for generating record access funct'],['fun','sqerl','sqerl_pgsql_client:execute/1','Execute query or prepared statement.'],['fun','sqerl','sqerl_pgsql_client:init/1',[]],['fun','sqerl','sqerl_pgsql_client:is_connected/1',[]],['fun','sqerl','sqerl_pgsql_client:prepare/1','Prepare a new statement.'],['fun','sqerl','sqerl_pgsql_client:sql_parameter_style/0',[]],['fun','sqerl','sqerl_pgsql_client:unprepare/1','Unprepare a previously prepared statement  Protoc'],['fun','sqerl','sqerl_pgsql_errors:translate/1',[]],['fun','sqerl','sqerl_pgsql_errors:translate_code/1',[]],['fun','sqerl','sqerl_rec:cquery/1','Execute query Query that returns a row count.'],['fun','sqerl','sqerl_rec:delete/1','Delete the rows where the column identified by By '],['fun','sqerl','sqerl_rec:fetch/1','Return a list of RecName records using single para'],['fun','sqerl','sqerl_rec:fetch_all/1','Return all rows from the table associated with rec'],['fun','sqerl','sqerl_rec:fetch_page/1','Fetch rows from the table associated with record m'],['fun','sqerl','sqerl_rec:first_page/0','Return an ascii value, as a string, that sorts les'],['fun','sqerl','sqerl_rec:gen_delete/1','Return a SQL DELETE query appropriate for module R'],['fun','sqerl','sqerl_rec:gen_fetch/1','Generate a SELECT query for RecName rows.'],['fun','sqerl','sqerl_rec:gen_fetch_all/1','Generate a query to return all rows.'],['fun','sqerl','sqerl_rec:gen_fetch_page/1','Generate a paginated fetch query.'],['fun','sqerl','sqerl_rec:insert/1','Insert record Rec using prepared query RecName_ins'],['fun','sqerl','sqerl_rec:qfetch/1','Fetch using prepared query Query returning a list '],['fun','sqerl','sqerl_rec:scalar_fetch/1','Execute a query that returns a list of scalar valu'],['fun','sqerl','sqerl_rec:statements/1','This function is intended to be used as the {M, F,'],['fun','sqerl','sqerl_rec:statements_for/1',[]],['fun','sqerl','sqerl_rec:update/1','Update record Rec.'],['fun','sqerl','sqerl_transformers:by_column_name/2',[]],['fun','sqerl','sqerl_transformers:convert_integer_to_boolean/1','helper column transformer for mysql where booleans'],['fun','sqerl','sqerl_transformers:convert_YMDHMS_tuple_to_datetime/1',[]],['fun','sqerl','sqerl_transformers:count/0',[]],['fun','sqerl','sqerl_transformers:first/0',[]],['fun','sqerl','sqerl_transformers:first_as_record/2',[]],['fun','sqerl','sqerl_transformers:first_as_scalar/1',[]],['fun','sqerl','sqerl_transformers:identity/0',[]],['fun','sqerl','sqerl_transformers:parse_timestamp_to_datetime/1',[]],['fun','sqerl','sqerl_transformers:rows/0',[]],['fun','sqerl','sqerl_transformers:rows_as_records/2',[]],['fun','sqerl','sqerl_transformers:rows_as_scalars/1',[]]];