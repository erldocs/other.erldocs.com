var index = [['app','erchef','erchef','[application]'],['mod','erchef','crash',[]],['mod','erchef','lager','The lager logging framework.'],['mod','erchef','lager_backend_throttle','A simple gen_event backend used to monitor mailbox'],['mod','erchef','lager_config','Helper functions for working with lagers runtime '],['mod','erchef','lager_console_backend','Console backend for lager.'],['mod','erchef','lager_crash_backend',[]],['mod','erchef','lager_crash_log','Lager crash log writer.'],['mod','erchef','lager_default_formatter',[]],['mod','erchef','lager_file_backend','File backend for lager, with multiple file support'],['mod','erchef','lager_format',[]],['mod','erchef','lager_msg',[]],['mod','erchef','lager_stdlib','Functions from Erlang OTP distribution that are re'],['mod','erchef','lager_test_backend',[]],['mod','erchef','lager_transform','The parse transform used for lager messages.'],['mod','erchef','lager_trunc_io','Module to print out terms for logging.'],['mod','erchef','lager_util',[]],['mod','erchef','rebar_lock_deps_plugin','lock-deps: Generate Locked Dependencies for Rebar.'],['mod','erchef','rebar_lock_deps_plugin_tests',[]],['mod','erchef','rldp_change_log',[]],['mod','erchef','rldp_util',[]],['mod','erchef','special_process',[]],['mod','erchef','sync_error_logger',[]],['mod','erchef','trunc_io_eqc',[]],['fun','erchef','crash:code_change/3',[]],['fun','erchef','crash:handle_call/3',[]],['fun','erchef','crash:handle_cast/2',[]],['fun','erchef','crash:handle_info/2',[]],['fun','erchef','crash:init/1',[]],['fun','erchef','crash:start/0',[]],['fun','erchef','crash:terminate/2',[]],['fun','erchef','lager:clear_all_traces/0',[]],['fun','erchef','lager:dispatch_log/1',[]],['fun','erchef','lager:dispatch_log/9',[]],['fun','erchef','lager:get_loglevel/1','Get the loglevel for a particular backend.'],['fun','erchef','lager:log/1','Manually log a message into lager without using th'],['fun','erchef','lager:log/1','Manually log a message into lager without using th'],['fun','erchef','lager:md/0','Get lager metadata for current process.'],['fun','erchef','lager:md/1','Set lager metadata for current process.'],['fun','erchef','lager:posix_error/1','Try to convert an atom to a posix error, but fall '],['fun','erchef','lager:pr/2','Print a record lager found during parse transform.'],['fun','erchef','lager:safe_format/3','Print the format string Fmt with Args safely with '],['fun','erchef','lager:set_loglevel/2','Set the loglevel for a particular backend.'],['fun','erchef','lager:set_loglevel/3','Set the loglevel for a particular backend that has'],['fun','erchef','lager:start/0','Start the application.'],['fun','erchef','lager:status/0',[]],['fun','erchef','lager:stop_trace/1',[]],['fun','erchef','lager:trace/2',[]],['fun','erchef','lager:trace/3',[]],['fun','erchef','lager:trace_console/1',[]],['fun','erchef','lager:trace_console/2',[]],['fun','erchef','lager:trace_file/2',[]],['fun','erchef','lager:trace_file/3',[]],['fun','erchef','lager:update_loglevel_config/0','recalculate min log level.'],['fun','erchef','lager_backend_throttle:handle_call/2',[]],['fun','erchef','lager_backend_throttle:handle_event/2',[]],['fun','erchef','lager_backend_throttle:handle_info/2',[]],['fun','erchef','lager_backend_throttle:init/1',[]],['fun','erchef','lager_config:get/1',[]],['fun','erchef','lager_config:get/2',[]],['fun','erchef','lager_config:new/0',[]],['fun','erchef','lager_config:set/2',[]],['fun','erchef','lager_crash_backend:code_change/3',[]],['fun','erchef','lager_crash_backend:handle_call/2',[]],['fun','erchef','lager_crash_backend:handle_event/2',[]],['fun','erchef','lager_crash_backend:handle_info/2',[]],['fun','erchef','lager_crash_backend:init/1',[]],['fun','erchef','lager_crash_backend:terminate/2',[]],['fun','erchef','lager_default_formatter:format/1',[]],['fun','erchef','lager_default_formatter:format/1','Provides a generic, default formatting for log mes'],['fun','erchef','lager_file_backend:init/1',[]],['fun','erchef','lager_format:format/3',[]],['fun','erchef','lager_format:format/4',[]],['fun','erchef','lager_msg:datetime/1',[]],['fun','erchef','lager_msg:destinations/1',[]],['fun','erchef','lager_msg:message/1',[]],['fun','erchef','lager_msg:metadata/1',[]],['fun','erchef','lager_msg:new/1',[]],['fun','erchef','lager_msg:new/1',[]],['fun','erchef','lager_msg:severity/1',[]],['fun','erchef','lager_msg:severity_as_int/1',[]],['fun','erchef','lager_msg:timestamp/1',[]],['fun','erchef','lager_stdlib:is_my_error_report/1',[]],['fun','erchef','lager_stdlib:is_my_info_report/1',[]],['fun','erchef','lager_stdlib:maybe_utc/1',[]],['fun','erchef','lager_stdlib:proc_lib_format/1',[]],['fun','erchef','lager_stdlib:string_p/1',[]],['fun','erchef','lager_stdlib:sup_get/1',[]],['fun','erchef','lager_stdlib:write_time/2',[]],['fun','erchef','lager_test_backend:code_change/3',[]],['fun','erchef','lager_test_backend:handle_call/2',[]],['fun','erchef','lager_test_backend:handle_event/2',[]],['fun','erchef','lager_test_backend:handle_info/2',[]],['fun','erchef','lager_test_backend:init/1',[]],['fun','erchef','lager_test_backend:terminate/2',[]],['fun','erchef','lager_trunc_io:format/3',[]],['fun','erchef','lager_trunc_io:format/4',[]],['fun','erchef','lager_trunc_io:fprint/1','Returns an flattened list containing the ASCII rep'],['fun','erchef','lager_trunc_io:fprint/1','Returns an flattened list containing the ASCII rep'],['fun','erchef','lager_trunc_io:print/1','Returns {List, Length}.'],['fun','erchef','lager_trunc_io:print/1','Returns {List, Length}.'],['fun','erchef','lager_trunc_io:safe/1','Same as print, but never crashes.'],['fun','erchef','lager_util:calculate_next_rotation/1',[]],['fun','erchef','lager_util:check_traces/4',[]],['fun','erchef','lager_util:config_to_levels/1',[]],['fun','erchef','lager_util:config_to_mask/1',[]],['fun','erchef','lager_util:ensure_logfile/4',[]],['fun','erchef','lager_util:format_time/0',[]],['fun','erchef','lager_util:format_time/1',[]],['fun','erchef','lager_util:is_loggable/1',[]],['fun','erchef','lager_util:level_to_num/1',[]],['fun','erchef','lager_util:levels/0',[]],['fun','erchef','lager_util:localtime_ms/0',[]],['fun','erchef','lager_util:localtime_ms/1',[]],['fun','erchef','lager_util:mask_to_levels/1',[]],['fun','erchef','lager_util:maybe_utc/1',[]],['fun','erchef','lager_util:num_to_level/1',[]],['fun','erchef','lager_util:open_logfile/2',[]],['fun','erchef','lager_util:parse_rotation_date_spec/1',[]],['fun','erchef','lager_util:rotate_logfile/2',[]],['fun','erchef','lager_util:trace_filter/1',[]],['fun','erchef','lager_util:trace_filter/2',[]],['fun','erchef','lager_util:validate_trace/1',[]],['fun','erchef','rebar_lock_deps_plugin:bump-rel-version/2','Update the version field in rel/reltool.config.'],['fun','erchef','rebar_lock_deps_plugin:commit-release/2',[]],['fun','erchef','rebar_lock_deps_plugin:list-deps-versions/2',[]],['fun','erchef','rebar_lock_deps_plugin:lock-deps/2',[]],['fun','erchef','rebar_lock_deps_plugin:log-changed-deps/2',[]],['fun','erchef','rebar_lock_deps_plugin:tag-release/2',[]],['fun','erchef','rebar_lock_deps_plugin:update-deps-local/2',[]],['fun','erchef','rldp_change_log:change_log/2',[]],['fun','erchef','rldp_change_log:commit_release/1',[]],['fun','erchef','rldp_change_log:tag_release/0',[]],['fun','erchef','rldp_util:cmd_in_dir/2',[]],['fun','erchef','rldp_util:mktemp_name/1',[]],['fun','erchef','special_process:init/1',[]],['fun','erchef','special_process:start/0',[]],['fun','erchef','sync_error_logger:error_msg/1',[]],['fun','erchef','sync_error_logger:error_msg/2',[]],['fun','erchef','sync_error_logger:error_report/1',[]],['fun','erchef','sync_error_logger:error_report/2',[]],['fun','erchef','sync_error_logger:info_msg/1',[]],['fun','erchef','sync_error_logger:info_msg/2',[]],['fun','erchef','sync_error_logger:info_report/1',[]],['fun','erchef','sync_error_logger:info_report/2',[]],['fun','erchef','sync_error_logger:warning_msg/1',[]],['fun','erchef','sync_error_logger:warning_msg/2',[]],['fun','erchef','sync_error_logger:warning_report/1',[]],['fun','erchef','sync_error_logger:warning_report/2',[]]];