var index = [['app','post_chat','post_chat','[application]'],['mod','post_chat','post_chat_app',[]],['mod','post_chat','post_chat_channeler',[]],['mod','post_chat','post_chat_sup',[]],['mod','post_chat','post_chatroom','A chatroom useful for humans, the server, or clien'],['mod','post_chat','post_chatroom_sup',[]],['fun','post_chat','post_chat_app:start/2',[]],['fun','post_chat','post_chat_app:stop/1',[]],['fun','post_chat','post_chat_channeler:client_event/3',[]],['fun','post_chat','post_chat_channeler:client_request/4',[]],['fun','post_chat','post_chat_channeler:client_response/4',[]],['fun','post_chat','post_chat_channeler:init/1',[]],['fun','post_chat','post_chat_channeler:start_link/0',[]],['fun','post_chat','post_chat_sup:init/1',[]],['fun','post_chat','post_chat_sup:start_link/1',[]],['fun','post_chat','post_chatroom:code_change/3',[]],['fun','post_chat','post_chatroom:handle_call/3',[]],['fun','post_chat','post_chatroom:handle_cast/2',[]],['fun','post_chat','post_chatroom:handle_info/2',[]],['fun','post_chat','post_chatroom:init/1',[]],['fun','post_chat','post_chatroom:join/2',[]],['fun','post_chat','post_chatroom:join/3',[]],['fun','post_chat','post_chatroom:kick/3',[]],['fun','post_chat','post_chatroom:leave/2',[]],['fun','post_chat','post_chatroom:message/3',[]],['fun','post_chat','post_chatroom:mute/3',[]],['fun','post_chat','post_chatroom:send_message/3',[]],['fun','post_chat','post_chatroom:start_link/3','Creates a new chat room.'],['fun','post_chat','post_chatroom:start_link/4',[]],['fun','post_chat','post_chatroom:terminate/2',[]],['fun','post_chat','post_chatroom:unmute/3',[]],['fun','post_chat','post_chatroom_sup:get_room/2',[]],['fun','post_chat','post_chatroom_sup:init/1',[]],['fun','post_chat','post_chatroom_sup:start_link/1',[]],['app','pre_communication_layer','pre_communication_layer','[application]'],['mod','pre_communication_layer','pre_channels_proto','This is the Ranch protocol that decodes the messag'],['mod','pre_communication_layer','pre_chat_channel','Callbacks for the "entity" channel.'],['mod','pre_communication_layer','pre_client','The clients connection process.'],['mod','pre_communication_layer','pre_client_sup','pre_client_sup.'],['mod','pre_communication_layer','pre_communication_layer_app','The Precursors communication layer application cal'],['mod','pre_communication_layer','pre_communication_layer_sup','Supervise the processes needed to allow clients to'],['mod','pre_communication_layer','pre_control_channel','Callbacks for the "control" channel.'],['mod','pre_communication_layer','pre_entity_channel','Callbacks for the "entity" channel.'],['mod','pre_communication_layer','pre_gen_channel','A simple behavior that defines a channel callback.'],['mod','pre_communication_layer','pre_input_channel','Callbacks for the "entity" channel.'],['mod','pre_communication_layer','pre_json','JSON module - wraps jsx to provide some convenienc'],['mod','pre_communication_layer','pre_ping_channel','Callbacks for the "entity" channel.'],['fun','pre_communication_layer','pre_channels_proto:send_envelope/1','Sends an enveloped message to the client, over th'],['fun','pre_communication_layer','pre_channels_proto:start_link/1','Starts the server.'],['fun','pre_communication_layer','pre_client:connect_tcp/1','Looks up the client pid by Cookie, and informs tha'],['fun','pre_communication_layer','pre_client:ensure_ets/0','Starts the ETS table needed for the TCP cookie loo'],['fun','pre_communication_layer','pre_client:get_aes/1','Retuns the AES key and AES vector in use by the TC'],['fun','pre_communication_layer','pre_client:handle_message/1','Process an incoming channel message from the clien'],['fun','pre_communication_layer','pre_client:handle_messages/1','Processes a list of incoming channel messages.'],['fun','pre_communication_layer','pre_client:send_event/1','Send an event to the client.'],['fun','pre_communication_layer','pre_client:send_event/1','Send an event to the client, over tcp.'],['fun','pre_communication_layer','pre_client:send_request/1','Send a request to the client.'],['fun','pre_communication_layer','pre_client:send_request/1','Send a request to the client over tcp.'],['fun','pre_communication_layer','pre_client:send_response/1','Send a response to the client.'],['fun','pre_communication_layer','pre_client:send_response/1','Send a response to the client over tcp.'],['fun','pre_communication_layer','pre_client:start_link/1','Start a new client process with the given  pre_ch'],['fun','pre_communication_layer','pre_client_sup:running_children/0','Returns a list of currently running children pids.'],['fun','pre_communication_layer','pre_client_sup:start_child/1','Starts a new client connection process.'],['fun','pre_communication_layer','pre_client_sup:start_link/0','Starts the supervisor for client connections.'],['fun','pre_communication_layer','pre_communication_layer_sup:start_link/0','Starts up using default arguments.'],['fun','pre_communication_layer','pre_communication_layer_sup:start_link/1','Starts up with the given arguements.'],['fun','pre_communication_layer','pre_json:to_json/1','Convert the given Terms to binary as JSON using js'],['fun','pre_communication_layer','pre_json:to_term/1','Parse the given binary as JSON using jsx, replacin'],['app','pre_data','pre_data','[application]'],['mod','pre_data','pre_account','Convenience wrapper for working with accounts.'],['mod','pre_data','pre_character','A helper module for working with characters.'],['mod','pre_data','pre_data','Abstraction layer for accessing persistant storage'],['mod','pre_data','pre_data_app','Application callback module for pre_data.'],['mod','pre_data','pre_data_sup','Top level supervior for pre_data.'],['mod','pre_data','pre_hash','Handles authentication requests.'],['mod','pre_data','pre_mnesia','The bridge between pre_data and an mnesia database'],['mod','pre_data','pre_player_ship','An instance of a players ship as it existed in th'],['fun','pre_data','pre_account:authenticate/1','Authenticates an account, given the account name, '],['fun','pre_data','pre_account:create/1','Creates a new account.'],['fun','pre_data','pre_account:delete/1','Removed an account.'],['fun','pre_data','pre_account:get_by_email/1','Gets an account by email address.'],['fun','pre_data','pre_account:get_by_id/1','Gets an account by id.'],['fun','pre_data','pre_account:save/1','Saves a account.'],['fun','pre_data','pre_character:create/1','Creates a new character.'],['fun','pre_data','pre_character:create/1','Creates a new level 1 character.'],['fun','pre_data','pre_character:delete/1','Removed an character.'],['fun','pre_data','pre_character:get_by_account/1','Gets characters by account name.'],['fun','pre_data','pre_character:get_by_id/1','Gets an character by id.'],['fun','pre_data','pre_character:get_by_name/1','Gets an character by name.'],['fun','pre_data','pre_character:save/1','Saves a character.'],['fun','pre_data','pre_data:delete/1','Delete the record of the given type with the given'],['fun','pre_data','pre_data:delete/1','Extract the type and id of the record and call del'],['fun','pre_data','pre_data:export/1','Query the running system for all data and place it'],['fun','pre_data','pre_data:get_by_id/1','Attempts to get a record of the given type with th'],['fun','pre_data','pre_data:import/1','Import data stored in the file glob.'],['fun','pre_data','pre_data:save/1','Stores the record to long term.'],['fun','pre_data','pre_data:search/1','Search the data backend for records of the given t'],['fun','pre_data','pre_data:start_link/1','Start linked to the calling process with the given'],['fun','pre_data','pre_data:stop/0','Stops the server with reason normal.'],['fun','pre_data','pre_data:transaction/1','Runs the fun as a transaction.'],['fun','pre_data','pre_data_sup:start_link/0','Starts the supervisor named as its module.'],['fun','pre_data','pre_data_sup:stop/0','Exit the pre_data_sup supervisor with reason norma'],['fun','pre_data','pre_hash:hash/1','Hash passwords for new accounts or authentication.'],['fun','pre_data','pre_hash:hash/1','Hash passwords for authentication.'],['fun','pre_data','pre_mnesia:check_setup/0','Same as check_setup/1 passed true.'],['fun','pre_data','pre_mnesia:check_setup/1','Ensure the mnesia schema and tables exist.'],['fun','pre_data','pre_player_ship:create/1','Creates a new player ship.'],['fun','pre_data','pre_player_ship:create/1','Creates a new player.'],['fun','pre_data','pre_player_ship:delete/1','Removes a player ship.'],['fun','pre_data','pre_player_ship:get_by_id/1','Gets a player ship by id.'],['fun','pre_data','pre_player_ship:get_by_name/1','Gets a player ship by name.'],['fun','pre_data','pre_player_ship:get_character/1','Gets the character that owns this ship.'],['fun','pre_data','pre_player_ship:save/1','Saves a player ship.'],['app','pre_entity_layer','pre_entity_layer','[application]'],['mod','pre_entity_layer','pre_entity_balancer','Load balances pre_gen_entity assignment among gen_'],['mod','pre_entity_layer','pre_entity_engine_sup','Top level supervisor for the pre_entity_layer app.'],['mod','pre_entity_layer','pre_entity_event_sup','Supervises the entitiy event system, and ensures t'],['mod','pre_entity_layer','pre_entity_layer_app','The Precursors entity layer application callback m'],['mod','pre_entity_layer','pre_entity_sim_timer','Periodically calls the pre_gen_entity:run_sumulati'],['mod','pre_entity_layer','pre_ge_sup','Supervisor for gen_event managers.'],['mod','pre_entity_layer','pre_gen_entity','Behavior for entities to use when added to a gen_e'],['mod','pre_entity_layer','pre_physics_rk4','Physics: 4th-order Runge-Kutta integration.'],['mod','pre_entity_layer','pre_ship_controller','This is a base controller for all ships in the gam'],['mod','pre_entity_layer','quaternion','Quaternion module - simplifies working with and pe'],['mod','pre_entity_layer','vector','Simplifies working with and perfoming math on vect'],['fun','pre_entity_layer','pre_entity_balancer:add_entity/1','Adds an entity to the least loaded gen_event manag'],['fun','pre_entity_layer','pre_entity_balancer:notify/1','Sends the same event to all gen_event managers mon'],['fun','pre_entity_layer','pre_entity_balancer:notify/1','Sends the same event to all gen_event managers mon'],['fun','pre_entity_layer','pre_entity_balancer:recover_entity/1','Tries to recover an entity and add it to the least'],['fun','pre_entity_layer','pre_entity_balancer:start_link/0','Same as start_link([]).'],['fun','pre_entity_layer','pre_entity_balancer:start_link/1','Start the load balancer supervisored by the callin'],['fun','pre_entity_layer','pre_entity_balancer:stats/0','Returns a list of the gen_event managers that are '],['fun','pre_entity_layer','pre_entity_engine_sup:start_link/0','Starts the top level supervisor.'],['fun','pre_entity_layer','pre_entity_event_sup:start_link/1','Start named and linked to the calling process.'],['fun','pre_entity_layer','pre_entity_sim_timer:start_link/0','Ye Olde "Start Link".'],['fun','pre_entity_layer','pre_ge_sup:running_children/0','Returns a list of currently running children pids.'],['fun','pre_entity_layer','pre_ge_sup:start_child/0','Starts a child.'],['fun','pre_entity_layer','pre_ge_sup:start_link/0','Same as start_link(5).'],['fun','pre_entity_layer','pre_ge_sup:start_link/1','Start the named supervisor pre_ge_sup linked to th'],['fun','pre_entity_layer','pre_gen_entity:add_entity/1','Adds a pre_gen_entity to the given gen_event_manag'],['fun','pre_entity_layer','pre_gen_entity:add_sup_entity/1','Add a supervised entity to the given gen_event_man'],['fun','pre_entity_layer','pre_gen_entity:cancel_notify/1','Cancel a timer returned by notify_after/5.'],['fun','pre_entity_layer','pre_gen_entity:notify/1','Send a pre_gen_entity event to the given gen_event'],['fun','pre_entity_layer','pre_gen_entity:notify_after/1','Creates a timer to send an event after Time millis'],['fun','pre_entity_layer','pre_gen_entity:retrieve_ids_by_manager/1','Return the list of entity ids the given event_eve'],['fun','pre_entity_layer','pre_gen_entity:run_simulations/1','For each registered entity, run thier simulate cal'],['fun','pre_entity_layer','pre_gen_entity:simulate_interval/0','Returns the interval used for calculating simulati'],['fun','pre_entity_layer','pre_physics_rk4:default_physical/0','Create a new physical record, with the last_upd'],['fun','pre_entity_layer','pre_physics_rk4:diff_to_proplist/2',[]],['fun','pre_entity_layer','pre_physics_rk4:from_proplist/1',[]],['fun','pre_entity_layer','pre_physics_rk4:get_prop/2',[]],['fun','pre_entity_layer','pre_physics_rk4:simulate/1','Simulate physical movement of the physical objec'],['fun','pre_entity_layer','pre_physics_rk4:to_proplist/1',[]],['fun','pre_entity_layer','pre_physics_rk4:update_from_proplist/2',[]],['fun','pre_entity_layer','quaternion:add/2','Adds the two quaternions together.'],['fun','pre_entity_layer','quaternion:compose/2','Get the quaternion which results from composing th'],['fun','pre_entity_layer','quaternion:conjugate/1',[]],['fun','pre_entity_layer','quaternion:deg2rad/1','Convert radians to degrees.'],['fun','pre_entity_layer','quaternion:divide/2','Scales the quaternion by the given factor.'],['fun','pre_entity_layer','quaternion:from_axis_angle/2','Converts from an axis and angle (radians) to a qua'],['fun','pre_entity_layer','quaternion:from_axis_angle/3','Converts from an axis and angle (radians) to a qua'],['fun','pre_entity_layer','quaternion:from_body_rates/1','Converts from body rates (radians) to a quaternion'],['fun','pre_entity_layer','quaternion:from_body_rates/2','Converts from body rates (radians) to a quaternion'],['fun','pre_entity_layer','quaternion:from_euler/1','Converts from a vector of euler angles (radians) t'],['fun','pre_entity_layer','quaternion:from_euler/2','Converts from a vector of euler angles (radians) t'],['fun','pre_entity_layer','quaternion:init/0',[]],['fun','pre_entity_layer','quaternion:inverse/1',[]],['fun','pre_entity_layer','quaternion:is_zero/1','Checks to see if this is a zero quaternion.'],['fun','pre_entity_layer','quaternion:length/1','Returns the length of the quaternion.'],['fun','pre_entity_layer','quaternion:multiply/2','Quaternion Multiplication.'],['fun','pre_entity_layer','quaternion:norm/1','Returns the length of the quaternion.'],['fun','pre_entity_layer','quaternion:quat_to_list/1','Convert from a quaternion to a list.'],['fun','pre_entity_layer','quaternion:rad2deg/1','Convert radians to degrees.'],['fun','pre_entity_layer','quaternion:reciprocal/1',[]],['fun','pre_entity_layer','quaternion:relative_to/2','Get the quaternion representing the orientation of'],['fun','pre_entity_layer','quaternion:reorient/2','Reorient q1s axis of rotation by rotating it by q'],['fun','pre_entity_layer','quaternion:rotate/2','Rotates the vector by Rotation.'],['fun','pre_entity_layer','quaternion:scale_rotation/2','Scale the rotation of the quaternion by the given '],['fun','pre_entity_layer','quaternion:subtract/2','Subtracts the second quaternion from the first.'],['fun','pre_entity_layer','quaternion:to_quat/1','Convert from a list or quaternion tuple to a quate'],['fun','pre_entity_layer','quaternion:unit/1','Returns a unit quaternion in the same direction as'],['fun','pre_entity_layer','vector:add/2','Adds two vectors together.'],['fun','pre_entity_layer','vector:add/3','Adds three vectors together.'],['fun','pre_entity_layer','vector:cross/2','Perform cross product.'],['fun','pre_entity_layer','vector:divide/2','Scales a vector by the given factor.'],['fun','pre_entity_layer','vector:dot/2','Perform dot product.'],['fun','pre_entity_layer','vector:hpr_to/1','Gets the Yaw and Pitch required to point in the di'],['fun','pre_entity_layer','vector:is_zero/1','Checks to see if this is a zero vector.'],['fun','pre_entity_layer','vector:length/1','Returns the length of the vector.'],['fun','pre_entity_layer','vector:multiply/2','Scales a vector by the given factor.'],['fun','pre_entity_layer','vector:norm/1','Returns the length of the vector.'],['fun','pre_entity_layer','vector:squared_norm/1','Returns the squared length of the vector.'],['fun','pre_entity_layer','vector:subtract/2','Subtracts the second vector from the first.'],['fun','pre_entity_layer','vector:to_vec/1','Convert from a list or vector tuple to a vector.'],['fun','pre_entity_layer','vector:unit/1','Returns a unit vector in the same direction as Vec'],['fun','pre_entity_layer','vector:vec_to_list/1','Convert from a vector to a list.'],['app','precursors-server','precursors-server','[application]'],['mod','precursors-server','pre_mod_tracker','Abstract property modification tracker.'],['mod','precursors-server','pre_server_app','Precursors Server application.'],['mod','precursors-server','pre_server_sup','Top level supervisor for precursors server.'],['fun','precursors-server','pre_mod_tracker:append/4',[]],['fun','precursors-server','pre_mod_tracker:new/0',[]],['fun','precursors-server','pre_mod_tracker:new/1',[]],['fun','precursors-server','pre_mod_tracker:remove/4',[]],['fun','precursors-server','pre_mod_tracker:to_proplist/1',[]],['fun','precursors-server','pre_server_app:priv_dir/0','Get the priv dir of the application even if its r'],['fun','precursors-server','pre_server_app:stop/1','Stops the app.'],['fun','precursors-server','pre_server_sup:start_link/0','Starts the server with all default options.'],['fun','precursors-server','pre_server_sup:start_link/1','Starts the server with the given options.']];