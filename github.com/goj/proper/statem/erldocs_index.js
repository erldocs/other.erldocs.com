var index = [['app','proper','proper','[application]'],['mod','proper','proper','This is the main PropEr module.'],['mod','proper','proper_fsm','This module contains functions for testing statefu'],['mod','proper','proper_gen','The generator subsystem and generators for basic t'],['mod','proper','proper_statem','This module contains functions for testing statefu'],['mod','proper','proper_symb','This module contains functions used when symbolica'],['mod','proper','proper_transformer','This module contains PropErs main parse transform'],['mod','proper','proper_types','Type manipulation functions and predefined types a'],['mod','proper','proper_typeserver','This module contains the subsystem responsible for'],['mod','proper','strip_types','This modules contains a parse transformer that rem'],['fun','proper','proper:aggregate/1',[]],['fun','proper','proper:aggregate/1',[]],['fun','proper','proper:check/1',[]],['fun','proper','proper:check/1',[]],['fun','proper','proper:check_spec/1',[]],['fun','proper','proper:check_spec/1',[]],['fun','proper','proper:check_specs/1',[]],['fun','proper','proper:check_specs/1',[]],['fun','proper','proper:classify/1',[]],['fun','proper','proper:clean_garbage/0',[]],['fun','proper','proper:collect/1',[]],['fun','proper','proper:collect/1',[]],['fun','proper','proper:conjunction/1',[]],['fun','proper','proper:counterexample/0',[]],['fun','proper','proper:counterexample/1',[]],['fun','proper','proper:counterexample/1',[]],['fun','proper','proper:counterexamples/0',[]],['fun','proper','proper:equals/1',[]],['fun','proper','proper:fails/1',[]],['fun','proper','proper:global_state_erase/0',[]],['fun','proper','proper:measure/1',[]],['fun','proper','proper:module/1',[]],['fun','proper','proper:module/1',[]],['fun','proper','proper:numtests/1',[]],['fun','proper','proper:on_output/1',[]],['fun','proper','proper:pure_check/1',[]],['fun','proper','proper:pure_check/1',[]],['fun','proper','proper:quickcheck/1',[]],['fun','proper','proper:quickcheck/1',[]],['fun','proper','proper:spawn_link_migrate/1',[]],['fun','proper','proper:with_title/1',[]],['fun','proper','proper_fsm:commands/1','Similar to commands/1, but generated command seque'],['fun','proper','proper_fsm:commands/1','A special PropEr type which generates random comma'],['fun','proper','proper_fsm:run_commands/1','Similar to run_commands/2, but also accepts an env'],['fun','proper','proper_fsm:run_commands/1','Evaluates a given symbolic command sequence Cmds a'],['fun','proper','proper_fsm:state_names/1','Extracts the names of the states from a given comm'],['fun','proper','proper_gen:pick/1',[]],['fun','proper','proper_gen:pick/1',[]],['fun','proper','proper_gen:sample/1',[]],['fun','proper','proper_gen:sample/1',[]],['fun','proper','proper_gen:sampleshrink/1',[]],['fun','proper','proper_gen:sampleshrink/1',[]],['fun','proper','proper_statem:command_names/1','Extracts the names of the commands from a given co'],['fun','proper','proper_statem:commands/1','Similar to commands/1, but generated command seque'],['fun','proper','proper_statem:commands/1','A special PropEr type which generates random comma'],['fun','proper','proper_statem:fix_parallel/1',[]],['fun','proper','proper_statem:more_commands/1',[]],['fun','proper','proper_statem:parallel_commands/1','Similar to parallel_commands/1, but generated comm'],['fun','proper','proper_statem:parallel_commands/1','A special PropEr type which generates parallel tes'],['fun','proper','proper_statem:run/1',[]],['fun','proper','proper_statem:run_commands/1',' Similar to run_commands/2, but also accepts an en'],['fun','proper','proper_statem:run_commands/1','Evaluates a given symbolic command sequence Cmds a'],['fun','proper','proper_statem:run_parallel_commands/1','Similar to run_parallel_commands/2, but also accep'],['fun','proper','proper_statem:run_parallel_commands/1','Runs a given parallel testcase according to the st'],['fun','proper','proper_statem:state_after/1','Returns the symbolic state after running a given c'],['fun','proper','proper_statem:zip/2','Behaves like lists:zip/2, but the input lists do n'],['fun','proper','proper_symb:defined/1',[]],['fun','proper','proper_symb:eval/1',[]],['fun','proper','proper_symb:eval/1',[]],['fun','proper','proper_symb:pretty_print/1',[]],['fun','proper','proper_symb:pretty_print/1',[]],['fun','proper','proper_symb:well_defined/1',[]],['fun','proper','proper_types:any/0',[]],['fun','proper','proper_types:arity/0',[]],['fun','proper','proper_types:atom/0',[]],['fun','proper','proper_types:binary/0',[]],['fun','proper','proper_types:binary/1',[]],['fun','proper','proper_types:bitstring/0',[]],['fun','proper','proper_types:bitstring/1',[]],['fun','proper','proper_types:bool/0',[]],['fun','proper','proper_types:boolean/0',[]],['fun','proper','proper_types:byte/0',[]],['fun','proper','proper_types:char/0',[]],['fun','proper','proper_types:choose/1',[]],['fun','proper','proper_types:default/1',[]],['fun','proper','proper_types:elements/1',[]],['fun','proper','proper_types:exactly/1',[]],['fun','proper','proper_types:fixed_list/1',[]],['fun','proper','proper_types:float/0',[]],['fun','proper','proper_types:float/1',[]],['fun','proper','proper_types:frequency/1',[]],['fun','proper','proper_types:function/1',[]],['fun','proper','proper_types:function0/1',[]],['fun','proper','proper_types:function1/1',[]],['fun','proper','proper_types:function2/1',[]],['fun','proper','proper_types:function3/1',[]],['fun','proper','proper_types:function4/1',[]],['fun','proper','proper_types:int/0',[]],['fun','proper','proper_types:integer/0',[]],['fun','proper','proper_types:integer/1',[]],['fun','proper','proper_types:largeint/0',[]],['fun','proper','proper_types:le/1',[]],['fun','proper','proper_types:list/0',[]],['fun','proper','proper_types:list/1',[]],['fun','proper','proper_types:loose_tuple/1',[]],['fun','proper','proper_types:nat/0',[]],['fun','proper','proper_types:neg_integer/0',[]],['fun','proper','proper_types:non_empty/1',[]],['fun','proper','proper_types:non_neg_float/0',[]],['fun','proper','proper_types:non_neg_integer/0',[]],['fun','proper','proper_types:noshrink/1',[]],['fun','proper','proper_types:number/0',[]],['fun','proper','proper_types:oneof/1',[]],['fun','proper','proper_types:orderedlist/1',[]],['fun','proper','proper_types:parameter/1',[]],['fun','proper','proper_types:parameter/1',[]],['fun','proper','proper_types:pos_integer/0',[]],['fun','proper','proper_types:range/1',[]],['fun','proper','proper_types:real/0',[]],['fun','proper','proper_types:resize/1',[]],['fun','proper','proper_types:return/1',[]],['fun','proper','proper_types:shrink_list/1',[]],['fun','proper','proper_types:string/0',[]],['fun','proper','proper_types:term/0',[]],['fun','proper','proper_types:timeout/0',[]],['fun','proper','proper_types:tuple/0',[]],['fun','proper','proper_types:tuple/1',[]],['fun','proper','proper_types:union/1',[]],['fun','proper','proper_types:vector/1',[]],['fun','proper','proper_types:weighted_default/1',[]],['fun','proper','proper_types:weighted_union/1',[]],['fun','proper','proper_types:with_parameter/1',[]],['fun','proper','proper_types:with_parameters/1',[]],['fun','proper','proper_types:wunion/1',[]],['fun','proper','proper_typeserver:demo_is_instance/1',[]],['fun','proper','proper_typeserver:demo_translate_type/1',[]]];