var index = [['app','cqerl','cqerl','[application]'],['mod','cqerl','cqerl','Main interface to CQErl cassandra client.'],['mod','cqerl','cqerl_app',[]],['mod','cqerl','cqerl_auth_handler','Handler for SASL-based authentication with Cassand'],['mod','cqerl','cqerl_auth_plain_handler',[]],['mod','cqerl','cqerl_batch',[]],['mod','cqerl','cqerl_batch_sup',[]],['mod','cqerl','cqerl_cache',[]],['mod','cqerl','cqerl_client',[]],['mod','cqerl','cqerl_datatypes',[]],['mod','cqerl','cqerl_protocol',[]],['mod','cqerl','cqerl_sup',[]],['fun','cqerl','cqerl:all_rows/1','Returns a list of rows as property lists.'],['fun','cqerl','cqerl:close_client/1','Close a client that was previously allocated with '],['fun','cqerl','cqerl:code_change/3',[]],['fun','cqerl','cqerl:fetch_more/1','Fetch the next page of result from Cassandra for a'],['fun','cqerl','cqerl:fetch_more_async/1','Asynchronously fetch the next page of result from '],['fun','cqerl','cqerl:handle_call/3',[]],['fun','cqerl','cqerl:handle_cast/2',[]],['fun','cqerl','cqerl:handle_info/2',[]],['fun','cqerl','cqerl:has_more_pages/1','Check to see if there are more result available.'],['fun','cqerl','cqerl:head/1','Returns the first row of result, as a property lis'],['fun','cqerl','cqerl:init/1',[]],['fun','cqerl','cqerl:new_client/0',[]],['fun','cqerl','cqerl:new_client/1',[]],['fun','cqerl','cqerl:new_client/1',[]],['fun','cqerl','cqerl:next/1','Returns a tuple of {HeadRow, ResultTail}.'],['fun','cqerl','cqerl:prepare_client/1',[]],['fun','cqerl','cqerl:prepare_client/1',[]],['fun','cqerl','cqerl:run_query/1','Fetch the next page of result from Cassandra for a'],['fun','cqerl','cqerl:send_query/1','Send a query to be executed asynchronously.'],['fun','cqerl','cqerl:size/1','The number of rows in a result set.'],['fun','cqerl','cqerl:start_link/0',[]],['fun','cqerl','cqerl:tail/1','Returns all rows of result, except the first one.'],['fun','cqerl','cqerl:terminate/2',[]],['fun','cqerl','cqerl_app:start/2',[]],['fun','cqerl','cqerl_app:stop/1',[]],['fun','cqerl','cqerl_auth_plain_handler:auth_handle_challenge/2',[]],['fun','cqerl','cqerl_auth_plain_handler:auth_handle_error/2',[]],['fun','cqerl','cqerl_auth_plain_handler:auth_handle_success/2',[]],['fun','cqerl','cqerl_auth_plain_handler:auth_init/3',[]],['fun','cqerl','cqerl_auth_plain_handler:encode_plain_credentials/1','Encodes a proplist structure with username and pas'],['fun','cqerl','cqerl_batch:init/4',[]],['fun','cqerl','cqerl_batch:start_link/3',[]],['fun','cqerl','cqerl_batch:system_continue/3',[]],['fun','cqerl','cqerl_batch:system_terminate/4',[]],['fun','cqerl','cqerl_batch_sup:init/1',[]],['fun','cqerl','cqerl_batch_sup:new_batch_coordinator/3',[]],['fun','cqerl','cqerl_batch_sup:start_link/0',[]],['fun','cqerl','cqerl_cache:code_change/3',[]],['fun','cqerl','cqerl_cache:handle_call/3',[]],['fun','cqerl','cqerl_cache:handle_cast/2',[]],['fun','cqerl','cqerl_cache:handle_info/2',[]],['fun','cqerl','cqerl_cache:init/1',[]],['fun','cqerl','cqerl_cache:lookup/1',[]],['fun','cqerl','cqerl_cache:lookup/2',[]],['fun','cqerl','cqerl_cache:query_preparation_failed/2',[]],['fun','cqerl','cqerl_cache:query_was_prepared/2',[]],['fun','cqerl','cqerl_cache:start_link/0',[]],['fun','cqerl','cqerl_cache:terminate/2',[]],['fun','cqerl','cqerl_client:batch_ready/2',[]],['fun','cqerl','cqerl_client:code_change/4',[]],['fun','cqerl','cqerl_client:fetch_more/1',[]],['fun','cqerl','cqerl_client:fetch_more_async/1',[]],['fun','cqerl','cqerl_client:handle_event/3',[]],['fun','cqerl','cqerl_client:handle_info/3',[]],['fun','cqerl','cqerl_client:handle_sync_event/4',[]],['fun','cqerl','cqerl_client:init/1',[]],['fun','cqerl','cqerl_client:live/2',[]],['fun','cqerl','cqerl_client:live/3',[]],['fun','cqerl','cqerl_client:new_user/2',[]],['fun','cqerl','cqerl_client:prepare_query/2',[]],['fun','cqerl','cqerl_client:query_async/2',[]],['fun','cqerl','cqerl_client:remove_user/1',[]],['fun','cqerl','cqerl_client:run_query/2',[]],['fun','cqerl','cqerl_client:sleep/2',[]],['fun','cqerl','cqerl_client:sleep/3',[]],['fun','cqerl','cqerl_client:start_link/2',[]],['fun','cqerl','cqerl_client:starting/2',[]],['fun','cqerl','cqerl_client:starting/3',[]],['fun','cqerl','cqerl_client:terminate/3',[]],['fun','cqerl','cqerl_datatypes:decode_bytes/1',[]],['fun','cqerl','cqerl_datatypes:decode_data/1',[]],['fun','cqerl','cqerl_datatypes:decode_long_string/1',[]],['fun','cqerl','cqerl_datatypes:decode_map_to_proplist/1',[]],['fun','cqerl','cqerl_datatypes:decode_multimap_to_proplist/1',[]],['fun','cqerl','cqerl_datatypes:decode_short_bytes/1',[]],['fun','cqerl','cqerl_datatypes:decode_string/1',[]],['fun','cqerl','cqerl_datatypes:decode_string_list/1',[]],['fun','cqerl','cqerl_datatypes:encode_bytes/1','Encode a binary (max length 2^32) into the wire fo'],['fun','cqerl','cqerl_datatypes:encode_data/1',[]],['fun','cqerl','cqerl_datatypes:encode_long_string/1','Encode a long UTF8 binary or string (max length 2^'],['fun','cqerl','cqerl_datatypes:encode_proplist_to_map/1','Encode a proplist into a string map ([string] -&gt'],['fun','cqerl','cqerl_datatypes:encode_proplist_to_multimap/1','Encode a proplist into a string multimap ([string]'],['fun','cqerl','cqerl_datatypes:encode_short_bytes/1','Encode a binary (max length 2^16) into the wire fo'],['fun','cqerl','cqerl_datatypes:encode_string/1','Encode a UTF8 binary or string (max length of 2^16'],['fun','cqerl','cqerl_datatypes:encode_string_list/1','Encode a string list into the wire format required'],['fun','cqerl','cqerl_protocol:auth_frame/1','Given frame options and authentication data, produ'],['fun','cqerl','cqerl_protocol:batch_frame/1','Given frame options and batch record (containing a'],['fun','cqerl','cqerl_protocol:decode_row/2',[]],['fun','cqerl','cqerl_protocol:encode_query_values/2',[]],['fun','cqerl','cqerl_protocol:encode_query_values/3',[]],['fun','cqerl','cqerl_protocol:execute_frame/1','Given frame options, query parameters and a query,'],['fun','cqerl','cqerl_protocol:options_frame/1','Given frame options, produce a OPTIONS request f'],['fun','cqerl','cqerl_protocol:prepare_frame/1','Given frame options and a CQL query, produce a PR'],['fun','cqerl','cqerl_protocol:query_frame/1','Given frame options, query parameters and a query,'],['fun','cqerl','cqerl_protocol:register_frame/1','Given frame options and the list of events, produc'],['fun','cqerl','cqerl_protocol:response_frame/1','Decode a response frame coming from the server, ex'],['fun','cqerl','cqerl_protocol:startup_frame/1','Given frame and startup options, produce a STARTU'],['fun','cqerl','cqerl_sup:init/1',[]],['fun','cqerl','cqerl_sup:start_link/0',[]]];