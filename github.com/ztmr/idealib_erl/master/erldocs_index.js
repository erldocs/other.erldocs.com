var index = [['app','idealib_erl','idealib_erl','[application]'],['mod','idealib_erl','epiece',[]],['mod','idealib_erl','epiece_nif',[]],['mod','idealib_erl','idealib_binary',[]],['mod','idealib_erl','idealib_cdsv',[]],['mod','idealib_erl','idealib_conv',[]],['mod','idealib_erl','idealib_crypto',[]],['mod','idealib_erl','idealib_flops',[]],['mod','idealib_erl','idealib_fs',[]],['mod','idealib_erl','idealib_misc',[]],['mod','idealib_erl','idealib_num','Useful numeric algorithms for floats that cover so'],['mod','idealib_erl','idealib_xml',[]],['mod','idealib_erl','ilog',[]],['fun','idealib_erl','epiece:piece/2','Alias for epiece_nif:piece/2.'],['fun','idealib_erl','epiece:piece/3','Piece on steroids (returns a proplist).'],['fun','idealib_erl','epiece_nif:piece/2',[]],['fun','idealib_erl','idealib_binary:concat/1',[]],['fun','idealib_erl','idealib_binary:to_hex/1',[]],['fun','idealib_erl','idealib_binary:to_hexbin/1',[]],['fun','idealib_erl','idealib_binary:to_hexlist/1',[]],['fun','idealib_erl','idealib_cdsv:oneshot/2',[]],['fun','idealib_erl','idealib_cdsv:oneshot/4',[]],['fun','idealib_erl','idealib_cdsv:oneshot/5',[]],['fun','idealib_erl','idealib_conv:bits2int/1','Alias for bitstring2int/0.'],['fun','idealib_erl','idealib_conv:bitstring2int/1','Convert a list of bits into a valid integer.'],['fun','idealib_erl','idealib_conv:bool2str/1','Convert a boolean value B to a string.'],['fun','idealib_erl','idealib_conv:bool2str/2','Convert a boolean value B to a string.'],['fun','idealib_erl','idealib_conv:bool2str0/1','Convert a boolean value B to a string.'],['fun','idealib_erl','idealib_conv:bool2str1/1','Convert a boolean value B to a string.'],['fun','idealib_erl','idealib_conv:float2str/1',[]],['fun','idealib_erl','idealib_conv:int2float/2','Convert integer to float.'],['fun','idealib_erl','idealib_conv:int2float0/1','Convert integer to float.'],['fun','idealib_erl','idealib_conv:str2float/1','Convert a string S to float.'],['fun','idealib_erl','idealib_conv:str2float/2','Convert a string S to float.'],['fun','idealib_erl','idealib_conv:str2float0/1','Convert a string S to float.'],['fun','idealib_erl','idealib_conv:str2int/1','Convert a string S to integer.'],['fun','idealib_erl','idealib_conv:str2int/2','Convert a string S to integer.'],['fun','idealib_erl','idealib_conv:str2int0/1','Convert a string S to integer.'],['fun','idealib_erl','idealib_conv:x2bool/1','Convert value of S to boolean.'],['fun','idealib_erl','idealib_conv:x2bool/2','Convert value of S to boolean.'],['fun','idealib_erl','idealib_conv:x2bool0/1','Convert value of S to a boolean value.'],['fun','idealib_erl','idealib_conv:x2bool1/1','Convert value of S to a boolean value.'],['fun','idealib_erl','idealib_conv:x2float/2','Try to convert whatever to float with optional fal'],['fun','idealib_erl','idealib_conv:x2float0/1','Try to convert whatever to float.'],['fun','idealib_erl','idealib_conv:x2int/2','Try to convert whatever to integer.'],['fun','idealib_erl','idealib_conv:x2int0/1','Try to convert whatever to integer.'],['fun','idealib_erl','idealib_conv:x2str/1',[]],['fun','idealib_erl','idealib_crypto:hash/2',[]],['fun','idealib_erl','idealib_crypto:hash_hex/2',[]],['fun','idealib_erl','idealib_crypto:hmac/3',[]],['fun','idealib_erl','idealib_crypto:hmac_hex/3',[]],['fun','idealib_erl','idealib_flops:add/1','Add two float numbers X and Y.'],['fun','idealib_erl','idealib_flops:fractional/1','Get a fractional part of the float argument.'],['fun','idealib_erl','idealib_flops:integral/1','Get an integral part of the float argument.'],['fun','idealib_erl','idealib_flops:round/1','Round a float-&gt;float with specified precision.'],['fun','idealib_erl','idealib_flops:round/1','Round a float-&gt;float.'],['fun','idealib_erl','idealib_flops:subtract/1','Subtract two float numbers X and Y.'],['fun','idealib_erl','idealib_fs:last_modified/1','Like filelib:last_modified/1, but in UTC.'],['fun','idealib_erl','idealib_misc:ensure_app/1','Ensure the App is running.'],['fun','idealib_erl','idealib_misc:get_priv_dir_item/2','Get full path of item stored in private directory.'],['fun','idealib_erl','idealib_misc:implements/1','Check if the Module implements Behavior callbacks.'],['fun','idealib_erl','idealib_misc:post_init/2','Wait for the App to start and run Fun function fin'],['fun','idealib_erl','idealib_misc:post_init/3',[]],['fun','idealib_erl','idealib_misc:post_init_internal/3','INTERNAL PURPOSES ONLY (post_init/3).'],['fun','idealib_erl','idealib_misc:re_esc/1','regex pattern escaper.'],['fun','idealib_erl','idealib_misc:uuidv4str/0','UUIDv4 string generator.'],['fun','idealib_erl','idealib_num:digits/1',' Returns a string that accurately represents the g'],['fun','idealib_erl','idealib_num:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','idealib_erl','idealib_num:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','idealib_erl','idealib_num:int_pow/1',' Moderately efficient way to exponentiate integers'],['fun','idealib_erl','idealib_xml:from_file/2','Load XSDFile model and use it to parse XMLFile (lo'],['fun','idealib_erl','idealib_xml:from_string/2','Load XSDFile model and use it to parse XMLString.'],['fun','idealib_erl','idealib_xml:from_url/2','Load XSDFile model and use it to parse XMLUrl (rem'],['fun','idealib_erl','idealib_xml:to_file/3','Serialize XMLDocument and write it to XMLFile.'],['fun','idealib_erl','idealib_xml:to_string/2','Serialize XMLDocument as a string with use of XSDF'],['fun','idealib_erl','ilog:dbg/1',[]],['fun','idealib_erl','ilog:dbg/2',[]],['fun','idealib_erl','ilog:debug/1',[]],['fun','idealib_erl','ilog:debug/2',[]],['fun','idealib_erl','ilog:err/1',[]],['fun','idealib_erl','ilog:err/2',[]],['fun','idealib_erl','ilog:error/1',[]],['fun','idealib_erl','ilog:error/2',[]],['fun','idealib_erl','ilog:info/1',[]],['fun','idealib_erl','ilog:info/2',[]],['fun','idealib_erl','ilog:notice/1',[]],['fun','idealib_erl','ilog:notice/2',[]],['fun','idealib_erl','ilog:start/0',[]],['fun','idealib_erl','ilog:stop/0',[]],['fun','idealib_erl','ilog:warn/1',[]],['fun','idealib_erl','ilog:warn/2',[]],['fun','idealib_erl','ilog:warning/1',[]],['fun','idealib_erl','ilog:warning/2',[]]];