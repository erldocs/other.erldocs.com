var index = [['app','egtm','egtm','[application]'],['mod','egtm','egtm','Erlang binding for GT.M database.'],['mod','egtm','egtm_admin','EGTM Administration Tools.'],['mod','egtm','egtm_config','EGTM Configuration Manager.'],['mod','egtm','egtm_env',[]],['mod','egtm','egtm_metrics','EGTM Code Metering Tools.'],['mod','egtm','egtm_pool','EGTM worker pool manager process.'],['mod','egtm','egtm_pool_sup','EGTM worker pool supervisor process.'],['mod','egtm','egtm_string','General purpose string encoding library.'],['mod','egtm','egtm_util','EGTM Utilities.'],['mod','egtm','egtm_util_fmt',[]],['mod','egtm','egtm_worker','EGTM worker process bound directly to GT.M NIF lib'],['mod','egtm','egtm_worker_sup','An OTP supervisor process for egtm_worker.'],['fun','egtm','egtm:call/1','Intrinsic call to external routine (MUMPS: $$@Pgm@'],['fun','egtm','egtm:call/1','Equivalent to call(Gvn, []).'],['fun','egtm','egtm:call_fast_order/2','XXX: Alternative egtm:order () experiment.'],['fun','egtm','egtm:data/1','Check if the subtree of global variable  contains'],['fun','egtm','egtm:data/1','data (Gvn, []).'],['fun','egtm','egtm:do/1','Extrinsic call to external routine (MUMPS: Do @Pgm'],['fun','egtm','egtm:do/1','Equivalent to do(Gvn, []).'],['fun','egtm','egtm:fast_order/2','XXX: Alternative egtm:order () experiment.'],['fun','egtm','egtm:get/1','Get value of specified node (MUMPS: $Get(@Gvn@(Sub'],['fun','egtm','egtm:get/1','Equivalent to get(Gvn, []).'],['fun','egtm','egtm:getp/1','Equivalent to getp(Gvn, Subs, Piece, Delim).'],['fun','egtm','egtm:getp/1','Get value of specific position in specified node '],['fun','egtm','egtm:getp/2','Equivalent to getp(Gvn, Subs, Piece, Delim).'],['fun','egtm','egtm:getp/3','Equivalent to getp(Gvn, Subs, Piece, Delim).'],['fun','egtm','egtm:gorder/0','Equivalent to gorder([]).'],['fun','egtm','egtm:gorder/1','A special case of egtm:order () where  we want or'],['fun','egtm','egtm:horolog/0','Return the current time in MUMPS $H-format (MUMPS:'],['fun','egtm','egtm:iget/1','Return a value of intrinsic (system) variable.'],['fun','egtm','egtm:iget/1','Equivalent to iget(VarName).'],['fun','egtm','egtm:job/0','Return process ID of the GT.M worker job (MUMPS: $'],['fun','egtm','egtm:kill/1','Kill specified node including all its  parents (M'],['fun','egtm','egtm:kill/1','Equivalent to kill(Gvn, []).'],['fun','egtm','egtm:lock/1','Lock a subtree of global variable (MUMPS: Lock +@G'],['fun','egtm','egtm:lock/1','Equivalent to lock(Gvn, []).'],['fun','egtm','egtm:merge/1','Merge/copy one sparse array to another one  (MUMP'],['fun','egtm','egtm:merge/2','Equivalent to merge(SrcGvn, [], DstGvn, []).'],['fun','egtm','egtm:order/0','Equivalent to gorder().'],['fun','egtm','egtm:order/1','Obtain next/previous key from global name Gvn  an'],['fun','egtm','egtm:order/1','Equivalent to gorder(Gvn).'],['fun','egtm','egtm:order/2','Equivalent to order(Gvn, Subs, forward).'],['fun','egtm','egtm:perform/2','Perform EGTM operation.'],['fun','egtm','egtm:set/1','Set value of specified node (MUMPS Set @Gvn@(Subs)'],['fun','egtm','egtm:set/2','Equivalent to set(Gvn, Subs, Val).'],['fun','egtm','egtm:setp/1','Set value of specific position in specified node '],['fun','egtm','egtm:setp/2','Equivalent to setp(Gvn, Subs, Piece, Delim, Val).'],['fun','egtm','egtm:setp/3','Equivalent to setp(Gvn, Subs, Piece, Delim, Val).'],['fun','egtm','egtm:setp/4','Equivalent to setp(Gvn, Subs, Piece, Delim, Val).'],['fun','egtm','egtm:start/0','Start EGTM application.'],['fun','egtm','egtm:start/2','application:start callback, do not use directly!'],['fun','egtm','egtm:stop/0','Stop EGTM application.'],['fun','egtm','egtm:stop/1','application:stop callback, do not use directly!'],['fun','egtm','egtm:tcommit/0','Commit the current transaction level and  clear t'],['fun','egtm','egtm:trollback/0','Roll back the current transaction level  and clea'],['fun','egtm','egtm:tstart/0','Equivalent to tstart("").'],['fun','egtm','egtm:tstart/1','Start a new level of transaction  (MUMPS: TStart '],['fun','egtm','egtm:unlock/1','Unlock a subtree of global variable (MUMPS: Lock -'],['fun','egtm','egtm:unlock/1','Equivalent to unlock(Gvn, []).'],['fun','egtm','egtm:xecute/1','Evaluate MUMPS code (MUMPS: Xecute Mcode).'],['fun','egtm','egtm:xecute_fast_order/2','XXX: Alternative egtm:order () experiment.'],['fun','egtm','egtm:zkill/1','ZKILL/ZWITHDRAW operation kills only specified  n'],['fun','egtm','egtm:zkill/1','Equivalent to zkill(Gvn, []).'],['fun','egtm','egtm:zversion/0','Return GT.M version information (MUMPS: $Zversion)'],['fun','egtm','egtm_admin:backup/1','Make a ZWR-backup using MUPIP EXTRACT.'],['fun','egtm','egtm_admin:initdb/0','Initialize database using $PROJECT/priv/initdb'],['fun','egtm','egtm_admin:restore/1','Restore a ZWR-backup file using MUPIP LOAD.'],['fun','egtm','egtm_config:param/1','Get a config value from priv/egtm.conf.'],['fun','egtm','egtm_env:get_priv_dir/1',[]],['fun','egtm','egtm_env:init/0',[]],['fun','egtm','egtm_env:syscmd/1',[]],['fun','egtm','egtm_env:syscmd/2',[]],['fun','egtm','egtm_metrics:submit/2','Submit a code to be metered.'],['fun','egtm','egtm_pool:code_change/3',[]],['fun','egtm','egtm_pool:handle_call/3',[]],['fun','egtm','egtm_pool:handle_cast/2',[]],['fun','egtm','egtm_pool:handle_info/2','Some of our nodes has died, lets start it back!'],['fun','egtm','egtm_pool:init/1',[]],['fun','egtm','egtm_pool:perform/2','Call a core-EGTM operation Operation with  argume'],['fun','egtm','egtm_pool:start_link/0',[]],['fun','egtm','egtm_pool:terminate/2',[]],['fun','egtm','egtm_pool_sup:init/1',[]],['fun','egtm','egtm_pool_sup:start_link/0',[]],['fun','egtm','egtm_string:decode/1','Decode string using function referred in config.'],['fun','egtm','egtm_string:encode/1','Encode string using function referred in config.'],['fun','egtm','egtm_string:erl2utf/1','Convertor from Erlangs native encoding to Unicode'],['fun','egtm','egtm_string:utf2erl/1','Convertor from Unicode to Erlangs native encoding'],['fun','egtm','egtm_util:foreach/1','Equivalent to foreach(Gvn, Subs).'],['fun','egtm','egtm_util:foreach/1','Foreach implementation based on egtm:order()  and'],['fun','egtm','egtm_util:gforeach/0','Equivalent to gforeach(PrintAllGvnsFunction).'],['fun','egtm','egtm_util:gforeach/1','Global Variable Name Foreach.'],['fun','egtm','egtm_util:lock/1','Equivalent to lock(Gvn, Subs, Fun).'],['fun','egtm','egtm_util:lock/1','Run a function Fun within a lock-block  on Gvn gl'],['fun','egtm','egtm_util:longstring_get/1','Equivalent to longstring_set(Gvn, Subs, Text).'],['fun','egtm','egtm_util:longstring_kill/1','Equivalent to longstring_set(Gvn, Subs, []).'],['fun','egtm','egtm_util:longstring_set/1','Equivalent to longstring_set(Gvn, Subs, Text, 4000'],['fun','egtm','egtm_util:longstring_set/1','Longstring get/set support.'],['fun','egtm','egtm_util:set_term/1','Sets terminal characteristics.'],['fun','egtm','egtm_util:stringify/1','Convert any datatype to string.'],['fun','egtm','egtm_util:transaction/1','Transaction processing (TP) support.'],['fun','egtm','egtm_util_fmt:escape_key/2','Escape a single subscript key.'],['fun','egtm','egtm_util_fmt:escape_val/1','Escape a value to be stored in GT.M.'],['fun','egtm','egtm_util_fmt:format_gvn/2','Format a MUMPS global name.'],['fun','egtm','egtm_util_fmt:format_gvn/3','A bit more flexible variant of format_gvn/2.'],['fun','egtm','egtm_util_fmt:format_pgm_call/2','Format a routine/program call command.'],['fun','egtm','egtm_util_fmt:mumps_escape/1','Simple quote-escaping for values passed to MUMPS.'],['fun','egtm','egtm_util_fmt:mumps_unescape/1','Simple quote-unescaping of MUMPS values.'],['fun','egtm','egtm_util_fmt:term2str/1','Convert an Erlang term to GT.M-friendly string.'],['fun','egtm','egtm_util_fmt:unescape_key/1','Unescape a single subscript key.'],['fun','egtm','egtm_util_fmt:unescape_val/1','Unescape a value from GT.M backend.'],['fun','egtm','egtm_worker:code_change/3',[]],['fun','egtm','egtm_worker:handle_call/3',[]],['fun','egtm','egtm_worker:handle_cast/2',[]],['fun','egtm','egtm_worker:handle_info/2',[]],['fun','egtm','egtm_worker:init/1',[]],['fun','egtm','egtm_worker:perform/2','Call a core-EGTM operation Operation with  argume'],['fun','egtm','egtm_worker:start_link/0',[]],['fun','egtm','egtm_worker:terminate/2',[]],['fun','egtm','egtm_worker_sup:init/1',[]],['fun','egtm','egtm_worker_sup:start_link/0',[]]];