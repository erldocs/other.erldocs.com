var index = [['app','openacd','openacd','[application]'],['mod','openacd','agent_auth',[]],['mod','openacd','agent_auth_ets',[]],['mod','openacd','agent_auth_multi','Connection to the local authenication cache and in'],['mod','openacd','call_queue_config','The helper module to config the call_queues, skill'],['mod','openacd','call_queue_config_ets',[]],['mod','openacd','cpx_agent_connection','?? at the beginning of thier documentation conform'],['mod','openacd','cpx_agent_event',[]],['mod','openacd','cpx_agent_rpc',[]],['mod','openacd','cpx_conn_state',[]],['mod','openacd','cpx_ctl',[]],['mod','openacd','cpx_dummy_pid',[]],['mod','openacd','cpx_endpoint',[]],['mod','openacd','cpx_global',[]],['mod','openacd','cpx_hooks','Manager for plugins to OpenACD.'],['mod','openacd','cpx_json_util',[]],['mod','openacd','cpx_media_dummy',[]],['mod','openacd','cpx_queue_util',[]],['mod','openacd','cpx_runner',[]],['mod','openacd','gen_media_playable',[]],['mod','openacd','oacd_ctl',[]],['mod','openacd','openacd',[]],['mod','openacd','util','A utility module containing several handy function'],['fun','openacd','agent_auth:auth/1','Take the plaintext username and password and attem'],['fun','openacd','agent_auth:get_agent/1','Gets #agent_auth{} associated with string() Login.'],['fun','openacd','agent_auth:get_agent_by_id/1','Get an agent by id.'],['fun','openacd','agent_auth:get_agent_by_login/1','Get an agent by login.'],['fun','openacd','agent_auth:get_agents_by_profile/1','Gets all the agents associated with string() Profi'],['fun','openacd','agent_auth:get_default_profile/0','Gets the profile string() Name'],['fun','openacd','agent_auth:get_profile/1','Gets the profile string() Name'],['fun','openacd','agent_auth:get_profiles/0','Return all agent profiles.'],['fun','openacd','agent_auth:get_release/1','Get all #release_opt.'],['fun','openacd','agent_auth:get_releases/0','Get all #release_opt.'],['fun','openacd','agent_auth:start/0',[]],['fun','openacd','agent_auth_ets:auth/2',[]],['fun','openacd','agent_auth_ets:get_agent_by_id/1',[]],['fun','openacd','agent_auth_ets:get_agent_by_login/1',[]],['fun','openacd','agent_auth_ets:get_agents_by_profile/1',[]],['fun','openacd','agent_auth_ets:get_default_profile/0',[]],['fun','openacd','agent_auth_ets:get_profile/1',[]],['fun','openacd','agent_auth_ets:get_profiles/0',[]],['fun','openacd','agent_auth_ets:get_release/1',[]],['fun','openacd','agent_auth_ets:get_releases/0',[]],['fun','openacd','agent_auth_ets:setup/1',[]],['fun','openacd','agent_auth_ets:start/0',[]],['fun','openacd','agent_auth_multi:add_agent/1','adds a user to the local cache.'],['fun','openacd','agent_auth_multi:add_agent/1','adds a user to the local cache bypassing the integ'],['fun','openacd','agent_auth_multi:add_agent/1','adds a user to the local cache bypassing the integ'],['fun','openacd','agent_auth_multi:auth/1','Take the plaintext username and password and attem'],['fun','openacd','agent_auth_multi:destroy/1','Removes the passed user with login of Username fro'],['fun','openacd','agent_auth_multi:destroy/2','Destory either by id or login.'],['fun','openacd','agent_auth_multi:destroy_profile/1','Remove the profile string() Name.'],['fun','openacd','agent_auth_multi:destroy_release/1','Remove the release option string() Label from the '],['fun','openacd','agent_auth_multi:destroy_release/2','Remove the release option with the key (id, label)'],['fun','openacd','agent_auth_multi:drop_endpoint/2',[]],['fun','openacd','agent_auth_multi:drop_extended_prop/2',[]],['fun','openacd','agent_auth_multi:encode_password/1',[]],['fun','openacd','agent_auth_multi:get_agent/1','Gets #agent_auth{} associated with string() Login.'],['fun','openacd','agent_auth_multi:get_agent/2','Get an agent whos Key is Value.'],['fun','openacd','agent_auth_multi:get_agents/0','Gets All the agents.'],['fun','openacd','agent_auth_multi:get_agents/1','Gets all the agents associated with string() Profi'],['fun','openacd','agent_auth_multi:get_extended_prop/2','Get an extened property either from the database o'],['fun','openacd','agent_auth_multi:get_profile/1','Gets the profile string() Name'],['fun','openacd','agent_auth_multi:get_profiles/0','Return all agent profiles.'],['fun','openacd','agent_auth_multi:get_releases/0','Get all #release_opt.'],['fun','openacd','agent_auth_multi:new_profile/1','Create a new agent profile string() Name with [ato'],['fun','openacd','agent_auth_multi:new_profile/1','Create a new agent profile.'],['fun','openacd','agent_auth_multi:new_release/1','Add #release_opt{} Rec to the database.'],['fun','openacd','agent_auth_multi:set_agent/1','Update the agent string() Oldlogin with a new pass'],['fun','openacd','agent_auth_multi:set_agent/1','Update the agent string() Oldlogin with a new pass'],['fun','openacd','agent_auth_multi:set_agent/1','Sets the agent string() Oldlogin with new data in '],['fun','openacd','agent_auth_multi:set_agent/1','Update the agent string() Oldlogin without changin'],['fun','openacd','agent_auth_multi:set_endpoint/2',[]],['fun','openacd','agent_auth_multi:set_extended_prop/2',[]],['fun','openacd','agent_auth_multi:set_profile/1','Update the profile string() Oldname to the given r'],['fun','openacd','agent_auth_multi:set_profile/1',[]],['fun','openacd','agent_auth_multi:start/0',[]],['fun','openacd','agent_auth_multi:update_release/1','Update the release option string() Label to #relea'],['fun','openacd','call_queue_config:get_client/1','Get the #client{} associated with the id Id'],['fun','openacd','call_queue_config:get_client_by_id/1',[]],['fun','openacd','call_queue_config:get_client_by_name/1',[]],['fun','openacd','call_queue_config:get_clients/0',[]],['fun','openacd','call_queue_config:get_default_client/0',[]],['fun','openacd','call_queue_config:get_default_queue_group/0',[]],['fun','openacd','call_queue_config:get_merged_queue/1','Get the configureation for the passed string() Que'],['fun','openacd','call_queue_config:get_queue/1','Get the configuration for the passed string() Queu'],['fun','openacd','call_queue_config:get_queue_group/1','get a #queue_group{} named Name'],['fun','openacd','call_queue_config:get_queue_groups/0','Gets all #queue_group{} in a list sorted by group.'],['fun','openacd','call_queue_config:get_queues/0','Get all the queue configurations ([#call_queue{}])'],['fun','openacd','call_queue_config:get_queues_by_group/1','Get all the queues that are members of the specifi'],['fun','openacd','call_queue_config:get_skill/1','get a single #skill_rec{}'],['fun','openacd','call_queue_config:get_skill_by_key/1',[]],['fun','openacd','call_queue_config:get_skill_by_name/1',[]],['fun','openacd','call_queue_config:get_skill_key/1','Check if the given string() Skillname exists.'],['fun','openacd','call_queue_config:get_skills/0','Return [#skill_rec{}] in the system sorted by grou'],['fun','openacd','call_queue_config:get_skills_by_group/1','Returns [#skill_rec{}] in the system which have a '],['fun','openacd','call_queue_config:start/0',[]],['fun','openacd','call_queue_config_ets:get_client_by_id/1',[]],['fun','openacd','call_queue_config_ets:get_client_by_name/1',[]],['fun','openacd','call_queue_config_ets:get_clients/0',[]],['fun','openacd','call_queue_config_ets:get_default_client/0',[]],['fun','openacd','call_queue_config_ets:get_default_queue_group/0',[]],['fun','openacd','call_queue_config_ets:get_merged_queue/1',[]],['fun','openacd','call_queue_config_ets:get_queue/1',[]],['fun','openacd','call_queue_config_ets:get_queue_group/1',[]],['fun','openacd','call_queue_config_ets:get_queue_groups/0',[]],['fun','openacd','call_queue_config_ets:get_queues/0',[]],['fun','openacd','call_queue_config_ets:get_queues_by_group/1',[]],['fun','openacd','call_queue_config_ets:get_skill_by_key/1',[]],['fun','openacd','call_queue_config_ets:get_skill_by_name/1',[]],['fun','openacd','call_queue_config_ets:get_skill_key/1',[]],['fun','openacd','call_queue_config_ets:get_skills/0',[]],['fun','openacd','call_queue_config_ets:get_skills_by_group/1',[]],['fun','openacd','call_queue_config_ets:load_clients/1',[]],['fun','openacd','call_queue_config_ets:load_queues/1',[]],['fun','openacd','call_queue_config_ets:load_skills/1',[]],['fun','openacd','call_queue_config_ets:start/0',[]],['fun','openacd','cpx_agent_connection:encode_cast/1','When the connection gets a cast it cannot handle, '],['fun','openacd','cpx_agent_connection:handle_json/2',[]],['fun','openacd','cpx_agent_connection:handle_json/3',[]],['fun','openacd','cpx_agent_connection:init/1','After the connection has been started, this should'],['fun','openacd','cpx_agent_connection:login/1','Attempt a log-in and initialize the state if succe'],['fun','openacd','cpx_agent_connection:start/1','Start a given agent by login.'],['fun','openacd','cpx_agent_event:agent_channel_init/1','Create a handler specifically for the given agent '],['fun','openacd','cpx_agent_event:agent_init/1','Create a handler specifically for the given agent.'],['fun','openacd','cpx_agent_event:change_agent_channel/1','Alert the appropriate handler that an agent channe'],['fun','openacd','cpx_agent_event:change_profile/3','An agent has changed profile.'],['fun','openacd','cpx_agent_event:change_release_state/1','An agent has changed state (idle &lt;-&gt; release'],['fun','openacd','cpx_agent_event:start/0','starts the agent event server.'],['fun','openacd','cpx_agent_event:start_link/0','Starts teh agent event server linked.'],['fun','openacd','cpx_agent_event:stop/0','Stops the agent event server.'],['fun','openacd','cpx_agent_rpc:end_wrapup/2',[]],['fun','openacd','cpx_agent_rpc:get_all_skills/1',[]],['fun','openacd','cpx_agent_rpc:get_clients/1',[]],['fun','openacd','cpx_agent_rpc:get_connection_info/1',[]],['fun','openacd','cpx_agent_rpc:get_node/1',[]],['fun','openacd','cpx_agent_rpc:get_profile/1',[]],['fun','openacd','cpx_agent_rpc:get_queues/1',[]],['fun','openacd','cpx_agent_rpc:get_release_codes/1',[]],['fun','openacd','cpx_agent_rpc:get_skills/1',[]],['fun','openacd','cpx_agent_rpc:go_available/1',[]],['fun','openacd','cpx_agent_rpc:go_released/1',[]],['fun','openacd','cpx_agent_rpc:go_released/2',[]],['fun','openacd','cpx_agent_rpc:hangup/2',[]],['fun','openacd','cpx_agent_rpc:hold_channel/1',[]],['fun','openacd','cpx_agent_rpc:logout/1',[]],['fun','openacd','cpx_agent_rpc:pause/1',[]],['fun','openacd','cpx_agent_rpc:ping/1',[]],['fun','openacd','cpx_agent_rpc:play/1',[]],['fun','openacd','cpx_agent_rpc:play/1',[]],['fun','openacd','cpx_agent_rpc:sleep/1',[]],['fun','openacd','cpx_agent_rpc:transfer_outband/3',[]],['fun','openacd','cpx_agent_rpc:transfer_to_agent/3',[]],['fun','openacd','cpx_agent_rpc:transfer_to_queue/4',[]],['fun','openacd','cpx_agent_rpc:unhold_channel/1',[]],['fun','openacd','cpx_conn_state:get/2',[]],['fun','openacd','cpx_conn_state:get_channel_pid_by_id/1',[]],['fun','openacd','cpx_conn_state:get_id_by_channel_pid/1',[]],['fun','openacd','cpx_conn_state:get_prop/1',[]],['fun','openacd','cpx_conn_state:new/1',[]],['fun','openacd','cpx_conn_state:remove_channel/1',[]],['fun','openacd','cpx_conn_state:set/3',[]],['fun','openacd','cpx_conn_state:set_prop/1',[]],['fun','openacd','cpx_conn_state:store_channel/1',[]],['fun','openacd','cpx_conn_state:unset_prop/1',[]],['fun','openacd','cpx_ctl:process/1',[]],['fun','openacd','cpx_dummy_pid:code_change/3',[]],['fun','openacd','cpx_dummy_pid:do/2',[]],['fun','openacd','cpx_dummy_pid:do_async/2',[]],['fun','openacd','cpx_dummy_pid:handle_call/3',[]],['fun','openacd','cpx_dummy_pid:handle_cast/2',[]],['fun','openacd','cpx_dummy_pid:handle_info/2',[]],['fun','openacd','cpx_dummy_pid:has_received/2',[]],['fun','openacd','cpx_dummy_pid:init/1',[]],['fun','openacd','cpx_dummy_pid:start/0',[]],['fun','openacd','cpx_dummy_pid:start_link/0',[]],['fun','openacd','cpx_dummy_pid:stop/1',[]],['fun','openacd','cpx_dummy_pid:stop/2',[]],['fun','openacd','cpx_dummy_pid:terminate/2',[]],['fun','openacd','cpx_dummy_pid:watch_for/2',[]],['fun','openacd','cpx_endpoint:get_pid/1',[]],['fun','openacd','cpx_endpoint:hangup/1',[]],['fun','openacd','cpx_endpoint:prering/1',[]],['fun','openacd','cpx_endpoint:ringout/1',[]],['fun','openacd','cpx_endpoint:start/2',[]],['fun','openacd','cpx_endpoint:stop/1',[]],['fun','openacd','cpx_global:append/2',[]],['fun','openacd','cpx_global:get/1',[]],['fun','openacd','cpx_global:get/2',[]],['fun','openacd','cpx_global:new/0',[]],['fun','openacd','cpx_global:set/2',[]],['fun','openacd','cpx_hooks:async_trigger_hooks/1','Trigger hooks asynchronsouly.'],['fun','openacd','cpx_hooks:async_trigger_hooks/1','Trigger hooks asynchronously, thus ignoring the re'],['fun','openacd','cpx_hooks:drop_hook/1','Remove a hook from being triggered.'],['fun','openacd','cpx_hooks:drop_hooks/1',[]],['fun','openacd','cpx_hooks:get_hooks/1','Get all hooks to the trigger event Hook.'],['fun','openacd','cpx_hooks:set_hook/1','Add a new hook to the trigger event Hook.'],['fun','openacd','cpx_hooks:set_hook/1','Add a new hook to the trigger event Hook.'],['fun','openacd','cpx_hooks:start_link/0','Creates the hooks ets table.'],['fun','openacd','cpx_hooks:stop/0','Stop the hooks module, thus removing the ets table'],['fun','openacd','cpx_hooks:trigger_hooks/1','Begin calling the callbacks for trigger event Hook'],['fun','openacd','cpx_hooks:trigger_hooks/1','Begin calling the callbacks for trigger event Hook'],['fun','openacd','cpx_json_util:b2l/1',[]],['fun','openacd','cpx_json_util:enc_agent_state/2',[]],['fun','openacd','cpx_json_util:enc_skill_recs/1',[]],['fun','openacd','cpx_json_util:enc_skills/1',[]],['fun','openacd','cpx_json_util:enc_state_changes/1',[]],['fun','openacd','cpx_json_util:enc_url_vars/1',[]],['fun','openacd','cpx_json_util:l2b/1',[]],['fun','openacd','cpx_json_util:nob/1',[]],['fun','openacd','cpx_json_util:noi/1',[]],['fun','openacd','cpx_json_util:nol/1',[]],['fun','openacd','cpx_media_dummy:code_change/6',[]],['fun','openacd','cpx_media_dummy:from_json_opts/1',[]],['fun','openacd','cpx_media_dummy:handle_agent_transfer/6',[]],['fun','openacd','cpx_media_dummy:handle_answer/5',[]],['fun','openacd','cpx_media_dummy:handle_call/6',[]],['fun','openacd','cpx_media_dummy:handle_cast/5',[]],['fun','openacd','cpx_media_dummy:handle_hold/2',[]],['fun','openacd','cpx_media_dummy:handle_info/5',[]],['fun','openacd','cpx_media_dummy:handle_pause/3',[]],['fun','openacd','cpx_media_dummy:handle_play/4',[]],['fun','openacd','cpx_media_dummy:handle_queue_transfer/5',[]],['fun','openacd','cpx_media_dummy:handle_ring/4',[]],['fun','openacd','cpx_media_dummy:handle_ring_stop/4',[]],['fun','openacd','cpx_media_dummy:handle_unhold/2',[]],['fun','openacd','cpx_media_dummy:handle_wrapup/5',[]],['fun','openacd','cpx_media_dummy:init/1',[]],['fun','openacd','cpx_media_dummy:prepare_endpoint/2',[]],['fun','openacd','cpx_media_dummy:start/0',[]],['fun','openacd','cpx_media_dummy:stop/1',[]],['fun','openacd','cpx_media_dummy:terminate/5',[]],['fun','openacd','cpx_queue_util:merge_queue_with_group/1',[]],['fun','openacd','cpx_queue_util:simple_get_merged_queue/1',[]],['fun','openacd','cpx_runner:run/0',[]],['fun','openacd','oacd_ctl:start/0',[]],['fun','openacd','openacd:start/0',[]],['fun','openacd','util:bin_to_hexstr/1','Converts a bin to a lowercase hexidecimal string.'],['fun','openacd','util:build_table/1','build the given mnesia table Tablename with Option'],['fun','openacd','util:c/0','Not useful in a production enviroment, but for a d'],['fun','openacd','util:c/1','A generic "do this on the command line and print t'],['fun','openacd','util:decrypt_password/1',[]],['fun','openacd','util:dict_find_by_value/1','Find the key(s) in the dictory by its value.'],['fun','openacd','util:distribution/1',[]],['fun','openacd','util:find_first_arc/1',[]],['fun','openacd','util:floor/1',[]],['fun','openacd','util:generate_salt/0',[]],['fun','openacd','util:get_certfile/0',[]],['fun','openacd','util:get_keyfile/0',[]],['fun','openacd','util:get_number/2','Generally only used in the dummy collection, the'],['fun','openacd','util:get_pubkey/0',[]],['fun','openacd','util:group_by/1',[]],['fun','openacd','util:group_by_with_key/1','groups a list into a list of lists where each subl'],['fun','openacd','util:hexstr_to_bin/1','Converts a hexidecimal string in any case to a bin'],['fun','openacd','util:http_datetime/0','Take erlang:now() and pipe it through http_datetim'],['fun','openacd','util:http_datetime/1','Take an erlang:now() format and turn it into somet'],['fun','openacd','util:list_contains_all/1','Check whether List contains all elements of Member'],['fun','openacd','util:list_index/1','Find the position of Needle (any()) in a list usin'],['fun','openacd','util:list_index/1','Find the position of Needle (any()) in a list.'],['fun','openacd','util:list_map_with_index/1','Apply the Fun(Index, Element) to each element of L'],['fun','openacd','util:merge_skill_lists/1','merge_skill_lists/2 with an optional whitelist of '],['fun','openacd','util:merge_skill_lists/1','Merges 2 skill lists using lists:umerge and then e'],['fun','openacd','util:now/0','For those times when {Macro, Sec, Micro} is too mu'],['fun','openacd','util:now/1',[]],['fun','openacd','util:now_ms/0',[]],['fun','openacd','util:now_ms/1',[]],['fun','openacd','util:priv_dir/0',[]],['fun','openacd','util:priv_dir/1',[]],['fun','openacd','util:reload/1','Does a code reload for the given module.'],['fun','openacd','util:reload/1','For those times when you dont need a code reload '],['fun','openacd','util:reload_all/0','Reloads code for all modules in the OpenACD path u'],['fun','openacd','util:reload_all/1','Reloads code for all modules using either the hard'],['fun','openacd','util:run_dir/0',[]],['fun','openacd','util:string_chomp/1','Remove any trailing newlines or carraige returns f'],['fun','openacd','util:string_interpolate/1',[]],['fun','openacd','util:string_split/2','Split String by Separator.'],['fun','openacd','util:string_split/2','Split String string by Separator into a list of st'],['fun','openacd','util:subtract_skill_lists/1','Returns all skills in [{atom(), string()} | atom()'],['fun','openacd','util:timemark/0',[]],['fun','openacd','util:timemark/1',[]],['fun','openacd','util:timemark/1',[]],['fun','openacd','util:timemark_clear/0',[]],['fun','openacd','util:timemark_clear/1',[]],['fun','openacd','util:to_erl_now/1',[]]];