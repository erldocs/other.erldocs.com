var index = [['app','gittest','gittest','[application]'],['mod','gittest','mochilogfile2','Write newline delimited log files, ensuring that i'],['mod','gittest','mochinum','Useful numeric algorithms for floats that cover so'],['mod','gittest','mochitemp','Create temporary files and directories.'],['mod','gittest','mochiutf8','Algorithm to convert any binary to a valid UTF-8 s'],['mod','gittest','mochiweb_app','Callbacks for the mochiweb application.'],['mod','gittest','mochiweb_charref','Converts HTML 4 charrefs and entities to codepoint'],['mod','gittest','mochiweb_cookies','HTTP Cookie parsing and generating (RFC 2109, RFC '],['mod','gittest','mochiweb_cover','Workarounds for various cover deficiencies.'],['mod','gittest','mochiweb_echo','Simple and stupid echo server to demo mochiweb_soc'],['mod','gittest','mochiweb_headers','Case preserving (but case insensitive) HTTP Header'],['mod','gittest','mochiweb_html','Loosely tokenizes and generates parse trees for HT'],['mod','gittest','mochiweb_http','HTTP server.'],['mod','gittest','mochiweb_ii5555','Utilities for dealing with IO devices (open files)'],['mod','gittest','mochiweb_io1111','Utilities for dealing with IO devices (open files)'],['mod','gittest','mochiweb_io2222','Utilities for dealing with IO devices (open files)'],['mod','gittest','mochiweb_io3333','Utilities for dealing with IO devices (open files)'],['mod','gittest','mochiweb_io4444','Utilities for dealing with IO devices (open files)'],['fun','gittest','mochilogfile2:close/1','Close the log file referenced by Handle.'],['fun','gittest','mochilogfile2:name/1','Return the path of the log file.'],['fun','gittest','mochilogfile2:open/1','Open the log file Name, creating or appending as n'],['fun','gittest','mochilogfile2:write/2','Write IoData to the log file referenced by Handle.'],['fun','gittest','mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','gittest','mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','gittest','mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','gittest','mochinum:int_pow/1',' Moderately efficient way to exponentiate integers'],['fun','gittest','mochitemp:gettempdir/0','Get a usable temporary directory using the first o'],['fun','gittest','mochitemp:mkdtemp/0',[]],['fun','gittest','mochitemp:mkdtemp/3',[]],['fun','gittest','mochitemp:rmtempdir/1',[]],['fun','gittest','mochiutf8:bytes_foldl/1',[]],['fun','gittest','mochiutf8:bytes_to_codepoints/1',[]],['fun','gittest','mochiutf8:codepoint_foldl/1',[]],['fun','gittest','mochiutf8:codepoint_to_bytes/1','Convert a unicode codepoint to UTF-8 bytes.'],['fun','gittest','mochiutf8:codepoints_to_bytes/1','Convert a list of codepoints to a UTF-8 binary.'],['fun','gittest','mochiutf8:len/1',[]],['fun','gittest','mochiutf8:read_codepoint/1',[]],['fun','gittest','mochiutf8:valid_utf8_bytes/1','Return only the bytes in B that represent valid UT'],['fun','gittest','mochiweb_app:start/2','application start callback for mochiweb.'],['fun','gittest','mochiweb_app:stop/1','application stop callback for mochiweb.'],['fun','gittest','mochiweb_charref:charref/1','Convert a decimal charref, hex charref, or html en'],['fun','gittest','mochiweb_cookies:cookie/1','Generate a Set-Cookie header field tuple.'],['fun','gittest','mochiweb_cookies:cookie/1','Short-hand for cookie(Key, Value, []).'],['fun','gittest','mochiweb_cookies:parse_cookie/1','Parse the contents of a Cookie header field, ignor'],['fun','gittest','mochiweb_cover:clause_lookup_table/1',[]],['fun','gittest','mochiweb_cover:clause_lookup_table/2',[]],['fun','gittest','mochiweb_cover:get_abstract_code/1',[]],['fun','gittest','mochiweb_cover:get_beam/1',[]],['fun','gittest','mochiweb_cover:get_clauses/2',[]],['fun','gittest','mochiweb_echo:loop/1',[]],['fun','gittest','mochiweb_echo:start/0',[]],['fun','gittest','mochiweb_echo:stop/0',[]],['fun','gittest','mochiweb_headers:default/1','Insert the pair into the headers if it does not al'],['fun','gittest','mochiweb_headers:default_from_list/1','Insert pairs into the headers for keys that do not'],['fun','gittest','mochiweb_headers:delete_any/1','Delete the header corresponding to key if it is pr'],['fun','gittest','mochiweb_headers:empty/0','Create an empty headers structure.'],['fun','gittest','mochiweb_headers:enter/1','Insert the pair into the headers, replacing any pr'],['fun','gittest','mochiweb_headers:enter_from_list/1','Insert pairs into the headers, replace any values '],['fun','gittest','mochiweb_headers:from_binary/1','Transforms a raw HTTP header into a mochiweb heade'],['fun','gittest','mochiweb_headers:from_list/1','Construct a headers() from the given list.'],['fun','gittest','mochiweb_headers:get_primary_value/1','Return the value of the given header up to the fir'],['fun','gittest','mochiweb_headers:get_value/1','Return the value of the given header using a case '],['fun','gittest','mochiweb_headers:insert/1','Insert the pair into the headers, merging with any'],['fun','gittest','mochiweb_headers:lookup/1','Return the case preserved key and value for the gi'],['fun','gittest','mochiweb_headers:make/1','Construct a headers() from the given list.'],['fun','gittest','mochiweb_headers:to_list/1','Return the contents of the headers.'],['fun','gittest','mochiweb_html:escape/1','Escape a string such that its safe for HTML (amp;'],['fun','gittest','mochiweb_html:escape_attr/1','Escape a string such that its safe for HTML attrs'],['fun','gittest','mochiweb_html:parse/1','tokenize and then transform the token stream into '],['fun','gittest','mochiweb_html:parse_tokens/1','Transform the output of tokens(Doc) into a HTML tr'],['fun','gittest','mochiweb_html:to_html/1','Convert a list of html_token() to a HTML document.'],['fun','gittest','mochiweb_html:to_tokens/1','Convert a html_node() tree to a list of tokens.'],['fun','gittest','mochiweb_html:tokens/1','Transform the input UTF-8 HTML into a token stream'],['fun','gittest','mochiweb_http:after_response/2',[]],['fun','gittest','mochiweb_http:default_body/1',[]],['fun','gittest','mochiweb_http:loop/2',[]],['fun','gittest','mochiweb_http:parse_range_request/1',[]],['fun','gittest','mochiweb_http:range_skip_length/2',[]],['fun','gittest','mochiweb_http:reentry/1',[]],['fun','gittest','mochiweb_http:start/0',[]],['fun','gittest','mochiweb_http:start/1','Start a mochiweb server.'],['fun','gittest','mochiweb_http:stop/0',[]],['fun','gittest','mochiweb_http:stop/1',[]],['fun','gittest','mochiweb_ii5555:iodevice_foldl/3',[]],['fun','gittest','mochiweb_ii5555:iodevice_foldl/4',[]],['fun','gittest','mochiweb_ii5555:iodevice_size/1',[]],['fun','gittest','mochiweb_ii5555:iodevice_stream/2',[]],['fun','gittest','mochiweb_ii5555:iodevice_stream/3',[]],['fun','gittest','mochiweb_io1111:iodevice_foldl/3',[]],['fun','gittest','mochiweb_io1111:iodevice_foldl/4',[]],['fun','gittest','mochiweb_io1111:iodevice_size/1',[]],['fun','gittest','mochiweb_io1111:iodevice_stream/2',[]],['fun','gittest','mochiweb_io1111:iodevice_stream/3',[]],['fun','gittest','mochiweb_io2222:iodevice_foldl/3',[]],['fun','gittest','mochiweb_io2222:iodevice_foldl/4',[]],['fun','gittest','mochiweb_io2222:iodevice_size/1',[]],['fun','gittest','mochiweb_io2222:iodevice_stream/2',[]],['fun','gittest','mochiweb_io2222:iodevice_stream/3',[]],['fun','gittest','mochiweb_io3333:iodevice_foldl/3',[]],['fun','gittest','mochiweb_io3333:iodevice_foldl/4',[]],['fun','gittest','mochiweb_io3333:iodevice_size/1',[]],['fun','gittest','mochiweb_io3333:iodevice_stream/2',[]],['fun','gittest','mochiweb_io3333:iodevice_stream/3',[]],['fun','gittest','mochiweb_io4444:iodevice_foldl/3',[]],['fun','gittest','mochiweb_io4444:iodevice_foldl/4',[]],['fun','gittest','mochiweb_io4444:iodevice_size/1',[]],['fun','gittest','mochiweb_io4444:iodevice_stream/2',[]],['fun','gittest','mochiweb_io4444:iodevice_stream/3',[]]];