var index = [['app','hackney','hackney','[application]'],['mod','hackney','hackney_app',[]],['mod','hackney','hackney_connect',[]],['mod','hackney','hackney_deps',[]],['mod','hackney','hackney_http_connect',[]],['mod','hackney','hackney_idna',[]],['mod','hackney','hackney_manager',[]],['mod','hackney','hackney_pool','pool of sockets connections.'],['mod','hackney','hackney_pool_handler',[]],['mod','hackney','hackney_response','module handling the response.'],['mod','hackney','hackney_socks5','socks 5 transport.'],['mod','hackney','hackney_ssl_transport',[]],['mod','hackney','hackney_stream',[]],['mod','hackney','hackney_sup',[]],['mod','hackney','hackney_tcp_transport',[]],['mod','hackney','hackney_util',[]],['fun','hackney','hackney_app:ensure_deps_started/0',[]],['fun','hackney','hackney_app:get_app_env/1','return a config value.'],['fun','hackney','hackney_app:get_app_env/2','return a config value.'],['fun','hackney','hackney_app:start/2',[]],['fun','hackney','hackney_app:stop/1',[]],['fun','hackney','hackney_connect:close/1','close the client.'],['fun','hackney','hackney_connect:connect/3',[]],['fun','hackney','hackney_connect:connect/4',[]],['fun','hackney','hackney_connect:connect/5',[]],['fun','hackney','hackney_connect:create_connection/4','create a connection and return a client state.'],['fun','hackney','hackney_connect:create_connection/5',[]],['fun','hackney','hackney_connect:is_pool/1','get current pool pid or name used by a client if n'],['fun','hackney','hackney_connect:maybe_connect/1','connect a socket and create a client state.'],['fun','hackney','hackney_connect:reconnect/4',[]],['fun','hackney','hackney_connect:set_sockopts/2','add set sockets options in the client.'],['fun','hackney','hackney_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','hackney','hackney_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','hackney','hackney_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','hackney','hackney_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','hackney','hackney_deps:get_base_dir/1','Return the application directory for Module.'],['fun','hackney','hackney_deps:local_path/1','Return an application-relative directory for this '],['fun','hackney','hackney_deps:local_path/1','Return an application-relative directory from Modu'],['fun','hackney','hackney_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','hackney','hackney_http_connect:close/1','Close a socks5 socket.'],['fun','hackney','hackney_http_connect:connect/3',[]],['fun','hackney','hackney_http_connect:connect/4',[]],['fun','hackney','hackney_http_connect:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_http_connect:messages/1','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_http_connect:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_http_connect:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_http_connect:recv/2',[]],['fun','hackney','hackney_http_connect:send/1','Send a packet on a socket.'],['fun','hackney','hackney_http_connect:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_http_connect:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_idna:to_ascii/1','encode a IDNA domain to ascii.'],['fun','hackney','hackney_manager:async_response_pid/1',[]],['fun','hackney','hackney_manager:cancel_request/1',[]],['fun','hackney','hackney_manager:close_request/1',[]],['fun','hackney','hackney_manager:code_change/3',[]],['fun','hackney','hackney_manager:controlling_process/2',[]],['fun','hackney','hackney_manager:get_state/1',[]],['fun','hackney','hackney_manager:get_state/2',[]],['fun','hackney','hackney_manager:handle_call/3',[]],['fun','hackney','hackney_manager:handle_cast/2',[]],['fun','hackney','hackney_manager:handle_error/1',[]],['fun','hackney','hackney_manager:handle_info/2',[]],['fun','hackney','hackney_manager:init/1',[]],['fun','hackney','hackney_manager:new_request/1',[]],['fun','hackney','hackney_manager:start_async_response/1',[]],['fun','hackney','hackney_manager:start_link/0',[]],['fun','hackney','hackney_manager:stop_async_response/1',[]],['fun','hackney','hackney_manager:take_control/2',[]],['fun','hackney','hackney_manager:terminate/2',[]],['fun','hackney','hackney_manager:update_state/1',[]],['fun','hackney','hackney_manager:update_state/2',[]],['fun','hackney','hackney_manager:with_async_response_pid/2',[]],['fun','hackney','hackney_pool:checkin/2','release a socket in the pool.'],['fun','hackney','hackney_pool:checkout/4','fetch a socket from the pool.'],['fun','hackney','hackney_pool:child_spec/2','return a child spec suitable for embeding your poo'],['fun','hackney','hackney_pool:code_change/3',[]],['fun','hackney','hackney_pool:count/1','get the number of connections in the pool.'],['fun','hackney','hackney_pool:count/2','get the number of connections in the pool for {Hos'],['fun','hackney','hackney_pool:handle_call/3',[]],['fun','hackney','hackney_pool:handle_cast/2',[]],['fun','hackney','hackney_pool:handle_info/2',[]],['fun','hackney','hackney_pool:init/1',[]],['fun','hackney','hackney_pool:max_connections/1','get max pool size.'],['fun','hackney','hackney_pool:set_max_connections/2','change the pool size.'],['fun','hackney','hackney_pool:set_timeout/2','change the connection timeout.'],['fun','hackney','hackney_pool:start/0',[]],['fun','hackney','hackney_pool:start_link/2',[]],['fun','hackney','hackney_pool:start_pool/2','start a pool.'],['fun','hackney','hackney_pool:stop_pool/1','stop a pool.'],['fun','hackney','hackney_pool:terminate/2',[]],['fun','hackney','hackney_pool:timeout/1','get timeout.'],['fun','hackney','hackney_response:body/1','Return the full body sent with the request as long'],['fun','hackney','hackney_response:body/1','Return the full body sent with the request.'],['fun','hackney','hackney_response:close/1',[]],['fun','hackney','hackney_response:expect_response/1','handle Expect header.'],['fun','hackney','hackney_response:maybe_close/1',[]],['fun','hackney','hackney_response:skip_body/1',[]],['fun','hackney','hackney_response:skip_multipart/1','Skip a part returned by the multipart parser.'],['fun','hackney','hackney_response:start_response/1','Start the response It parse the request lines and '],['fun','hackney','hackney_response:stream_body/1',[]],['fun','hackney','hackney_response:stream_multipart/1','stream a multipart response.'],['fun','hackney','hackney_socks5:close/1','Close a socks5 socket.'],['fun','hackney','hackney_socks5:connect/3',[]],['fun','hackney','hackney_socks5:connect/4',[]],['fun','hackney','hackney_socks5:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_socks5:messages/1','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_socks5:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_socks5:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_socks5:recv/2',[]],['fun','hackney','hackney_socks5:send/1','Send a packet on a socket.'],['fun','hackney','hackney_socks5:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_socks5:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_ssl_transport:close/1','Close a TCP socket.'],['fun','hackney','hackney_ssl_transport:connect/3',[]],['fun','hackney','hackney_ssl_transport:connect/4',[]],['fun','hackney','hackney_ssl_transport:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_ssl_transport:messages/1','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_ssl_transport:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_ssl_transport:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_ssl_transport:recv/2',[]],['fun','hackney','hackney_ssl_transport:send/1','Send a packet on a socket.'],['fun','hackney','hackney_ssl_transport:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_ssl_transport:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_stream:async_recv/5',[]],['fun','hackney','hackney_stream:init/4',[]],['fun','hackney','hackney_stream:maybe_continue/4',[]],['fun','hackney','hackney_stream:start_link/3',[]],['fun','hackney','hackney_stream:system_code_change/4',[]],['fun','hackney','hackney_stream:system_continue/3',[]],['fun','hackney','hackney_stream:system_terminate/1',[]],['fun','hackney','hackney_sup:init/1',[]],['fun','hackney','hackney_sup:start_link/0',[]],['fun','hackney','hackney_tcp_transport:close/1','Close a TCP socket.'],['fun','hackney','hackney_tcp_transport:connect/3',[]],['fun','hackney','hackney_tcp_transport:connect/4',[]],['fun','hackney','hackney_tcp_transport:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_tcp_transport:messages/1','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_tcp_transport:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_tcp_transport:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_tcp_transport:recv/2',[]],['fun','hackney','hackney_tcp_transport:send/1','Send a packet on a socket.'],['fun','hackney','hackney_tcp_transport:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_tcp_transport:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_util:content_type/1',[]],['fun','hackney','hackney_util:is_ipv6/1',[]],['fun','hackney','hackney_util:maybe_apply_defaults/2',[]],['fun','hackney','hackney_util:require/1','Start the given applications if they were not alre']];