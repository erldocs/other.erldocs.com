 :: Extracting meta information
$ infinity  `git ls-remote --heads --tags 'https://github.com/rprimus/vim-snipmate-erlang'  2>&1`
>>> [repo] 1 branches, 2 tags
WTF {ok,{{"HTTP/1.1",200,"OK"},
         [{"cache-control","max-age=300"},
          {"connection","keep-alive"},
          {"date","Sun, 11 Oct 2015 23:02:52 GMT"},
          {"via","1.1 varnish"},
          {"accept-ranges","bytes"},
          {"etag","\"72f73cbaec915db05427fe59b1450913b259b205\""},
          {"vary","Authorization,Accept-Encoding"},
          {"content-length","620"},
          {"content-type","text/plain; charset=utf-8"},
          {"expires","Sun, 11 Oct 2015 23:07:52 GMT"},
          {"content-security-policy","default-src 'none'"},
          {"x-xss-protection","1; mode=block"},
          {"x-frame-options","deny"},
          {"x-content-type-options","nosniff"},
          {"strict-transport-security","max-age=31536000"},
          {"x-served-by","cache-lcy1128-LCY"},
          {"x-cache","MISS"},
          {"x-cache-hits","0"},
          {"access-control-allow-origin","*"},
          {"source-age","0"}],
         "{name,\"vim-snipmate-erlang\"}.\n{target_path,\"github.com/rprimus/vim-snipmate-erlang\"}.\n{url,\"https://github.com/rprimus/vim-snipmate-erlang\"}.\n{vsn_format,2}.\n{vsn_pass,100}.\n{time_begin,{{2015,9,22},{1,36,26}}}.\n{method,git}.\n{count_tags,2}.\n{count_branches,1}.\n{revisions,[{rev,branch,\"master\",\"4b83d11412ea0a60dfa8da2720c528606a226571\",\n                 false,[],[]},\n            {rev,tag,\"pubkey\",\"4f5abe48887b96db2a6396dcb210d3a14206080f\",\n                 undefined,[],[]},\n            {rev,tag,\"v1.0\",\"1d76d239206e345dd7b81cb3112339956bf625d8\",false,\n                 [],[]}]}.\n{time_end,{{2015,9,22},{1,36,28}}}.\n"}}
 :: Writing meta to "/home/pete/wefwefwef/docs/other/78415bbc79fbbc6de710665699074213c28b4b52/meta.txt"
 :: Skipping tag "v1.0"
 :: Skipping branch "master"
 :: Processing https://github.com/rprimus/vim-snipmate-erlang	{rev,tag,"pubkey","4f5abe48887b96db2a6396dcb210d3a14206080f",undefined,[],[]}
 :: Fetching repo code
$ cd '/home/pete/wefwefwef/docs/other/78415bbc79fbbc6de710665699074213c28b4b52/vim-snipmate-erlang-tag-pubkey'
$ infinity  `curl --fail --silent --show-error --location --output repo.tar.gz 'https://codeload.github.com/rprimus/vim-snipmate-erlang/tar.gz/pubkey'  2>&1`
$ cd '/home/pete/wefwefwef/docs/erldocs_other.git'
>>> [stdout] "curl: (22) The requested URL returned error: 502 Bad Gateway"
 :: Error running eo_core:
	[{eo_os,chk,2,[{file,"src/eo_os.erl"},{line,55}]},
         {eo_scm,fetch,2,[{file,"src/eo_scm.erl"},{line,74}]},
         {eo_core,do,7,[{file,"src/eo_core.erl"},{line,106}]},
         {eo_core,'-main_/1-lc$^0/1-0-',8,
             [{file,"src/eo_core.erl"},{line,84}]},
         {eo_core,main_,1,[{file,"src/eo_core.erl"},{line,84}]},
         {eo_core,main,1,[{file,"src/eo_core.erl"},{line,55}]},
         {eo_core,gen,1,[{file,"src/eo_core.erl"},{line,36}]},
         {gen_escript__escript__1444__561448__35764,seq_gen,4,
             [{file,"./gen.escript"},{line,52}]}]
{throw,{sh,fetch_curl,error,22,
           [{"curl: (22) The requested URL returne"},
            {"d error: 502 Bad Gateway"}]}}
 :: Finishing up
$ 5000  `rm -r '/home/pete/wefwefwef/docs/other/78415bbc79fbbc6de710665699074213c28b4b52/vim-snipmate-erlang'  2>&1`
