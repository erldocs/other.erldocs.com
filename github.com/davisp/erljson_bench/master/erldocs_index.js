var index = [['app','ejson_test','ejson_test','[application]'],['mod','ejson_test','ejson_test',[]],['mod','ejson_test','mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','ejson_test','mochinum','Useful numeric algorithms for floats that cover so'],['fun','ejson_test','ejson_test:decode/1',[]],['fun','ejson_test','ejson_test:encode/1',[]],['fun','ejson_test','mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','ejson_test','mochijson2:decode/1','Decode the given iolist to Erlang terms using the '],['fun','ejson_test','mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','ejson_test','mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','ejson_test','mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','ejson_test','mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','ejson_test','mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','ejson_test','mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','ejson_test','mochinum:int_pow/1',' Moderately efficient way to exponentiate integers'],['app','erljson_bench','erljson_bench','[application]'],['mod','erljson_bench','erljson_bench',[]],['fun','erljson_bench','erljson_bench:main/1',[]],['app','json','json','[application]'],['mod','json','json',[]],['mod','json','json_fuzz',[]],['fun','json','json:decode/1',[]],['fun','json','json:encode/1',[]],['fun','json','json:fuzz/0',[]],['fun','json','json:fuzz/1',[]],['fun','json','json_fuzz:choose/4',[]],['fun','json','json_fuzz:fuzz/0',[]],['fun','json','json_fuzz:fuzz/1',[]]];