var index = [['app','purity','purity','[application]'],['mod','purity','cl_parser','Configurable command line argument parser.'],['mod','purity','core_aliases','Locate aliases to variables in core erlang express'],['mod','purity','purity','Pureness analysis of Erlang functions.'],['mod','purity','purity_hofs','Analysis of indirect higher order functions.'],['mod','purity','purity_plt','Persistent Lookup Tables for purity.'],['mod','purity','purity_stats','Generate statistics from purity results of analyse'],['mod','purity','purity_utils','Various utility functions for purity.'],['mod','purity','runtest',[]],['fun','purity','cl_parser:parse_args/1','The Extra argument is a list of post-processing in'],['fun','purity','cl_parser:parse_args/1','Parse the command line and return a 2-tuple of opt'],['fun','purity','core_aliases:scan/1','Scan a core erlang function and return a mapping o'],['fun','purity','purity:analyse_changed/1','Re-analyse changed files and affected modules, upd'],['fun','purity','purity:find_missing/1','Return a list of MFAs and a list of primops for wh'],['fun','purity','purity:is_pure/1','Simple purity test, only distinguishes between pur'],['fun','purity','purity:module/1','Analyse a module and return a lookup table of func'],['fun','purity','purity:module/1','Analyse a module and return a lookup table of conc'],['fun','purity','purity:modules/1','Analyse a list of modules.'],['fun','purity','purity:panalyse/1',[]],['fun','purity','purity:pmodules/1','Analyse a list of modules in parallel.'],['fun','purity','purity:propagate/1','Select the appropriate propagation function or bot'],['fun','purity','purity:propagate_both/1','Combine the propagation into one function, which i'],['fun','purity','purity:propagate_purity/1','Return a version of the lookup table with dependen'],['fun','purity','purity:propagate_termination/1','Crude and very conservative termination analysis.'],['fun','purity','purity_hofs:higher_analysis/1',[]],['fun','purity','purity_hofs:make_arg_graph/1','Build a directed graph representing calls to highe'],['fun','purity','purity_hofs:test_higher_analysis/0',[]],['fun','purity','purity_hofs:test_make_arg_graph/0',[]],['fun','purity','purity_hofs:to_dot/1','Write a representation of the specified graph in t'],['fun','purity','purity_plt:check/1',[]],['fun','purity','purity_plt:get_affected/1','Return the list of modules that need to be re-anal'],['fun','purity','purity_plt:get_cache/1','Return the cached version of the table, falling ba'],['fun','purity','purity_plt:get_default_path/0',[]],['fun','purity','purity_plt:get_files/1','Return the list of filenames whose pureness values'],['fun','purity','purity_plt:get_table/1',[]],['fun','purity','purity_plt:get_version/1',[]],['fun','purity','purity_plt:load/1',[]],['fun','purity','purity_plt:new/0',[]],['fun','purity','purity_plt:new/1',[]],['fun','purity','purity_plt:remove_files/1','Return a copy of the PLT with specified files remo'],['fun','purity','purity_plt:save/1',[]],['fun','purity','purity_plt:update/1','Update PLT with a new table and cache, for the ext'],['fun','purity','purity_stats:gather/1','Generate an assoc list of modules and their statis'],['fun','purity','purity_stats:write/1','Write an assoc list of modules and statistics to f'],['fun','purity','purity_utils:collect_dependencies/1','Return a list of functions, variables or primops,'],['fun','purity','purity_utils:count/1','Simple stateful acculumator for quick testing.'],['fun','purity','purity_utils:delete_modules/1','Remove any functions belonging to Modules from the'],['fun','purity','purity_utils:dict_cons/1',[]],['fun','purity','purity_utils:emsg/1',[]],['fun','purity','purity_utils:emsg/1',[]],['fun','purity','purity_utils:filename_to_module/1','Return what should correspond to the Erlang module'],['fun','purity','purity_utils:fmt_mfa/1','Return the various representations of functions/pr'],['fun','purity','purity_utils:get_abstract_code_from_beam/1',[]],['fun','purity','purity_utils:get_core/1','Compile to Core Erlang and return the parsed core '],['fun','purity','purity_utils:get_core/1','Compile to Core Erlang and return the parsed core '],['fun','purity','purity_utils:internal_function/1',[]],['fun','purity','purity_utils:is_concrete_fun/1',[]],['fun','purity','purity_utils:is_primop/1',[]],['fun','purity','purity_utils:pmap/1','Variation of the rpc:pmap/3 function which limits '],['fun','purity','purity_utils:remove_args/1','Remove argument annotations from any context value'],['fun','purity','purity_utils:rev_deps/1','Return a mapping of functions or primops to a list'],['fun','purity','purity_utils:rev_mod_deps/1','Return a mapping of modules to a list of modules t'],['fun','purity','purity_utils:str/1',[]],['fun','purity','runtest:apply_filters/2',[]],['fun','purity','runtest:build_filters/2',[]],['fun','purity','runtest:dump_term/2',[]],['fun','purity','runtest:filter_args/1',[]],['fun','purity','runtest:filter_binaries/1',[]],['fun','purity','runtest:filter_module/1',[]],['fun','purity','runtest:filter_nested/1',[]],['fun','purity','runtest:filter_pretty/1',[]],['fun','purity','runtest:filter_reasons/1',[]],['fun','purity','runtest:main/1',[]]];