var index = [['app','xmerl','xmerl','[application]'],['mod','xmerl','xmerl','Functions for exporting XML data to an external fo'],['mod','xmerl','xmerl_b64Bin_scan',[]],['mod','xmerl','xmerl_eventp','Simple event-based front-ends to xmerl_scan for pr'],['mod','xmerl','xmerl_html',[]],['mod','xmerl','xmerl_lib',[]],['mod','xmerl','xmerl_otpsgml',[]],['mod','xmerl','xmerl_regexp',[]],['mod','xmerl','xmerl_sax_old_dom',[]],['mod','xmerl','xmerl_sax_parser','XML SAX parser API'],['mod','xmerl','xmerl_sax_parser_latin1',[]],['mod','xmerl','xmerl_sax_parser_list',[]],['mod','xmerl','xmerl_sax_parser_utf16be',[]],['mod','xmerl','xmerl_sax_parser_utf16le',[]],['mod','xmerl','xmerl_sax_parser_utf8',[]],['mod','xmerl','xmerl_sax_simple_dom',[]],['mod','xmerl','xmerl_scan','This module is the interface to the XML parser, it'],['mod','xmerl','xmerl_sgml',[]],['mod','xmerl','xmerl_simple',[]],['mod','xmerl','xmerl_text',[]],['mod','xmerl','xmerl_ucs',[]],['mod','xmerl','xmerl_uri',[]],['mod','xmerl','xmerl_validate',[]],['mod','xmerl','xmerl_xlate',[]],['mod','xmerl','xmerl_xml',[]],['mod','xmerl','xmerl_xpath','The xmerl_xpath module handles the entire XPath 1.'],['mod','xmerl','xmerl_xpath_lib',[]],['mod','xmerl','xmerl_xpath_pred',[]],['mod','xmerl','xmerl_xpath_scan',[]],['mod','xmerl','xmerl_xs','       Erlang has similarities to XSLT since both'],['mod','xmerl','xmerl_xsd','Interface module for XML Schema vlidation.'],['mod','xmerl','xmerl_xsd_type',[]],['fun','xmerl','xmerl:callbacks/1','Find the list of inherited callback modules for a '],['fun','xmerl','xmerl:export/2','Equivalent to export(Data, Callback, []).'],['fun','xmerl','xmerl:export/3','Exports normal, well-formed XML content, using the'],['fun','xmerl','xmerl:export_content/2','Exports normal XML content directly, without furth'],['fun','xmerl','xmerl:export_element/2','Exports a normal XML element directly, without fur'],['fun','xmerl','xmerl:export_element/3','For on-the-fly exporting during parsing (SAX style'],['fun','xmerl','xmerl:export_simple/2','Equivalent to export_simple(Content, Callback, [])'],['fun','xmerl','xmerl:export_simple/3','Exports "simple-form" XML content, using the speci'],['fun','xmerl','xmerl:export_simple_content/2','Exports simple XML content directly, without furth'],['fun','xmerl','xmerl:export_simple_element/2','Exports a simple XML element directly, without fur'],['fun','xmerl','xmerl_b64Bin_scan:scan/1',[]],['fun','xmerl','xmerl_eventp:file_sax/1','Parse file containing an XML document, SAX style.'],['fun','xmerl','xmerl_eventp:stream/1','Parse file containing an XML document as a stream,'],['fun','xmerl','xmerl_eventp:stream_sax/4','Parse file containing an XML document as a stream,'],['fun','xmerl','xmerl_eventp:string_sax/1','Parse file containing an XML document, SAX style.'],['fun','xmerl','xmerl_html:#element#/5',[]],['fun','xmerl','xmerl_html:#root#/4',[]],['fun','xmerl','xmerl_html:#text#/1',[]],['fun','xmerl','xmerl_html:#xml-inheritance#/0',[]],['fun','xmerl','xmerl_html:p/4',[]],['fun','xmerl','xmerl_lib:detect_charset/1','Automatically decides character set used in XML do'],['fun','xmerl','xmerl_lib:detect_charset/1','Equivalent to detect_charset(undefined, T).'],['fun','xmerl','xmerl_lib:empty_tag/1',[]],['fun','xmerl','xmerl_lib:empty_tag/2',[]],['fun','xmerl','xmerl_lib:end_tag/1',[]],['fun','xmerl','xmerl_lib:expand_attributes/1',[]],['fun','xmerl','xmerl_lib:expand_attributes/3',[]],['fun','xmerl','xmerl_lib:expand_content/1',[]],['fun','xmerl','xmerl_lib:expand_content/3',[]],['fun','xmerl','xmerl_lib:expand_element/1',[]],['fun','xmerl','xmerl_lib:expand_element/3',[]],['fun','xmerl','xmerl_lib:export_attribute/1',[]],['fun','xmerl','xmerl_lib:export_text/1',[]],['fun','xmerl','xmerl_lib:find_attribute/2',[]],['fun','xmerl','xmerl_lib:flatten_text/1',[]],['fun','xmerl','xmerl_lib:foldxml/3',[]],['fun','xmerl','xmerl_lib:is_builtin_simple_type/1',[]],['fun','xmerl','xmerl_lib:is_char/1',[]],['fun','xmerl','xmerl_lib:is_empty_data/1',[]],['fun','xmerl','xmerl_lib:is_facet/1',[]],['fun','xmerl','xmerl_lib:is_letter/1',[]],['fun','xmerl','xmerl_lib:is_name/1',[]],['fun','xmerl','xmerl_lib:is_namechar/1',[]],['fun','xmerl','xmerl_lib:is_ncname/1',[]],['fun','xmerl','xmerl_lib:is_xsd_string/1',[]],['fun','xmerl','xmerl_lib:mapfoldxml/3',[]],['fun','xmerl','xmerl_lib:mapxml/2',[]],['fun','xmerl','xmerl_lib:markup/2',[]],['fun','xmerl','xmerl_lib:markup/3',[]],['fun','xmerl','xmerl_lib:normalize_content/1',[]],['fun','xmerl','xmerl_lib:normalize_content/3',[]],['fun','xmerl','xmerl_lib:normalize_element/1',[]],['fun','xmerl','xmerl_lib:normalize_element/3',[]],['fun','xmerl','xmerl_lib:remove_whitespace/1',[]],['fun','xmerl','xmerl_lib:simplify_content/1',[]],['fun','xmerl','xmerl_lib:simplify_element/1',[]],['fun','xmerl','xmerl_lib:start_tag/1',[]],['fun','xmerl','xmerl_lib:start_tag/2',[]],['fun','xmerl','xmerl_lib:to_lower/1',[]],['fun','xmerl','xmerl_otpsgml:#element#/5',[]],['fun','xmerl','xmerl_otpsgml:#root#/4',[]],['fun','xmerl','xmerl_otpsgml:#text#/1',[]],['fun','xmerl','xmerl_otpsgml:#xml-inheritance#/0',[]],['fun','xmerl','xmerl_otpsgml:p/4',[]],['fun','xmerl','xmerl_regexp:compile/1',[]],['fun','xmerl','xmerl_regexp:compile_proc/2',[]],['fun','xmerl','xmerl_regexp:first_match/2',[]],['fun','xmerl','xmerl_regexp:format_error/1',[]],['fun','xmerl','xmerl_regexp:gsub/3',[]],['fun','xmerl','xmerl_regexp:make_dfa/1',[]],['fun','xmerl','xmerl_regexp:make_dfa/2',[]],['fun','xmerl','xmerl_regexp:make_nfa/1',[]],['fun','xmerl','xmerl_regexp:match/2',[]],['fun','xmerl','xmerl_regexp:matches/2',[]],['fun','xmerl','xmerl_regexp:parse/1',[]],['fun','xmerl','xmerl_regexp:setup/1',[]],['fun','xmerl','xmerl_regexp:sh_to_awk/1',[]],['fun','xmerl','xmerl_regexp:split/2',[]],['fun','xmerl','xmerl_regexp:sub/3',[]],['fun','xmerl','xmerl_regexp:sub_first_match/2',[]],['fun','xmerl','xmerl_regexp:sub_match/2',[]],['fun','xmerl','xmerl_sax_old_dom:event/3',[]],['fun','xmerl','xmerl_sax_old_dom:get_dom/1',[]],['fun','xmerl','xmerl_sax_old_dom:initial_state/0',[]],['fun','xmerl','xmerl_sax_parser:file/2','Parse file containing an XML document.'],['fun','xmerl','xmerl_sax_parser:stream/2','Parse a stream containing an XML document.'],['fun','xmerl','xmerl_sax_parser_latin1:cf/3',[]],['fun','xmerl','xmerl_sax_parser_latin1:cf/4',[]],['fun','xmerl','xmerl_sax_parser_latin1:cf/5',[]],['fun','xmerl','xmerl_sax_parser_latin1:is_name_char/1',[]],['fun','xmerl','xmerl_sax_parser_latin1:is_name_start/1',[]],['fun','xmerl','xmerl_sax_parser_latin1:parse/2',[]],['fun','xmerl','xmerl_sax_parser_latin1:parse_dtd/2',[]],['fun','xmerl','xmerl_sax_parser_list:cf/3',[]],['fun','xmerl','xmerl_sax_parser_list:cf/4',[]],['fun','xmerl','xmerl_sax_parser_list:cf/5',[]],['fun','xmerl','xmerl_sax_parser_list:is_name_char/1',[]],['fun','xmerl','xmerl_sax_parser_list:is_name_start/1',[]],['fun','xmerl','xmerl_sax_parser_list:parse/2',[]],['fun','xmerl','xmerl_sax_parser_list:parse_dtd/2',[]],['fun','xmerl','xmerl_sax_parser_utf16be:cf/3',[]],['fun','xmerl','xmerl_sax_parser_utf16be:cf/4',[]],['fun','xmerl','xmerl_sax_parser_utf16be:cf/5',[]],['fun','xmerl','xmerl_sax_parser_utf16be:is_name_char/1',[]],['fun','xmerl','xmerl_sax_parser_utf16be:is_name_start/1',[]],['fun','xmerl','xmerl_sax_parser_utf16be:parse/2',[]],['fun','xmerl','xmerl_sax_parser_utf16be:parse_dtd/2',[]],['fun','xmerl','xmerl_sax_parser_utf16le:cf/3',[]],['fun','xmerl','xmerl_sax_parser_utf16le:cf/4',[]],['fun','xmerl','xmerl_sax_parser_utf16le:cf/5',[]],['fun','xmerl','xmerl_sax_parser_utf16le:is_name_char/1',[]],['fun','xmerl','xmerl_sax_parser_utf16le:is_name_start/1',[]],['fun','xmerl','xmerl_sax_parser_utf16le:parse/2',[]],['fun','xmerl','xmerl_sax_parser_utf16le:parse_dtd/2',[]],['fun','xmerl','xmerl_sax_parser_utf8:cf/3',[]],['fun','xmerl','xmerl_sax_parser_utf8:cf/4',[]],['fun','xmerl','xmerl_sax_parser_utf8:cf/5',[]],['fun','xmerl','xmerl_sax_parser_utf8:is_name_char/1',[]],['fun','xmerl','xmerl_sax_parser_utf8:is_name_start/1',[]],['fun','xmerl','xmerl_sax_parser_utf8:parse/2',[]],['fun','xmerl','xmerl_sax_parser_utf8:parse_dtd/2',[]],['fun','xmerl','xmerl_sax_simple_dom:event/3',[]],['fun','xmerl','xmerl_sax_simple_dom:get_dom/1',[]],['fun','xmerl','xmerl_sax_simple_dom:initial_state/0',[]],['fun','xmerl','xmerl_scan:accumulate_whitespace/1','Function to accumulate and normalize whitespace.'],['fun','xmerl','xmerl_scan:cont_state/1','Equivalent to cont_state(ContinuationState, S).'],['fun','xmerl','xmerl_scan:cont_state/2','For controlling the ContinuationState, to be used '],['fun','xmerl','xmerl_scan:event_state/1','Equivalent to event_state(EventState, S).'],['fun','xmerl','xmerl_scan:event_state/2','For controlling the EventState, to be used in an e'],['fun','xmerl','xmerl_scan:fetch_state/1','Equivalent to fetch_state(FetchState, S).'],['fun','xmerl','xmerl_scan:fetch_state/2','For controlling the FetchState, to be used in a fe'],['fun','xmerl','xmerl_scan:file/1','Parse file containing an XML document.'],['fun','xmerl','xmerl_scan:file/1','Equivalent to file(Filename, []).'],['fun','xmerl','xmerl_scan:hook_state/1','Equivalent to hook_state(HookState, S).'],['fun','xmerl','xmerl_scan:hook_state/2','For controlling the HookState, to be used in a hoo'],['fun','xmerl','xmerl_scan:rules_state/1','Equivalent to rules_state(RulesState, S).'],['fun','xmerl','xmerl_scan:rules_state/2','For controlling the RulesState, to be used in a ru'],['fun','xmerl','xmerl_scan:string/1','Parse string containing an XML document.'],['fun','xmerl','xmerl_scan:string/1','Equivalent to string(Test, []).'],['fun','xmerl','xmerl_scan:user_state/1','Equivalent to user_state(UserState, S).'],['fun','xmerl','xmerl_scan:user_state/2','For controlling the UserState, to be used in a use'],['fun','xmerl','xmerl_sgml:#element#/5',[]],['fun','xmerl','xmerl_sgml:#root#/4',[]],['fun','xmerl','xmerl_sgml:#text#/1',[]],['fun','xmerl','xmerl_sgml:#xml-inheritance#/0',[]],['fun','xmerl','xmerl_simple:file/2',[]],['fun','xmerl','xmerl_simple:string/2',[]],['fun','xmerl','xmerl_text:#element#/5',[]],['fun','xmerl','xmerl_text:#root#/4',[]],['fun','xmerl','xmerl_text:#text#/1',[]],['fun','xmerl','xmerl_text:#xml-inheritance#/0',[]],['fun','xmerl','xmerl_ucs:from_latin9/1',[]],['fun','xmerl','xmerl_ucs:from_ucs2be/1',[]],['fun','xmerl','xmerl_ucs:from_ucs2be/2',[]],['fun','xmerl','xmerl_ucs:from_ucs2le/1',[]],['fun','xmerl','xmerl_ucs:from_ucs2le/2',[]],['fun','xmerl','xmerl_ucs:from_ucs4be/1',[]],['fun','xmerl','xmerl_ucs:from_ucs4be/2',[]],['fun','xmerl','xmerl_ucs:from_ucs4le/1',[]],['fun','xmerl','xmerl_ucs:from_ucs4le/2',[]],['fun','xmerl','xmerl_ucs:from_utf16be/1',[]],['fun','xmerl','xmerl_ucs:from_utf16be/2',[]],['fun','xmerl','xmerl_ucs:from_utf16le/1',[]],['fun','xmerl','xmerl_ucs:from_utf16le/2',[]],['fun','xmerl','xmerl_ucs:from_utf8/1',[]],['fun','xmerl','xmerl_ucs:is_ascii/1',[]],['fun','xmerl','xmerl_ucs:is_bmpchar/1',[]],['fun','xmerl','xmerl_ucs:is_incharset/2',[]],['fun','xmerl','xmerl_ucs:is_iso10646/1',[]],['fun','xmerl','xmerl_ucs:is_iso646_basic/1',[]],['fun','xmerl','xmerl_ucs:is_latin1/1',[]],['fun','xmerl','xmerl_ucs:is_unicode/1',[]],['fun','xmerl','xmerl_ucs:is_visible_ascii/1',[]],['fun','xmerl','xmerl_ucs:is_visible_latin1/1',[]],['fun','xmerl','xmerl_ucs:to_ucs2be/1',[]],['fun','xmerl','xmerl_ucs:to_ucs2le/1',[]],['fun','xmerl','xmerl_ucs:to_ucs4be/1',[]],['fun','xmerl','xmerl_ucs:to_ucs4le/1',[]],['fun','xmerl','xmerl_ucs:to_unicode/2',[]],['fun','xmerl','xmerl_ucs:to_utf16be/1',[]],['fun','xmerl','xmerl_ucs:to_utf16le/1',[]],['fun','xmerl','xmerl_ucs:to_utf8/1',[]],['fun','xmerl','xmerl_uri:parse/1',[]],['fun','xmerl','xmerl_uri:resolve/2',[]],['fun','xmerl','xmerl_validate:validate/2',[]],['fun','xmerl','xmerl_xlate:file/3',[]],['fun','xmerl','xmerl_xlate:string/3',[]],['fun','xmerl','xmerl_xml:#element#/5',[]],['fun','xmerl','xmerl_xml:#root#/4',[]],['fun','xmerl','xmerl_xml:#text#/1',[]],['fun','xmerl','xmerl_xml:#xml-inheritance#/0',[]],['fun','xmerl','xmerl_xpath:string/2','Equivalent to string(Str, Doc, []).'],['fun','xmerl','xmerl_xpath:string/3','Equivalent to string(Str, Doc, [], Doc, Options).'],['fun','xmerl','xmerl_xpath:string/5','Extracts the nodes from the parsed XML tree accord'],['fun','xmerl','xmerl_xpath_lib:eval/3',[]],['fun','xmerl','xmerl_xpath_pred:boolean/1',[]],['fun','xmerl','xmerl_xpath_pred:boolean/2',[]],['fun','xmerl','xmerl_xpath_pred:ceiling/2',[]],['fun','xmerl','xmerl_xpath_pred:concat/2',[]],['fun','xmerl','xmerl_xpath_pred:contains/2',[]],['fun','xmerl','xmerl_xpath_pred:core_function/1',[]],['fun','xmerl','xmerl_xpath_pred:count/2',[]],['fun','xmerl','xmerl_xpath_pred:eval/2',[]],['fun','xmerl','xmerl_xpath_pred:floor/2',[]],['fun','xmerl','xmerl_xpath_pred:fn_false/2',[]],['fun','xmerl','xmerl_xpath_pred:fn_not/2',[]],['fun','xmerl','xmerl_xpath_pred:fn_true/2',[]],['fun','xmerl','xmerl_xpath_pred:id/2',[]],['fun','xmerl','xmerl_xpath_pred:lang/2',[]],['fun','xmerl','xmerl_xpath_pred:last/2',[]],['fun','xmerl','xmerl_xpath_pred:local-name/2',[]],['fun','xmerl','xmerl_xpath_pred:name/2',[]],['fun','xmerl','xmerl_xpath_pred:namespace-uri/2',[]],['fun','xmerl','xmerl_xpath_pred:nodeset/1',[]],['fun','xmerl','xmerl_xpath_pred:normalize-space/2',[]],['fun','xmerl','xmerl_xpath_pred:number/1',[]],['fun','xmerl','xmerl_xpath_pred:number/2',[]],['fun','xmerl','xmerl_xpath_pred:position/2',[]],['fun','xmerl','xmerl_xpath_pred:round/2',[]],['fun','xmerl','xmerl_xpath_pred:starts-with/2',[]],['fun','xmerl','xmerl_xpath_pred:string-length/2',[]],['fun','xmerl','xmerl_xpath_pred:string/1',[]],['fun','xmerl','xmerl_xpath_pred:string/2',[]],['fun','xmerl','xmerl_xpath_pred:substring-after/2',[]],['fun','xmerl','xmerl_xpath_pred:substring-before/2',[]],['fun','xmerl','xmerl_xpath_pred:substring/2',[]],['fun','xmerl','xmerl_xpath_pred:sum/2',[]],['fun','xmerl','xmerl_xpath_pred:translate/2',[]],['fun','xmerl','xmerl_xpath_scan:scan_number/1',[]],['fun','xmerl','xmerl_xpath_scan:tokens/1',[]],['fun','xmerl','xmerl_xs:built_in_rules/2','The default fallback behaviour.'],['fun','xmerl','xmerl_xs:select/1','Extracts the nodes from the xml tree according to '],['fun','xmerl','xmerl_xs:value_of/1','Concatenates all text nodes within the tree.'],['fun','xmerl','xmerl_xs:xslapply/2','xslapply is a wrapper to make things look similar '],['fun','xmerl','xmerl_xsd:file2state/1','Reads the schema state with all information of the'],['fun','xmerl','xmerl_xsd:format_error/1','Formats error descriptions to human readable strin'],['fun','xmerl','xmerl_xsd:process_schema/1','Equivalent to process_schema(Schema, []).'],['fun','xmerl','xmerl_xsd:process_schema/2','Reads the referenced XML schema and checks that it'],['fun','xmerl','xmerl_xsd:process_schemas/1','Equivalent to process_schema(Schemas, []).'],['fun','xmerl','xmerl_xsd:process_schemas/2','Reads the referenced XML schemas and controls they'],['fun','xmerl','xmerl_xsd:process_validate/2','Equivalent to process_validate(Schema, Xml, []).'],['fun','xmerl','xmerl_xsd:process_validate/3','Validates a parsed well-formed XML element towards'],['fun','xmerl','xmerl_xsd:state2file/1','Same as state2file(State,SchemaName).'],['fun','xmerl','xmerl_xsd:state2file/2','Saves the schema state with all information of the'],['fun','xmerl','xmerl_xsd:validate/2','Equivalent to validate(Element, State, []).'],['fun','xmerl','xmerl_xsd:validate/3','Validates a parsed well-formed XML element (Elemen'],['fun','xmerl','xmerl_xsd_type:add_duration2dateTime/2',[]],['fun','xmerl','xmerl_xsd_type:check_simpleType/3',[]],['fun','xmerl','xmerl_xsd_type:collapse_ws/1',[]],['fun','xmerl','xmerl_xsd_type:compare_dateTime/2',[]],['fun','xmerl','xmerl_xsd_type:compare_durations/2',[]],['fun','xmerl','xmerl_xsd_type:compare_floats/2',[]],['fun','xmerl','xmerl_xsd_type:dateTime_atoms/1',[]],['fun','xmerl','xmerl_xsd_type:duration_atoms/1',[]],['fun','xmerl','xmerl_xsd_type:facet_fun/2',[]],['fun','xmerl','xmerl_xsd_type:fQuotient/2',[]],['fun','xmerl','xmerl_xsd_type:fQuotient/3',[]],['fun','xmerl','xmerl_xsd_type:maximumDayInMonthFor/2',[]],['fun','xmerl','xmerl_xsd_type:modulo/2',[]],['fun','xmerl','xmerl_xsd_type:modulo/3',[]],['fun','xmerl','xmerl_xsd_type:normalize_dateTime/1',[]],['fun','xmerl','xmerl_xsd_type:replace_ws/2',[]]];