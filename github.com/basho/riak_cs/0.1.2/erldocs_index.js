var index = [['app','riak_cs','riak_cs','[application]'],['mod','riak_cs','base64url','base64url is a wrapper around the base64 module to'],['mod','riak_cs','riak_moss_acl','Module of functions that provide a way to determin'],['mod','riak_cs','riak_moss_acl_utils','ACL utility functions.'],['mod','riak_cs','riak_moss_app','Callbacks for the riak_moss application.'],['mod','riak_cs','riak_moss_auth',[]],['mod','riak_cs','riak_moss_blockall_auth',[]],['mod','riak_cs','riak_moss_delete_fsm_sup','Supervisor for riak_moss_delete_fsm'],['mod','riak_cs','riak_moss_deleter_sup','Supervisor for riak_moss_deleter'],['mod','riak_cs','riak_moss_get_fsm','get fsm for Riak Moss.'],['mod','riak_cs','riak_moss_get_fsm_sup','Supervisor for riak_moss_get_fsm'],['mod','riak_cs','riak_moss_lfs_utils',[]],['mod','riak_cs','riak_moss_passthru_auth',[]],['mod','riak_cs','riak_moss_put_fsm_sup','Supervisor for riak_moss_put_fsm'],['mod','riak_cs','riak_moss_reader_sup','Supervisor for riak_moss_reader'],['mod','riak_cs','riak_moss_request',[]],['mod','riak_cs','riak_moss_s3_auth',[]],['mod','riak_cs','riak_moss_s3_response',[]],['mod','riak_cs','riak_moss_sup','Supervisor for the riak_moss application.'],['mod','riak_cs','riak_moss_utils','riak_moss utility functions.'],['mod','riak_cs','riak_moss_web','Convenience functions for setting up the riak_moss'],['mod','riak_cs','riak_moss_wm_error_handler',[]],['mod','riak_cs','riak_moss_wm_rewrite',[]],['mod','riak_cs','riak_moss_wm_user',[]],['mod','riak_cs','riak_moss_wm_utils',[]],['mod','riak_cs','riak_moss_writer_sup','Supervisor for riak_moss_writer'],['fun','riak_cs','base64url:decode/1',[]],['fun','riak_cs','base64url:decode_to_string/1',[]],['fun','riak_cs','base64url:encode/1',[]],['fun','riak_cs','base64url:encode_to_string/1',[]],['fun','riak_cs','base64url:mime_decode/1',[]],['fun','riak_cs','base64url:mime_decode_to_string/1',[]],['fun','riak_cs','riak_moss_acl:anonymous_bucket_access/1','Determine if anonymous access is set for the bucke'],['fun','riak_cs','riak_moss_acl:anonymous_object_access/1','Determine if anonymous access is set for the objec'],['fun','riak_cs','riak_moss_acl:bucket_access/1','Determine if a user has the requested access to a '],['fun','riak_cs','riak_moss_acl:bucket_acl/1','Get the ACL for a bucket.'],['fun','riak_cs','riak_moss_acl:object_access/1','Determine if a user has the requested access to an'],['fun','riak_cs','riak_moss_acl_utils:acl/1','Construct an acl.'],['fun','riak_cs','riak_moss_acl_utils:acl_from_xml/1','Convert an XML document representing an ACL into '],['fun','riak_cs','riak_moss_acl_utils:acl_to_xml/1','Convert an internal representation of an ACL  int'],['fun','riak_cs','riak_moss_acl_utils:default_acl/1','Construct a default acl.'],['fun','riak_cs','riak_moss_acl_utils:empty_acl_xml/0','Convert an internal representation of an ACL  int'],['fun','riak_cs','riak_moss_acl_utils:requested_access/1','Map a request type to the type of ACL permissions '],['fun','riak_cs','riak_moss_app:start/1','application start callback for riak_moss.'],['fun','riak_cs','riak_moss_app:stop/1','application stop callback for riak_moss.'],['fun','riak_cs','riak_moss_auth:behaviour_info/1',[]],['fun','riak_cs','riak_moss_blockall_auth:authenticate/1',[]],['fun','riak_cs','riak_moss_delete_fsm_sup:init/1','Initialize this supervisor.'],['fun','riak_cs','riak_moss_delete_fsm_sup:start_delete_fsm/1','Start a riak_moss_delete_fsm child process.'],['fun','riak_cs','riak_moss_delete_fsm_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_deleter_sup:init/1','Initialize this supervisor.'],['fun','riak_cs','riak_moss_deleter_sup:start_deleter/1','Start a riak_moss_deleter child process.'],['fun','riak_cs','riak_moss_deleter_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_get_fsm:chunk/3',[]],['fun','riak_cs','riak_moss_get_fsm:continue/1',[]],['fun','riak_cs','riak_moss_get_fsm:get_metadata/1',[]],['fun','riak_cs','riak_moss_get_fsm:get_next_chunk/1',[]],['fun','riak_cs','riak_moss_get_fsm:handle_info/3',[]],['fun','riak_cs','riak_moss_get_fsm:init/1',[]],['fun','riak_cs','riak_moss_get_fsm:manifest/2',[]],['fun','riak_cs','riak_moss_get_fsm:prepare/2',[]],['fun','riak_cs','riak_moss_get_fsm:sending_remaining/3',[]],['fun','riak_cs','riak_moss_get_fsm:start_link/2',[]],['fun','riak_cs','riak_moss_get_fsm:stop/1',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_chunk_request/3',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_chunks/2',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_chunks/3',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_continue_or_stop/2',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_metadata_request/3',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_value/2',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_value/3',[]],['fun','riak_cs','riak_moss_get_fsm_sup:init/1','Initialize this supervisor.'],['fun','riak_cs','riak_moss_get_fsm_sup:start_get_fsm/1','Start a riak_moss_get_fsm child process.'],['fun','riak_cs','riak_moss_get_fsm_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_lfs_utils:block_count/1','The number of blocks that this       size will be'],['fun','riak_cs','riak_moss_lfs_utils:block_count/1','The number of blocks that this       size will be'],['fun','riak_cs','riak_moss_lfs_utils:block_keynames/3',[]],['fun','riak_cs','riak_moss_lfs_utils:block_name/3',[]],['fun','riak_cs','riak_moss_lfs_utils:block_name_to_term/1',[]],['fun','riak_cs','riak_moss_lfs_utils:block_sequences_for_manifest/1',[]],['fun','riak_cs','riak_moss_lfs_utils:block_size/0','Return the configured block size.'],['fun','riak_cs','riak_moss_lfs_utils:content_length/1',[]],['fun','riak_cs','riak_moss_lfs_utils:content_md5/1',[]],['fun','riak_cs','riak_moss_lfs_utils:created/1',[]],['fun','riak_cs','riak_moss_lfs_utils:file_uuid/1','Get the file UUID from the manifest.'],['fun','riak_cs','riak_moss_lfs_utils:finalize_manifest/1','Finalize the manifest of a file by  marking it as'],['fun','riak_cs','riak_moss_lfs_utils:initial_block_keynames/1',[]],['fun','riak_cs','riak_moss_lfs_utils:initial_blocks/1','A set of all of the blocks that       make up the'],['fun','riak_cs','riak_moss_lfs_utils:initial_blocks/1','A set of all of the blocks that       make up the'],['fun','riak_cs','riak_moss_lfs_utils:is_active/1',[]],['fun','riak_cs','riak_moss_lfs_utils:is_manifest/1','Returns true if Value is       a manifest record.'],['fun','riak_cs','riak_moss_lfs_utils:metadata_from_manifest/1','Return the metadata for the object       represen'],['fun','riak_cs','riak_moss_lfs_utils:new_manifest/1','Initialize a new file manifest.'],['fun','riak_cs','riak_moss_lfs_utils:remaining_block_keynames/1',[]],['fun','riak_cs','riak_moss_lfs_utils:remove_block/2','Remove a chunk from the       blocks_remaining fi'],['fun','riak_cs','riak_moss_lfs_utils:safe_block_size_from_manifest/1',[]],['fun','riak_cs','riak_moss_lfs_utils:set_inactive/1','Mark a file manifest as inactive by setting  the '],['fun','riak_cs','riak_moss_lfs_utils:sorted_blocks_remaining/1',[]],['fun','riak_cs','riak_moss_lfs_utils:still_waiting/1','Return true or false       depending on whether '],['fun','riak_cs','riak_moss_passthru_auth:authenticate/1',[]],['fun','riak_cs','riak_moss_put_fsm_sup:init/1','Initialize this supervisor.'],['fun','riak_cs','riak_moss_put_fsm_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_put_fsm_sup:start_put_fsm/1','Start a riak_moss_put_fsm child process.'],['fun','riak_cs','riak_moss_reader_sup:init/1','Initialize this supervisor.'],['fun','riak_cs','riak_moss_reader_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_reader_sup:start_reader/1','Start a riak_moss_reader child process.'],['fun','riak_cs','riak_moss_reader_sup:terminate_reader/1','Stop a reader process immediately.'],['fun','riak_cs','riak_moss_s3_auth:authenticate/1',[]],['fun','riak_cs','riak_moss_s3_response:api_error/3',[]],['fun','riak_cs','riak_moss_s3_response:error_code_to_atom/1','Convert an error code string into its correspondin'],['fun','riak_cs','riak_moss_s3_response:error_response/5',[]],['fun','riak_cs','riak_moss_s3_response:list_all_my_buckets_response/3',[]],['fun','riak_cs','riak_moss_s3_response:list_bucket_response/5',[]],['fun','riak_cs','riak_moss_s3_response:respond/4',[]],['fun','riak_cs','riak_moss_sup:init/1','supervisor callback.'],['fun','riak_cs','riak_moss_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_utils:binary_to_hexlist/1','Convert the passed binary into a string where the '],['fun','riak_cs','riak_moss_utils:close_riak_connection/1','Close a protobufs connection to the riak cluster.'],['fun','riak_cs','riak_moss_utils:create_bucket/1','Create a bucket in the global namespace or return'],['fun','riak_cs','riak_moss_utils:create_user/1','Create a new MOSS user.'],['fun','riak_cs','riak_moss_utils:delete_bucket/1','Delete a bucket.'],['fun','riak_cs','riak_moss_utils:delete_object/1','Delete an object from Riak.'],['fun','riak_cs','riak_moss_utils:from_bucket_name/1',[]],['fun','riak_cs','riak_moss_utils:get_admin_creds/0','Return the credentials of the admin user.'],['fun','riak_cs','riak_moss_utils:get_buckets/1','Return a users buckets.'],['fun','riak_cs','riak_moss_utils:get_keys_and_objects/1','Return a list of keys for a bucket along  with th'],['fun','riak_cs','riak_moss_utils:get_object/1','Get an object from Riak.'],['fun','riak_cs','riak_moss_utils:get_object/1','Get an object from Riak.'],['fun','riak_cs','riak_moss_utils:get_user/1','Retrieve a MOSS users information based on their '],['fun','riak_cs','riak_moss_utils:get_user_by_index/1','Retrieve a MOSS users information based on their'],['fun','riak_cs','riak_moss_utils:get_user_index/1','Query Index for Value in the users bucket.'],['fun','riak_cs','riak_moss_utils:list_keys/1','List the keys from a bucket.'],['fun','riak_cs','riak_moss_utils:list_keys/1','List the keys from a bucket.'],['fun','riak_cs','riak_moss_utils:pow/1','Integer version of the standard pow() function.'],['fun','riak_cs','riak_moss_utils:pow/1','Integer version of the standard pow() function; ca'],['fun','riak_cs','riak_moss_utils:put_object/1','Store an object in Riak.'],['fun','riak_cs','riak_moss_utils:riak_connection/0','Get a protobufs connection to the riak cluster  u'],['fun','riak_cs','riak_moss_utils:riak_connection/1','Get a protobufs connection to the riak cluster.'],['fun','riak_cs','riak_moss_utils:set_bucket_acl/1','Set the ACL for a bucket.'],['fun','riak_cs','riak_moss_utils:to_bucket_name/2',[]],['fun','riak_cs','riak_moss_web:dispatch_table/0',[]],['fun','riak_cs','riak_moss_wm_error_handler:render_error/3',[]],['fun','riak_cs','riak_moss_wm_rewrite:rewrite/2',[]],['fun','riak_cs','riak_moss_wm_user:allowed_methods/1',[]],['fun','riak_cs','riak_moss_wm_user:init/1',[]],['fun','riak_cs','riak_moss_wm_user:ping/2',[]],['fun','riak_cs','riak_moss_wm_user:process_post/1','Create a user from a POST       and return the us'],['fun','riak_cs','riak_moss_wm_user:service_available/1',[]],['fun','riak_cs','riak_moss_wm_utils:ensure_doc/1','Utility function for accessing       a riakc_obj '],['fun','riak_cs','riak_moss_wm_utils:iso_8601_datetime/0','Get an ISO 8601 formatted timestamp representing '],['fun','riak_cs','riak_moss_wm_utils:iso_8601_to_rfc_1123/1','Convert an ISO 8601 date to RFC 1123 date.'],['fun','riak_cs','riak_moss_wm_utils:parse_auth_header/1','Parse an authentication header string and determin'],['fun','riak_cs','riak_moss_wm_utils:ping/2',[]],['fun','riak_cs','riak_moss_wm_utils:service_available/2',[]],['fun','riak_cs','riak_moss_wm_utils:streaming_get/1',[]],['fun','riak_cs','riak_moss_wm_utils:to_iso_8601/1','Convert an RFC 1123 date into an ISO 8601 formatte'],['fun','riak_cs','riak_moss_wm_utils:to_rfc_1123/1',[]],['fun','riak_cs','riak_moss_wm_utils:user_record_to_proplist/1','Convert a moss_user record       into a property '],['fun','riak_cs','riak_moss_writer_sup:init/1','Initialize this supervisor.'],['fun','riak_cs','riak_moss_writer_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_writer_sup:start_writer/1','Start a riak_moss_writer child process.'],['app','riak_moss','riak_moss','[application]']];