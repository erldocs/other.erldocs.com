var index = [['app','riak_cs','riak_cs','[application]'],['mod','riak_cs','base64url','base64url is a wrapper around the base64 module to'],['mod','riak_cs','riak_cs_access_console','These functions are used by the riak-cs-access com'],['mod','riak_cs','riak_cs_storage_console','These functions are used by the riak-cs-storage co'],['mod','riak_cs','riak_kv_fs2_backend','riak_kv_fs2_backend is filesystem storage system, '],['mod','riak_cs','riak_moss_access','Data format and lookup utilities for access logs ('],['mod','riak_cs','riak_moss_acl','Module of functions that provide a way to determin'],['mod','riak_cs','riak_moss_acl_utils','ACL utility functions.'],['mod','riak_cs','riak_moss_app','Callbacks for the riak_moss application.'],['mod','riak_cs','riak_moss_auth',[]],['mod','riak_cs','riak_moss_block_server',[]],['mod','riak_cs','riak_moss_blockall_auth',[]],['mod','riak_cs','riak_moss_delete_fsm_sup','Supervisor for riak_moss_delete_fsm'],['mod','riak_cs','riak_moss_delete_marker','Module to manage storage of objects and files.'],['mod','riak_cs','riak_moss_deleter_sup','Supervisor for riak_moss_deleter'],['mod','riak_cs','riak_moss_get_fsm','get fsm for Riak Moss.'],['mod','riak_cs','riak_moss_get_fsm_sup','Supervisor for riak_moss_get_fsm'],['mod','riak_cs','riak_moss_lfs_utils',[]],['mod','riak_cs','riak_moss_manifest','Module for choosing and manipulating lists (well, '],['mod','riak_cs','riak_moss_manifest_resolution','Module to resolve siblings with manifest records.'],['mod','riak_cs','riak_moss_passthru_auth',[]],['mod','riak_cs','riak_moss_put_fsm_sup','Supervisor for riak_moss_put_fsm'],['mod','riak_cs','riak_moss_request',[]],['mod','riak_cs','riak_moss_riakc_pool_worker','Entry point for poolboy to pool Riak connections.'],['mod','riak_cs','riak_moss_s3_auth',[]],['mod','riak_cs','riak_moss_s3_response',[]],['mod','riak_cs','riak_moss_storage_d','The daemon that calculates moss storage on the con'],['mod','riak_cs','riak_moss_sup','Supervisor for the riak_moss application.'],['mod','riak_cs','riak_moss_utils','riak_moss utility functions.'],['mod','riak_cs','riak_moss_web','Convenience functions for setting up the riak_moss'],['mod','riak_cs','riak_moss_wm_error_handler',[]],['mod','riak_cs','riak_moss_wm_rewrite',[]],['mod','riak_cs','riak_moss_wm_usage','Webmachine resource for serving usage stats.'],['mod','riak_cs','riak_moss_wm_user',[]],['mod','riak_cs','riak_moss_wm_utils',[]],['mod','riak_cs','rts','Riak Time Samples.'],['fun','riak_cs','base64url:decode/1',[]],['fun','riak_cs','base64url:decode_to_string/1',[]],['fun','riak_cs','base64url:encode/1',[]],['fun','riak_cs','base64url:encode_to_string/1',[]],['fun','riak_cs','base64url:mime_decode/1',[]],['fun','riak_cs','base64url:mime_decode_to_string/1',[]],['fun','riak_cs','riak_cs_access_console:flush/1','Roll the current access log over to the archiver, '],['fun','riak_cs','riak_cs_storage_console:batch/1','Kick off a batch of storage calculation, unless on'],['fun','riak_cs','riak_cs_storage_console:cancel/1',[]],['fun','riak_cs','riak_cs_storage_console:pause/1',[]],['fun','riak_cs','riak_cs_storage_console:resume/1',[]],['fun','riak_cs','riak_cs_storage_console:status/1','Find out what the storage daemon is up to.'],['fun','riak_cs','riak_kv_fs2_backend:api_version/0','Return the major version of the  current API.'],['fun','riak_cs','riak_kv_fs2_backend:callback/1','Register an asynchronous callback.'],['fun','riak_cs','riak_kv_fs2_backend:capabilities/1','Return the capabilities of the backend.'],['fun','riak_cs','riak_kv_fs2_backend:capabilities/1','Return the capabilities of the backend.'],['fun','riak_cs','riak_kv_fs2_backend:delete/1','Delete the object stored at BKey.'],['fun','riak_cs','riak_kv_fs2_backend:drop/1','Delete all objects from this backend  and return '],['fun','riak_cs','riak_kv_fs2_backend:fold_buckets/1','Fold over all the buckets.'],['fun','riak_cs','riak_kv_fs2_backend:fold_keys/1','Fold over all the keys for one or all buckets.'],['fun','riak_cs','riak_kv_fs2_backend:fold_objects/1','Fold over all the objects for one or all buckets.'],['fun','riak_cs','riak_kv_fs2_backend:get/1','Get the object stored at the given bucket/key pair'],['fun','riak_cs','riak_kv_fs2_backend:is_empty/1','Returns true if this backend contains any  non-to'],['fun','riak_cs','riak_kv_fs2_backend:put/1','Store Val under Bkey.'],['fun','riak_cs','riak_kv_fs2_backend:start/1','Start this backend.'],['fun','riak_cs','riak_kv_fs2_backend:status/1','Get the status information for this fs backend.'],['fun','riak_cs','riak_kv_fs2_backend:stop/1','Stop the backend.'],['fun','riak_cs','riak_moss_access:archive_period/0','Retreive the number of seconds that should elapse '],['fun','riak_cs','riak_moss_access:get_usage/1','Produce a usage compilation for the given User bet'],['fun','riak_cs','riak_moss_access:log_flush_interval/0','Retreive the number of seconds that should elapse '],['fun','riak_cs','riak_moss_access:make_object/1','Create a Riak object for storing a user/slices ac'],['fun','riak_cs','riak_moss_acl:anonymous_bucket_access/1','Determine if anonymous access is set for the bucke'],['fun','riak_cs','riak_moss_acl:anonymous_object_access/1','Determine if anonymous access is set for the objec'],['fun','riak_cs','riak_moss_acl:bucket_access/1','Determine if a user has the requested access to a '],['fun','riak_cs','riak_moss_acl:bucket_acl/1','Get the ACL for a bucket.'],['fun','riak_cs','riak_moss_acl:object_access/1','Determine if a user has the requested access to an'],['fun','riak_cs','riak_moss_acl_utils:acl/1','Construct an acl.'],['fun','riak_cs','riak_moss_acl_utils:acl_from_xml/1','Convert an XML document representing an ACL into '],['fun','riak_cs','riak_moss_acl_utils:acl_to_xml/1','Convert an internal representation of an ACL  int'],['fun','riak_cs','riak_moss_acl_utils:canned_acl/1','Map a x-amz-acl header value to an  internal acl '],['fun','riak_cs','riak_moss_acl_utils:default_acl/1','Construct a default acl.'],['fun','riak_cs','riak_moss_acl_utils:empty_acl_xml/0','Convert an internal representation of an ACL  int'],['fun','riak_cs','riak_moss_acl_utils:requested_access/1','Map a request type to the type of ACL permissions '],['fun','riak_cs','riak_moss_app:start/1','application start callback for riak_moss.'],['fun','riak_cs','riak_moss_app:stop/1','application stop callback for riak_moss.'],['fun','riak_cs','riak_moss_auth:behaviour_info/1',[]],['fun','riak_cs','riak_moss_block_server:delete_block/1',[]],['fun','riak_cs','riak_moss_block_server:get_block/1',[]],['fun','riak_cs','riak_moss_block_server:put_block/1',[]],['fun','riak_cs','riak_moss_block_server:start_link/0','  Starts the server.'],['fun','riak_cs','riak_moss_block_server:start_link/1',[]],['fun','riak_cs','riak_moss_block_server:stop/1',[]],['fun','riak_cs','riak_moss_blockall_auth:authenticate/1',[]],['fun','riak_cs','riak_moss_delete_fsm_sup:init/1','Initialize this supervisor.'],['fun','riak_cs','riak_moss_delete_fsm_sup:start_delete_fsm/1','Start a riak_moss_delete_fsm child process.'],['fun','riak_cs','riak_moss_delete_fsm_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_delete_marker:delete/1','Mark all active manifests as       pending_delete'],['fun','riak_cs','riak_moss_deleter_sup:init/1','Initialize this supervisor.'],['fun','riak_cs','riak_moss_deleter_sup:start_deleter/1','Start a riak_moss_deleter child process.'],['fun','riak_cs','riak_moss_deleter_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_get_fsm:chunk/3',[]],['fun','riak_cs','riak_moss_get_fsm:continue/1',[]],['fun','riak_cs','riak_moss_get_fsm:get_manifest/1',[]],['fun','riak_cs','riak_moss_get_fsm:get_next_chunk/1',[]],['fun','riak_cs','riak_moss_get_fsm:init/1',[]],['fun','riak_cs','riak_moss_get_fsm:manifest/2',[]],['fun','riak_cs','riak_moss_get_fsm:prepare/2',[]],['fun','riak_cs','riak_moss_get_fsm:prepare/3',[]],['fun','riak_cs','riak_moss_get_fsm:sending_remaining/3',[]],['fun','riak_cs','riak_moss_get_fsm:start_link/4',[]],['fun','riak_cs','riak_moss_get_fsm:stop/1',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_chunks/2',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_chunks/3',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_continue_or_stop/2',[]],['fun','riak_cs','riak_moss_get_fsm:waiting_value/3',[]],['fun','riak_cs','riak_moss_get_fsm_sup:init/1','Initialize this supervisor.'],['fun','riak_cs','riak_moss_get_fsm_sup:start_get_fsm/1','Start a riak_moss_get_fsm child process.'],['fun','riak_cs','riak_moss_get_fsm_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_lfs_utils:block_count/1','The number of blocks that this       size will be'],['fun','riak_cs','riak_moss_lfs_utils:block_keynames/3',[]],['fun','riak_cs','riak_moss_lfs_utils:block_name/3',[]],['fun','riak_cs','riak_moss_lfs_utils:block_name_to_term/1',[]],['fun','riak_cs','riak_moss_lfs_utils:block_sequences_for_manifest/1',[]],['fun','riak_cs','riak_moss_lfs_utils:block_size/0','Return the configured block size.'],['fun','riak_cs','riak_moss_lfs_utils:fetch_concurrency/0','Return the configured file block fetch concurrency'],['fun','riak_cs','riak_moss_lfs_utils:initial_blocks/1','A list of all of the blocks that       make up th'],['fun','riak_cs','riak_moss_lfs_utils:is_manifest/1','Returns true if Value is       a manifest record.'],['fun','riak_cs','riak_moss_lfs_utils:max_content_len/0','Return the configured block size.'],['fun','riak_cs','riak_moss_lfs_utils:new_manifest/1',[]],['fun','riak_cs','riak_moss_lfs_utils:new_manifest/1','Initialize a new file manifest.'],['fun','riak_cs','riak_moss_lfs_utils:put_concurrency/0','Return the configured file block put concurrency .'],['fun','riak_cs','riak_moss_lfs_utils:put_fsm_buffer_size_factor/0','Return the configured put fsm buffer  size factor'],['fun','riak_cs','riak_moss_lfs_utils:remove_write_block/2','Remove a chunk from the       write_blocks_remain'],['fun','riak_cs','riak_moss_lfs_utils:safe_block_size_from_manifest/1',[]],['fun','riak_cs','riak_moss_lfs_utils:sorted_blocks_remaining/1',[]],['fun','riak_cs','riak_moss_manifest:active_manifest/1','Return the current active manifest  from an orddi'],['fun','riak_cs','riak_moss_manifest:mark_overwritten/1','Mark all active manifests  that are not "the most'],['fun','riak_cs','riak_moss_manifest:new/1','Return a new orddict of manifest (only  one in th'],['fun','riak_cs','riak_moss_manifest:prune/1','Return a new orddict of Manifests  with any delet'],['fun','riak_cs','riak_moss_manifest_resolution:resolve/1','Take a list of siblings  and resolve them to a si'],['fun','riak_cs','riak_moss_passthru_auth:authenticate/1',[]],['fun','riak_cs','riak_moss_put_fsm_sup:init/1','Initialize this supervisor.'],['fun','riak_cs','riak_moss_put_fsm_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_put_fsm_sup:start_put_fsm/1','Start a riak_moss_put_fsm child process.'],['fun','riak_cs','riak_moss_riakc_pool_worker:start_link/1',[]],['fun','riak_cs','riak_moss_riakc_pool_worker:stop/1',[]],['fun','riak_cs','riak_moss_s3_auth:authenticate/1',[]],['fun','riak_cs','riak_moss_s3_auth:calculate_qs_signature/1',[]],['fun','riak_cs','riak_moss_s3_response:api_error/3',[]],['fun','riak_cs','riak_moss_s3_response:error_code_to_atom/1','Convert an error code string into its correspondin'],['fun','riak_cs','riak_moss_s3_response:error_response/5',[]],['fun','riak_cs','riak_moss_s3_response:export_xml/1',[]],['fun','riak_cs','riak_moss_s3_response:list_all_my_buckets_response/3',[]],['fun','riak_cs','riak_moss_s3_response:list_bucket_response/5',[]],['fun','riak_cs','riak_moss_s3_response:respond/4',[]],['fun','riak_cs','riak_moss_storage_d:calculating/2','Async transitions from calculating are all due to '],['fun','riak_cs','riak_moss_storage_d:calculating/3',[]],['fun','riak_cs','riak_moss_storage_d:cancel_batch/0','Cancel the calculation currently in progress.'],['fun','riak_cs','riak_moss_storage_d:code_change/4','this fsm has no special upgrade process.'],['fun','riak_cs','riak_moss_storage_d:handle_event/3','there are no all-state events for this fsm.'],['fun','riak_cs','riak_moss_storage_d:handle_info/3',[]],['fun','riak_cs','riak_moss_storage_d:handle_sync_event/4','there are no all-state events for this fsm.'],['fun','riak_cs','riak_moss_storage_d:idle/2','Transitions out of idle are all synchronous events'],['fun','riak_cs','riak_moss_storage_d:idle/3',[]],['fun','riak_cs','riak_moss_storage_d:init/1','Read the storage schedule and go to idle.'],['fun','riak_cs','riak_moss_storage_d:pause_batch/0','Pause the calculation currently in progress.'],['fun','riak_cs','riak_moss_storage_d:paused/2',[]],['fun','riak_cs','riak_moss_storage_d:paused/3',[]],['fun','riak_cs','riak_moss_storage_d:resume_batch/0','Resume the batch currently in progress.'],['fun','riak_cs','riak_moss_storage_d:start_batch/1','Force a calculation and archival manually.'],['fun','riak_cs','riak_moss_storage_d:start_link/0','Starting the server also verifies the storage sche'],['fun','riak_cs','riak_moss_storage_d:status/0','Status is returned as a 2-tuple of {State, Details'],['fun','riak_cs','riak_moss_storage_d:terminate/3','TODO: log warnings if this fsm is asked to termina'],['fun','riak_cs','riak_moss_sup:init/1','supervisor callback.'],['fun','riak_cs','riak_moss_sup:start_link/0','API for starting the supervisor.'],['fun','riak_cs','riak_moss_utils:binary_to_hexlist/1','Convert the passed binary into a string where the '],['fun','riak_cs','riak_moss_utils:close_riak_connection/1','Close a protobufs connection to the riak cluster.'],['fun','riak_cs','riak_moss_utils:create_bucket/1','Create a bucket in the global namespace or return'],['fun','riak_cs','riak_moss_utils:create_user/1','Create a new MOSS user.'],['fun','riak_cs','riak_moss_utils:delete_bucket/1','Delete a bucket.'],['fun','riak_cs','riak_moss_utils:delete_object/1','Delete an object from Riak.'],['fun','riak_cs','riak_moss_utils:from_bucket_name/1',[]],['fun','riak_cs','riak_moss_utils:get_admin_creds/0','Return the credentials of the admin user.'],['fun','riak_cs','riak_moss_utils:get_buckets/1','Return a users buckets.'],['fun','riak_cs','riak_moss_utils:get_keys_and_manifests/1','Return a list of keys for a bucket along  with th'],['fun','riak_cs','riak_moss_utils:get_object/1','Get an object from Riak.'],['fun','riak_cs','riak_moss_utils:get_user/1','Retrieve a MOSS users information based on their '],['fun','riak_cs','riak_moss_utils:get_user_by_index/1','Retrieve a MOSS users information based on their'],['fun','riak_cs','riak_moss_utils:get_user_index/1','Query Index for Value in the users bucket.'],['fun','riak_cs','riak_moss_utils:list_keys/1','List the keys from a bucket.'],['fun','riak_cs','riak_moss_utils:pow/1','Integer version of the standard pow() function.'],['fun','riak_cs','riak_moss_utils:pow/1','Integer version of the standard pow() function; ca'],['fun','riak_cs','riak_moss_utils:put_object/1','Store an object in Riak.'],['fun','riak_cs','riak_moss_utils:riak_connection/0','Get a protobufs connection to the riak cluster  u'],['fun','riak_cs','riak_moss_utils:set_bucket_acl/1','Set the ACL for a bucket.'],['fun','riak_cs','riak_moss_utils:set_object_acl/1','Set the ACL for an object.'],['fun','riak_cs','riak_moss_utils:to_bucket_name/2',[]],['fun','riak_cs','riak_moss_web:dispatch_table/0',[]],['fun','riak_cs','riak_moss_wm_error_handler:render_error/3',[]],['fun','riak_cs','riak_moss_wm_rewrite:rewrite/2',[]],['fun','riak_cs','riak_moss_wm_usage:content_types_provided/2',[]],['fun','riak_cs','riak_moss_wm_usage:finish_request/2',[]],['fun','riak_cs','riak_moss_wm_usage:forbidden/2',[]],['fun','riak_cs','riak_moss_wm_usage:generate_etag/2',[]],['fun','riak_cs','riak_moss_wm_usage:init/1',[]],['fun','riak_cs','riak_moss_wm_usage:malformed_request/2',[]],['fun','riak_cs','riak_moss_wm_usage:ping/2',[]],['fun','riak_cs','riak_moss_wm_usage:produce_json/2',[]],['fun','riak_cs','riak_moss_wm_usage:produce_xml/2',[]],['fun','riak_cs','riak_moss_wm_usage:resource_exists/2',[]],['fun','riak_cs','riak_moss_wm_usage:service_available/2',[]],['fun','riak_cs','riak_moss_wm_user:allowed_methods/1',[]],['fun','riak_cs','riak_moss_wm_user:init/1',[]],['fun','riak_cs','riak_moss_wm_user:ping/2',[]],['fun','riak_cs','riak_moss_wm_user:process_post/1','Create a user from a POST       and return the us'],['fun','riak_cs','riak_moss_wm_user:service_available/1',[]],['fun','riak_cs','riak_moss_wm_utils:deny_access/2','Produce an access-denied error message from a webm'],['fun','riak_cs','riak_moss_wm_utils:ensure_doc/1','Utility function for accessing       a riakc_obj '],['fun','riak_cs','riak_moss_wm_utils:find_and_auth_user/3','Lookup the user specified by the access headers, a'],['fun','riak_cs','riak_moss_wm_utils:iso_8601_datetime/0','Get an ISO 8601 formatted timestamp representing '],['fun','riak_cs','riak_moss_wm_utils:iso_8601_to_rfc_1123/1','Convert an ISO 8601 date to RFC 1123 date.'],['fun','riak_cs','riak_moss_wm_utils:parse_auth_header/1','Parse an authentication header string and determin'],['fun','riak_cs','riak_moss_wm_utils:ping/2',[]],['fun','riak_cs','riak_moss_wm_utils:service_available/2',[]],['fun','riak_cs','riak_moss_wm_utils:streaming_get/1',[]],['fun','riak_cs','riak_moss_wm_utils:to_iso_8601/1','Convert an RFC 1123 date into an ISO 8601 formatte'],['fun','riak_cs','riak_moss_wm_utils:to_rfc_1123/1',[]],['fun','riak_cs','riak_moss_wm_utils:user_record_to_proplist/1','Convert a moss_user record       into a property '],['fun','riak_cs','rts:check_bucket_props/1','Attempt to check and set allow_mult=true on the na'],['fun','riak_cs','rts:find_samples/1','Fetch all of the samples from riak that overlap th'],['fun','riak_cs','rts:iso8601/1','Produce an ISO8601-compatible representation of th'],['fun','riak_cs','rts:new_sample/1','Just create the new sample object (dont store it)'],['fun','riak_cs','rts:next_slice/1','Get the slice following the one given.'],['fun','riak_cs','rts:slice_containing/1','Get the slice containing the Time, given a period.'],['app','riak_moss','riak_moss','[application]']];