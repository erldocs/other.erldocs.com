var index = [['app','riak_test','riak_test','[application]'],['mod','riak_test','giddyup',[]],['mod','riak_test','make_certs',[]],['mod','riak_test','observer',[]],['mod','riak_test','rebar_riak_test_plugin',[]],['mod','riak_test','riak_test',[]],['mod','riak_test','riak_test_escript',[]],['mod','riak_test','riak_test_group_leader',[]],['mod','riak_test','riak_test_runner','riak_test_runner runs a riak_test modules run/0 f'],['mod','riak_test','rt','  Implements the base riak_test API, providing th'],['mod','riak_test','rt_bench',[]],['mod','riak_test','rt_config',[]],['mod','riak_test','rt_cover','Code to interact with cover, Erlangs code coverag'],['mod','riak_test','rt_cs_dev',[]],['mod','riak_test','rt_intercept',[]],['mod','riak_test','rt_intercept_pt',[]],['mod','riak_test','rt_local',[]],['mod','riak_test','rt_pipe','Utilities for riak_pipe tests.'],['mod','riak_test','rt_pipe_sink_fsm','Sink fsm for eunit tests.'],['mod','riak_test','rt_worker_sup',[]],['mod','riak_test','rtperf',[]],['mod','riak_test','rtssh',[]],['mod','riak_test','smoke_test_escript',[]],['mod','riak_test','yokozuna_rt',[]],['fun','riak_test','giddyup:get_suite/1',[]],['fun','riak_test','giddyup:post_artifact/2',[]],['fun','riak_test','giddyup:post_result/1',[]],['fun','riak_test','make_certs:all/1',[]],['fun','riak_test','make_certs:all/2',[]],['fun','riak_test','make_certs:enduser/3',[]],['fun','riak_test','make_certs:endusers/3',[]],['fun','riak_test','make_certs:gencrl/2',[]],['fun','riak_test','make_certs:intermediateCA/3',[]],['fun','riak_test','make_certs:revoke/3',[]],['fun','riak_test','make_certs:rootCA/2',[]],['fun','riak_test','make_certs:verify/3',[]],['fun','riak_test','rebar_riak_test_plugin:clean/2',[]],['fun','riak_test','rebar_riak_test_plugin:compile/2',[]],['fun','riak_test','rebar_riak_test_plugin:rt_run/2',[]],['fun','riak_test','riak_test_escript:add_deps/1',[]],['fun','riak_test','riak_test_escript:main/1',[]],['fun','riak_test','riak_test_group_leader:group_leader_loop/1','listens for io_requests, and pipes them into lager'],['fun','riak_test','riak_test_group_leader:new_group_leader/1','spawns the new group leader.'],['fun','riak_test','riak_test_group_leader:tidy_up/1','closes group leader down.'],['fun','riak_test','riak_test_runner:confirm/1','Runs a modules run/0 function after setting up a '],['fun','riak_test','riak_test_runner:function_name/1',[]],['fun','riak_test','riak_test_runner:metadata/0','fetches test metadata from spawned test process.'],['fun','riak_test','riak_test_runner:metadata/1',[]],['fun','riak_test','riak_test_runner:return_to_exit/1',[]],['fun','riak_test','rt:admin/2','Call bin/riak-admin command on Node with argumen'],['fun','riak_test','rt:admin/3','Call bin/riak-admin command on Node with argumen'],['fun','riak_test','rt:assert_capability/1',[]],['fun','riak_test','rt:assert_nodes_agree_about_ownership/1',[]],['fun','riak_test','rt:assert_supported/1',[]],['fun','riak_test','rt:async_start/1',[]],['fun','riak_test','rt:attach/2','Runs riak attach on a specific node, and tests for'],['fun','riak_test','rt:attach_direct/2','Runs riak attach-direct on a specific node.'],['fun','riak_test','rt:brutal_kill/1',[]],['fun','riak_test','rt:build_cluster/1','Safely construct a new cluster and return a list o'],['fun','riak_test','rt:build_cluster/2','Safely construct a NumNode size cluster using    '],['fun','riak_test','rt:build_cluster/3',[]],['fun','riak_test','rt:build_clusters/1',[]],['fun','riak_test','rt:capability/2',[]],['fun','riak_test','rt:capability/3',[]],['fun','riak_test','rt:check_ibrowse/0',[]],['fun','riak_test','rt:check_singleton_node/1','Ensure that the specified node is a singleton node'],['fun','riak_test','rt:claimant_according_to/1','Return a list of nodes that own partitions accordi'],['fun','riak_test','rt:clean_cluster/1','Stop nodes and wipe out their data directories.'],['fun','riak_test','rt:clean_data_dir/1',[]],['fun','riak_test','rt:clean_data_dir/2',[]],['fun','riak_test','rt:cmd/1','Spawn Cmd on the machine running the test harness,'],['fun','riak_test','rt:cmd/2','Spawn Cmd on the machine running the test harness,'],['fun','riak_test','rt:connection_info/1',[]],['fun','riak_test','rt:console/2','Runs riak console on a specific node.'],['fun','riak_test','rt:count_calls/1','Count calls in a dbg:tracer process for various {M'],['fun','riak_test','rt:create_and_activate_bucket_type/3','create and immediately activate a bucket type.'],['fun','riak_test','rt:del_dir/1','Recusively delete files in a directory.'],['fun','riak_test','rt:deploy_clusters/1',[]],['fun','riak_test','rt:deploy_nodes/1','Deploy a set of freshly installed Riak nodes with '],['fun','riak_test','rt:deploy_nodes/1','Deploy a set of freshly installed Riak nodes, retu'],['fun','riak_test','rt:deploy_nodes/3',[]],['fun','riak_test','rt:down/2','Have Node mark OtherNode as down.'],['fun','riak_test','rt:enable_search_hook/2',[]],['fun','riak_test','rt:expect_in_log/2',[]],['fun','riak_test','rt:get_call_count/1','Get call count from ETS table, key being a {Module'],['fun','riak_test','rt:get_deps/0','gets riak deps from the appropriate harness.'],['fun','riak_test','rt:get_ip/1',[]],['fun','riak_test','rt:get_node_logs/0','Downloads any extant log files from the harnesss '],['fun','riak_test','rt:get_replica/5','Reads a single replica of a value.'],['fun','riak_test','rt:get_ring/1','Get the raw ring for Node.'],['fun','riak_test','rt:get_version/0','Gets the current version under test.'],['fun','riak_test','rt:get_version/1','Gets the string flavor of the version tag specifie'],['fun','riak_test','rt:heal/1','heal the partition created by call to partition/2'],['fun','riak_test','rt:http_url/1','Returns HTTP URL information for a list of Nodes.'],['fun','riak_test','rt:httpc/1','get me an http client.'],['fun','riak_test','rt:httpc_read/1','does a read via the http erlang client.'],['fun','riak_test','rt:httpc_write/1','does a write via the http erlang client.'],['fun','riak_test','rt:https_url/1','Returns HTTPS URL information for a list of Nodes.'],['fun','riak_test','rt:is_mixed_cluster/1',[]],['fun','riak_test','rt:is_pingable/1','Is the Node up according to net_adm:ping.'],['fun','riak_test','rt:join/2','Have Node send a join request to PNode'],['fun','riak_test','rt:join_cluster/1',[]],['fun','riak_test','rt:leave/1','Have the Node leave the cluster.'],['fun','riak_test','rt:load_modules_on_nodes/2',[]],['fun','riak_test','rt:log_to_nodes/2','Log a message to the console of the specified test'],['fun','riak_test','rt:log_to_nodes/3','Log a message to the console of the specified test'],['fun','riak_test','rt:members_according_to/1','Return a list of cluster members according to the '],['fun','riak_test','rt:nearest_ringsize/1','Return an appropriate ringsize for the node count '],['fun','riak_test','rt:owners_according_to/1','Return a list of nodes that own partitions accordi'],['fun','riak_test','rt:partition/2','partition the P1 from P2 nodes       note: the no'],['fun','riak_test','rt:partitions_for_node/1','Get list of partitions owned by node (primary).'],['fun','riak_test','rt:pbc/1',[]],['fun','riak_test','rt:pbc/1','get me a protobuf client process and hold the mayo'],['fun','riak_test','rt:pbc_put_dir/3','Puts all files in the given directory into the giv'],['fun','riak_test','rt:pbc_put_file/4','Puts the contents of the given file into the given'],['fun','riak_test','rt:pbc_read/1',[]],['fun','riak_test','rt:pbc_read/1','does a read via the erlang protobuf client.'],['fun','riak_test','rt:pbc_read_check/1',[]],['fun','riak_test','rt:pbc_read_check/1',[]],['fun','riak_test','rt:pbc_really_deleted/3','True if the given keys have been really, really de'],['fun','riak_test','rt:pbc_set_bucket_prop/1','sets a bucket property/properties via the erlang p'],['fun','riak_test','rt:pbc_write/1','does a write via the erlang protobuf client.'],['fun','riak_test','rt:post_result/2',[]],['fun','riak_test','rt:priv_dir/0',[]],['fun','riak_test','rt:product/1',[]],['fun','riak_test','rt:random_sublist/1','Returns a random element from a given list.'],['fun','riak_test','rt:remove/2','Have Node remove OtherNode from the cluster.'],['fun','riak_test','rt:riak/2','Call bin/riak command on Node with arguments Arg'],['fun','riak_test','rt:riak_repl/2','Call bin/riak-repl command on Node with argument'],['fun','riak_test','rt:rpc_get_env/2','Helper that returns first successful application g'],['fun','riak_test','rt:search_cmd/2',[]],['fun','riak_test','rt:select_random/1','Choose random in cluster, for example.'],['fun','riak_test','rt:set_advanced_conf/1',[]],['fun','riak_test','rt:set_backend/1',[]],['fun','riak_test','rt:set_backend/1','Sets the backend of ALL nodes that could be availa'],['fun','riak_test','rt:set_conf/1',[]],['fun','riak_test','rt:setup_log_capture/1','Set up in memory log capture to check contents in '],['fun','riak_test','rt:slow_upgrade/3','Upgrade a Riak node to a specific version using th'],['fun','riak_test','rt:spawn_cmd/1','Spawn Cmd on the machine running the test harness.'],['fun','riak_test','rt:spawn_cmd/2','Spawn Cmd on the machine running the test harness.'],['fun','riak_test','rt:start/1','Start the specified Riak node.'],['fun','riak_test','rt:start_and_wait/1','Start the specified Riak Node and wait for it to b'],['fun','riak_test','rt:status_of_according_to/2','Return the cluster status of Member according to t'],['fun','riak_test','rt:stop/1','Stop the specified Riak Node.'],['fun','riak_test','rt:stop_and_wait/1','Stop the specified Riak Node and wait until it is '],['fun','riak_test','rt:stop_tracing/0','Stop dbg tracing.'],['fun','riak_test','rt:str/1','if String contains Substr, return true.'],['fun','riak_test','rt:stream_cmd/1','same as rt:stream_cmd/1, but with options, like op'],['fun','riak_test','rt:stream_cmd/1','pretty much the same as os:cmd/1 but it will strea'],['fun','riak_test','rt:systest_read/2',[]],['fun','riak_test','rt:systest_read/3',[]],['fun','riak_test','rt:systest_read/5',[]],['fun','riak_test','rt:systest_read/6',[]],['fun','riak_test','rt:systest_write/2',[]],['fun','riak_test','rt:systest_write/3',[]],['fun','riak_test','rt:systest_write/5',[]],['fun','riak_test','rt:systest_write/6','Write (End-Start)+1 objects to Node.'],['fun','riak_test','rt:teardown/0','Shutdown every node, this is for after a test run '],['fun','riak_test','rt:update_app_config/2','Rewrite the given nodes app.config file, overridi'],['fun','riak_test','rt:upgrade/2','Upgrade a Riak Node to the specified NewVersion.'],['fun','riak_test','rt:upgrade/3','Upgrade a Riak Node to the specified NewVersion an'],['fun','riak_test','rt:versions/0',[]],['fun','riak_test','rt:wait_for_cluster_service/2',[]],['fun','riak_test','rt:wait_for_cmd/1','Wait for a command spawned by spawn_cmd, returning'],['fun','riak_test','rt:wait_for_control/1','Wait for Riak Control to start on a series of node'],['fun','riak_test','rt:wait_for_control/2','Wait for Riak Control to start on a single node.'],['fun','riak_test','rt:wait_for_service/2',[]],['fun','riak_test','rt:wait_until/1','Convenience wrapper for wait_until for the myriad '],['fun','riak_test','rt:wait_until/1','Utility function used to construct test predicates'],['fun','riak_test','rt:wait_until/3','Retry Fun until it returns Retry times, waiting De'],['fun','riak_test','rt:wait_until_aae_trees_built/1',[]],['fun','riak_test','rt:wait_until_all_members/1','Wait until all nodes in the list Nodes believe eac'],['fun','riak_test','rt:wait_until_all_members/2','Wait until all nodes in the list Nodes believes al'],['fun','riak_test','rt:wait_until_bucket_props/3',[]],['fun','riak_test','rt:wait_until_bucket_type_status/3',[]],['fun','riak_test','rt:wait_until_bucket_type_visible/2',[]],['fun','riak_test','rt:wait_until_capability/3',[]],['fun','riak_test','rt:wait_until_capability/4',[]],['fun','riak_test','rt:wait_until_connected/1','wait until each node in Nodes is disterl connected'],['fun','riak_test','rt:wait_until_legacy_ringready/1',[]],['fun','riak_test','rt:wait_until_no_pending_changes/1','Given a list of nodes, wait until all nodes believ'],['fun','riak_test','rt:wait_until_nodes_agree_about_ownership/1',[]],['fun','riak_test','rt:wait_until_nodes_ready/1','Given a list of nodes, wait until all nodes are co'],['fun','riak_test','rt:wait_until_owners_according_to/2',[]],['fun','riak_test','rt:wait_until_pingable/1','Wait until the specified node is pingable.'],['fun','riak_test','rt:wait_until_ready/1','Wait until the specified node is considered ready '],['fun','riak_test','rt:wait_until_registered/2',[]],['fun','riak_test','rt:wait_until_ring_converged/1','Given a list of nodes, wait until all nodes believ'],['fun','riak_test','rt:wait_until_status_ready/1','Wait until status can be read from riak_kv_console'],['fun','riak_test','rt:wait_until_transfers_complete/1','Waits until no transfers are in-flight or pending,'],['fun','riak_test','rt:wait_until_unpingable/1','Wait until the specified node is no longer pingabl'],['fun','riak_test','rt:whats_up/0','outputs some useful information about nodes that a'],['fun','riak_test','rt_config:config_or_os_env/1',[]],['fun','riak_test','rt_config:config_or_os_env/1',[]],['fun','riak_test','rt_config:get/1',[]],['fun','riak_test','rt_config:get/2',[]],['fun','riak_test','rt_config:get_os_env/1','Get the value of an OS Environment variable.'],['fun','riak_test','rt_config:get_os_env/2','Get the value of an OS Evironment variable.'],['fun','riak_test','rt_config:load/2','Load the configuration from the specified config f'],['fun','riak_test','rt_config:set/2',[]],['fun','riak_test','rt_cover:maybe_export_coverage/3',[]],['fun','riak_test','rt_cover:maybe_import_coverage/1',[]],['fun','riak_test','rt_cover:maybe_reset/0',[]],['fun','riak_test','rt_cover:maybe_start/1',[]],['fun','riak_test','rt_cover:maybe_start_on_node/2','Starts cover on the node if enabled and the node i'],['fun','riak_test','rt_cover:maybe_stop_on_node/1',[]],['fun','riak_test','rt_cover:maybe_stop_on_nodes/0',[]],['fun','riak_test','rt_cover:maybe_write_coverage/2','If enabled, write coverage analysis as HTML files.'],['fun','riak_test','rt_cover:start/1',[]],['fun','riak_test','rt_cover:stop/0',[]],['fun','riak_test','rt_cover:stop_on_node/1',[]],['fun','riak_test','rt_cover:stop_on_nodes/0',[]],['fun','riak_test','rt_intercept_pt:parse_transform/2',[]],['fun','riak_test','rt_local:assert_which/1','like rt:which, but asserts on failure.'],['fun','riak_test','rt_local:download/1',[]],['fun','riak_test','rt_local:home_dir/0','Return the home directory of the riak_test script.'],['fun','riak_test','rt_local:install_on_absence/2','checks if Command is installed and runs InstallCom'],['fun','riak_test','rt_local:stream_cmd/1','same as rt:stream_cmd/1, but with options, like op'],['fun','riak_test','rt_local:stream_cmd/1','pretty much the same as os:cmd/1 but it will strea'],['fun','riak_test','rt_local:url_to_filename/1',[]],['fun','riak_test','rt_local:which/1','Wrap which to give a good output if something is'],['fun','riak_test','rt_pipe_sink_fsm:acc/2',[]],['fun','riak_test','rt_pipe_sink_fsm:acc/3',[]],['fun','riak_test','rt_pipe_sink_fsm:code_change/4',[]],['fun','riak_test','rt_pipe_sink_fsm:get_results/1',[]],['fun','riak_test','rt_pipe_sink_fsm:handle_event/3',[]],['fun','riak_test','rt_pipe_sink_fsm:handle_info/3',[]],['fun','riak_test','rt_pipe_sink_fsm:handle_sync_event/4',[]],['fun','riak_test','rt_pipe_sink_fsm:init/1',[]],['fun','riak_test','rt_pipe_sink_fsm:start_link/1',[]],['fun','riak_test','rt_pipe_sink_fsm:start_link/2',[]],['fun','riak_test','rt_pipe_sink_fsm:terminate/3',[]],['fun','riak_test','rt_pipe_sink_fsm:wait/2',[]],['fun','riak_test','rt_pipe_sink_fsm:wait/3',[]],['fun','riak_test','rt_worker_sup:init/1',[]],['fun','riak_test','rt_worker_sup:start_link/1',[]],['fun','riak_test','smoke_test_escript:get_version/0',[]],['fun','riak_test','smoke_test_escript:main/1',[]],['fun','riak_test','smoke_test_escript:worker/4',[]],['fun','riak_test','yokozuna_rt:assert_search/6',[]],['fun','riak_test','yokozuna_rt:check_exists/1','Check if index/core exists in metadata, disk via y'],['fun','riak_test','yokozuna_rt:expire_trees/1','Expire YZ trees.'],['fun','riak_test','yokozuna_rt:gen_keys/1','Generate SeqMax keys.'],['fun','riak_test','yokozuna_rt:host_entries/1',[]],['fun','riak_test','yokozuna_rt:remove_index_dirs/1','Remove index directories, removing the index.'],['fun','riak_test','yokozuna_rt:rolling_upgrade/1',[]],['fun','riak_test','yokozuna_rt:rolling_upgrade/1','Peform a rolling upgrade of the Cluster to a diffe'],['fun','riak_test','yokozuna_rt:search/4',[]],['fun','riak_test','yokozuna_rt:search/5',[]],['fun','riak_test','yokozuna_rt:search_expect/5',[]],['fun','riak_test','yokozuna_rt:search_expect/6',[]],['fun','riak_test','yokozuna_rt:search_expect/7',[]],['fun','riak_test','yokozuna_rt:verify_num_found_query/1',[]],['fun','riak_test','yokozuna_rt:wait_for_aae/1','Use AAE status to verify that exchange has occurre'],['fun','riak_test','yokozuna_rt:wait_for_full_exchange_round/1','Wait for a full exchange round since Timestamp.'],['fun','riak_test','yokozuna_rt:wait_for_index/1','Wait for index creation.'],['fun','riak_test','yokozuna_rt:wait_for_schema/1','Wait for the schema Name to be read by all nodes i'],['fun','riak_test','yokozuna_rt:wait_for_schema/2',[]],['fun','riak_test','yokozuna_rt:write_data/1',[]],['fun','riak_test','yokozuna_rt:write_data/1','Write Keys via the PB inteface to a Bucket and hav']];