var index = [['app','riak_test','riak_test','[application]'],['mod','riak_test','giddyup','  Communicate with the GiddyUp web service.'],['mod','riak_test','make_certs',[]],['mod','riak_test','node_manager',[]],['mod','riak_test','observer',[]],['mod','riak_test','riak_test',[]],['mod','riak_test','riak_test_escript',[]],['mod','riak_test','riak_test_executor',[]],['mod','riak_test','riak_test_group_leader',[]],['mod','riak_test','riak_test_lager_backend','This lager backend keeps a buffer of logs in memor'],['mod','riak_test','rt','  Implements the base riak_test API, providing th'],['mod','riak_test','rt2','  Implements the base riak_test API, providing th'],['mod','riak_test','rt_aae',[]],['mod','riak_test','rt_backend',[]],['mod','riak_test','rt_bench',[]],['mod','riak_test','rt_bucket_types',[]],['mod','riak_test','rt_cluster',[]],['mod','riak_test','rt_cmd_line',[]],['mod','riak_test','rt_cover','Code to interact with cover, Erlangs code coverag'],['mod','riak_test','rt_cs_dev',[]],['mod','riak_test','rt_harness','rt_harness provides a level of indirection between'],['mod','riak_test','rt_harness_util','The purpose of rt_harness_util is to provide commo'],['mod','riak_test','rt_http',[]],['mod','riak_test','rt_intercept',[]],['mod','riak_test','rt_intercept_pt',[]],['mod','riak_test','rt_local',[]],['mod','riak_test','rt_pb',[]],['mod','riak_test','rt_pipe','Utilities for riak_pipe tests.'],['mod','riak_test','rt_pipe_sink_fsm','Sink fsm for eunit tests.'],['mod','riak_test','rt_planner','  Module to manage the list of pending test plans'],['mod','riak_test','rt_riak_node','.'],['mod','riak_test','rt_ring',[]],['mod','riak_test','rt_systest',[]],['mod','riak_test','rt_test_plan','.'],['mod','riak_test','rt_util',[]],['mod','riak_test','rt_worker_sup',[]],['mod','riak_test','rtdev',[]],['mod','riak_test','rtperf',[]],['mod','riak_test','rtssh',[]],['mod','riak_test','smoke_test_escript',[]],['mod','riak_test','test_harness','behaviour for all test harnesses.'],['fun','riak_test','giddyup:get_test_plans/0','  Get the entire test suite for the specified pla'],['fun','riak_test','giddyup:post_artifact/1','  Send a test log file back up to GiddyUp.'],['fun','riak_test','giddyup:post_result/1','  Send a test result back up to GiddyUp.'],['fun','riak_test','giddyup:start_link/1','  Starts the server.'],['fun','riak_test','giddyup:stop/0','  Stops the server.'],['fun','riak_test','make_certs:all/1',[]],['fun','riak_test','make_certs:all/2',[]],['fun','riak_test','make_certs:enduser/3',[]],['fun','riak_test','make_certs:endusers/3',[]],['fun','riak_test','make_certs:gencrl/2',[]],['fun','riak_test','make_certs:intermediateCA/3',[]],['fun','riak_test','make_certs:revoke/3',[]],['fun','riak_test','make_certs:rootCA/2',[]],['fun','riak_test','make_certs:verify/3',[]],['fun','riak_test','node_manager:code_change/3',[]],['fun','riak_test','node_manager:deploy_nodes/1',[]],['fun','riak_test','node_manager:handle_call/3',[]],['fun','riak_test','node_manager:handle_cast/2',[]],['fun','riak_test','node_manager:handle_info/2',[]],['fun','riak_test','node_manager:init/1',[]],['fun','riak_test','node_manager:reserve_nodes/1',[]],['fun','riak_test','node_manager:return_nodes/1',[]],['fun','riak_test','node_manager:start_link/3',[]],['fun','riak_test','node_manager:status/0',[]],['fun','riak_test','node_manager:stop/0',[]],['fun','riak_test','node_manager:terminate/2',[]],['fun','riak_test','node_manager:upgrade_nodes/1',[]],['fun','riak_test','riak_test_escript:add_deps/1',[]],['fun','riak_test','riak_test_escript:main/1',[]],['fun','riak_test','riak_test_executor:code_change/4','this fsm has no special upgrade process.'],['fun','riak_test','riak_test_executor:gather_properties/2',[]],['fun','riak_test','riak_test_executor:gather_properties/3',[]],['fun','riak_test','riak_test_executor:handle_event/3','there are no all-state events for this fsm.'],['fun','riak_test','riak_test_executor:handle_info/3',[]],['fun','riak_test','riak_test_executor:handle_sync_event/1','Handle synchronous events that should be handled '],['fun','riak_test','riak_test_executor:init/1',[]],['fun','riak_test','riak_test_executor:launch_test/2',[]],['fun','riak_test','riak_test_executor:launch_test/3',[]],['fun','riak_test','riak_test_executor:request_nodes/2',[]],['fun','riak_test','riak_test_executor:request_nodes/3',[]],['fun','riak_test','riak_test_executor:send_event/1',[]],['fun','riak_test','riak_test_executor:start_link/1','Start the test executor.'],['fun','riak_test','riak_test_executor:stop/0','Stop the executor.'],['fun','riak_test','riak_test_executor:terminate/3',[]],['fun','riak_test','riak_test_executor:wait_for_completion/2',[]],['fun','riak_test','riak_test_executor:wait_for_completion/3',[]],['fun','riak_test','riak_test_group_leader:group_leader_loop/1','listens for io_requests, and pipes them into lager'],['fun','riak_test','riak_test_group_leader:new_group_leader/1','spawns the new group leader.'],['fun','riak_test','riak_test_group_leader:tidy_up/1','closes group leader down.'],['fun','riak_test','riak_test_lager_backend:get_logs/0',[]],['fun','riak_test','riak_test_lager_backend:terminate/1','gen_event callback, does nothing.'],['fun','riak_test','rt2:capability/2',[]],['fun','riak_test','rt2:capability/3',[]],['fun','riak_test','rt2:check_ibrowse/0',[]],['fun','riak_test','rt2:cmd/1','Spawn Cmd on the machine running the test harness,'],['fun','riak_test','rt2:cmd/2','Spawn Cmd on the machine running the test harness,'],['fun','riak_test','rt2:connection_info/1',[]],['fun','riak_test','rt2:enable_search_hook/2',[]],['fun','riak_test','rt2:expect_in_log/2',[]],['fun','riak_test','rt2:get_deps/0','gets riak deps from the appropriate harness.'],['fun','riak_test','rt2:get_ip/1',[]],['fun','riak_test','rt2:get_node_logs/2','Downloads any extant log files from the harnesss '],['fun','riak_test','rt2:get_replica/5','Reads a single replica of a value.'],['fun','riak_test','rt2:get_version/0','Gets the current version under test.'],['fun','riak_test','rt2:is_mixed_cluster/1',[]],['fun','riak_test','rt2:load_modules_on_nodes/2',[]],['fun','riak_test','rt2:log_to_nodes/2','Log a message to the console of the specified test'],['fun','riak_test','rt2:log_to_nodes/3','Log a message to the console of the specified test'],['fun','riak_test','rt2:pmap/1','Parallel Map: Runs function F for each item in lis'],['fun','riak_test','rt2:priv_dir/0',[]],['fun','riak_test','rt2:product/1',[]],['fun','riak_test','rt2:rpc_get_env/2','Helper that returns first successful application g'],['fun','riak_test','rt2:setup_log_capture/1','Set up in memory log capture to check contents in '],['fun','riak_test','rt2:spawn_cmd/1','Spawn Cmd on the machine running the test harness.'],['fun','riak_test','rt2:spawn_cmd/2','Spawn Cmd on the machine running the test harness.'],['fun','riak_test','rt2:str/1','if String contains Substr, return true.'],['fun','riak_test','rt2:stream_cmd/1','same as rt:stream_cmd/1, but with options, like op'],['fun','riak_test','rt2:stream_cmd/1','pretty much the same as os:cmd/1 but it will strea'],['fun','riak_test','rt2:wait_for_cluster_service/2',[]],['fun','riak_test','rt2:wait_for_cmd/1','Wait for a command spawned by spawn_cmd, returning'],['fun','riak_test','rt2:wait_for_control/1','Wait for Riak Control to start on a series of node'],['fun','riak_test','rt2:wait_for_control/2','Wait for Riak Control to start on a single node.'],['fun','riak_test','rt2:wait_for_service/2',[]],['fun','riak_test','rt2:wait_until/1','Utility function used to construct test predicates'],['fun','riak_test','rt2:wait_until/2','Convenience wrapper for wait_until for the myriad '],['fun','riak_test','rt2:wait_until/3','Retry Fun until it returns Retry times, waiting De'],['fun','riak_test','rt2:wait_until_all_members/1','Wait until all nodes in the list Nodes believe eac'],['fun','riak_test','rt2:wait_until_all_members/2','Wait until all nodes in the list Nodes believes al'],['fun','riak_test','rt2:wait_until_capability/3',[]],['fun','riak_test','rt2:wait_until_capability/4',[]],['fun','riak_test','rt2:wait_until_connected/1','wait until each node in Nodes is disterl connected'],['fun','riak_test','rt2:wait_until_legacy_ringready/1',[]],['fun','riak_test','rt2:wait_until_no_pending_changes/1','Given a list of nodes, wait until all nodes believ'],['fun','riak_test','rt2:wait_until_pingable/1','Wait until the specified node is pingable.'],['fun','riak_test','rt2:wait_until_ready/1','Wait until the specified node is considered ready '],['fun','riak_test','rt2:wait_until_registered/2',[]],['fun','riak_test','rt2:wait_until_ring_converged/1','Given a list of nodes, wait until all nodes believ'],['fun','riak_test','rt2:wait_until_status_ready/1','Wait until status can be read from riak_kv_console'],['fun','riak_test','rt2:wait_until_transfers_complete/1','Waits until no transfers are in-flight or pending,'],['fun','riak_test','rt2:wait_until_unpingable/1','Wait until the specified node is no longer pingabl'],['fun','riak_test','rt2:whats_up/0','outputs some useful information about nodes that a'],['fun','riak_test','rt:admin/2','Call bin/riak-admin command on Node with argumen'],['fun','riak_test','rt:admin/3','Call bin/riak-admin command on Node with argumen'],['fun','riak_test','rt:assert_nodes_agree_about_ownership/1',[]],['fun','riak_test','rt:async_start/1',[]],['fun','riak_test','rt:attach/2','Runs riak attach on a specific node, and tests for'],['fun','riak_test','rt:attach_direct/2','Runs riak attach-direct on a specific node.'],['fun','riak_test','rt:brutal_kill/1',[]],['fun','riak_test','rt:build_cluster/1','Safely construct a new cluster and return a list o'],['fun','riak_test','rt:build_cluster/2','Safely construct a NumNode size cluster using    '],['fun','riak_test','rt:build_cluster/3',[]],['fun','riak_test','rt:build_clusters/1',[]],['fun','riak_test','rt:capability/2',[]],['fun','riak_test','rt:capability/3',[]],['fun','riak_test','rt:check_ibrowse/0',[]],['fun','riak_test','rt:check_singleton_node/1','Ensure that the specified node is a singleton node'],['fun','riak_test','rt:claimant_according_to/1','Return a list of nodes that own partitions accordi'],['fun','riak_test','rt:clean_cluster/1','Stop nodes and wipe out their data directories.'],['fun','riak_test','rt:clean_data_dir/1',[]],['fun','riak_test','rt:clean_data_dir/2',[]],['fun','riak_test','rt:cmd/1','Spawn Cmd on the machine running the test harness,'],['fun','riak_test','rt:cmd/2','Spawn Cmd on the machine running the test harness,'],['fun','riak_test','rt:connection_info/1',[]],['fun','riak_test','rt:console/2','Runs riak console on a specific node.'],['fun','riak_test','rt:create_and_activate_bucket_type/3','create and immediately activate a bucket type.'],['fun','riak_test','rt:deploy_clusters/1',[]],['fun','riak_test','rt:deploy_nodes/1','Deploy a set of freshly installed Riak nodes with '],['fun','riak_test','rt:deploy_nodes/1','Deploy a set of freshly installed Riak nodes, retu'],['fun','riak_test','rt:deploy_nodes/3',[]],['fun','riak_test','rt:down/2','Have Node mark OtherNode as down.'],['fun','riak_test','rt:enable_search_hook/2',[]],['fun','riak_test','rt:expect_in_log/2',[]],['fun','riak_test','rt:get_deps/0','gets riak deps from the appropriate harness.'],['fun','riak_test','rt:get_ip/1',[]],['fun','riak_test','rt:get_node_logs/1','Copy all of the nodes log files to a local dir.'],['fun','riak_test','rt:get_replica/5','Reads a single replica of a value.'],['fun','riak_test','rt:get_ring/1','Get the raw ring for Node.'],['fun','riak_test','rt:get_version/0','Gets the current version under test.'],['fun','riak_test','rt:get_version/1',[]],['fun','riak_test','rt:heal/1','heal the partition created by call to partition/2'],['fun','riak_test','rt:http_url/1','Returns HTTP URL information for a list of Nodes.'],['fun','riak_test','rt:httpc/1','get me an http client.'],['fun','riak_test','rt:httpc_read/1','does a read via the http erlang client.'],['fun','riak_test','rt:httpc_write/1','does a write via the http erlang client.'],['fun','riak_test','rt:https_url/1','Returns HTTPS URL information for a list of Nodes.'],['fun','riak_test','rt:is_mixed_cluster/1',[]],['fun','riak_test','rt:is_pingable/1','Is the Node up according to net_adm:ping.'],['fun','riak_test','rt:join/2','Have Node send a join request to PNode'],['fun','riak_test','rt:join_cluster/1',[]],['fun','riak_test','rt:leave/1','Have the Node leave the cluster.'],['fun','riak_test','rt:load_modules_on_nodes/2',[]],['fun','riak_test','rt:log_to_nodes/2','Log a message to the console of the specified test'],['fun','riak_test','rt:log_to_nodes/3','Log a message to the console of the specified test'],['fun','riak_test','rt:members_according_to/1','Return a list of cluster members according to the '],['fun','riak_test','rt:nearest_ringsize/1','Return an appropriate ringsize for the node count '],['fun','riak_test','rt:owners_according_to/1','Return a list of nodes that own partitions accordi'],['fun','riak_test','rt:partition/2','partition the P1 from P2 nodes       note: the no'],['fun','riak_test','rt:partitions_for_node/1','Get list of partitions owned by node (primary).'],['fun','riak_test','rt:pbc/1',[]],['fun','riak_test','rt:pbc/1','get me a protobuf client process and hold the mayo'],['fun','riak_test','rt:pbc_put_dir/3','Puts all files in the given directory into the giv'],['fun','riak_test','rt:pbc_put_file/4','Puts the contents of the given file into the given'],['fun','riak_test','rt:pbc_read/1',[]],['fun','riak_test','rt:pbc_read/1','does a read via the erlang protobuf client.'],['fun','riak_test','rt:pbc_read_check/1',[]],['fun','riak_test','rt:pbc_read_check/1',[]],['fun','riak_test','rt:pbc_really_deleted/3','True if the given keys have been really, really de'],['fun','riak_test','rt:pbc_set_bucket_prop/1','sets a bucket property/properties via the erlang p'],['fun','riak_test','rt:pbc_write/1','does a write via the erlang protobuf client.'],['fun','riak_test','rt:pmap/2',[]],['fun','riak_test','rt:priv_dir/0',[]],['fun','riak_test','rt:product/1',[]],['fun','riak_test','rt:remove/2','Have Node remove OtherNode from the cluster.'],['fun','riak_test','rt:riak/2','Call bin/riak command on Node with arguments Arg'],['fun','riak_test','rt:riak_repl/2','Call bin/riak-repl command on Node with argument'],['fun','riak_test','rt:rpc_get_env/2','Helper that returns first successful application g'],['fun','riak_test','rt:search_cmd/2',[]],['fun','riak_test','rt:set_advanced_conf/1',[]],['fun','riak_test','rt:set_backend/1',[]],['fun','riak_test','rt:set_backend/1','Sets the backend of ALL nodes that could be availa'],['fun','riak_test','rt:set_conf/1',[]],['fun','riak_test','rt:setup_harness/2',[]],['fun','riak_test','rt:setup_log_capture/1','Set up in memory log capture to check contents in '],['fun','riak_test','rt:slow_upgrade/3','Upgrade a Riak node to a specific version using th'],['fun','riak_test','rt:spawn_cmd/1','Spawn Cmd on the machine running the test harness.'],['fun','riak_test','rt:spawn_cmd/2','Spawn Cmd on the machine running the test harness.'],['fun','riak_test','rt:start/1','Start the specified Riak node.'],['fun','riak_test','rt:start_and_wait/1','Start the specified Riak Node and wait for it to b'],['fun','riak_test','rt:status_of_according_to/2','Return the cluster status of Member according to t'],['fun','riak_test','rt:stop/1','Stop the specified Riak Node.'],['fun','riak_test','rt:stop_and_wait/1','Stop the specified Riak Node and wait until it is '],['fun','riak_test','rt:str/1','if String contains Substr, return true.'],['fun','riak_test','rt:stream_cmd/1','same as rt:stream_cmd/1, but with options, like op'],['fun','riak_test','rt:stream_cmd/1','pretty much the same as os:cmd/1 but it will strea'],['fun','riak_test','rt:systest_read/2',[]],['fun','riak_test','rt:systest_read/3',[]],['fun','riak_test','rt:systest_read/5',[]],['fun','riak_test','rt:systest_read/6',[]],['fun','riak_test','rt:systest_write/2',[]],['fun','riak_test','rt:systest_write/3',[]],['fun','riak_test','rt:systest_write/5',[]],['fun','riak_test','rt:systest_write/6','Write (End-Start)+1 objects to Node.'],['fun','riak_test','rt:teardown/0','Shutdown every node, this is for after a test run '],['fun','riak_test','rt:update_app_config/2','Rewrite the given nodes app.config file, overridi'],['fun','riak_test','rt:upgrade/2','Upgrade a Riak Node to the specified NewVersion.'],['fun','riak_test','rt:upgrade/3','Upgrade a Riak Node to the specified NewVersion an'],['fun','riak_test','rt:versions/0',[]],['fun','riak_test','rt:wait_for_cluster_service/2',[]],['fun','riak_test','rt:wait_for_cmd/1','Wait for a command spawned by spawn_cmd, returning'],['fun','riak_test','rt:wait_for_control/1','Wait for Riak Control to start on a series of node'],['fun','riak_test','rt:wait_for_control/2','Wait for Riak Control to start on a single node.'],['fun','riak_test','rt:wait_for_service/2',[]],['fun','riak_test','rt:wait_until/1','Utility function used to construct test predicates'],['fun','riak_test','rt:wait_until/2','Convenience wrapper for wait_until for the myriad '],['fun','riak_test','rt:wait_until/3','Retry Fun until it returns Retry times, waiting De'],['fun','riak_test','rt:wait_until_aae_trees_built/1',[]],['fun','riak_test','rt:wait_until_all_members/1','Wait until all nodes in the list Nodes believe eac'],['fun','riak_test','rt:wait_until_all_members/2','Wait until all nodes in the list Nodes believes al'],['fun','riak_test','rt:wait_until_bucket_props/3',[]],['fun','riak_test','rt:wait_until_bucket_type_status/3',[]],['fun','riak_test','rt:wait_until_bucket_type_visible/2',[]],['fun','riak_test','rt:wait_until_capability/3',[]],['fun','riak_test','rt:wait_until_capability/4',[]],['fun','riak_test','rt:wait_until_connected/1','wait until each node in Nodes is disterl connected'],['fun','riak_test','rt:wait_until_legacy_ringready/1',[]],['fun','riak_test','rt:wait_until_no_pending_changes/1','Given a list of nodes, wait until all nodes believ'],['fun','riak_test','rt:wait_until_nodes_agree_about_ownership/1',[]],['fun','riak_test','rt:wait_until_nodes_ready/1','Given a list of nodes, wait until all nodes are co'],['fun','riak_test','rt:wait_until_owners_according_to/2',[]],['fun','riak_test','rt:wait_until_pingable/1','Wait until the specified node is pingable.'],['fun','riak_test','rt:wait_until_ready/1','Wait until the specified node is considered ready '],['fun','riak_test','rt:wait_until_registered/2',[]],['fun','riak_test','rt:wait_until_ring_converged/1','Given a list of nodes, wait until all nodes believ'],['fun','riak_test','rt:wait_until_status_ready/1','Wait until status can be read from riak_kv_console'],['fun','riak_test','rt:wait_until_transfers_complete/1','Waits until no transfers are in-flight or pending,'],['fun','riak_test','rt:wait_until_unpingable/1','Wait until the specified node is no longer pingabl'],['fun','riak_test','rt:whats_up/0','outputs some useful information about nodes that a'],['fun','riak_test','rt_aae:wait_until_aae_trees_built/1',[]],['fun','riak_test','rt_backend:set/2',[]],['fun','riak_test','rt_bucket_types:create_and_activate_bucket_type/3','create and immediately activate a bucket type.'],['fun','riak_test','rt_bucket_types:create_and_wait/1',[]],['fun','riak_test','rt_bucket_types:wait_until_bucket_props/3',[]],['fun','riak_test','rt_bucket_types:wait_until_bucket_type_status/3',[]],['fun','riak_test','rt_bucket_types:wait_until_bucket_type_visible/2',[]],['fun','riak_test','rt_cluster:augment_config/3',[]],['fun','riak_test','rt_cluster:clean_cluster/1','Stop nodes and wipe out their data directories.'],['fun','riak_test','rt_cluster:clean_data_dir/1',[]],['fun','riak_test','rt_cluster:clean_data_dir/2',[]],['fun','riak_test','rt_cluster:join_cluster/2',[]],['fun','riak_test','rt_cluster:maybe_wait_for_transfers/3',[]],['fun','riak_test','rt_cluster:properties/0','Default properties used if a riak_test module does'],['fun','riak_test','rt_cluster:setup/1',[]],['fun','riak_test','rt_cluster:teardown/0','Shutdown every node, this is for after a test run '],['fun','riak_test','rt_cluster:try_nodes_ready/3',[]],['fun','riak_test','rt_cluster:versions/0',[]],['fun','riak_test','rt_cmd_line:admin/2','Call bin/riak-admin command on Node with argumen'],['fun','riak_test','rt_cmd_line:admin/3','Call bin/riak-admin command on Node with argumen'],['fun','riak_test','rt_cmd_line:attach/2','Runs riak attach on a specific node, and tests for'],['fun','riak_test','rt_cmd_line:attach_direct/2','Runs riak attach-direct on a specific node.'],['fun','riak_test','rt_cmd_line:console/2','Runs riak console on a specific node.'],['fun','riak_test','rt_cmd_line:riak/2','Call bin/riak command on Node with arguments Arg'],['fun','riak_test','rt_cmd_line:riak_repl/2','Call bin/riak-repl command on Node with argument'],['fun','riak_test','rt_cmd_line:search_cmd/2',[]],['fun','riak_test','rt_cover:maybe_export_coverage/3',[]],['fun','riak_test','rt_cover:maybe_import_coverage/1',[]],['fun','riak_test','rt_cover:maybe_reset/0',[]],['fun','riak_test','rt_cover:maybe_start/1',[]],['fun','riak_test','rt_cover:maybe_start_on_node/2','Starts cover on the node if enabled and the node i'],['fun','riak_test','rt_cover:maybe_stop_on_node/1',[]],['fun','riak_test','rt_cover:maybe_stop_on_nodes/0',[]],['fun','riak_test','rt_cover:maybe_write_coverage/2','If enabled, write coverage analysis as HTML files.'],['fun','riak_test','rt_cover:start/1',[]],['fun','riak_test','rt_cover:stop/0',[]],['fun','riak_test','rt_cover:stop_on_node/1',[]],['fun','riak_test','rt_cover:stop_on_nodes/0',[]],['fun','riak_test','rt_cs_dev:admin/2',[]],['fun','riak_test','rt_cs_dev:admin/3',[]],['fun','riak_test','rt_cs_dev:attach/2',[]],['fun','riak_test','rt_cs_dev:attach_direct/2',[]],['fun','riak_test','rt_cs_dev:clean_data_dir/2',[]],['fun','riak_test','rt_cs_dev:cmd/1',[]],['fun','riak_test','rt_cs_dev:cmd/2',[]],['fun','riak_test','rt_cs_dev:console/2',[]],['fun','riak_test','rt_cs_dev:create_dirs/1',[]],['fun','riak_test','rt_cs_dev:deploy_clusters/1',[]],['fun','riak_test','rt_cs_dev:deploy_nodes/1',[]],['fun','riak_test','rt_cs_dev:get_backends/0',[]],['fun','riak_test','rt_cs_dev:get_deps/0',[]],['fun','riak_test','rt_cs_dev:get_ip/1',[]],['fun','riak_test','rt_cs_dev:get_node_logs/0',[]],['fun','riak_test','rt_cs_dev:get_node_logs/1',[]],['fun','riak_test','rt_cs_dev:get_version/0',[]],['fun','riak_test','rt_cs_dev:node_id/1',[]],['fun','riak_test','rt_cs_dev:node_version/1',[]],['fun','riak_test','rt_cs_dev:riak/2',[]],['fun','riak_test','rt_cs_dev:set_advanced_conf/2',[]],['fun','riak_test','rt_cs_dev:set_backend/1',[]],['fun','riak_test','rt_cs_dev:set_conf/2',[]],['fun','riak_test','rt_cs_dev:setup_harness/2',[]],['fun','riak_test','rt_cs_dev:spawn_cmd/1',[]],['fun','riak_test','rt_cs_dev:spawn_cmd/2',[]],['fun','riak_test','rt_cs_dev:start/1',[]],['fun','riak_test','rt_cs_dev:stop/1',[]],['fun','riak_test','rt_cs_dev:teardown/0',[]],['fun','riak_test','rt_cs_dev:update_app_config/2',[]],['fun','riak_test','rt_cs_dev:upgrade/2',[]],['fun','riak_test','rt_cs_dev:versions/0',[]],['fun','riak_test','rt_cs_dev:whats_up/0',[]],['fun','riak_test','rt_harness:admin/2',[]],['fun','riak_test','rt_harness:admin/3',[]],['fun','riak_test','rt_harness:attach/2',[]],['fun','riak_test','rt_harness:attach_direct/2',[]],['fun','riak_test','rt_harness:available_resources/0',[]],['fun','riak_test','rt_harness:clean_data_dir/3',[]],['fun','riak_test','rt_harness:cmd/1',[]],['fun','riak_test','rt_harness:cmd/2',[]],['fun','riak_test','rt_harness:console/2',[]],['fun','riak_test','rt_harness:deploy_clusters/1',[]],['fun','riak_test','rt_harness:deploy_nodes/1',[]],['fun','riak_test','rt_harness:get_backends/0',[]],['fun','riak_test','rt_harness:get_deps/0',[]],['fun','riak_test','rt_harness:get_ip/1',[]],['fun','riak_test','rt_harness:get_node_logs/2',[]],['fun','riak_test','rt_harness:get_version/0',[]],['fun','riak_test','rt_harness:get_version/1',[]],['fun','riak_test','rt_harness:node_id/1',[]],['fun','riak_test','rt_harness:node_version/1',[]],['fun','riak_test','rt_harness:riak/2',[]],['fun','riak_test','rt_harness:riak_repl/2',[]],['fun','riak_test','rt_harness:run_riak/3',[]],['fun','riak_test','rt_harness:set_advanced_conf/2',[]],['fun','riak_test','rt_harness:set_backend/1',[]],['fun','riak_test','rt_harness:set_conf/2',[]],['fun','riak_test','rt_harness:setup/0',[]],['fun','riak_test','rt_harness:spawn_cmd/1',[]],['fun','riak_test','rt_harness:spawn_cmd/2',[]],['fun','riak_test','rt_harness:start/2',[]],['fun','riak_test','rt_harness:stop/2',[]],['fun','riak_test','rt_harness:teardown/0',[]],['fun','riak_test','rt_harness:update_app_config/2',[]],['fun','riak_test','rt_harness:update_app_config/3',[]],['fun','riak_test','rt_harness:upgrade/2',[]],['fun','riak_test','rt_harness:validate_config/1',[]],['fun','riak_test','rt_harness:whats_up/0',[]],['fun','riak_test','rt_harness_util:admin/2',[]],['fun','riak_test','rt_harness_util:attach/2',[]],['fun','riak_test','rt_harness_util:attach_direct/2',[]],['fun','riak_test','rt_harness_util:cmd/1',[]],['fun','riak_test','rt_harness_util:cmd/2',[]],['fun','riak_test','rt_harness_util:console/2',[]],['fun','riak_test','rt_harness_util:deploy_nodes/5',[]],['fun','riak_test','rt_harness_util:get_advanced_riak_conf/1',[]],['fun','riak_test','rt_harness_util:get_ip/1',[]],['fun','riak_test','rt_harness_util:node_id/1',[]],['fun','riak_test','rt_harness_util:node_version/1',[]],['fun','riak_test','rt_harness_util:riak/2',[]],['fun','riak_test','rt_harness_util:set_advanced_conf/2',[]],['fun','riak_test','rt_harness_util:set_conf/1',[]],['fun','riak_test','rt_harness_util:setup_harness/3',[]],['fun','riak_test','rt_harness_util:spawn_cmd/1',[]],['fun','riak_test','rt_harness_util:spawn_cmd/2',[]],['fun','riak_test','rt_harness_util:update_app_config_file/2',[]],['fun','riak_test','rt_harness_util:whats_up/0',[]],['fun','riak_test','rt_http:get_http_conn_info/1',[]],['fun','riak_test','rt_http:get_https_conn_info/1',[]],['fun','riak_test','rt_http:http_url/1','Returns HTTP URL information for a list of Nodes.'],['fun','riak_test','rt_http:httpc/1','get me an http client.'],['fun','riak_test','rt_http:httpc_read/1','does a read via the http erlang client.'],['fun','riak_test','rt_http:httpc_write/1','does a write via the http erlang client.'],['fun','riak_test','rt_http:https_url/1','Returns HTTPS URL information for a list of Nodes.'],['fun','riak_test','rt_intercept_pt:parse_transform/2',[]],['fun','riak_test','rt_local:assert_which/1','like rt:which, but asserts on failure.'],['fun','riak_test','rt_local:download/1',[]],['fun','riak_test','rt_local:home_dir/0','Return the home directory of the riak_test script.'],['fun','riak_test','rt_local:install_on_absence/2','checks if Command is installed and runs InstallCom'],['fun','riak_test','rt_local:stream_cmd/1','same as rt:stream_cmd/1, but with options, like op'],['fun','riak_test','rt_local:stream_cmd/1','pretty much the same as os:cmd/1 but it will strea'],['fun','riak_test','rt_local:url_to_filename/1',[]],['fun','riak_test','rt_local:which/1','Wrap which to give a good output if something is'],['fun','riak_test','rt_pb:get_pb_conn_info/1',[]],['fun','riak_test','rt_pb:pbc/1',[]],['fun','riak_test','rt_pb:pbc/1','get me a protobuf client process and hold the mayo'],['fun','riak_test','rt_pb:pbc_put_dir/3','Puts all files in the given directory into the giv'],['fun','riak_test','rt_pb:pbc_put_file/4','Puts the contents of the given file into the given'],['fun','riak_test','rt_pb:pbc_read/1',[]],['fun','riak_test','rt_pb:pbc_read/1','does a read via the erlang protobuf client.'],['fun','riak_test','rt_pb:pbc_read_check/1',[]],['fun','riak_test','rt_pb:pbc_read_check/1',[]],['fun','riak_test','rt_pb:pbc_really_deleted/3','True if the given keys have been really, really de'],['fun','riak_test','rt_pb:pbc_set_bucket_prop/1','sets a bucket property/properties via the erlang p'],['fun','riak_test','rt_pb:pbc_systest_read/2',[]],['fun','riak_test','rt_pb:pbc_systest_read/3',[]],['fun','riak_test','rt_pb:pbc_systest_read/5',[]],['fun','riak_test','rt_pb:pbc_systest_write/2','PBC-based version of systest_write/1'],['fun','riak_test','rt_pb:pbc_systest_write/3',[]],['fun','riak_test','rt_pb:pbc_systest_write/5',[]],['fun','riak_test','rt_pb:pbc_write/1','does a write via the erlang protobuf client plus c'],['fun','riak_test','rt_pb:pbc_write/1','does a write via the erlang protobuf client.'],['fun','riak_test','rt_pb:stop/1',[]],['fun','riak_test','rt_pipe_sink_fsm:acc/2',[]],['fun','riak_test','rt_pipe_sink_fsm:acc/3',[]],['fun','riak_test','rt_pipe_sink_fsm:code_change/4',[]],['fun','riak_test','rt_pipe_sink_fsm:get_results/1',[]],['fun','riak_test','rt_pipe_sink_fsm:handle_event/3',[]],['fun','riak_test','rt_pipe_sink_fsm:handle_info/3',[]],['fun','riak_test','rt_pipe_sink_fsm:handle_sync_event/4',[]],['fun','riak_test','rt_pipe_sink_fsm:init/1',[]],['fun','riak_test','rt_pipe_sink_fsm:start_link/1',[]],['fun','riak_test','rt_pipe_sink_fsm:start_link/2',[]],['fun','riak_test','rt_pipe_sink_fsm:terminate/3',[]],['fun','riak_test','rt_pipe_sink_fsm:wait/2',[]],['fun','riak_test','rt_pipe_sink_fsm:wait/3',[]],['fun','riak_test','rt_planner:add_test_plan/1','  Queue up a new test plan.'],['fun','riak_test','rt_planner:fetch_test_non_runnable_plan/0','  Fetch a test plan off the queue.'],['fun','riak_test','rt_planner:fetch_test_plan/0','  Fetch a test plan off the queue.'],['fun','riak_test','rt_planner:load_from_giddyup/1','  Reads the list of test plans from GiddyUp and q'],['fun','riak_test','rt_planner:number_of_non_runable_plans/0','  Return the number of non-runable test plans in '],['fun','riak_test','rt_planner:number_of_plans/0','  Return the number of runable test plans in the '],['fun','riak_test','rt_planner:start_link/0','  Starts the server.'],['fun','riak_test','rt_planner:stop/0','  Stops the server.'],['fun','riak_test','rt_riak_node:admin/1','Call bin/riak-admin command on Node with argumen'],['fun','riak_test','rt_riak_node:admin/1','Call bin/riak-admin command on Node with argumen'],['fun','riak_test','rt_riak_node:assert_singleton/1','Ensure that the specified node is a singleton node'],['fun','riak_test','rt_riak_node:attach/1','Runs riak attach on a specific node, and tests for'],['fun','riak_test','rt_riak_node:attach_direct/1','Runs riak attach-direct on a specific node.'],['fun','riak_test','rt_riak_node:brutal_kill/1',[]],['fun','riak_test','rt_riak_node:claimant_according_to/1','Return a list of nodes that own partitions accordi'],['fun','riak_test','rt_riak_node:clean_data_dir/1',[]],['fun','riak_test','rt_riak_node:clean_data_dir/1',[]],['fun','riak_test','rt_riak_node:commit/1',[]],['fun','riak_test','rt_riak_node:console/1','Runs riak console on a specific node.'],['fun','riak_test','rt_riak_node:get_ring/1','Get the raw ring for Node.'],['fun','riak_test','rt_riak_node:is_allocated/1',[]],['fun','riak_test','rt_riak_node:is_ready/1',[]],['fun','riak_test','rt_riak_node:is_stopped/1',[]],['fun','riak_test','rt_riak_node:join/1',[]],['fun','riak_test','rt_riak_node:members_according_to/1','Return a list of cluster members according to the '],['fun','riak_test','rt_riak_node:owners_according_to/1','Return a list of nodes that own partitions accordi'],['fun','riak_test','rt_riak_node:partitions/1','Get list of partitions owned by node (primary).'],['fun','riak_test','rt_riak_node:ping/1',[]],['fun','riak_test','rt_riak_node:plan/1',[]],['fun','riak_test','rt_riak_node:ready/3',[]],['fun','riak_test','rt_riak_node:riak/1','Call bin/riak command on Node with arguments Arg'],['fun','riak_test','rt_riak_node:riak_repl/1','Call bin/riak command on Node with arguments Arg'],['fun','riak_test','rt_riak_node:search_cmd/1',[]],['fun','riak_test','rt_riak_node:start/1',[]],['fun','riak_test','rt_riak_node:start/1',[]],['fun','riak_test','rt_riak_node:start_link/1','Starts a gen_fsm process to configure, start, and'],['fun','riak_test','rt_riak_node:status_of_according_to/1','Return the cluster status of Member according to t'],['fun','riak_test','rt_riak_node:stop/1',[]],['fun','riak_test','rt_riak_node:stop/1',[]],['fun','riak_test','rt_riak_node:stopped/3',[]],['fun','riak_test','rt_riak_node:upgrade/2',[]],['fun','riak_test','rt_riak_node:version/1',[]],['fun','riak_test','rt_riak_node:wait_for_service/1',[]],['fun','riak_test','rt_riak_node:wait_until_pingable/1',[]],['fun','riak_test','rt_riak_node:wait_until_registered/1',[]],['fun','riak_test','rt_riak_node:wait_until_unpingable/1',[]],['fun','riak_test','rt_ring:assert_nodes_agree_about_ownership/1',[]],['fun','riak_test','rt_ring:check_singleton_node/1','Ensure that the specified node is a singleton node'],['fun','riak_test','rt_ring:claimant_according_to/1','Return a list of nodes that own partitions accordi'],['fun','riak_test','rt_ring:get_ring/1','Get the raw ring for Node.'],['fun','riak_test','rt_ring:members_according_to/1','Return a list of cluster members according to the '],['fun','riak_test','rt_ring:nearest_ringsize/1','Return an appropriate ringsize for the node count '],['fun','riak_test','rt_ring:nearest_ringsize/2',[]],['fun','riak_test','rt_ring:owners_according_to/1','Return a list of nodes that own partitions accordi'],['fun','riak_test','rt_ring:partitions_for_node/1','Get list of partitions owned by node (primary).'],['fun','riak_test','rt_ring:status_of_according_to/2','Return the cluster status of Member according to t'],['fun','riak_test','rt_systest:read/2',[]],['fun','riak_test','rt_systest:read/3',[]],['fun','riak_test','rt_systest:read/5',[]],['fun','riak_test','rt_systest:read/6',[]],['fun','riak_test','rt_systest:read/7',[]],['fun','riak_test','rt_systest:verify_systest_value/4',[]],['fun','riak_test','rt_systest:write/2',[]],['fun','riak_test','rt_systest:write/3',[]],['fun','riak_test','rt_systest:write/5',[]],['fun','riak_test','rt_systest:write/6','Write (End-Start)+1 objects to Node.'],['fun','riak_test','rt_test_plan:get/1','Get the value of a field from a test plan record.'],['fun','riak_test','rt_test_plan:get_module/1','Get the value of the test name from a test plan re'],['fun','riak_test','rt_test_plan:get_name/1','Get the value of the name and backend from a test '],['fun','riak_test','rt_test_plan:new/0','Create a new test plan record with all fields init'],['fun','riak_test','rt_test_plan:new/1','Create a new test plan record with the fields init'],['fun','riak_test','rt_test_plan:set/1','Set the value for a field in a test plan record.'],['fun','riak_test','rt_test_plan:set/1','Set the value for a field in a test plan record.'],['fun','riak_test','rt_worker_sup:init/1',[]],['fun','riak_test','rt_worker_sup:start_link/1',[]],['fun','riak_test','rtdev:attach/2',[]],['fun','riak_test','rtdev:attach_direct/2',[]],['fun','riak_test','rtdev:clean_data_dir/2',[]],['fun','riak_test','rtdev:clean_data_dir/3',[]],['fun','riak_test','rtdev:cmd/1',[]],['fun','riak_test','rtdev:cmd/2',[]],['fun','riak_test','rtdev:console/2',[]],['fun','riak_test','rtdev:deploy_clusters/1',[]],['fun','riak_test','rtdev:get_backends/0',[]],['fun','riak_test','rtdev:get_ip/1',[]],['fun','riak_test','rtdev:get_node_logs/1','Get the list of log files and config files and pas'],['fun','riak_test','rtdev:get_version/0',[]],['fun','riak_test','rtdev:node_id/1','Find the node number from the full name.'],['fun','riak_test','rtdev:node_short_name/1','Find the short dev node name from the full name.'],['fun','riak_test','rtdev:node_version/1','Return the node version from rt_versions based on '],['fun','riak_test','rtdev:riak/2',[]],['fun','riak_test','rtdev:rm_dir/1',[]],['fun','riak_test','rtdev:set_advanced_conf/2',[]],['fun','riak_test','rtdev:set_backend/1',[]],['fun','riak_test','rtdev:set_conf/1',[]],['fun','riak_test','rtdev:setup_harness/0',[]],['fun','riak_test','rtdev:spawn_cmd/1',[]],['fun','riak_test','rtdev:spawn_cmd/2',[]],['fun','riak_test','rtdev:start/2',[]],['fun','riak_test','rtdev:stop/2',[]],['fun','riak_test','rtdev:teardown/0',[]],['fun','riak_test','rtdev:update_app_config/3',[]],['fun','riak_test','rtdev:validate_config/1','Check to make sure that all versions specified in '],['fun','riak_test','rtdev:whats_up/0',[]],['fun','riak_test','rtperf:admin/2',[]],['fun','riak_test','rtperf:attach/2',[]],['fun','riak_test','rtperf:attach_direct/2',[]],['fun','riak_test','rtperf:clean_data_dir/2',[]],['fun','riak_test','rtperf:cmd/1',[]],['fun','riak_test','rtperf:cmd/2',[]],['fun','riak_test','rtperf:console/2',[]],['fun','riak_test','rtperf:deploy_clusters/1',[]],['fun','riak_test','rtperf:get_backends/0',[]],['fun','riak_test','rtperf:get_ip/1',[]],['fun','riak_test','rtperf:get_version/0',[]],['fun','riak_test','rtperf:node_id/1',[]],['fun','riak_test','rtperf:node_version/1',[]],['fun','riak_test','rtperf:riak/2',[]],['fun','riak_test','rtperf:set_advanced_conf/2',[]],['fun','riak_test','rtperf:set_backend/1',[]],['fun','riak_test','rtperf:set_conf/2',[]],['fun','riak_test','rtperf:setup_harness/2',[]],['fun','riak_test','rtperf:spawn_cmd/1',[]],['fun','riak_test','rtperf:spawn_cmd/2',[]],['fun','riak_test','rtperf:start/1',[]],['fun','riak_test','rtperf:stop/1',[]],['fun','riak_test','rtperf:teardown/0',[]],['fun','riak_test','rtperf:update_app_config/2',[]],['fun','riak_test','rtperf:whats_up/0',[]],['fun','riak_test','rtssh:admin/2',[]],['fun','riak_test','rtssh:attach/2',[]],['fun','riak_test','rtssh:attach_direct/2',[]],['fun','riak_test','rtssh:clean_data_dir/2',[]],['fun','riak_test','rtssh:cmd/1',[]],['fun','riak_test','rtssh:cmd/2',[]],['fun','riak_test','rtssh:console/2',[]],['fun','riak_test','rtssh:deploy_clusters/1',[]],['fun','riak_test','rtssh:get_backends/0',[]],['fun','riak_test','rtssh:get_deps/0',[]],['fun','riak_test','rtssh:get_ip/1',[]],['fun','riak_test','rtssh:get_version/0',[]],['fun','riak_test','rtssh:node_id/1',[]],['fun','riak_test','rtssh:node_version/1',[]],['fun','riak_test','rtssh:riak/2',[]],['fun','riak_test','rtssh:set_advanced_conf/2',[]],['fun','riak_test','rtssh:set_backend/1',[]],['fun','riak_test','rtssh:set_conf/1',[]],['fun','riak_test','rtssh:setup_harness/2',[]],['fun','riak_test','rtssh:spawn_cmd/1',[]],['fun','riak_test','rtssh:spawn_cmd/2',[]],['fun','riak_test','rtssh:start/1',[]],['fun','riak_test','rtssh:stop/1',[]],['fun','riak_test','rtssh:teardown/0',[]],['fun','riak_test','rtssh:update_app_config/2',[]],['fun','riak_test','rtssh:validate_config/1','Check to make sure that all versions specified in '],['fun','riak_test','rtssh:whats_up/0',[]],['fun','riak_test','smoke_test_escript:get_version/0',[]],['fun','riak_test','smoke_test_escript:main/1',[]],['fun','riak_test','smoke_test_escript:worker/4',[]]];