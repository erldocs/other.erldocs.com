var index = [['app','machi','machi','[application]'],['mod','machi','machi_admin_util','Machi chain replication administration utilities.'],['mod','machi','machi_app','Top-level supervisor for the Machi application.'],['mod','machi','machi_chain_manager1','The Machi chain manager, Guardian of all things re'],['mod','machi','machi_chash','Consistent hashing library.'],['mod','machi','machi_flu1','The Machi FLU file server + file location sequence'],['mod','machi','machi_flu1_client','Erlang API for the Machi FLU TCP protocol version '],['mod','machi','machi_flu_sup','Supervisor for Machi FLU servers and their related'],['mod','machi','machi_projection','API for manipulating Machi projection data structu'],['mod','machi','machi_projection_store','The Machi write-once projection store service.'],['mod','machi','machi_proxy_flu1_client','Erlang API for the Machi FLU TCP protocol version '],['mod','machi','machi_sequencer','"Mothballed" sequencer code, perhaps to be reused '],['mod','machi','machi_sup','Top Machi application supervisor.'],['mod','machi','machi_util','Miscellaneous utility functions.'],['fun','machi','machi_admin_util:verify_file_checksums_local/1',[]],['fun','machi','machi_admin_util:verify_file_checksums_local/1',[]],['fun','machi','machi_admin_util:verify_file_checksums_remote/1',[]],['fun','machi','machi_admin_util:verify_file_checksums_remote/1',[]],['fun','machi','machi_app:start/2',[]],['fun','machi','machi_app:stop/1',[]],['fun','machi','machi_chain_manager1:code_change/3',[]],['fun','machi','machi_chain_manager1:handle_call/3',[]],['fun','machi','machi_chain_manager1:handle_cast/2',[]],['fun','machi','machi_chain_manager1:handle_info/2',[]],['fun','machi','machi_chain_manager1:init/1',[]],['fun','machi','machi_chain_manager1:ping/1',[]],['fun','machi','machi_chain_manager1:projection_transitions_are_sane/2',[]],['fun','machi','machi_chain_manager1:start_link/2',[]],['fun','machi','machi_chain_manager1:start_link/3',[]],['fun','machi','machi_chain_manager1:stop/1',[]],['fun','machi','machi_chain_manager1:terminate/2',[]],['fun','machi','machi_chash:hash_binary_via_float_map/1','Query a float map with a binary (inefficient).'],['fun','machi','machi_chash:hash_binary_via_float_tree/1','Query a float tree with a binary.'],['fun','machi','machi_chash:make_demo_map1/0','Create a sample float map.'],['fun','machi','machi_chash:make_demo_map2/0','Create a sample float map.'],['fun','machi','machi_chash:make_float_map/1','Create a float map, based on an older float map an'],['fun','machi','machi_chash:make_float_map/1','Create a float map, based on a basic owner weight '],['fun','machi','machi_chash:make_tree/1','Create a float tree, which is the rapid lookup dat'],['fun','machi','machi_chash:pretty_with_integers/1','Make a pretty/human-friendly version of a float ma'],['fun','machi','machi_chash:pretty_with_integers/1','Make a pretty/human-friendly version of a float ma'],['fun','machi','machi_chash:query_tree/1','Low-level function for querying a float tree: the '],['fun','machi','machi_chash:sum_map_weights/1','Create a human-friendly summary of a float map.'],['fun','machi','machi_chash:zzz_usage_details/0','Various usage examples, see source code below this'],['fun','machi','machi_flu1:start_link/1',[]],['fun','machi','machi_flu1:stop/1',[]],['fun','machi','machi_flu1_client:append_chunk/1','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_flu1_client:append_chunk/1','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_flu1_client:checksum_list/1','Fetch the list of chunk checksums for File.'],['fun','machi','machi_flu1_client:checksum_list/1','Fetch the list of chunk checksums for File.'],['fun','machi','machi_flu1_client:delete_migration/1','Restricted API: Delete a file after it has been su'],['fun','machi','machi_flu1_client:delete_migration/1','Restricted API: Delete a file after it has been su'],['fun','machi','machi_flu1_client:get_all_projections/1','Get all projections from the FLUs projection stor'],['fun','machi','machi_flu1_client:get_all_projections/1','Get all projections from the FLUs projection stor'],['fun','machi','machi_flu1_client:get_latest_epoch/1','Get the latest epoch number + checksum from the FL'],['fun','machi','machi_flu1_client:get_latest_epoch/1','Get the latest epoch number + checksum from the FL'],['fun','machi','machi_flu1_client:list_all_projections/1','Get all epoch numbers from the FLUs projection st'],['fun','machi','machi_flu1_client:list_all_projections/1','Get all epoch numbers from the FLUs projection st'],['fun','machi','machi_flu1_client:list_files/1','Fetch the list of all files on the remote FLU.'],['fun','machi','machi_flu1_client:list_files/1','Fetch the list of all files on the remote FLU.'],['fun','machi','machi_flu1_client:quit/1','Quit & close the connection to remote FLU.'],['fun','machi','machi_flu1_client:read_chunk/1','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_flu1_client:read_chunk/1','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_flu1_client:read_latest_projection/1','Get the latest projection from the FLUs projectio'],['fun','machi','machi_flu1_client:read_latest_projection/1','Get the latest projection from the FLUs projectio'],['fun','machi','machi_flu1_client:read_projection/1','Read a projection Proj of type ProjType.'],['fun','machi','machi_flu1_client:read_projection/1','Read a projection Proj of type ProjType.'],['fun','machi','machi_flu1_client:trunc_hack/1','Restricted API: Truncate a file after it has been '],['fun','machi','machi_flu1_client:trunc_hack/1','Restricted API: Truncate a file after it has been '],['fun','machi','machi_flu1_client:write_chunk/1','Restricted API: Write a chunk of already-sequenced'],['fun','machi','machi_flu1_client:write_chunk/1','Restricted API: Write a chunk of already-sequenced'],['fun','machi','machi_flu1_client:write_projection/1','Write a projection Proj of type ProjType.'],['fun','machi','machi_flu1_client:write_projection/1','Write a projection Proj of type ProjType.'],['fun','machi','machi_flu_sup:init/1',[]],['fun','machi','machi_flu_sup:start_link/0',[]],['fun','machi','machi_projection:compare/1','Compare two projection records for equality (assum'],['fun','machi','machi_projection:make_members_dict/1','Make a p_srvr_dict() out of a list of p_srvr() or '],['fun','machi','machi_projection:make_summary/1','Create a proplist-style summary of a projection re'],['fun','machi','machi_projection:new/6','Create a new projection record.'],['fun','machi','machi_projection:new/7','Create a new projection record.'],['fun','machi','machi_projection:new/8','Create a new projection record.'],['fun','machi','machi_projection:update_checksum/1','Update the checksum element of a projection record'],['fun','machi','machi_projection:update_dbg2/2','Update the dbg2 element of a projection record.'],['fun','machi','machi_projection_store:code_change/3',[]],['fun','machi','machi_projection_store:get_all_projections/2','Fetch all projection records of type ProjType.'],['fun','machi','machi_projection_store:get_all_projections/3','Fetch all projection records of type ProjType.'],['fun','machi','machi_projection_store:get_latest_epoch/2','Fetch the latest epoch number + checksum for type '],['fun','machi','machi_projection_store:get_latest_epoch/3','Fetch the latest epoch number + checksum for type '],['fun','machi','machi_projection_store:handle_call/3',[]],['fun','machi','machi_projection_store:handle_cast/2',[]],['fun','machi','machi_projection_store:handle_info/2',[]],['fun','machi','machi_projection_store:init/1',[]],['fun','machi','machi_projection_store:list_all_projections/2','Fetch all projection epoch numbers of type ProjTyp'],['fun','machi','machi_projection_store:list_all_projections/3','Fetch all projection epoch numbers of type ProjTyp'],['fun','machi','machi_projection_store:read/3','Fetch the projection record type ProjType for epoc'],['fun','machi','machi_projection_store:read/4','Fetch the projection record type ProjType for epoc'],['fun','machi','machi_projection_store:read_latest_projection/2','Fetch the latest projection record for type ProjTy'],['fun','machi','machi_projection_store:read_latest_projection/3','Fetch the latest projection record for type ProjTy'],['fun','machi','machi_projection_store:start_link/3','Start a new projection store server.'],['fun','machi','machi_projection_store:terminate/2',[]],['fun','machi','machi_projection_store:write/3','Write the projection record type ProjType for epoc'],['fun','machi','machi_projection_store:write/4','Write the projection record type ProjType for epoc'],['fun','machi','machi_proxy_flu1_client:append_chunk/4','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_proxy_flu1_client:append_chunk/5','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_proxy_flu1_client:checksum_list/3','Fetch the list of chunk checksums for File.'],['fun','machi','machi_proxy_flu1_client:checksum_list/4','Fetch the list of chunk checksums for File.'],['fun','machi','machi_proxy_flu1_client:code_change/3',[]],['fun','machi','machi_proxy_flu1_client:get_all_projections/2','Get all projections from the FLUs projection stor'],['fun','machi','machi_proxy_flu1_client:get_all_projections/3','Get all projections from the FLUs projection stor'],['fun','machi','machi_proxy_flu1_client:get_latest_epoch/2','Get the latest epoch number + checksum from the FL'],['fun','machi','machi_proxy_flu1_client:get_latest_epoch/3','Get the latest epoch number + checksum from the FL'],['fun','machi','machi_proxy_flu1_client:handle_call/3',[]],['fun','machi','machi_proxy_flu1_client:handle_cast/2',[]],['fun','machi','machi_proxy_flu1_client:handle_info/2',[]],['fun','machi','machi_proxy_flu1_client:init/1',[]],['fun','machi','machi_proxy_flu1_client:list_all_projections/2','Get all epoch numbers from the FLUs projection st'],['fun','machi','machi_proxy_flu1_client:list_all_projections/3','Get all epoch numbers from the FLUs projection st'],['fun','machi','machi_proxy_flu1_client:list_files/2','Fetch the list of all files on the remote FLU.'],['fun','machi','machi_proxy_flu1_client:list_files/3','Fetch the list of all files on the remote FLU.'],['fun','machi','machi_proxy_flu1_client:quit/1','Quit & close the connection to remote FLU and stop'],['fun','machi','machi_proxy_flu1_client:read_chunk/5','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_proxy_flu1_client:read_chunk/6','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_proxy_flu1_client:read_latest_projection/2','Get the latest projection from the FLUs projectio'],['fun','machi','machi_proxy_flu1_client:read_latest_projection/3','Get the latest projection from the FLUs projectio'],['fun','machi','machi_proxy_flu1_client:read_projection/3','Read a projection Proj of type ProjType.'],['fun','machi','machi_proxy_flu1_client:read_projection/4','Read a projection Proj of type ProjType.'],['fun','machi','machi_proxy_flu1_client:start_link/1','Start a local, long-lived process that will be our'],['fun','machi','machi_proxy_flu1_client:terminate/2',[]],['fun','machi','machi_proxy_flu1_client:write_projection/3','Write a projection Proj of type ProjType.'],['fun','machi','machi_proxy_flu1_client:write_projection/4','Write a projection Proj of type ProjType.'],['fun','machi','machi_sup:init/1',[]],['fun','machi','machi_sup:start_link/0',[]],['fun','machi','machi_util:bin_to_hexstr/1','Convert a binary() to a hexadecimal string.'],['fun','machi','machi_util:checksum_chunk/1','Calculate a checksum for a chunk of file data.'],['fun','machi','machi_util:connect/1','Create a TCP connection to a remote Machi server.'],['fun','machi','machi_util:connect/1','Create a TCP connection to a remote Machi server.'],['fun','machi','machi_util:hexstr_to_bin/1','Convert a hexadecimal string to a binary().'],['fun','machi','machi_util:hexstr_to_int/1','Convert a hexadecimal string to an integer.'],['fun','machi','machi_util:increment_max_filenum/1','Increase the file size of a config file, which is '],['fun','machi','machi_util:info_msg/1','Log an info level message.'],['fun','machi','machi_util:int_to_hexbin/1','Convert an integer into a hexadecimal string (in b'],['fun','machi','machi_util:int_to_hexstr/1','Convert an integer into a hexadecimal string whose'],['fun','machi','machi_util:make_binary/1','Convert a compatible Erlang data type into a binar'],['fun','machi','machi_util:make_checksum_filename/1','Calculate a checksum file path, by common conventi'],['fun','machi','machi_util:make_checksum_filename/1','Calculate a checksum file path, by common conventi'],['fun','machi','machi_util:make_config_filename/1','Calculate a config file path, by common convention'],['fun','machi','machi_util:make_data_filename/1','Calculate a file data file path, by common convent'],['fun','machi','machi_util:make_data_filename/1','Calculate a file data file path, by common convent'],['fun','machi','machi_util:make_projection_filename/1','Calculate a projection store file path, by common '],['fun','machi','machi_util:make_regname/1','Create a registered name atom for FLU sequencer in'],['fun','machi','machi_util:make_string/1','Convert a compatible Erlang data type into a strin'],['fun','machi','machi_util:read_max_filenum/1','Read the file size of a config file, which is used'],['fun','machi','machi_util:verb/1','Log a verbose message.'],['fun','machi','machi_util:verb/1','Log a verbose message.']];