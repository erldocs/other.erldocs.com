var index = [['app','machi','machi','[application]'],['mod','machi','machi_admin_util','Machi chain replication administration utilities.'],['mod','machi','machi_app','Start the top-level supervisor for the Machi appli'],['mod','machi','machi_basho_bench_driver','A simple basho_bench driver for Machi.'],['mod','machi','machi_chain_manager1','The Machi chain manager, Guardian of all things re'],['mod','machi','machi_chain_repair','Perform "chain repair", i.e., resynchronization of'],['mod','machi','machi_chash','Consistent hashing library.'],['mod','machi','machi_cinfo','cluster_info callback module for machi specific in'],['mod','machi','machi_config','Configuration consulting utilities.'],['mod','machi','machi_cr_client','Erlang API for the Machi client-implemented Chain '],['mod','machi','machi_file_proxy','This is a proxy process which mediates access to M'],['mod','machi','machi_file_proxy_sup','This is the main supervisor for the file proxies.'],['mod','machi','machi_fitness',[]],['mod','machi','machi_flu_filename_mgr','This process is responsible for managing filenames'],['mod','machi','machi_flu_metadata_mgr','This is a metadata service for the machi FLU which'],['mod','machi','machi_flu_metadata_mgr_sup','This is the supervisor for the collection of metad'],['mod','machi','machi_flu_psup','Supervisor for Machi FLU servers and their related'],['mod','machi','machi_flu_sup','Supervisor for Machi FLU servers and their related'],['mod','machi','machi_projection_store','The Machi write-once projection store service.'],['mod','machi','machi_proxy_flu1_client','Erlang API for the Machi FLU TCP protocol version '],['mod','machi','machi_sup','Top Machi application supervisor.'],['mod','machi','machi_util','Miscellaneous utility functions.'],['mod','machi','machi_yessir_client','"Yes, sir!" style dummy/mock client facade.'],['fun','machi','machi_admin_util:verify_file_checksums_local/1',[]],['fun','machi','machi_admin_util:verify_file_checksums_local/1',[]],['fun','machi','machi_admin_util:verify_file_checksums_remote/1',[]],['fun','machi','machi_admin_util:verify_file_checksums_remote/1',[]],['fun','machi','machi_app:start/2',[]],['fun','machi','machi_app:stop/1',[]],['fun','machi','machi_basho_bench_driver:new/1',[]],['fun','machi','machi_basho_bench_driver:run/4',[]],['fun','machi','machi_chain_manager1:chain_state_transition_is_sane/6','Check if a projection transition is sane & safe: w'],['fun','machi','machi_chain_manager1:code_change/3',[]],['fun','machi','machi_chain_manager1:format_status/2',[]],['fun','machi','machi_chain_manager1:get_ps/2',[]],['fun','machi','machi_chain_manager1:handle_call/3',[]],['fun','machi','machi_chain_manager1:handle_cast/2',[]],['fun','machi','machi_chain_manager1:handle_info/2',[]],['fun','machi','machi_chain_manager1:has_not_sane/2',[]],['fun','machi','machi_chain_manager1:init/1',[]],['fun','machi','machi_chain_manager1:init_remember_down_list/0',[]],['fun','machi','machi_chain_manager1:make_chmgr_regname/1',[]],['fun','machi','machi_chain_manager1:mk/3','Create a 2-tuple that describes how UPI1 + Repair1'],['fun','machi','machi_chain_manager1:perhaps_call/5',[]],['fun','machi','machi_chain_manager1:ping/1',[]],['fun','machi','machi_chain_manager1:projection_transitions_are_sane/2',[]],['fun','machi','machi_chain_manager1:scan_dir/4',[]],['fun','machi','machi_chain_manager1:set_active/2',[]],['fun','machi','machi_chain_manager1:set_chain_members/2','Set chain members list.'],['fun','machi','machi_chain_manager1:set_chain_members/3',[]],['fun','machi','machi_chain_manager1:simple_chain_state_transition_is_sane/3','A simple technique for checking chain state transi'],['fun','machi','machi_chain_manager1:simple_chain_state_transition_is_sane/5','Simple check if a projection transition is sane & '],['fun','machi','machi_chain_manager1:start_link/2',[]],['fun','machi','machi_chain_manager1:start_link/3',[]],['fun','machi','machi_chain_manager1:stop/1',[]],['fun','machi','machi_chain_manager1:strip_dbg2/1',[]],['fun','machi','machi_chain_manager1:terminate/2',[]],['fun','machi','machi_chain_manager1:trigger_react_to_env/1',[]],['fun','machi','machi_chain_repair:repair/7',[]],['fun','machi','machi_chash:hash_binary_via_float_map/1','Query a float map with a binary (inefficient).'],['fun','machi','machi_chash:hash_binary_via_float_tree/1','Query a float tree with a binary.'],['fun','machi','machi_chash:make_demo_map1/0','Create a sample float map.'],['fun','machi','machi_chash:make_demo_map2/0','Create a sample float map.'],['fun','machi','machi_chash:make_float_map/1','Create a float map, based on an older float map an'],['fun','machi','machi_chash:make_float_map/1','Create a float map, based on a basic owner weight '],['fun','machi','machi_chash:make_tree/1','Create a float tree, which is the rapid lookup dat'],['fun','machi','machi_chash:pretty_with_integers/1','Make a pretty/human-friendly version of a float ma'],['fun','machi','machi_chash:pretty_with_integers/1','Make a pretty/human-friendly version of a float ma'],['fun','machi','machi_chash:query_tree/1','Low-level function for querying a float tree: the '],['fun','machi','machi_chash:sum_map_weights/1','Create a human-friendly summary of a float map.'],['fun','machi','machi_chash:zzz_usage_details/0','Various usage examples, see source code below this'],['fun','machi','machi_cinfo:chain_manager/1',[]],['fun','machi','machi_cinfo:cluster_info_generator_funs/0',[]],['fun','machi','machi_cinfo:cluster_info_init/0',[]],['fun','machi','machi_cinfo:dump/0',[]],['fun','machi','machi_cinfo:fitness/1',[]],['fun','machi','machi_cinfo:flu1/1',[]],['fun','machi','machi_cinfo:private_projection/1',[]],['fun','machi','machi_cinfo:public_projection/1',[]],['fun','machi','machi_cinfo:register/0',[]],['fun','machi','machi_config:max_file_size/0',[]],['fun','machi','machi_cr_client:append_chunk/3','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_cr_client:append_chunk/4','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_cr_client:append_chunk_extra/4','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_cr_client:append_chunk_extra/5','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_cr_client:checksum_list/2','Fetch the list of chunk checksums for File.'],['fun','machi','machi_cr_client:checksum_list/3','Fetch the list of chunk checksums for File.'],['fun','machi','machi_cr_client:code_change/3',[]],['fun','machi','machi_cr_client:handle_call/3',[]],['fun','machi','machi_cr_client:handle_cast/2',[]],['fun','machi','machi_cr_client:handle_info/2',[]],['fun','machi','machi_cr_client:init/1',[]],['fun','machi','machi_cr_client:list_files/1','Fetch the list of all files on the remote FLU.'],['fun','machi','machi_cr_client:list_files/2','Fetch the list of all files on the remote FLU.'],['fun','machi','machi_cr_client:quit/1','Quit & close the connection to remote FLU and stop'],['fun','machi','machi_cr_client:read_chunk/5','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_cr_client:read_chunk/6','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_cr_client:start_link/1','Start a local, long-lived process that will be our'],['fun','machi','machi_cr_client:start_link/2',[]],['fun','machi','machi_cr_client:terminate/2',[]],['fun','machi','machi_cr_client:trim_chunk/4','Trim a chunk of data of size Size from File at Off'],['fun','machi','machi_cr_client:trim_chunk/5','Trim a chunk of data of size Size from File at Off'],['fun','machi','machi_cr_client:write_chunk/4','Write a chunk of data (that has already been  all'],['fun','machi','machi_cr_client:write_chunk/5','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_file_proxy:append/1','Append data to file, supplying client metadata and'],['fun','machi','machi_file_proxy:append/1','Append data.'],['fun','machi','machi_file_proxy:read/1',[]],['fun','machi','machi_file_proxy:read/1','Read file at offset for length.'],['fun','machi','machi_file_proxy:start_link/1','Start a new instance of the file proxy service.'],['fun','machi','machi_file_proxy:stop/1','Request to stop an instance of the file proxy serv'],['fun','machi','machi_file_proxy:sync/1','Force a sync of a specific filehandle type.'],['fun','machi','machi_file_proxy:sync/1','Force a sync of all filehandles.'],['fun','machi','machi_file_proxy:write/1','Write data at offset, including the client metadat'],['fun','machi','machi_file_proxy:write/1','Write data at offset.'],['fun','machi','machi_file_proxy_sup:child_spec/1',[]],['fun','machi','machi_file_proxy_sup:init/1',[]],['fun','machi','machi_file_proxy_sup:start_link/1',[]],['fun','machi','machi_file_proxy_sup:start_proxy/3',[]],['fun','machi','machi_fitness:add_admin_down/3',[]],['fun','machi','machi_fitness:code_change/3',[]],['fun','machi','machi_fitness:delete_admin_down/2',[]],['fun','machi','machi_fitness:format_status/2',[]],['fun','machi','machi_fitness:get_unfit_list/1',[]],['fun','machi','machi_fitness:handle_call/3',[]],['fun','machi','machi_fitness:handle_cast/2',[]],['fun','machi','machi_fitness:handle_info/2',[]],['fun','machi','machi_fitness:init/1',[]],['fun','machi','machi_fitness:send_fitness_update_spam/3',[]],['fun','machi','machi_fitness:send_spam_to_everyone/1',[]],['fun','machi','machi_fitness:start_link/1',[]],['fun','machi','machi_fitness:terminate/2',[]],['fun','machi','machi_fitness:update_local_down_list/3',[]],['fun','machi','machi_flu_filename_mgr:child_spec/2',[]],['fun','machi','machi_flu_filename_mgr:code_change/3',[]],['fun','machi','machi_flu_filename_mgr:find_or_make_filename_from_prefix/1','Find the latest available or make a filename from '],['fun','machi','machi_flu_filename_mgr:handle_call/3',[]],['fun','machi','machi_flu_filename_mgr:handle_cast/2',[]],['fun','machi','machi_flu_filename_mgr:handle_info/2',[]],['fun','machi','machi_flu_filename_mgr:increment_prefix_sequence/1','Increment the sequence counter for a given prefix.'],['fun','machi','machi_flu_filename_mgr:init/1',[]],['fun','machi','machi_flu_filename_mgr:list_files_by_prefix/1','Given a prefix in the form of {prefix, P} return '],['fun','machi','machi_flu_filename_mgr:start_link/2',[]],['fun','machi','machi_flu_filename_mgr:terminate/2',[]],['fun','machi','machi_flu_metadata_mgr:build_metadata_mgr_name/2',[]],['fun','machi','machi_flu_metadata_mgr:child_spec/4',[]],['fun','machi','machi_flu_metadata_mgr:code_change/3',[]],['fun','machi','machi_flu_metadata_mgr:handle_call/3',[]],['fun','machi','machi_flu_metadata_mgr:handle_cast/2',[]],['fun','machi','machi_flu_metadata_mgr:handle_info/2',[]],['fun','machi','machi_flu_metadata_mgr:init/1',[]],['fun','machi','machi_flu_metadata_mgr:lookup_manager_pid/2',[]],['fun','machi','machi_flu_metadata_mgr:lookup_proxy_pid/2',[]],['fun','machi','machi_flu_metadata_mgr:start_link/4',[]],['fun','machi','machi_flu_metadata_mgr:start_proxy_pid/2',[]],['fun','machi','machi_flu_metadata_mgr:stop_proxy_pid/2',[]],['fun','machi','machi_flu_metadata_mgr:terminate/2',[]],['fun','machi','machi_flu_metadata_mgr_sup:child_spec/3',[]],['fun','machi','machi_flu_metadata_mgr_sup:init/1',[]],['fun','machi','machi_flu_metadata_mgr_sup:start_link/3',[]],['fun','machi','machi_flu_psup:init/1',[]],['fun','machi','machi_flu_psup:make_fitness_regname/1',[]],['fun','machi','machi_flu_psup:make_flu_regname/1',[]],['fun','machi','machi_flu_psup:make_mgr_supname/1',[]],['fun','machi','machi_flu_psup:make_p_regname/1',[]],['fun','machi','machi_flu_psup:make_package_spec/1',[]],['fun','machi','machi_flu_psup:make_package_spec/4',[]],['fun','machi','machi_flu_psup:make_proj_supname/1',[]],['fun','machi','machi_flu_psup:start_flu_package/1',[]],['fun','machi','machi_flu_psup:start_flu_package/4',[]],['fun','machi','machi_flu_psup:start_link/4',[]],['fun','machi','machi_flu_psup:stop_flu_package/1',[]],['fun','machi','machi_flu_sup:init/1',[]],['fun','machi','machi_flu_sup:start_link/0',[]],['fun','machi','machi_projection_store:code_change/3',[]],['fun','machi','machi_projection_store:get_all_projections/2','Fetch all projection records of type ProjType.'],['fun','machi','machi_projection_store:get_all_projections/3','Fetch all projection records of type ProjType.'],['fun','machi','machi_projection_store:get_latest_epochid/2','Fetch the latest epoch number + checksum for type '],['fun','machi','machi_projection_store:get_latest_epochid/3','Fetch the latest epoch number + checksum for type '],['fun','machi','machi_projection_store:get_wedge_notify_pid/1',[]],['fun','machi','machi_projection_store:handle_call/3',[]],['fun','machi','machi_projection_store:handle_cast/2',[]],['fun','machi','machi_projection_store:handle_info/2',[]],['fun','machi','machi_projection_store:init/1',[]],['fun','machi','machi_projection_store:list_all_projections/2','Fetch all projection epoch numbers of type ProjTyp'],['fun','machi','machi_projection_store:list_all_projections/3','Fetch all projection epoch numbers of type ProjTyp'],['fun','machi','machi_projection_store:read/3','Fetch the projection record type ProjType for epoc'],['fun','machi','machi_projection_store:read/4','Fetch the projection record type ProjType for epoc'],['fun','machi','machi_projection_store:read_latest_projection/2','Fetch the latest projection record for type ProjTy'],['fun','machi','machi_projection_store:read_latest_projection/3','Fetch the latest projection record for type ProjTy'],['fun','machi','machi_projection_store:set_consistency_mode/2',[]],['fun','machi','machi_projection_store:set_wedge_notify_pid/2',[]],['fun','machi','machi_projection_store:start_link/3','Start a new projection store server.'],['fun','machi','machi_projection_store:terminate/2',[]],['fun','machi','machi_projection_store:write/3','Write the projection record type ProjType for epoc'],['fun','machi','machi_projection_store:write/4','Write the projection record type ProjType for epoc'],['fun','machi','machi_proxy_flu1_client:append_chunk/4','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_proxy_flu1_client:append_chunk/5','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_proxy_flu1_client:append_chunk_extra/5','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_proxy_flu1_client:append_chunk_extra/6','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_proxy_flu1_client:checksum_list/3','Fetch the list of chunk checksums for File.'],['fun','machi','machi_proxy_flu1_client:checksum_list/4','Fetch the list of chunk checksums for File.'],['fun','machi','machi_proxy_flu1_client:code_change/3',[]],['fun','machi','machi_proxy_flu1_client:get_all_projections/2','Get all projections from the FLUs projection stor'],['fun','machi','machi_proxy_flu1_client:get_all_projections/3','Get all projections from the FLUs projection stor'],['fun','machi','machi_proxy_flu1_client:get_epoch_id/1','Get the epoch_id() of the FLUs current/latest pro'],['fun','machi','machi_proxy_flu1_client:get_epoch_id/2','Get the epoch_id() of the FLUs current/latest pro'],['fun','machi','machi_proxy_flu1_client:get_latest_epochid/2','Get the latest epoch number + checksum from the FL'],['fun','machi','machi_proxy_flu1_client:get_latest_epochid/3','Get the latest epoch number + checksum from the FL'],['fun','machi','machi_proxy_flu1_client:handle_call/3',[]],['fun','machi','machi_proxy_flu1_client:handle_cast/2',[]],['fun','machi','machi_proxy_flu1_client:handle_info/2',[]],['fun','machi','machi_proxy_flu1_client:init/1',[]],['fun','machi','machi_proxy_flu1_client:kick_projection_reaction/2','Kick (politely) the remote chain manager to react '],['fun','machi','machi_proxy_flu1_client:kick_projection_reaction/3','Kick (politely) the remote chain manager to react '],['fun','machi','machi_proxy_flu1_client:list_all_projections/2','Get all epoch numbers from the FLUs projection st'],['fun','machi','machi_proxy_flu1_client:list_all_projections/3','Get all epoch numbers from the FLUs projection st'],['fun','machi','machi_proxy_flu1_client:list_files/2','Fetch the list of all files on the remote FLU.'],['fun','machi','machi_proxy_flu1_client:list_files/3','Fetch the list of all files on the remote FLU.'],['fun','machi','machi_proxy_flu1_client:quit/1','Quit & close the connection to remote FLU and stop'],['fun','machi','machi_proxy_flu1_client:read_chunk/6','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_proxy_flu1_client:read_chunk/7','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_proxy_flu1_client:read_latest_projection/2','Get the latest projection from the FLUs projectio'],['fun','machi','machi_proxy_flu1_client:read_latest_projection/3','Get the latest projection from the FLUs projectio'],['fun','machi','machi_proxy_flu1_client:read_projection/3','Read a projection Proj of type ProjType.'],['fun','machi','machi_proxy_flu1_client:read_projection/4','Read a projection Proj of type ProjType.'],['fun','machi','machi_proxy_flu1_client:start_link/1','Start a local, long-lived process that will be our'],['fun','machi','machi_proxy_flu1_client:start_proxies/1',[]],['fun','machi','machi_proxy_flu1_client:stop_proxies/1',[]],['fun','machi','machi_proxy_flu1_client:terminate/2',[]],['fun','machi','machi_proxy_flu1_client:wedge_status/1','Fetch the wedge status from the remote FLU.'],['fun','machi','machi_proxy_flu1_client:wedge_status/2','Fetch the wedge status from the remote FLU.'],['fun','machi','machi_proxy_flu1_client:write_chunk/5','Write a chunk (binary- or iolist-style) of data to'],['fun','machi','machi_proxy_flu1_client:write_chunk/6','Write a chunk (binary- or iolist-style) of data to'],['fun','machi','machi_proxy_flu1_client:write_projection/3','Write a projection Proj of type ProjType.'],['fun','machi','machi_proxy_flu1_client:write_projection/4','Write a projection Proj of type ProjType.'],['fun','machi','machi_sup:init/1',[]],['fun','machi','machi_sup:start_link/0',[]],['fun','machi','machi_util:bin_to_hexstr/1','Convert a binary() to a hexadecimal string.'],['fun','machi','machi_util:bool2int/1',[]],['fun','machi','machi_util:checksum_chunk/1','Calculate a checksum for a chunk of file data.'],['fun','machi','machi_util:combinations/1',[]],['fun','machi','machi_util:connect/1','Create a TCP connection to a remote Machi server.'],['fun','machi','machi_util:connect/1','Create a TCP connection to a remote Machi server.'],['fun','machi','machi_util:hexstr_to_bin/1','Convert a hexadecimal string to a binary().'],['fun','machi','machi_util:hexstr_to_int/1','Convert a hexadecimal string to an integer.'],['fun','machi','machi_util:increment_max_filenum/1','Increase the file size of a config file, which is '],['fun','machi','machi_util:info_msg/1','Log an info level message.'],['fun','machi','machi_util:int2bool/1',[]],['fun','machi','machi_util:int_to_hexbin/1','Convert an integer into a hexadecimal string (in b'],['fun','machi','machi_util:int_to_hexstr/1','Convert an integer into a hexadecimal string whose'],['fun','machi','machi_util:is_valid_filename/1','Given a filename, return true if it is a valid mac'],['fun','machi','machi_util:make_binary/1','Convert a compatible Erlang data type into a binar'],['fun','machi','machi_util:make_checksum_filename/1','Calculate a checksum file path, by common conventi'],['fun','machi','machi_util:make_checksum_filename/1','Calculate a checksum file path, by common conventi'],['fun','machi','machi_util:make_config_filename/1','Calculate a config file path, by common convention'],['fun','machi','machi_util:make_data_filename/1','Calculate a file data file path, by common convent'],['fun','machi','machi_util:make_data_filename/1','Calculate a file data file path, by common convent'],['fun','machi','machi_util:make_projection_filename/1','Calculate a projection store file path, by common '],['fun','machi','machi_util:make_regname/1','Create a registered name atom for FLU sequencer in'],['fun','machi','machi_util:make_string/1','Convert a compatible Erlang data type into a strin'],['fun','machi','machi_util:make_tagged_csum/1','Makes tagged csum.'],['fun','machi','machi_util:make_tagged_csum/1','Create a tagged checksum.'],['fun','machi','machi_util:mbytes/1',[]],['fun','machi','machi_util:mk_order/2',[]],['fun','machi','machi_util:ordered_combinations/1',[]],['fun','machi','machi_util:parse_filename/1','Given a machi filename, return a set of components'],['fun','machi','machi_util:perms/1',[]],['fun','machi','machi_util:permutations/1',[]],['fun','machi','machi_util:pretty_time/0',[]],['fun','machi','machi_util:pretty_time/2',[]],['fun','machi','machi_util:read_max_filenum/1','Read the file size of a config file, which is used'],['fun','machi','machi_util:unmake_tagged_csum/1',[]],['fun','machi','machi_util:verb/1','Log a verbose message.'],['fun','machi','machi_util:verb/1','Log a verbose message.'],['fun','machi','machi_util:wait_for_death/2',[]],['fun','machi','machi_util:wait_for_life/2',[]],['fun','machi','machi_yessir_client:append_chunk/4','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_yessir_client:append_chunk/5','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_yessir_client:append_chunk_extra/5','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_yessir_client:append_chunk_extra/6','Append a chunk (binary- or iolist-style) of data t'],['fun','machi','machi_yessir_client:checksum_list/3','Fetch the list of chunk checksums for File.'],['fun','machi','machi_yessir_client:checksum_list/4','Fetch the list of chunk checksums for File.'],['fun','machi','machi_yessir_client:connect/1',[]],['fun','machi','machi_yessir_client:connected_p/1',[]],['fun','machi','machi_yessir_client:delete_migration/3','Restricted API: Delete a file after it has been su'],['fun','machi','machi_yessir_client:delete_migration/4','Restricted API: Delete a file after it has been su'],['fun','machi','machi_yessir_client:disconnect/1',[]],['fun','machi','machi_yessir_client:get_all_projections/2','Get all projections from the FLUs projection stor'],['fun','machi','machi_yessir_client:get_all_projections/3','Get all projections from the FLUs projection stor'],['fun','machi','machi_yessir_client:get_latest_epoch/2','Get the latest epoch number + checksum from the FL'],['fun','machi','machi_yessir_client:get_latest_epoch/3','Get the latest epoch number + checksum from the FL'],['fun','machi','machi_yessir_client:list_all_projections/2','Get all epoch numbers from the FLUs projection st'],['fun','machi','machi_yessir_client:list_all_projections/3','Get all epoch numbers from the FLUs projection st'],['fun','machi','machi_yessir_client:list_files/2','Fetch the list of all files on the remote FLU.'],['fun','machi','machi_yessir_client:list_files/3','Fetch the list of all files on the remote FLU.'],['fun','machi','machi_yessir_client:quit/1','Quit & close the connection to remote FLU.'],['fun','machi','machi_yessir_client:read_chunk/5','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_yessir_client:read_chunk/6','Read a chunk of data of size Size from File at Off'],['fun','machi','machi_yessir_client:read_latest_projection/2','Get the latest projection from the FLUs projectio'],['fun','machi','machi_yessir_client:read_latest_projection/3','Get the latest projection from the FLUs projectio'],['fun','machi','machi_yessir_client:read_projection/3','Read a projection Proj of type ProjType.'],['fun','machi','machi_yessir_client:read_projection/4','Read a projection Proj of type ProjType.'],['fun','machi','machi_yessir_client:trunc_hack/3','Restricted API: Truncate a file after it has been '],['fun','machi','machi_yessir_client:trunc_hack/4','Restricted API: Truncate a file after it has been '],['fun','machi','machi_yessir_client:wedge_status/1','Fetch the wedge status from the remote FLU.'],['fun','machi','machi_yessir_client:wedge_status/2','Fetch the wedge status from the remote FLU.'],['fun','machi','machi_yessir_client:write_chunk/5','Restricted API: Write a chunk of already-sequenced'],['fun','machi','machi_yessir_client:write_chunk/6','Restricted API: Write a chunk of already-sequenced'],['fun','machi','machi_yessir_client:write_projection/3','Write a projection Proj of type ProjType.'],['fun','machi','machi_yessir_client:write_projection/4','Write a projection Proj of type ProjType.']];