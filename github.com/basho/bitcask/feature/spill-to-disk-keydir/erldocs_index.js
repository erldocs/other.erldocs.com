var index = [['app','bitcask','bitcask','[application]'],['mod','bitcask','bitcask',[]],['mod','bitcask','bitcask_app',[]],['mod','bitcask','bitcask_bump',[]],['mod','bitcask','bitcask_file',[]],['mod','bitcask','bitcask_fileops','Basic file i/o operations for bitcask.'],['mod','bitcask','bitcask_io',[]],['mod','bitcask','bitcask_lockops',[]],['mod','bitcask','bitcask_merge_delete',[]],['mod','bitcask','bitcask_merge_worker',[]],['mod','bitcask','bitcask_nifs',[]],['mod','bitcask','bitcask_sup',[]],['mod','bitcask','bitcask_time',[]],['fun','bitcask','bitcask:close/1','Close a bitcask data store and flush any pending w'],['fun','bitcask','bitcask:close_write_file/1','Close the currently active writing file; mostly fo'],['fun','bitcask','bitcask:delete/1','Delete a key from a bitcask datastore.'],['fun','bitcask','bitcask:fold/1','fold over all K/V pairs in a bitcask datastore  F'],['fun','bitcask','bitcask:fold/1','fold over all K/V pairs in a bitcask datastore.'],['fun','bitcask','bitcask:fold_keys/1','Fold over all keys in a bitcask datastore with lim'],['fun','bitcask','bitcask:fold_keys/1','Fold over all keys in a bitcask datastore.'],['fun','bitcask','bitcask:get/1','Retrieve a value by key from a bitcask datastore.'],['fun','bitcask','bitcask:get_filestate/2',[]],['fun','bitcask','bitcask:get_opt/2',[]],['fun','bitcask','bitcask:is_empty_estimate/1',[]],['fun','bitcask','bitcask:is_tombstone/1',[]],['fun','bitcask','bitcask:iterator/1','Start entry iterator.'],['fun','bitcask','bitcask:iterator_next/1','Get next entry from the iterator.'],['fun','bitcask','bitcask:iterator_release/1','Release iterator.'],['fun','bitcask','bitcask:list_keys/1','List all keys in a bitcask datastore.'],['fun','bitcask','bitcask:merge/1','Merge several data files within a bitcask datastor'],['fun','bitcask','bitcask:merge/1','Merge several data files within a bitcask datastor'],['fun','bitcask','bitcask:merge/1','Merge several data files within a bitcask datastor'],['fun','bitcask','bitcask:needs_merge/1',[]],['fun','bitcask','bitcask:needs_merge/1',[]],['fun','bitcask','bitcask:open/1','Open a new or existing bitcask datastore with addi'],['fun','bitcask','bitcask:open/1','Open a new or existing bitcask datastore for read-'],['fun','bitcask','bitcask:put/3','Store a key and value in a bitcase datastore.'],['fun','bitcask','bitcask:status/1',[]],['fun','bitcask','bitcask:sync/1','Force any writes to sync to disk.'],['fun','bitcask','bitcask_app:start/2',[]],['fun','bitcask','bitcask_app:stop/1',[]],['fun','bitcask','bitcask_bump:big/0',[]],['fun','bitcask','bitcask_bump:small/0',[]],['fun','bitcask','bitcask_file:code_change/3',[]],['fun','bitcask','bitcask_file:handle_call/3',[]],['fun','bitcask','bitcask_file:handle_cast/2',[]],['fun','bitcask','bitcask_file:handle_info/2',[]],['fun','bitcask','bitcask_file:init/1',[]],['fun','bitcask','bitcask_file:terminate/2',[]],['fun','bitcask','bitcask_fileops:check_write/2',[]],['fun','bitcask','bitcask_fileops:close/2','Use when done writing a file.'],['fun','bitcask','bitcask_fileops:close_all/2','Use when closing multiple files.'],['fun','bitcask','bitcask_fileops:close_for_writing/2','Close a file for writing, but leave it open for re'],['fun','bitcask','bitcask_fileops:create_file/1','Open a new file for writing.'],['fun','bitcask','bitcask_fileops:data_file_tstamps/1',[]],['fun','bitcask','bitcask_fileops:delete/2','Use only after merging, to permanently delete a da'],['fun','bitcask','bitcask_fileops:file_tstamp/2',[]],['fun','bitcask','bitcask_fileops:filename/2',[]],['fun','bitcask','bitcask_fileops:fold/2',[]],['fun','bitcask','bitcask_fileops:fold_keys/2',[]],['fun','bitcask','bitcask_fileops:fold_keys/2',[]],['fun','bitcask','bitcask_fileops:hintfile_name/1',[]],['fun','bitcask','bitcask_fileops:is_file/1',[]],['fun','bitcask','bitcask_fileops:mk_filename/1',[]],['fun','bitcask','bitcask_fileops:open_file/1','Open an existing file for reading.'],['fun','bitcask','bitcask_fileops:open_file/2',[]],['fun','bitcask','bitcask_fileops:read/1','Given an Offset and Size, get the corresponding k/'],['fun','bitcask','bitcask_fileops:read_file_info/1',[]],['fun','bitcask','bitcask_fileops:sync/2','Call the OSs fsync(2) system call on the cask and'],['fun','bitcask','bitcask_fileops:un_write/1',[]],['fun','bitcask','bitcask_fileops:write/2','Write a Key-named binary data field ("Value") to t'],['fun','bitcask','bitcask_fileops:write_file_info/2',[]],['fun','bitcask','bitcask_lockops:acquire/1','Attempt to lock the specified directory with a spe'],['fun','bitcask','bitcask_lockops:delete_stale_lock/2',[]],['fun','bitcask','bitcask_lockops:read_activefile/1','Read the active filename stored in a given lockfil'],['fun','bitcask','bitcask_lockops:release/1','Release a previously acquired write/merge lock.'],['fun','bitcask','bitcask_lockops:write_activefile/1','Write a new active filename to an open lockfile.'],['fun','bitcask','bitcask_merge_worker:code_change/3',[]],['fun','bitcask','bitcask_merge_worker:handle_call/3',[]],['fun','bitcask','bitcask_merge_worker:handle_cast/2',[]],['fun','bitcask','bitcask_merge_worker:handle_info/2',[]],['fun','bitcask','bitcask_merge_worker:init/1',[]],['fun','bitcask','bitcask_merge_worker:merge/1',[]],['fun','bitcask','bitcask_merge_worker:merge/2',[]],['fun','bitcask','bitcask_merge_worker:merge/3',[]],['fun','bitcask','bitcask_merge_worker:start_link/0',[]],['fun','bitcask','bitcask_merge_worker:status/0',[]],['fun','bitcask','bitcask_merge_worker:terminate/2',[]],['fun','bitcask','bitcask_nifs:file_close/1',[]],['fun','bitcask','bitcask_nifs:file_open/2',[]],['fun','bitcask','bitcask_nifs:file_position/2',[]],['fun','bitcask','bitcask_nifs:file_pread/3',[]],['fun','bitcask','bitcask_nifs:file_pwrite/3',[]],['fun','bitcask','bitcask_nifs:file_read/2',[]],['fun','bitcask','bitcask_nifs:file_seekbof/1',[]],['fun','bitcask','bitcask_nifs:file_sync/1',[]],['fun','bitcask','bitcask_nifs:file_truncate/1',[]],['fun','bitcask','bitcask_nifs:file_write/2',[]],['fun','bitcask','bitcask_nifs:get_keydir/1',[]],['fun','bitcask','bitcask_nifs:increment_file_id/1',[]],['fun','bitcask','bitcask_nifs:increment_file_id/1',[]],['fun','bitcask','bitcask_nifs:init/0',[]],['fun','bitcask','bitcask_nifs:keydir_add_file/1',[]],['fun','bitcask','bitcask_nifs:keydir_fold/1',[]],['fun','bitcask','bitcask_nifs:keydir_frozen/2',[]],['fun','bitcask','bitcask_nifs:keydir_get/1',[]],['fun','bitcask','bitcask_nifs:keydir_get/1',[]],['fun','bitcask','bitcask_nifs:keydir_get_epoch/1',[]],['fun','bitcask','bitcask_nifs:keydir_info/1',[]],['fun','bitcask','bitcask_nifs:keydir_itr/1',[]],['fun','bitcask','bitcask_nifs:keydir_itr/1',[]],['fun','bitcask','bitcask_nifs:keydir_itr_next/1',[]],['fun','bitcask','bitcask_nifs:keydir_itr_release/1',[]],['fun','bitcask','bitcask_nifs:keydir_mark_ready/1',[]],['fun','bitcask','bitcask_nifs:keydir_new/0',[]],['fun','bitcask','bitcask_nifs:keydir_new/1',[]],['fun','bitcask','bitcask_nifs:keydir_put/1',[]],['fun','bitcask','bitcask_nifs:keydir_put/1',[]],['fun','bitcask','bitcask_nifs:keydir_release/1',[]],['fun','bitcask','bitcask_nifs:keydir_remove/1',[]],['fun','bitcask','bitcask_nifs:keydir_remove/1',[]],['fun','bitcask','bitcask_nifs:keydir_remove_file/1',[]],['fun','bitcask','bitcask_nifs:lock_acquire/1',[]],['fun','bitcask','bitcask_nifs:lock_readdata/1',[]],['fun','bitcask','bitcask_nifs:lock_release/1',[]],['fun','bitcask','bitcask_nifs:lock_writedata/1',[]],['fun','bitcask','bitcask_nifs:set_pending_delete/1',[]],['fun','bitcask','bitcask_nifs:update_fstats/1',[]],['fun','bitcask','bitcask_sup:init/1',[]],['fun','bitcask','bitcask_sup:start_link/0',[]],['fun','bitcask','bitcask_time:test__clear_fudge/0',[]],['fun','bitcask','bitcask_time:test__get_fudge/0',[]],['fun','bitcask','bitcask_time:test__incr_fudge/1',[]],['fun','bitcask','bitcask_time:test__set_fudge/1',[]],['fun','bitcask','bitcask_time:test__time_travel_loop_sleep/0',[]],['fun','bitcask','bitcask_time:tstamp/0',[]]];