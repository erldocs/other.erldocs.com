var index = [['app','riak-erlang-http-client','riak-erlang-http-client','[application]'],['mod','riak-erlang-http-client','rhc','Riak Erlang HTTP Client.'],['mod','riak-erlang-http-client','rhc_bucket','This module contains utilities that the rhc module'],['mod','riak-erlang-http-client','rhc_dt','Utility functions for datatypes.'],['mod','riak-erlang-http-client','rhc_index','This module contains utilities that the rhc module'],['mod','riak-erlang-http-client','rhc_listkeys','This module contains utilities that the rhc module'],['mod','riak-erlang-http-client','rhc_mapred','This module contains utilities that the rhc module'],['mod','riak-erlang-http-client','rhc_obj','This module contains utilities that the rhc module'],['fun','riak-erlang-http-client','rhc:counter_incr/1','Increment the counter stored at bucket, key by   '],['fun','riak-erlang-http-client','rhc:counter_incr/1','Increment the counter stored under bucket, key   '],['fun','riak-erlang-http-client','rhc:counter_val/1','Get the counter stored at bucket, key.'],['fun','riak-erlang-http-client','rhc:counter_val/1','Get the counter stored at bucket, key.'],['fun','riak-erlang-http-client','rhc:create/0','Create a client for connecting to the default port'],['fun','riak-erlang-http-client','rhc:create/1','Create a client for connecting to a Riak node.'],['fun','riak-erlang-http-client','rhc:delete/1','Delete the given key from the given bucket.'],['fun','riak-erlang-http-client','rhc:delete/3','Equivalent to delete(Rhc, Bucket, Key, []).'],['fun','riak-erlang-http-client','rhc:delete_obj/2','Equivalent to delete_obj(Rhc, Obj, []).'],['fun','riak-erlang-http-client','rhc:delete_obj/3','Delete the key of the given object, using the cont'],['fun','riak-erlang-http-client','rhc:fetch_type/1','Fetches the representation of a convergent datatyp'],['fun','riak-erlang-http-client','rhc:fetch_type/1','Fetches the representation of a convergent datatyp'],['fun','riak-erlang-http-client','rhc:get/1','Get the objects stored under the given bucket and '],['fun','riak-erlang-http-client','rhc:get/3','Equivalent to get(Rhc, Bucket, Key, []).'],['fun','riak-erlang-http-client','rhc:get_bucket/1','Get the properties of the given bucket.'],['fun','riak-erlang-http-client','rhc:get_bucket_type/1','Get the properties of the given bucket.'],['fun','riak-erlang-http-client','rhc:get_client_id/1','Get the client ID that this client will use when s'],['fun','riak-erlang-http-client','rhc:get_index/1','Query a secondary index.'],['fun','riak-erlang-http-client','rhc:get_index/1','Query a secondary index.'],['fun','riak-erlang-http-client','rhc:get_preflist/1','Get the active preflist based on a particular buck'],['fun','riak-erlang-http-client','rhc:get_server_info/1','Get some basic information about the server.'],['fun','riak-erlang-http-client','rhc:get_server_stats/1','Get the list of full stats from a /stats call to t'],['fun','riak-erlang-http-client','rhc:ip/1','Get the IP this client will connect to.'],['fun','riak-erlang-http-client','rhc:list_buckets/1',[]],['fun','riak-erlang-http-client','rhc:list_buckets/2',[]],['fun','riak-erlang-http-client','rhc:list_keys/1','List the keys in the given bucket.'],['fun','riak-erlang-http-client','rhc:list_keys/2',[]],['fun','riak-erlang-http-client','rhc:mapred/1','Execute a map/reduce query.'],['fun','riak-erlang-http-client','rhc:mapred/3','Equivalent to mapred(Rhc, Inputs, Query, DEFAULT_T'],['fun','riak-erlang-http-client','rhc:mapred_bucket/1','Execute a map/reduce query over all keys in the gi'],['fun','riak-erlang-http-client','rhc:mapred_bucket/3','Equivalent to mapred_bucket(Rhc, Bucket, Query, DE'],['fun','riak-erlang-http-client','rhc:mapred_bucket_stream/1','Stream map/reduce results over all keys in a bucke'],['fun','riak-erlang-http-client','rhc:mapred_stream/1','Stream map/reduce results to a Pid.'],['fun','riak-erlang-http-client','rhc:mapred_stream/4','Equivalent to mapred_stream(Rhc, Inputs, Query, Cl'],['fun','riak-erlang-http-client','rhc:modify_type/1','Fetches, applies the given function to the value, '],['fun','riak-erlang-http-client','rhc:options/1','Get the default options for the given client.'],['fun','riak-erlang-http-client','rhc:ping/1','Ping the server by requesting the "/ping" resource'],['fun','riak-erlang-http-client','rhc:port/1','Get the Port this client will connect to.'],['fun','riak-erlang-http-client','rhc:prefix/1','Get the prefix this client will use for object URL'],['fun','riak-erlang-http-client','rhc:put/1','Store the given object in Riak.'],['fun','riak-erlang-http-client','rhc:put/2','Equivalent to put(Rhc, Object, []).'],['fun','riak-erlang-http-client','rhc:reset_bucket/2',[]],['fun','riak-erlang-http-client','rhc:search/1','Execute a search query and feed the results into a'],['fun','riak-erlang-http-client','rhc:search/1','Execute a search query.'],['fun','riak-erlang-http-client','rhc:set_bucket/1','Set the properties of the given bucket.'],['fun','riak-erlang-http-client','rhc:set_bucket_type/1','Set the properties of the given bucket type.'],['fun','riak-erlang-http-client','rhc:stream_index/1','Query a secondary index, streaming the results bac'],['fun','riak-erlang-http-client','rhc:stream_index/1','Query a secondary index, streaming the results bac'],['fun','riak-erlang-http-client','rhc:stream_list_buckets/1',[]],['fun','riak-erlang-http-client','rhc:stream_list_buckets/2',[]],['fun','riak-erlang-http-client','rhc:stream_list_keys/1','Stream key lists to a Pid.'],['fun','riak-erlang-http-client','rhc:stream_list_keys/2',[]],['fun','riak-erlang-http-client','rhc:update_type/1',[]],['fun','riak-erlang-http-client','rhc:update_type/1','Updates the convergent datatype in Riak with local'],['fun','riak-erlang-http-client','rhc_bucket:erlify_props/1',[]],['fun','riak-erlang-http-client','rhc_bucket:httpify_props/1',[]],['fun','riak-erlang-http-client','rhc_dt:datatype_from_json/1',[]],['fun','riak-erlang-http-client','rhc_dt:decode_error/2',[]],['fun','riak-erlang-http-client','rhc_dt:encode_update_request/3',[]],['fun','riak-erlang-http-client','rhc_index:index_acceptor/1','The entry point for the middleman process that con'],['fun','riak-erlang-http-client','rhc_index:query_options/1','Extracts query-string options for 2i requests from'],['fun','riak-erlang-http-client','rhc_index:wait_for_index/1','Collects 2i query results on behalf of the caller.'],['fun','riak-erlang-http-client','rhc_listkeys:list_acceptor/3','first stage of ibrowse response handling - just wa'],['fun','riak-erlang-http-client','rhc_listkeys:wait_for_list/1','Collect all keylist results, and provide them as o'],['fun','riak-erlang-http-client','rhc_mapred:encode_mapred/1','Translate erlang-term map/reduce query into JSON f'],['fun','riak-erlang-http-client','rhc_mapred:mapred_acceptor/3','first stage of ibrowse response handling - just wa'],['fun','riak-erlang-http-client','rhc_mapred:wait_for_mapred/1','Collect all mapreduce results, and provide them as'],['fun','riak-erlang-http-client','rhc_obj:ctype_from_headers/1',[]],['fun','riak-erlang-http-client','rhc_obj:make_riakc_obj/4',[]],['fun','riak-erlang-http-client','rhc_obj:serialize_riakc_obj/2',[]]];