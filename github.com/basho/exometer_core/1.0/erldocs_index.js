var index = [['app','exometer_core','exometer_core','[application]'],['mod','exometer_core','exo_montest','Demo module for exometer_folsom_monitor behaviours'],['mod','exometer_core','exometer','API and behaviour for metrics instances.'],['mod','exometer_core','exometer_admin',[]],['mod','exometer_core','exometer_alias','API and behaviour for metrics instances  This mod'],['mod','exometer_core','exometer_cache',[]],['mod','exometer_core','exometer_cpu',[]],['mod','exometer_core','exometer_duration',[]],['mod','exometer_core','exometer_entry','  Creating custom exometer entries.'],['mod','exometer_core','exometer_folsom',[]],['mod','exometer_core','exometer_folsom_monitor','Hook API for following folsom-based legacy code wi'],['mod','exometer_core','exometer_function',[]],['mod','exometer_core','exometer_histogram','Exometer histogram probe behavior  This module im'],['mod','exometer_core','exometer_igor',[]],['mod','exometer_core','exometer_info','Accessor function for exometer data structures.'],['mod','exometer_core','exometer_probe','Interface library for managing probes.'],['mod','exometer_core','exometer_proc','Utility functions for the exometer_proc probe type'],['mod','exometer_core','exometer_report','.'],['mod','exometer_core','exometer_report_lager','Exometer reporter for lager backend.'],['mod','exometer_core','exometer_report_tty','Custom reporting probe for Hosted Graphite.'],['mod','exometer_core','exometer_shallowtree','Size-constrained leftist tree  Inspired by Leftis'],['mod','exometer_core','exometer_slide','Efficient sliding-window buffer.'],['mod','exometer_core','exometer_slot_slide','   Introduction  This module defines a sliding '],['mod','exometer_core','exometer_spiral',[]],['mod','exometer_core','exometer_uniform',[]],['mod','exometer_core','exometer_util','Exometer utility functions.'],['fun','exometer_core','exo_montest:behaviour/0',[]],['fun','exometer_core','exo_montest:copy_folsom/3',[]],['fun','exometer_core','exo_montest:delete/3',[]],['fun','exometer_core','exo_montest:get_datapoints/3',[]],['fun','exometer_core','exo_montest:get_value/4',[]],['fun','exometer_core','exo_montest:new/3',[]],['fun','exometer_core','exo_montest:reset/3',[]],['fun','exometer_core','exo_montest:sample/3',[]],['fun','exometer_core','exo_montest:setopts/3',[]],['fun','exometer_core','exo_montest:update/4',[]],['fun','exometer_core','exometer:aggregate/1','Aggregate datapoints of matching entries.'],['fun','exometer_core','exometer:create_entry/1',[]],['fun','exometer_core','exometer:delete/1','Delete the metric.'],['fun','exometer_core','exometer:ensure/1','Ensure that metric exists and is of given type.'],['fun','exometer_core','exometer:find_entries/1','Find metrics based on a name prefix pattern.'],['fun','exometer_core','exometer:get_value/1',[]],['fun','exometer_core','exometer:get_value/1','Fetch the current value of the metric.'],['fun','exometer_core','exometer:get_values/1',[]],['fun','exometer_core','exometer:info/1','Returns a list of info items for Metric, see info/'],['fun','exometer_core','exometer:info/1','Retrieves information about a metric.'],['fun','exometer_core','exometer:new/1','Create a new metrics entry.'],['fun','exometer_core','exometer:new/1','Equivalent to new(Name, Type, []).'],['fun','exometer_core','exometer:propose/1','Propose a new exometer entry (no entry actually cr'],['fun','exometer_core','exometer:re_register/1','Create a new metrics entry, overwrite any old entr'],['fun','exometer_core','exometer:register_application/0','Equivalent to register_application(current_applica'],['fun','exometer_core','exometer:register_application/1','Registers statically defined entries with exometer'],['fun','exometer_core','exometer:repair/1','Delete and re-create an entry.'],['fun','exometer_core','exometer:reset/1','Reset the metric.'],['fun','exometer_core','exometer:sample/1','Tells the metric (mainly probes) to take a sample.'],['fun','exometer_core','exometer:select/1','Perform an ets:select() with a Limit on the set of'],['fun','exometer_core','exometer:select/1','Perform an ets:select() on the set of metrics.'],['fun','exometer_core','exometer:select_cont/1','Equivalent to ets:select(Cont).'],['fun','exometer_core','exometer:select_count/1','Corresponds to ets:select_count/1.'],['fun','exometer_core','exometer:setopts/1','Change options for the metric.'],['fun','exometer_core','exometer:start/0','Start exometer and dependent apps (for testing).'],['fun','exometer_core','exometer:stop/0','Stop exometer and dependent apps (for testing).'],['fun','exometer_core','exometer:update/1','Update the given metric with Value.'],['fun','exometer_core','exometer:update_or_create/1','Update existing metric, or create+update according'],['fun','exometer_core','exometer:update_or_create/4',[]],['fun','exometer_core','exometer_admin:auto_create_entry/1',[]],['fun','exometer_core','exometer_admin:code_change/3',[]],['fun','exometer_core','exometer_admin:delete_entry/1',[]],['fun','exometer_core','exometer_admin:demonitor/1',[]],['fun','exometer_core','exometer_admin:ensure/3',[]],['fun','exometer_core','exometer_admin:find_auto_template/1','Convenience function for testing which template wi'],['fun','exometer_core','exometer_admin:handle_call/3',[]],['fun','exometer_core','exometer_admin:handle_cast/2',[]],['fun','exometer_core','exometer_admin:handle_info/2',[]],['fun','exometer_core','exometer_admin:init/1',[]],['fun','exometer_core','exometer_admin:load_defaults/0',[]],['fun','exometer_core','exometer_admin:load_predefined/0',[]],['fun','exometer_core','exometer_admin:make_patterns/2',[]],['fun','exometer_core','exometer_admin:monitor/2',[]],['fun','exometer_core','exometer_admin:new_entry/3',[]],['fun','exometer_core','exometer_admin:normalize_name/1',[]],['fun','exometer_core','exometer_admin:prefixes/1',[]],['fun','exometer_core','exometer_admin:preset_defaults/0',[]],['fun','exometer_core','exometer_admin:propose/3',[]],['fun','exometer_core','exometer_admin:re_register_entry/3',[]],['fun','exometer_core','exometer_admin:register_application/1',[]],['fun','exometer_core','exometer_admin:repair_entry/1',[]],['fun','exometer_core','exometer_admin:set_default/1','Sets a default definition for a metric type, possi'],['fun','exometer_core','exometer_admin:start_link/0',[]],['fun','exometer_core','exometer_admin:terminate/2',[]],['fun','exometer_core','exometer_alias:delete/1','Delete an alias, if it exists in the registry.'],['fun','exometer_core','exometer_alias:get_value/1','Resolve the given alias and return corresponding m'],['fun','exometer_core','exometer_alias:load/1','Load a list of mappings between entry+datapoint pa'],['fun','exometer_core','exometer_alias:new/1','Create a new alias.'],['fun','exometer_core','exometer_alias:prefix_foldl/1','Fold (ascending order) over the aliases matching P'],['fun','exometer_core','exometer_alias:prefix_foldr/1','Fold (descending order) over the aliases matching '],['fun','exometer_core','exometer_alias:prefix_match/1','List all aliases matching the given prefix.'],['fun','exometer_core','exometer_alias:regexp_foldl/1','Fold (ascending order) over the aliases matching R'],['fun','exometer_core','exometer_alias:regexp_foldr/1','Fold (descending order) over the aliases matching '],['fun','exometer_core','exometer_alias:resolve/1','Look up an alias in the registry and return corres'],['fun','exometer_core','exometer_alias:reverse_map/1','List all aliases mapped to the given entry+datapoi'],['fun','exometer_core','exometer_alias:start_link/0',[]],['fun','exometer_core','exometer_alias:unload/1','Unload a list of mappings.'],['fun','exometer_core','exometer_alias:update/1','Resolves the given alias and updates the correspon'],['fun','exometer_core','exometer_cache:code_change/3',[]],['fun','exometer_core','exometer_cache:delete/2',[]],['fun','exometer_core','exometer_cache:handle_call/3',[]],['fun','exometer_core','exometer_cache:handle_cast/2',[]],['fun','exometer_core','exometer_cache:handle_info/2',[]],['fun','exometer_core','exometer_cache:init/1',[]],['fun','exometer_core','exometer_cache:read/2',[]],['fun','exometer_core','exometer_cache:start_link/0',[]],['fun','exometer_core','exometer_cache:terminate/2',[]],['fun','exometer_core','exometer_cache:write/3',[]],['fun','exometer_core','exometer_cache:write/4',[]],['fun','exometer_core','exometer_cpu:behaviour/0',[]],['fun','exometer_core','exometer_cpu:probe_code_change/3',[]],['fun','exometer_core','exometer_cpu:probe_get_datapoints/1',[]],['fun','exometer_core','exometer_cpu:probe_get_value/2',[]],['fun','exometer_core','exometer_cpu:probe_handle_msg/2',[]],['fun','exometer_core','exometer_cpu:probe_init/3',[]],['fun','exometer_core','exometer_cpu:probe_reset/1',[]],['fun','exometer_core','exometer_cpu:probe_sample/1',[]],['fun','exometer_core','exometer_cpu:probe_setopts/3',[]],['fun','exometer_core','exometer_cpu:probe_terminate/1',[]],['fun','exometer_core','exometer_cpu:probe_update/2',[]],['fun','exometer_core','exometer_duration:behaviour/0',[]],['fun','exometer_core','exometer_duration:delete/3',[]],['fun','exometer_core','exometer_duration:get_datapoints/3',[]],['fun','exometer_core','exometer_duration:get_value/3',[]],['fun','exometer_core','exometer_duration:get_value/4',[]],['fun','exometer_core','exometer_duration:new/3',[]],['fun','exometer_core','exometer_duration:probe_code_change/3',[]],['fun','exometer_core','exometer_duration:probe_get_datapoints/1',[]],['fun','exometer_core','exometer_duration:probe_get_value/2',[]],['fun','exometer_core','exometer_duration:probe_handle_msg/2',[]],['fun','exometer_core','exometer_duration:probe_init/3',[]],['fun','exometer_core','exometer_duration:probe_reset/1',[]],['fun','exometer_core','exometer_duration:probe_sample/1',[]],['fun','exometer_core','exometer_duration:probe_setopts/3',[]],['fun','exometer_core','exometer_duration:probe_terminate/1',[]],['fun','exometer_core','exometer_duration:probe_update/2',[]],['fun','exometer_core','exometer_duration:reset/3',[]],['fun','exometer_core','exometer_duration:sample/3',[]],['fun','exometer_core','exometer_duration:setopts/3',[]],['fun','exometer_core','exometer_duration:update/4',[]],['fun','exometer_core','exometer_folsom:behaviour/0',[]],['fun','exometer_core','exometer_folsom:delete/3',[]],['fun','exometer_core','exometer_folsom:get_datapoints/3',[]],['fun','exometer_core','exometer_folsom:get_value/4',[]],['fun','exometer_core','exometer_folsom:new/3',[]],['fun','exometer_core','exometer_folsom:reset/3',[]],['fun','exometer_core','exometer_folsom:sample/3',[]],['fun','exometer_core','exometer_folsom:setopts/3',[]],['fun','exometer_core','exometer_folsom:update/4',[]],['fun','exometer_core','exometer_folsom_monitor:monitor/1','Monitor a legacy module.'],['fun','exometer_core','exometer_folsom_monitor:start_link/0','Start the server (called automatically by exometer'],['fun','exometer_core','exometer_function:behaviour/0',[]],['fun','exometer_core','exometer_function:delete/3',[]],['fun','exometer_core','exometer_function:empty/0',[]],['fun','exometer_core','exometer_function:eval_exprs/1','Evaluate a list of abstract expressions.'],['fun','exometer_core','exometer_function:get_datapoints/3',[]],['fun','exometer_core','exometer_function:get_value/4',[]],['fun','exometer_core','exometer_function:new/1','Callback for creating an exometer function entry.'],['fun','exometer_core','exometer_function:preprocess_setopts/5',[]],['fun','exometer_core','exometer_function:reset/3',[]],['fun','exometer_core','exometer_function:sample/3',[]],['fun','exometer_core','exometer_function:setopts/3',[]],['fun','exometer_core','exometer_function:test_mem_info/1',[]],['fun','exometer_core','exometer_function:update/4',[]],['fun','exometer_core','exometer_histogram:average_sample/3',[]],['fun','exometer_core','exometer_histogram:average_transform/2',[]],['fun','exometer_core','exometer_histogram:behaviour/0',[]],['fun','exometer_core','exometer_histogram:datapoints/0',[]],['fun','exometer_core','exometer_histogram:probe_code_change/3',[]],['fun','exometer_core','exometer_histogram:probe_get_datapoints/1',[]],['fun','exometer_core','exometer_histogram:probe_get_value/2',[]],['fun','exometer_core','exometer_histogram:probe_handle_msg/2',[]],['fun','exometer_core','exometer_histogram:probe_init/3',[]],['fun','exometer_core','exometer_histogram:probe_reset/1',[]],['fun','exometer_core','exometer_histogram:probe_sample/1',[]],['fun','exometer_core','exometer_histogram:probe_setopts/3',[]],['fun','exometer_core','exometer_histogram:probe_terminate/1',[]],['fun','exometer_core','exometer_histogram:probe_update/2',[]],['fun','exometer_core','exometer_histogram:test_run/1','Equivalent to test_run(Module, 1).'],['fun','exometer_core','exometer_histogram:test_run/2','Test the performance and accuracy of a histogram c'],['fun','exometer_core','exometer_histogram:test_series/0','Create a series of values for histogram testing.'],['fun','exometer_core','exometer_igor:parse_transform/2',[]],['fun','exometer_core','exometer_info:pp/1','Pretty-print a record, or list containing records.'],['fun','exometer_core','exometer_info:pp_find/1','Performs exometer:find_entries(Path) & returns pre'],['fun','exometer_core','exometer_info:pp_lookup/1','Performs a lookup by name of entry and pretty-prin'],['fun','exometer_core','exometer_info:pp_select/1','Performs exometer:select(Pattern) & returns pretty'],['fun','exometer_core','exometer_info:status/1','Return the operational status of the given exomete'],['fun','exometer_core','exometer_probe:behaviour/0',[]],['fun','exometer_core','exometer_probe:delete/3',[]],['fun','exometer_core','exometer_probe:get_datapoints/3',[]],['fun','exometer_core','exometer_probe:get_value/3',[]],['fun','exometer_core','exometer_probe:get_value/4',[]],['fun','exometer_core','exometer_probe:new/3',[]],['fun','exometer_core','exometer_probe:reset/3',[]],['fun','exometer_core','exometer_probe:sample/3',[]],['fun','exometer_core','exometer_probe:setopts/3',[]],['fun','exometer_core','exometer_probe:update/4',[]],['fun','exometer_core','exometer_proc:call/1','Make a synchronous call to an exometer_proc proces'],['fun','exometer_core','exometer_proc:cast/1','Send an asynchronous message to an exometer_proc p'],['fun','exometer_core','exometer_proc:format_status/2',[]],['fun','exometer_core','exometer_proc:handle_system_msg/4',[]],['fun','exometer_core','exometer_proc:process_options/1','Apply process_flag-specific options.'],['fun','exometer_core','exometer_proc:spawn_process/1','Spawn an exometer_proc process.'],['fun','exometer_core','exometer_proc:stop/0','Terminate probe process in an orderly way.'],['fun','exometer_core','exometer_proc:system_code_change/4',[]],['fun','exometer_core','exometer_proc:system_continue/3',[]],['fun','exometer_core','exometer_proc:system_terminate/4',[]],['fun','exometer_core','exometer_report:add_reporter/1','Add a reporter.'],['fun','exometer_core','exometer_report:call_reporter/1','Send a custom (synchronous) call to Reporter.'],['fun','exometer_core','exometer_report:cast_reporter/1','Send a custom (asynchronous) cast to Reporter.'],['fun','exometer_core','exometer_report:delete_interval/1','Delete a named interval.'],['fun','exometer_core','exometer_report:disable_me/1','Used by a reporter to disable itself.'],['fun','exometer_core','exometer_report:disable_reporter/1','Disable Reporter.'],['fun','exometer_core','exometer_report:enable_reporter/1','Enable Reporter.'],['fun','exometer_core','exometer_report:get_intervals/1','List the named intervals for Reporter.'],['fun','exometer_core','exometer_report:list_metrics/0','Equivalent to list_metrics([]).'],['fun','exometer_core','exometer_report:list_metrics/1','List all metrics matching Path, together with subs'],['fun','exometer_core','exometer_report:list_reporters/0','List the name and pid of each known reporter.'],['fun','exometer_core','exometer_report:list_subscriptions/1','List all subscriptions for Reporter.'],['fun','exometer_core','exometer_report:new_entry/1','Called by exometer whenever a new entry is created'],['fun','exometer_core','exometer_report:remove_reporter/1','Remove Reporter (non-blocking call).'],['fun','exometer_core','exometer_report:remove_reporter/1','Remove reporter and all its subscriptions.'],['fun','exometer_core','exometer_report:restart_intervals/1','Restart all named intervals, respecting specified '],['fun','exometer_core','exometer_report:set_interval/1','Specify a named interval.'],['fun','exometer_core','exometer_report:setopts/1','Called by exometer when options of a metric entry '],['fun','exometer_core','exometer_report:start_link/0','Starts the server -------------------------------'],['fun','exometer_core','exometer_report:start_reporters/0',[]],['fun','exometer_core','exometer_report:subscribe/1','Add a subscription to an existing reporter.'],['fun','exometer_core','exometer_report:subscribe/1','Equivalent to subscribe(Reporter, Metric, DataPoin'],['fun','exometer_core','exometer_report:subscribe/1','Equivalent to subscribe(Reporter, Metric, DataPoin'],['fun','exometer_core','exometer_report:terminate_reporter/1',[]],['fun','exometer_core','exometer_report:unsubscribe/1','Removes a subscription.'],['fun','exometer_core','exometer_report:unsubscribe/1','Equivalent to unsubscribe(Reporter, Metric, DataPo'],['fun','exometer_core','exometer_report:unsubscribe_all/1','Removes all subscriptions related to Metric in Rep'],['fun','exometer_core','exometer_report_lager:exometer_call/3',[]],['fun','exometer_core','exometer_report_lager:exometer_cast/2',[]],['fun','exometer_core','exometer_report_lager:exometer_info/2',[]],['fun','exometer_core','exometer_report_lager:exometer_init/1',[]],['fun','exometer_core','exometer_report_lager:exometer_newentry/2',[]],['fun','exometer_core','exometer_report_lager:exometer_report/5',[]],['fun','exometer_core','exometer_report_lager:exometer_setopts/4',[]],['fun','exometer_core','exometer_report_lager:exometer_subscribe/5',[]],['fun','exometer_core','exometer_report_lager:exometer_terminate/2',[]],['fun','exometer_core','exometer_report_lager:exometer_unsubscribe/4',[]],['fun','exometer_core','exometer_report_tty:exometer_call/3',[]],['fun','exometer_core','exometer_report_tty:exometer_cast/2',[]],['fun','exometer_core','exometer_report_tty:exometer_info/2',[]],['fun','exometer_core','exometer_report_tty:exometer_init/1',[]],['fun','exometer_core','exometer_report_tty:exometer_newentry/2',[]],['fun','exometer_core','exometer_report_tty:exometer_report/5',[]],['fun','exometer_core','exometer_report_tty:exometer_setopts/4',[]],['fun','exometer_core','exometer_report_tty:exometer_subscribe/5',[]],['fun','exometer_core','exometer_report_tty:exometer_terminate/2',[]],['fun','exometer_core','exometer_report_tty:exometer_unsubscribe/4',[]],['fun','exometer_core','exometer_shallowtree:fill/1',[]],['fun','exometer_core','exometer_shallowtree:fill1/2',[]],['fun','exometer_core','exometer_shallowtree:filter/2',[]],['fun','exometer_core','exometer_shallowtree:insert/1','Insert value V into tree T.'],['fun','exometer_core','exometer_shallowtree:limit/1','Returns the maximum number of values for the given'],['fun','exometer_core','exometer_shallowtree:new/1','Create an empty tree limited to Size.'],['fun','exometer_core','exometer_shallowtree:size/1','Returns the number of values stored in the given t'],['fun','exometer_core','exometer_shallowtree:take_min/1','Extract the smallest value from the tree T.'],['fun','exometer_core','exometer_shallowtree:to_list/1','Converts a tree to a list.'],['fun','exometer_core','exometer_slide:add_element/1','Add an element to the buffer, optionally indicatin'],['fun','exometer_core','exometer_slide:add_element/1','Add an element to the buffer, tagged with the give'],['fun','exometer_core','exometer_slide:add_element/1','Add an element to the buffer, tagging it with the '],['fun','exometer_core','exometer_slide:foldl/1','Fold over all values in the sliding window.'],['fun','exometer_core','exometer_slide:foldl/1','Fold over the sliding window, starting from Timest'],['fun','exometer_core','exometer_slide:new/1','Create a new sliding-window buffer.'],['fun','exometer_core','exometer_slide:new/1','Callback function for exometer_histogram.'],['fun','exometer_core','exometer_slide:reset/1','Empty the buffer.'],['fun','exometer_core','exometer_slide:to_list/1','Convert the sliding window into a list of timestam'],['fun','exometer_core','exometer_slot_slide:add_element/1',[]],['fun','exometer_core','exometer_slot_slide:add_element/3',[]],['fun','exometer_core','exometer_slot_slide:add_element/4',[]],['fun','exometer_core','exometer_slot_slide:foldl/3',[]],['fun','exometer_core','exometer_slot_slide:foldl/4',[]],['fun','exometer_core','exometer_slot_slide:foldr/3',[]],['fun','exometer_core','exometer_slot_slide:foldr/4',[]],['fun','exometer_core','exometer_slot_slide:new/1',[]],['fun','exometer_core','exometer_slot_slide:new/1',[]],['fun','exometer_core','exometer_slot_slide:new/1',[]],['fun','exometer_core','exometer_slot_slide:reset/1',[]],['fun','exometer_core','exometer_slot_slide:to_list/1',[]],['fun','exometer_core','exometer_spiral:behaviour/0',[]],['fun','exometer_core','exometer_spiral:count_sample/3',[]],['fun','exometer_core','exometer_spiral:count_transform/2',[]],['fun','exometer_core','exometer_spiral:probe_code_change/3',[]],['fun','exometer_core','exometer_spiral:probe_get_datapoints/1',[]],['fun','exometer_core','exometer_spiral:probe_get_value/2',[]],['fun','exometer_core','exometer_spiral:probe_handle_msg/2',[]],['fun','exometer_core','exometer_spiral:probe_init/3',[]],['fun','exometer_core','exometer_spiral:probe_reset/1',[]],['fun','exometer_core','exometer_spiral:probe_sample/1',[]],['fun','exometer_core','exometer_spiral:probe_setopts/3',[]],['fun','exometer_core','exometer_spiral:probe_terminate/1',[]],['fun','exometer_core','exometer_spiral:probe_update/2',[]],['fun','exometer_core','exometer_uniform:behaviour/0',[]],['fun','exometer_core','exometer_uniform:probe_code_change/3',[]],['fun','exometer_core','exometer_uniform:probe_get_datapoints/1',[]],['fun','exometer_core','exometer_uniform:probe_get_value/2',[]],['fun','exometer_core','exometer_uniform:probe_handle_msg/2',[]],['fun','exometer_core','exometer_uniform:probe_init/3',[]],['fun','exometer_core','exometer_uniform:probe_reset/1',[]],['fun','exometer_core','exometer_uniform:probe_sample/1',[]],['fun','exometer_core','exometer_uniform:probe_setopts/3',[]],['fun','exometer_core','exometer_uniform:probe_terminate/1',[]],['fun','exometer_core','exometer_uniform:probe_update/2',[]],['fun','exometer_core','exometer_util:clear_event_flag/2',[]],['fun','exometer_core','exometer_util:drop_duplicates/1','  drop_duplicates/1 will drop all duplicate eleme'],['fun','exometer_core','exometer_util:get_datapoints/1',[]],['fun','exometer_core','exometer_util:get_env/2',[]],['fun','exometer_core','exometer_util:get_opt/3',[]],['fun','exometer_core','exometer_util:get_statistics/1','Calculate statistics from a sorted list of values.'],['fun','exometer_core','exometer_util:get_statistics2/4',[]],['fun','exometer_core','exometer_util:get_status/1',[]],['fun','exometer_core','exometer_util:histogram/1',[]],['fun','exometer_core','exometer_util:histogram/2',[]],['fun','exometer_core','exometer_util:pick_items/1','Pick values from specified positions in a sorted l'],['fun','exometer_core','exometer_util:report_type/3',[]],['fun','exometer_core','exometer_util:set_call_count/2',[]],['fun','exometer_core','exometer_util:set_call_count/3',[]],['fun','exometer_core','exometer_util:set_event_flag/2',[]],['fun','exometer_core','exometer_util:set_status/2',[]],['fun','exometer_core','exometer_util:table/0',[]],['fun','exometer_core','exometer_util:tables/0',[]],['fun','exometer_core','exometer_util:test_event_flag/2',[]],['fun','exometer_core','exometer_util:timestamp/0','Generate a millisecond-resolution timestamp.'],['fun','exometer_core','exometer_util:timestamp_to_datetime/1','Convert timestamp to a regular datetime.']];