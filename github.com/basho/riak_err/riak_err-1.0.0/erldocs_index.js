var index = [['app','riak_err','riak_err','[application]'],['mod','riak_err','riak_err_app','A memory-limited info/error/warning event handler.'],['mod','riak_err','riak_err_handler','A memory-limited info/error/warning event handler.'],['mod','riak_err','riak_err_monitor','Small server to monitor the riak_err custom SASL e'],['mod','riak_err','riak_err_stdlib','Functions from Erlang OTP distribution that are re'],['mod','riak_err','riak_err_sup',[]],['mod','riak_err','trunc_io','Module to print out terms for logging.'],['fun','riak_err','riak_err_app:start/0',[]],['fun','riak_err','riak_err_app:start/2',[]],['fun','riak_err','riak_err_app:stop/1',[]],['fun','riak_err','riak_err_handler:add_sup_handler/0','Add a supervised handler to the OTP kernels     '],['fun','riak_err','riak_err_handler:code_change/1',[]],['fun','riak_err','riak_err_handler:format_event/1','Given an error_logger-style Event tuple, format it'],['fun','riak_err','riak_err_handler:get_state/0','Debugging: get internal state record.'],['fun','riak_err','riak_err_handler:handle_call/1',[]],['fun','riak_err','riak_err_handler:handle_event/1',[]],['fun','riak_err','riak_err_handler:handle_info/1',[]],['fun','riak_err','riak_err_handler:init/1',[]],['fun','riak_err','riak_err_handler:limited_fmt/1','Format Fmt and Args similar to what io_lib:format/'],['fun','riak_err','riak_err_handler:reopen_log_file/0','Tell our error handler to reopen the sasl_error_lo'],['fun','riak_err','riak_err_handler:set_fmt_max_bytes/1','Change the internal value of set_fmt_max_bytes.'],['fun','riak_err','riak_err_handler:set_term_max_size/1','Change the internal value of set_term_max_size.'],['fun','riak_err','riak_err_handler:terminate/1',[]],['fun','riak_err','riak_err_monitor:code_change/1',[]],['fun','riak_err','riak_err_monitor:handle_call/1',[]],['fun','riak_err','riak_err_monitor:handle_cast/1',[]],['fun','riak_err','riak_err_monitor:handle_info/3',[]],['fun','riak_err','riak_err_monitor:init/1',[]],['fun','riak_err','riak_err_monitor:start_link/0',[]],['fun','riak_err','riak_err_monitor:stop/0',[]],['fun','riak_err','riak_err_monitor:terminate/1',[]],['fun','riak_err','riak_err_stdlib:is_my_error_report/1',[]],['fun','riak_err','riak_err_stdlib:is_my_info_report/1',[]],['fun','riak_err','riak_err_stdlib:maybe_utc/1',[]],['fun','riak_err','riak_err_stdlib:proc_lib_format/1',[]],['fun','riak_err','riak_err_stdlib:sup_get/1',[]],['fun','riak_err','riak_err_stdlib:write_time/2',[]],['fun','riak_err','riak_err_sup:init/1',[]],['fun','riak_err','riak_err_sup:start_link/0',[]],['fun','riak_err','trunc_io:fprint/1','Returns an flattened list containing the ASCII rep'],['fun','riak_err','trunc_io:perf/0',[]],['fun','riak_err','trunc_io:perf/1',[]],['fun','riak_err','trunc_io:perf1/0',[]],['fun','riak_err','trunc_io:print/1','Returns {List, Length}.'],['fun','riak_err','trunc_io:safe/1','Same as print, but never crashes.'],['fun','riak_err','trunc_io:test/0',[]],['fun','riak_err','trunc_io:test/1',[]]];