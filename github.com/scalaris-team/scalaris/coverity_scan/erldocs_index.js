var index = [['app','scalaris','scalaris','[application]'],['mod','scalaris','cloud_beh','Behaviour for various operations in a cloud enviro'],['mod','scalaris','configure','Make configure options and findings available to t'],['mod','scalaris','db_backend_beh','   Behaviour for DB back-ends.'],['mod','scalaris','dc_centroids','   Centroids data structure for dc_clustering.'],['mod','scalaris','gossip_beh','   Gossiping behaviour.'],['mod','scalaris','gossip_load_beh','   Behavior for load modules in gossip_load.'],['mod','scalaris','gossip_load_default',[]],['mod','scalaris','lb_active_beh','   Active load balancing algorithm behavior.'],['mod','scalaris','lb_active_gossip_load_metric',[]],['mod','scalaris','lb_active_gossip_request_metric',[]],['mod','scalaris','lb_psv_beh','   Passive load balancing algorithm behavior.'],['mod','scalaris','log','log service.'],['mod','scalaris','log4erl_ctpal_appender','Log4erl appender using log:pal/1 instead if io:for'],['mod','scalaris','math_pos','   Implements mathematical operations on numbers i'],['mod','scalaris','mathlib','Math utility functions.'],['mod','scalaris','pdb_beh','Behaviour for pdb (see pdb.erl and pdb_ets.erl).'],['mod','scalaris','quorum','Service functions for handling quorums.'],['mod','scalaris','rm_beh','Ring maintenance behaviour.'],['mod','scalaris','rt_beh','routing table behaviour.'],['mod','scalaris','slide_beh','   Behaviour for rm-dependant slide functionality.'],['mod','scalaris','snapshot_state','Local state information needed for the S3 snapshot'],['mod','scalaris','sup_comm_layer','   Supervisor for the comm layer processes.'],['mod','scalaris','sup_dht_node_core','   Supervisor for each DHT node that is responsibl'],['mod','scalaris','sup_dht_node_core_tx','   Supervisor for each DHT node that is responsibl'],['mod','scalaris','sup_paxos','Supervisor to instantiate paxos processes (propose'],['mod','scalaris','sup_yaws',[]],['mod','scalaris','uid','   Provides unique process-local and global IDs.'],['fun','scalaris','cloud_beh:behaviour_info/1',[]],['fun','scalaris','configure:get_proplist/0',[]],['fun','scalaris','configure:is_enable_debug/0',[]],['fun','scalaris','configure:show_config/0',[]],['fun','scalaris','db_backend_beh:behaviour_info/1',[]],['fun','scalaris','db_backend_beh:tester_create_db_key/1',[]],['fun','scalaris','db_backend_beh:tester_is_valid_db_key/1',[]],['fun','scalaris','dc_centroids:distance/1','Get the distance between two centroids.'],['fun','scalaris','dc_centroids:empty_centroids_list/0','Helper to return an empty list of centroids.'],['fun','scalaris','dc_centroids:get_coordinate/1','Get centroids coordinate.'],['fun','scalaris','dc_centroids:get_coordinate_and_relative_size/1','Get a centroids coordinate and relative size as a'],['fun','scalaris','dc_centroids:get_relative_size/1','Get centroids relative size.'],['fun','scalaris','dc_centroids:new/1','Create a new centroid.'],['fun','scalaris','dc_centroids:set_relative_size/1','Set the relative size of a centroid.'],['fun','scalaris','gossip_beh:behaviour_info/1',[]],['fun','scalaris','gossip_load_beh:behaviour_info/1',[]],['fun','scalaris','gossip_load_default:get_load/1',[]],['fun','scalaris','gossip_load_default:init_histo/1',[]],['fun','scalaris','lb_active_beh:behaviour_info/1',[]],['fun','scalaris','lb_active_gossip_load_metric:get_load/1',[]],['fun','scalaris','lb_active_gossip_load_metric:init_histo/1',[]],['fun','scalaris','lb_active_gossip_request_metric:get_load/1',[]],['fun','scalaris','lb_active_gossip_request_metric:init_histo/1',[]],['fun','scalaris','lb_psv_beh:behaviour_info/1',[]],['fun','scalaris','log4erl_ctpal_appender:code_change/1',[]],['fun','scalaris','log4erl_ctpal_appender:handle_call/2',[]],['fun','scalaris','log4erl_ctpal_appender:handle_event/2',[]],['fun','scalaris','log4erl_ctpal_appender:handle_info/1',[]],['fun','scalaris','log4erl_ctpal_appender:init/2',[]],['fun','scalaris','log4erl_ctpal_appender:terminate/1',[]],['fun','scalaris','log:check_config/0','Checks whether config parameters of the log4erl pr'],['fun','scalaris','log:log/1',[]],['fun','scalaris','log:log/1',[]],['fun','scalaris','log:log/1',[]],['fun','scalaris','log:log/1',[]],['fun','scalaris','log:pal/1',[]],['fun','scalaris','log:pal/1',[]],['fun','scalaris','log:set_log_level/1',[]],['fun','scalaris','log:start_link/0','Starts the log4erl process, removes the error_logg'],['fun','scalaris','math_pos:divide/1','A / Divisor (with rounding to nearest integer not '],['fun','scalaris','math_pos:from_decimal/1','Converts a (decimal, non-negative) integer to a po'],['fun','scalaris','math_pos:make_same_length/1','Bring two lists to the same length by appending or'],['fun','scalaris','math_pos:make_same_length/1','Bring two lists to the same length by appending or'],['fun','scalaris','math_pos:minus/1','A - B.'],['fun','scalaris','math_pos:multiply/1','A * Factor, if Factor is a non-negative integer.'],['fun','scalaris','math_pos:multiply/1','A * Factor, if Factor is a non-negative integer cu'],['fun','scalaris','math_pos:plus/1','A + B.'],['fun','scalaris','math_pos:remove_zeros/1','Remove leading or trailing 0s.'],['fun','scalaris','math_pos:to_decimal/1','Converts a position var with the given Base to a ('],['fun','scalaris','mathlib:aggloClustering/1','Get closest centroids and merge them if their dist'],['fun','scalaris','mathlib:binomial_coeff/1','Calculates the binomial coefficient of n over k fo'],['fun','scalaris','mathlib:binomial_coeff_feeder/2',[]],['fun','scalaris','mathlib:closestPoints/1','Find indices of closest centroids.'],['fun','scalaris','mathlib:euclideanDistance/1','Euclidean distance between two vectors.'],['fun','scalaris','mathlib:euclideanDistance/1','Euclidean distance between origin and V.'],['fun','scalaris','mathlib:factorial/1','calculates N!'],['fun','scalaris','mathlib:factorial_feeder/1',[]],['fun','scalaris','mathlib:gcd/1','Calculates the greatest common divisor of two inte'],['fun','scalaris','mathlib:median/1','Median of an unsorted non-empty list of numbers, i'],['fun','scalaris','mathlib:nearestCentroid/1','Get the nearest centroid to U from the list Centro'],['fun','scalaris','mathlib:u/1','Unit vector u(v) = v/||v||.'],['fun','scalaris','mathlib:vecAdd/1','Add two vectors X,Y, i.e.'],['fun','scalaris','mathlib:vecMult/1','Multiply vector V with a scalar S.'],['fun','scalaris','mathlib:vecSub/1','Substract two vectors X,Y, i.e.'],['fun','scalaris','mathlib:vecWeightedAvg/1',[]],['fun','scalaris','mathlib:zeros/1','Create a list with N zeros.'],['fun','scalaris','mathlib:zeros_feeder/1',[]],['fun','scalaris','pdb_beh:behaviour_info/1',[]],['fun','scalaris','quorum:majority_for_accept/1','Gives the majority required for a quorum to accept'],['fun','scalaris','quorum:majority_for_deny/1','Gives the majority required for a quorum to deny.'],['fun','scalaris','rm_beh:behaviour_info/1',[]],['fun','scalaris','rt_beh:behaviour_info/1',[]],['fun','scalaris','slide_beh:behaviour_info/1',[]],['fun','scalaris','snapshot_state:add_leader/1',[]],['fun','scalaris','snapshot_state:get_leaders/1',[]],['fun','scalaris','snapshot_state:get_number/1',[]],['fun','scalaris','snapshot_state:is_in_progress/1',[]],['fun','scalaris','snapshot_state:new/0',[]],['fun','scalaris','snapshot_state:new/1',[]],['fun','scalaris','snapshot_state:set_number/1',[]],['fun','scalaris','snapshot_state:start_progress/1',[]],['fun','scalaris','snapshot_state:stop_progress/1',[]],['fun','scalaris','sup_comm_layer:childs/1',[]],['fun','scalaris','sup_comm_layer:init/1',[]],['fun','scalaris','sup_comm_layer:start_link/0',[]],['fun','scalaris','sup_comm_layer:supspec/1',[]],['fun','scalaris','sup_dht_node_core:check_config/0','Checks whether config parameters for the sup_dht_n'],['fun','scalaris','sup_dht_node_core:childs/1',[]],['fun','scalaris','sup_dht_node_core:init/1',[]],['fun','scalaris','sup_dht_node_core:start_link/1',[]],['fun','scalaris','sup_dht_node_core:supspec/1',[]],['fun','scalaris','sup_dht_node_core_tx:childs/1',[]],['fun','scalaris','sup_dht_node_core_tx:init/1',[]],['fun','scalaris','sup_dht_node_core_tx:start_link/1',[]],['fun','scalaris','sup_dht_node_core_tx:supspec/1',[]],['fun','scalaris','sup_paxos:childs/1',[]],['fun','scalaris','sup_paxos:init/1',[]],['fun','scalaris','sup_paxos:start_link/1',[]],['fun','scalaris','sup_paxos:supspec/1',[]],['fun','scalaris','sup_yaws:check_config/0','Checks whether yaws config parameters exist and ar'],['fun','scalaris','sup_yaws:init/1',[]],['fun','scalaris','sup_yaws:start_link/0',[]],['fun','scalaris','uid:from_same_pid/1','Checks whether GUID1 is from the same process as G'],['fun','scalaris','uid:get_global_uid/0',[]],['fun','scalaris','uid:get_pids_uid/0',[]],['fun','scalaris','uid:is_my_old_uid/1','Checks whether the given GUID is an old incarnatio'],['fun','scalaris','uid:is_old_uid/1','Checks whether GUID1 is an old incarnation of GUID']];