var index = [['app','gproc','gproc','[application]'],['mod','gproc','gproc_app',[]],['mod','gproc','gproc_bcast','Gproc message broadcast server  This module is us'],['mod','gproc','gproc_dist','Extended process registry.'],['mod','gproc','gproc_info',[]],['mod','gproc','gproc_init',[]],['mod','gproc','gproc_lib','Extended process registry.'],['mod','gproc','gproc_monitor','  This module implements a notification system fo'],['mod','gproc','gproc_pool','Load balancing functions based on Gproc.'],['mod','gproc','gproc_ps','Gproc Publish/Subscribe patterns  This module imp'],['mod','gproc','gproc_pt','Parse transform utility for gproc users.'],['mod','gproc','gproc_sup',[]],['fun','gproc','gproc_app:start/0',[]],['fun','gproc','gproc_app:start/2',[]],['fun','gproc','gproc_app:stop/1',[]],['fun','gproc','gproc_bcast:code_change/3',[]],['fun','gproc','gproc_bcast:handle_call/3',[]],['fun','gproc','gproc_bcast:handle_cast/2',[]],['fun','gproc','gproc_bcast:handle_info/2',[]],['fun','gproc','gproc_bcast:init/1',[]],['fun','gproc','gproc_bcast:start_link/0',[]],['fun','gproc','gproc_bcast:terminate/2',[]],['fun','gproc','gproc_dist:code_change/4',[]],['fun','gproc','gproc_dist:elected/2',[]],['fun','gproc','gproc_dist:elected/3',[]],['fun','gproc','gproc_dist:from_leader/3',[]],['fun','gproc','gproc_dist:get_leader/0','Returns the node of the current gproc leader.'],['fun','gproc','gproc_dist:give_away/2',[]],['fun','gproc','gproc_dist:handle_call/4',[]],['fun','gproc','gproc_dist:handle_cast/3',[]],['fun','gproc','gproc_dist:handle_DOWN/3',[]],['fun','gproc','gproc_dist:handle_info/2',[]],['fun','gproc','gproc_dist:handle_info/3',[]],['fun','gproc','gproc_dist:handle_leader_call/4',[]],['fun','gproc','gproc_dist:handle_leader_cast/3',[]],['fun','gproc','gproc_dist:init/1',[]],['fun','gproc','gproc_dist:leader_call/1',[]],['fun','gproc','gproc_dist:leader_cast/1',[]],['fun','gproc','gproc_dist:mreg/2',[]],['fun','gproc','gproc_dist:munreg/2',[]],['fun','gproc','gproc_dist:reg/1',[]],['fun','gproc','gproc_dist:reg/3','      Class = n  - unique name            | p  -'],['fun','gproc','gproc_dist:reg_or_locate/3',[]],['fun','gproc','gproc_dist:reg_shared/3',[]],['fun','gproc','gproc_dist:reset_counter/1',[]],['fun','gproc','gproc_dist:set_attributes/2',[]],['fun','gproc','gproc_dist:set_attributes_shared/2',[]],['fun','gproc','gproc_dist:set_value/2',[]],['fun','gproc','gproc_dist:start_link/0',[]],['fun','gproc','gproc_dist:start_link/1',[]],['fun','gproc','gproc_dist:surrendered/3',[]],['fun','gproc','gproc_dist:sync/0','Synchronize with the gproc leader.'],['fun','gproc','gproc_dist:terminate/2',[]],['fun','gproc','gproc_dist:unreg/1',[]],['fun','gproc','gproc_dist:unreg_shared/1',[]],['fun','gproc','gproc_dist:update_counter/3',[]],['fun','gproc','gproc_dist:update_counters/1',[]],['fun','gproc','gproc_dist:update_shared_counter/2',[]],['fun','gproc','gproc_info:i/0',[]],['fun','gproc','gproc_init:hard_reset/0',[]],['fun','gproc','gproc_init:soft_reset/0',[]],['fun','gproc','gproc_lib:add_monitor/3',[]],['fun','gproc','gproc_lib:await/3',[]],['fun','gproc','gproc_lib:default_attrs/1',[]],['fun','gproc','gproc_lib:do_set_counter_value/3',[]],['fun','gproc','gproc_lib:do_set_value/3',[]],['fun','gproc','gproc_lib:ensure_monitor/2',[]],['fun','gproc','gproc_lib:insert_attr/4',[]],['fun','gproc','gproc_lib:insert_many/1',[]],['fun','gproc','gproc_lib:insert_reg/1',[]],['fun','gproc','gproc_lib:insert_reg/5',[]],['fun','gproc','gproc_lib:notify/2',[]],['fun','gproc','gproc_lib:notify/3',[]],['fun','gproc','gproc_lib:remove_many/4',[]],['fun','gproc','gproc_lib:remove_monitor/3',[]],['fun','gproc','gproc_lib:remove_monitors/3',[]],['fun','gproc','gproc_lib:remove_reg/3',[]],['fun','gproc','gproc_lib:remove_reg/4',[]],['fun','gproc','gproc_lib:remove_reverse_mapping/3',[]],['fun','gproc','gproc_lib:remove_wait/4',[]],['fun','gproc','gproc_lib:update_aggr_counter/3',[]],['fun','gproc','gproc_lib:update_counter/3',[]],['fun','gproc','gproc_lib:valid_opts/2',[]],['fun','gproc','gproc_monitor:start_link/0','  Starts the server.'],['fun','gproc','gproc_monitor:subscribe/1','  Subscribe to registration events for a certain '],['fun','gproc','gproc_monitor:unsubscribe/1','  Unsubscribe from registration events for a cert'],['fun','gproc','gproc_pool:active_workers/1','Return a list of currently connected workers in th'],['fun','gproc','gproc_pool:add_worker/1','Assign a worker name to a given slot in the pool, '],['fun','gproc','gproc_pool:add_worker/1','Assign a worker name to the pool, returning the wo'],['fun','gproc','gproc_pool:claim/1','Picks the first available worker in the pool and a'],['fun','gproc','gproc_pool:connect_worker/1','Connect the current process to Name in Pool.'],['fun','gproc','gproc_pool:defined_workers/1','Return a list of added workers in the pool.'],['fun','gproc','gproc_pool:delete/1','Delete an existing pool.'],['fun','gproc','gproc_pool:disconnect_worker/2','Disconnect the current process from Name in Pool.'],['fun','gproc','gproc_pool:force_delete/1','Forcibly remove a pool, terminating all active wor'],['fun','gproc','gproc_pool:log/1','Update a counter associated with a worker name.'],['fun','gproc','gproc_pool:new/1','Create a new pool.'],['fun','gproc','gproc_pool:new/1','Equivalent to new(Pool, round_robin, []).'],['fun','gproc','gproc_pool:pick/1','Pick a worker from the pool based on Value.'],['fun','gproc','gproc_pool:pick/1','Pick a worker from the pool given the pools load-'],['fun','gproc','gproc_pool:ptest/4',[]],['fun','gproc','gproc_pool:randomize/1','Randomizes the "next" pointer for the pool.'],['fun','gproc','gproc_pool:remove_worker/1','Remove a previously added worker.'],['fun','gproc','gproc_pool:test_run0/2',[]],['fun','gproc','gproc_pool:whereis_worker/1','Look up the pid of a connected worker.'],['fun','gproc','gproc_pool:worker_id/2','Return the unique gproc name corresponding to a na'],['fun','gproc','gproc_pool:worker_pool/1','Return a list of slots and/or named workers in the'],['fun','gproc','gproc_ps:change_cond/1','Change the condition specification of an existing '],['fun','gproc','gproc_ps:create_single/1','Creates a single-shot subscription entry for Event'],['fun','gproc','gproc_ps:delete_single/1','Deletes the single-shot subscription for Event.'],['fun','gproc','gproc_ps:disable_single/1','Disables the single-shot subscription for Event.'],['fun','gproc','gproc_ps:enable_single/1','Enables the single-shot subscription for Event.'],['fun','gproc','gproc_ps:list_singles/1','Lists all single-shot subscribers of Event, togeth'],['fun','gproc','gproc_ps:list_subs/1','List the pids of all processes subscribing to Even'],['fun','gproc','gproc_ps:notify_single_if_true/1','Create/enable a single subscription for event; not'],['fun','gproc','gproc_ps:publish/1','Publish the message Msg to all subscribers of Even'],['fun','gproc','gproc_ps:publish_cond/1','Publishes the message Msg to conditional subscribe'],['fun','gproc','gproc_ps:subscribe/1','Subscribe to events of type Event'],['fun','gproc','gproc_ps:subscribe_cond/1','Subscribe conditionally to events of type Event'],['fun','gproc','gproc_ps:tell_singles/1','Publish Msg to all single-shot subscribers of Even'],['fun','gproc','gproc_ps:unsubscribe/1','Remove subscribtion created using subscribe(Scope,'],['fun','gproc','gproc_pt:parse_transform/2',[]],['fun','gproc','gproc_sup:init/1','The main GPROC supervisor.'],['fun','gproc','gproc_sup:start_link/1',[]]];