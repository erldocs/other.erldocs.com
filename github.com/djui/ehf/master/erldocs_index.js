var index = [['app','ehf','ehf','[application]'],['mod','ehf','ehf_application','Helper functions.'],['mod','ehf','ehf_assert','Composable error handling.'],['mod','ehf','ehf_calendar','Helper functions.'],['mod','ehf','ehf_deployer','Deploys recently changed Erlang code by shipping i'],['mod','ehf','ehf_disk_log','Helper functions.'],['mod','ehf','ehf_inet','INet Helper functions.'],['mod','ehf','ehf_os','OS Helper functions.'],['mod','ehf','ehf_reloader','Erlang module for automatically reloading modified'],['mod','ehf','ehf_shell','Helper functions.'],['mod','ehf','ehf_supervisor','Helper functions.'],['fun','ehf','ehf_application:ensure_started/1','Ensure that a given application is started.'],['fun','ehf','ehf_application:get_env/2','Get environment values given a key from the curren'],['fun','ehf','ehf_application:get_env/3','Get environment values given a key from a given ap'],['fun','ehf','ehf_application:priv_dir/0','Returns the priv directory path for the current ap'],['fun','ehf','ehf_application:priv_file/1','Returns the path of a file residing in the priv di'],['fun','ehf','ehf_application:priv_file/2','Returns the path of a file residing in the priv di'],['fun','ehf','ehf_assert:lift/1',[]],['fun','ehf','ehf_assert:unlift/1',[]],['fun','ehf','ehf_calendar:unix_ts/0','Convert an erlang:now/0 timestamp into an unix tim'],['fun','ehf','ehf_calendar:unix_ts/1',[]],['fun','ehf','ehf_calendar:unix_ts_to_datetime/1',[]],['fun','ehf','ehf_deployer:code_change/3',[]],['fun','ehf','ehf_deployer:handle_call/3',[]],['fun','ehf','ehf_deployer:handle_cast/2',[]],['fun','ehf','ehf_deployer:handle_info/2',[]],['fun','ehf','ehf_deployer:init/1',[]],['fun','ehf','ehf_deployer:start/0',[]],['fun','ehf','ehf_deployer:start_link/0',[]],['fun','ehf','ehf_deployer:stop/0',[]],['fun','ehf','ehf_deployer:terminate/2',[]],['fun','ehf','ehf_disk_log:dump/1','Return the whole content of a valid disk_log log f'],['fun','ehf','ehf_disk_log:is_valid/1','Return true if a given file is a disk_log and not '],['fun','ehf','ehf_inet:node2host/1','Returns the host of a given node name.'],['fun','ehf','ehf_inet:node2ip/1','Returns the IPv4 address of a given node name.'],['fun','ehf','ehf_inet:node2ipv6/1','Returns the IPv6 address of a given node name.'],['fun','ehf','ehf_os:cmd/1','Running an external command as port along with the'],['fun','ehf','ehf_os:cmd/2',[]],['fun','ehf','ehf_os:cmd2/1','Executes an OS command and returns the return code'],['fun','ehf','ehf_os:cmd2/2','Executes an OS command and returns the return code'],['fun','ehf','ehf_os:cmd3/1','Executes an OS command and returns the return code'],['fun','ehf','ehf_os:cpus/0',[]],['fun','ehf','ehf_os:exit/1','Shuts down an Erlang VM with a given text and 0 as'],['fun','ehf','ehf_os:exit/2','Shuts down an Erlang VM with a given text and retu'],['fun','ehf','ehf_reloader:all_changed/0',[]],['fun','ehf','ehf_reloader:code_change/3',[]],['fun','ehf','ehf_reloader:handle_call/3',[]],['fun','ehf','ehf_reloader:handle_cast/2',[]],['fun','ehf','ehf_reloader:handle_info/2',[]],['fun','ehf','ehf_reloader:init/1',[]],['fun','ehf','ehf_reloader:is_changed/1',[]],['fun','ehf','ehf_reloader:reload_modules/1',[]],['fun','ehf','ehf_reloader:start/0',[]],['fun','ehf','ehf_reloader:start_link/0',[]],['fun','ehf','ehf_reloader:stop/0',[]],['fun','ehf','ehf_reloader:terminate/2',[]],['fun','ehf','ehf_shell:clear/0','Clears the current shell screen from output garbag'],['fun','ehf','ehf_shell:error/1','Prints out an error message in colored (red) text.'],['fun','ehf','ehf_shell:exit/0','Stop an Erlang VM nicely with a the return code 0 '],['fun','ehf','ehf_shell:exit/1','Stop an Erlang VM nicely with a given return code '],['fun','ehf','ehf_supervisor:supervise/1',[]],['fun','ehf','ehf_supervisor:supervise/2',[]],['fun','ehf','ehf_supervisor:supervision_for_all/1',[]],['fun','ehf','ehf_supervisor:supervision_for_all/3',[]],['fun','ehf','ehf_supervisor:supervision_for_one/1',[]],['fun','ehf','ehf_supervisor:supervision_for_one/3',[]],['fun','ehf','ehf_supervisor:supervision_for_rest/1',[]],['fun','ehf','ehf_supervisor:supervision_for_rest/3',[]],['fun','ehf','ehf_supervisor:work/1',[]],['fun','ehf','ehf_supervisor:work/2',[]],['fun','ehf','ehf_supervisor:work_temporary/1',[]],['fun','ehf','ehf_supervisor:work_temporary/2',[]],['fun','ehf','ehf_supervisor:work_temporary_then_die/1',[]],['fun','ehf','ehf_supervisor:work_temporary_then_die/2',[]],['fun','ehf','ehf_supervisor:work_temporary_then_wait/2',[]],['fun','ehf','ehf_supervisor:work_temporary_then_wait/3',[]],['fun','ehf','ehf_supervisor:work_then_die/1',[]],['fun','ehf','ehf_supervisor:work_then_die/2',[]],['fun','ehf','ehf_supervisor:work_then_wait/2',[]],['fun','ehf','ehf_supervisor:work_then_wait/3',[]],['fun','ehf','ehf_supervisor:work_transient/1',[]],['fun','ehf','ehf_supervisor:work_transient/2',[]],['fun','ehf','ehf_supervisor:work_transient_then_die/1',[]],['fun','ehf','ehf_supervisor:work_transient_then_die/2',[]],['fun','ehf','ehf_supervisor:work_transient_then_wait/2',[]],['fun','ehf','ehf_supervisor:work_transient_then_wait/3',[]]];