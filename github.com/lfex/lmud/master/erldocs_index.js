var index = [['app','lmud','lmud','[application]'],['mod','lmud','em_acceptor','Accept new TCP connections.'],['mod','lmud','em_conn','Manage new TCP connections.'],['mod','lmud','em_english','Grammar support.'],['mod','lmud','em_game','Game server.'],['mod','lmud','em_listener','Listen for new TCP connections.'],['mod','lmud','em_living','Embodiment of player characters in the game.'],['mod','lmud','em_login','Login request handler.'],['mod','lmud','em_object','Interface for dealing with objects in the game.'],['mod','lmud','em_parser','In-game request handler for user sessions.'],['mod','lmud','em_req','Process a single request.'],['mod','lmud','em_room','In-game room representation.'],['mod','lmud','em_room_mgr','Manage the room database.'],['mod','lmud','em_session','Session manager.'],['mod','lmud','em_spell',[]],['mod','lmud','em_spell_ward',[]],['mod','lmud','em_telnet','Handle incoming data and option negotiation in a t'],['mod','lmud','em_text','Text processing module.'],['mod','lmud','em_text_prop',[]],['mod','lmud','em_util_sha2','Implementations of SHA-224, SHA-256, SHA-384, SHA-'],['fun','lmud','em_acceptor:code_change/1',[]],['fun','lmud','em_acceptor:handle_call/1','We dont listen to any calls, just empty the queue'],['fun','lmud','em_acceptor:handle_cast/1','We dont listen to any casts, just empty the queue'],['fun','lmud','em_acceptor:handle_info/1','Handle other messages.'],['fun','lmud','em_acceptor:init/1','Set up local state, then return with a timeout.'],['fun','lmud','em_acceptor:start_link/1','Start an acceptor process and return the pid.'],['fun','lmud','em_acceptor:terminate/1',[]],['fun','lmud','em_conn:code_change/3',[]],['fun','lmud','em_conn:echo_off/1',[]],['fun','lmud','em_conn:echo_on/1',[]],['fun','lmud','em_conn:handle_call/3',[]],['fun','lmud','em_conn:handle_cast/2',[]],['fun','lmud','em_conn:handle_info/2',[]],['fun','lmud','em_conn:init/1',[]],['fun','lmud','em_conn:print/1',[]],['fun','lmud','em_conn:print/1',[]],['fun','lmud','em_conn:start_link/1',[]],['fun','lmud','em_conn:terminate/2',[]],['fun','lmud','em_english:add_article/1','Add a, an to a string as appropriate.'],['fun','lmud','em_english:number_of/1','Handle proper pluralization in expressions like "0'],['fun','lmud','em_english:number_word/1','Convert a number to the correct word as appropriat'],['fun','lmud','em_english:pluralize/1','Return the plural version of a given word.'],['fun','lmud','em_english:punctuate/1','Punctuate a string if it ends with a-z or A-Z.'],['fun','lmud','em_game:code_change/3',[]],['fun','lmud','em_game:data_dir/0','Return path to the data directory.'],['fun','lmud','em_game:get_user_names/0',[]],['fun','lmud','em_game:get_users/0','Return a list of {Name, UserPid} tuples with all l'],['fun','lmud','em_game:handle_call/3',[]],['fun','lmud','em_game:handle_cast/2',[]],['fun','lmud','em_game:handle_info/2',[]],['fun','lmud','em_game:incarnate/1','Incarnate a living, putting them in the room where'],['fun','lmud','em_game:init/1',[]],['fun','lmud','em_game:login/1','Log in a user to the game.'],['fun','lmud','em_game:logout/1','Log out the specified user.'],['fun','lmud','em_game:lookup_user/1','Lookup a user by name, return the {Name, UserPid} '],['fun','lmud','em_game:lookup_user_pid/1','Lookup a user by pid, return the {Name, UserPid} t'],['fun','lmud','em_game:print_except/3','Print something to all users except the specified '],['fun','lmud','em_game:print_while/3','Print something to all users that satisfy the pred'],['fun','lmud','em_game:start/0',[]],['fun','lmud','em_game:start_link/0',[]],['fun','lmud','em_game:terminate/2',[]],['fun','lmud','em_listener:code_change/3',[]],['fun','lmud','em_listener:handle_call/3',[]],['fun','lmud','em_listener:handle_cast/2',[]],['fun','lmud','em_listener:handle_info/2',[]],['fun','lmud','em_listener:init/1',[]],['fun','lmud','em_listener:start_link/1','Start the server and begin listening on the specif'],['fun','lmud','em_listener:terminate/2',[]],['fun','lmud','em_living:add_object/1',[]],['fun','lmud','em_living:cmd/1',[]],['fun','lmud','em_living:code_change/3',[]],['fun','lmud','em_living:desc/1',[]],['fun','lmud','em_living:get_name/1',[]],['fun','lmud','em_living:get_objects/1',[]],['fun','lmud','em_living:get_room/1',[]],['fun','lmud','em_living:handle_call/3',[]],['fun','lmud','em_living:handle_cast/2',[]],['fun','lmud','em_living:handle_info/2',[]],['fun','lmud','em_living:init/1',[]],['fun','lmud','em_living:load/1',[]],['fun','lmud','em_living:move_object/1',[]],['fun','lmud','em_living:print/1',[]],['fun','lmud','em_living:print/1',[]],['fun','lmud','em_living:remove_object/1',[]],['fun','lmud','em_living:save/1',[]],['fun','lmud','em_living:set_desc/1',[]],['fun','lmud','em_living:set_room/1',[]],['fun','lmud','em_living:start/2',[]],['fun','lmud','em_living:start_link/2',[]],['fun','lmud','em_living:stop/1',[]],['fun','lmud','em_living:terminate/2',[]],['fun','lmud','em_login:login/1',[]],['fun','lmud','em_login:welcome/1',[]],['fun','lmud','em_object:a_short/1',[]],['fun','lmud','em_object:add_adj/1',[]],['fun','lmud','em_object:add_id/1','Add an id to the specified object.'],['fun','lmud','em_object:add_primary_adj/1',[]],['fun','lmud','em_object:add_primary_id/1',[]],['fun','lmud','em_object:desc/1',[]],['fun','lmud','em_object:get_template/1',[]],['fun','lmud','em_object:has_id/1',[]],['fun','lmud','em_object:has_plural_id/1',[]],['fun','lmud','em_object:is_attached/1',[]],['fun','lmud','em_object:load/1',[]],['fun','lmud','em_object:load_obs/1',[]],['fun','lmud','em_object:new/1','New object with list of ids and adjs.'],['fun','lmud','em_object:new/1','Create new object with short desc string; we yan'],['fun','lmud','em_object:set_attached/1',[]],['fun','lmud','em_object:set_desc/1',[]],['fun','lmud','em_object:set_name/1','Set name of an object given a plain "short desc" s'],['fun','lmud','em_object:show_in_room/1',[]],['fun','lmud','em_object:the_short/1',[]],['fun','lmud','em_parser:cmd_dig/2',[]],['fun','lmud','em_parser:cmd_open/1',[]],['fun','lmud','em_parser:cmd_redit/1',[]],['fun','lmud','em_parser:parse/1',[]],['fun','lmud','em_req:code_change/3',[]],['fun','lmud','em_req:handle_call/3',[]],['fun','lmud','em_req:handle_cast/2',[]],['fun','lmud','em_req:handle_info/2',[]],['fun','lmud','em_req:init/1',[]],['fun','lmud','em_req:run/1',[]],['fun','lmud','em_req:start_link/1',[]],['fun','lmud','em_req:terminate/2',[]],['fun','lmud','em_room:add_event_listener/2',[]],['fun','lmud','em_room:add_exit/3',[]],['fun','lmud','em_room:add_object/2',[]],['fun','lmud','em_room:add_reset/2',[]],['fun','lmud','em_room:code_change/3',[]],['fun','lmud','em_room:describe/1',[]],['fun','lmud','em_room:describe_except/2',[]],['fun','lmud','em_room:enter/2',[]],['fun','lmud','em_room:get_exit/2',[]],['fun','lmud','em_room:get_exits/1',[]],['fun','lmud','em_room:get_name/1',[]],['fun','lmud','em_room:get_objects/1',[]],['fun','lmud','em_room:get_people/1',[]],['fun','lmud','em_room:handle_call/3',[]],['fun','lmud','em_room:handle_cast/2',[]],['fun','lmud','em_room:handle_info/2',[]],['fun','lmud','em_room:init/1',[]],['fun','lmud','em_room:leave/2',[]],['fun','lmud','em_room:looking/2',[]],['fun','lmud','em_room:notify/2',[]],['fun','lmud','em_room:print_except/4',[]],['fun','lmud','em_room:print_except/5',[]],['fun','lmud','em_room:print_while/4',[]],['fun','lmud','em_room:remove_object/2',[]],['fun','lmud','em_room:save/1',[]],['fun','lmud','em_room:set_brief/2',[]],['fun','lmud','em_room:set_desc/2',[]],['fun','lmud','em_room:set_title/2',[]],['fun','lmud','em_room:start_link/3',[]],['fun','lmud','em_room:terminate/2',[]],['fun','lmud','em_room_mgr:code_change/3',[]],['fun','lmud','em_room_mgr:get_room/1',[]],['fun','lmud','em_room_mgr:handle_call/3',[]],['fun','lmud','em_room_mgr:handle_cast/2',[]],['fun','lmud','em_room_mgr:handle_info/2',[]],['fun','lmud','em_room_mgr:init/1',[]],['fun','lmud','em_room_mgr:new_room/1',[]],['fun','lmud','em_room_mgr:start_link/0',[]],['fun','lmud','em_room_mgr:terminate/2',[]],['fun','lmud','em_session:code_change/3',[]],['fun','lmud','em_session:handle_call/3',[]],['fun','lmud','em_session:handle_cast/2',[]],['fun','lmud','em_session:handle_info/2',[]],['fun','lmud','em_session:init/1',[]],['fun','lmud','em_session:receive_line/2','Push received data onto our queue and return with '],['fun','lmud','em_session:start_link/1',[]],['fun','lmud','em_session:terminate/2',[]],['fun','lmud','em_spell:behaviour_info/1',[]],['fun','lmud','em_spell:code_change/1',[]],['fun','lmud','em_spell:handle_call/1','We dont listen to any calls, just empty the queue'],['fun','lmud','em_spell:handle_cast/1','We dont listen to any casts, just empty the queue'],['fun','lmud','em_spell:handle_info/2','Pass other messages on to the spell module.'],['fun','lmud','em_spell:init/1',[]],['fun','lmud','em_spell:start_link/1',[]],['fun','lmud','em_spell:terminate/1',[]],['fun','lmud','em_spell_ward:handle_cast/2',[]],['fun','lmud','em_spell_ward:handle_event/1',[]],['fun','lmud','em_spell_ward:handle_info/2',[]],['fun','lmud','em_spell_ward:init/1',[]],['fun','lmud','em_spell_ward:start/2',[]],['fun','lmud','em_spell_ward:terminate/2',[]],['fun','lmud','em_telnet:do/1','Tell other side that they should activate the spec'],['fun','lmud','em_telnet:dont/1','Tell other side that they should NOT activate the '],['fun','lmud','em_telnet:new/1','Returns TelnetSession.'],['fun','lmud','em_telnet:parse/1','Parse an incoming chunk of data.'],['fun','lmud','em_telnet:will/1','Tell other side that we will activate the specifie'],['fun','lmud','em_telnet:wont/1','Tell other side that we decline to activate the sp'],['fun','lmud','em_text:capitalize/1','Return given string, with first letter in upper ca'],['fun','lmud','em_text:title_caps/1','Return given string, with first letter of each wor'],['fun','lmud','em_text:wrap/1','Wrap a string at the specified length, returning a'],['fun','lmud','em_text:wrapline/1','Wrap a string at the specified length, inserting n'],['fun','lmud','em_util_sha2:hexdigest224/1','Returns a SHA-224 hexadecimal digest.'],['fun','lmud','em_util_sha2:hexdigest256/1','Returns a SHA-256 hexadecimal digest.'],['fun','lmud','em_util_sha2:hexdigest384/1','Returns a SHA-384 hexadecimal digest.'],['fun','lmud','em_util_sha2:hexdigest512/1','Returns a SHA-512 hexadecimal digest.']];