var index = [['app','seresye','seresye','[application]'],['mod','seresye','seresye',[]],['mod','seresye','seresye_agenda',[]],['mod','seresye','seresye_app',[]],['mod','seresye','seresye_autoneg',[]],['mod','seresye','seresye_engine',[]],['mod','seresye','seresye_speedtest',[]],['mod','seresye','seresye_sup',[]],['mod','seresye','seresye_tree_list',[]],['fun','seresye','seresye:add_rule/2',[]],['fun','seresye','seresye:add_rule/3',[]],['fun','seresye','seresye:add_rules/2',[]],['fun','seresye','seresye:assert/2','Insert a fact in the KB.'],['fun','seresye','seresye:code_change/3',[]],['fun','seresye','seresye:get_client_state/1',[]],['fun','seresye','seresye:get_engine/1',[]],['fun','seresye','seresye:get_kb/1',[]],['fun','seresye','seresye:get_rules_fired/1',[]],['fun','seresye','seresye:handle_call/3',[]],['fun','seresye','seresye:handle_cast/2',[]],['fun','seresye','seresye:handle_info/2',[]],['fun','seresye','seresye:init/1',[]],['fun','seresye','seresye:query_kb/2',[]],['fun','seresye','seresye:remove_rule/2',[]],['fun','seresye','seresye:retract/2','removes a fact in the Knowledge Base and if some'],['fun','seresye','seresye:set_client_state/2',[]],['fun','seresye','seresye:start/1',[]],['fun','seresye','seresye:start/2',[]],['fun','seresye','seresye:start_link/1',[]],['fun','seresye','seresye:start_link/2',[]],['fun','seresye','seresye:stop/1',[]],['fun','seresye','seresye:terminate/2',[]],['fun','seresye','seresye_agenda:add_activation/3',[]],['fun','seresye','seresye_agenda:add_activation/4',[]],['fun','seresye','seresye_agenda:breadth_order/2','define when an Act1 comes before Act2 in breadth s'],['fun','seresye','seresye_agenda:clear_agenda/1','Remove all activation from Agenda,  returns an em'],['fun','seresye','seresye_agenda:delete_activation/2','Remove activation with id=Id or  all activation'],['fun','seresye','seresye_agenda:delete_rule/2','Remove all activation associated with rule Rule '],['fun','seresye','seresye_agenda:depth_order/2','define when an Act1 comes before Act2 in depth str'],['fun','seresye','seresye_agenda:fifo_order/2','define when an Act1 comes before Act2 in fifo stra'],['fun','seresye','seresye_agenda:get_activation/2','Returns the Id of activation associated to rule R'],['fun','seresye','seresye_agenda:get_activation_from_name/2','Returns the Id of first activation associated to r'],['fun','seresye','seresye_agenda:get_activation_salience/2','Return the salience value of activation with id=I'],['fun','seresye','seresye_agenda:get_first_activation/1','Return the Id associated to first activation in th'],['fun','seresye','seresye_agenda:get_number_of_activations/1',[]],['fun','seresye','seresye_agenda:get_rules_fired/1',[]],['fun','seresye','seresye_agenda:get_strategy/1',[]],['fun','seresye','seresye_agenda:new/1',[]],['fun','seresye','seresye_agenda:pop_rule/1','Remove the first activation, returns the rule,  f'],['fun','seresye','seresye_agenda:set_activation_salience/3','Sets the salience value of activation with id=Id'],['fun','seresye','seresye_agenda:set_rule_salience/3','Sets the salience value of all activations associa'],['fun','seresye','seresye_agenda:set_strategy/2',[]],['fun','seresye','seresye_app:start/2',[]],['fun','seresye','seresye_app:stop/1',[]],['fun','seresye','seresye_autoneg:parse_transform/2',[]],['fun','seresye','seresye_engine:add_rule/2',[]],['fun','seresye','seresye_engine:add_rule/3',[]],['fun','seresye','seresye_engine:add_rules/2',[]],['fun','seresye','seresye_engine:assert/2','Insert a fact in the KB.'],['fun','seresye','seresye_engine:get_client_state/1',[]],['fun','seresye','seresye_engine:get_kb/1',[]],['fun','seresye','seresye_engine:get_rules_fired/1',[]],['fun','seresye','seresye_engine:new/0',[]],['fun','seresye','seresye_engine:new/1',[]],['fun','seresye','seresye_engine:query_kb/2',[]],['fun','seresye','seresye_engine:remove_rule/2',[]],['fun','seresye','seresye_engine:retract/2','removes a fact in the Knowledge Base and if some'],['fun','seresye','seresye_engine:set_client_state/2',[]],['fun','seresye','seresye_speedtest:final_rule/2',[]],['fun','seresye','seresye_speedtest:remove_multiple/3',[]],['fun','seresye','seresye_speedtest:run_sieve/0',[]],['fun','seresye','seresye_sup:init/1',[]],['fun','seresye','seresye_sup:start_engine/1',[]],['fun','seresye','seresye_sup:start_engine/2',[]],['fun','seresye','seresye_sup:start_link/0',[]],['fun','seresye','seresye_tree_list:child/3','Parent_node search for children of a node whose ke'],['fun','seresye','seresye_tree_list:children/2','returns all child nodes of Join_node  Or an empty'],['fun','seresye','seresye_tree_list:get_beta/1',[]],['fun','seresye','seresye_tree_list:get_id/1',[]],['fun','seresye','seresye_tree_list:get_key/1',[]],['fun','seresye','seresye_tree_list:get_last_insert/1',[]],['fun','seresye','seresye_tree_list:get_node/2',[]],['fun','seresye','seresye_tree_list:get_parent/2',[]],['fun','seresye','seresye_tree_list:get_root/1',[]],['fun','seresye','seresye_tree_list:have_child/1',[]],['fun','seresye','seresye_tree_list:insert/4',[]],['fun','seresye','seresye_tree_list:is_present/2','Check if there is an alpha-memory join_node  true'],['fun','seresye','seresye_tree_list:is_root/1',[]],['fun','seresye','seresye_tree_list:keysearch/2','Search for an item with key Key and returns the fi'],['fun','seresye','seresye_tree_list:lookup_all/2','returns a list of all the elements associated with'],['fun','seresye','seresye_tree_list:new/0',[]],['fun','seresye','seresye_tree_list:refresh/2',[]],['fun','seresye','seresye_tree_list:remove_child/3',[]],['fun','seresye','seresye_tree_list:remove_node/2',[]],['fun','seresye','seresye_tree_list:set_child/3',[]],['fun','seresye','seresye_tree_list:update_beta/3',[]],['fun','seresye','seresye_tree_list:update_key/3',[]],['fun','seresye','seresye_tree_list:update_node/2',[]]];