var index = [['app','empdb','empdb','[application]'],['mod','empdb','bin_to_hex',[]],['mod','empdb','empdb','   This is the primary entry point for the EMP Da'],['mod','empdb','empdb_app','   The front end OTP Application for the EMP Data'],['mod','empdb','empdb_mnesia','   This is the entry point for the Mnesia backend'],['mod','empdb','empdb_mnesia_ext_cb','   The Mnesia callbacks for Extension (plugins an'],['mod','empdb','empdb_mnesia_install','   This module is called from EMPD.erl, and provi'],['mod','empdb','empdb_mnesia_sub_cb','   This module contains all of the callbacks for '],['mod','empdb','empdb_mnesia_user_cb','   User based callbacks for the Mnesia backend of'],['mod','empdb','empdb_sup','   The top level EMP Database supervisor.'],['fun','empdb','bin_to_hex:bin_to_hex/1',[]],['fun','empdb','empdb:add_subscription/1','   Add a subscription to be stored in the databas'],['fun','empdb','empdb:add_user/1','   Add a user to the database, this user will hav'],['fun','empdb','empdb:emp_get_var/1','   Grab a system configuration from storage.'],['fun','empdb','empdb:emp_get_vars/0','   Get all system settings from the database.'],['fun','empdb','empdb:emp_set_var/1','   Set a system setting in the database, will add'],['fun','empdb','empdb:gen_uuid/0','Follows RFC4122 for generating UUIDs version 4 via'],['fun','empdb','empdb:gen_uuid2/0','Just like gen_uuid/0 it generates UUIDs using vers'],['fun','empdb','empdb:get_commands/1','   Get all of the commands for a particular plugi'],['fun','empdb','empdb:get_events/1','   Get all of the events for a particular plugin '],['fun','empdb','empdb:get_plugin_defs/1','   Get all plugins for a particular user.'],['fun','empdb','empdb:get_root_user/0','   Return the Root user for the emp system.'],['fun','empdb','empdb:get_subscriptions/1','   Get all the subscriptions that a particular pl'],['fun','empdb','empdb:get_target/1','   All users can specify unique targets for their'],['fun','empdb','empdb:get_users/0','   Gets the list of user objects stored in the da'],['fun','empdb','empdb:install/1','   Install the database on a set of nodes with th'],['fun','empdb','empdb:install_plugin/1','   Installs a plugin by copying all files into th'],['fun','empdb','empdb:plugin_get_config/1','   Plugin Configuration access, these are variabl'],['fun','empdb','empdb:plugin_get_var/1','   Very frequently called, it returns a saved val'],['fun','empdb','empdb:plugin_load_prev_state/1','   Upon plugin startup EMP will resume the old st'],['fun','empdb','empdb:plugin_set_var/1','   Very frequently called, it saved the state of '],['fun','empdb','empdb:plugin_state_saver/1','   Upon crash or on an interval, EMP will automat'],['fun','empdb','empdb:register_plugin/1','   Register a plugin so that it gets an ID in the'],['fun','empdb','empdb:rm_subscription/1','Remove a particular subscription by its ID.'],['fun','empdb','empdb:rm_user/1','   Remove a user and all state for them (this inc'],['fun','empdb','empdb:start/0','Utility function for calling application:start/1 o'],['fun','empdb','empdb:start_link/1','   Starts the EMP DB system by calling the start_'],['fun','empdb','empdb:stop/0','Utility function for calling application:stop/1 on'],['fun','empdb','empdb:uninstall_plugin/1','   Removes the files from the database for an ins'],['fun','empdb','empdb:user_login/1','Standard login function using a username and a pas'],['fun','empdb','empdb:user_login/1','   Attempt to log a user in, using their public k'],['fun','empdb','empdb:user_logout/1','Log a user out using their session ID.'],['fun','empdb','empdb:verify/1','   Verify that your database is installed on at l'],['fun','empdb','empdb:verify_session/1','Verify that a session is actually active and not f'],['fun','empdb','empdb_app:prep_stop/1','Prepares to shutdown.'],['fun','empdb','empdb_app:start/2','Starts the EMP database application after verifyin'],['fun','empdb','empdb_app:stop/1','Stops the EMPDB application.'],['fun','empdb','empdb_mnesia:run_tran/1','   Run a transaction on the mnesia database and s'],['fun','empdb','empdb_mnesia:run_tran/1','Run a transaction on the mnesia database and expec'],['fun','empdb','empdb_mnesia:start_link/1','Starts and links the EMP Mnesia backend monitor.'],['fun','empdb','empdb_mnesia_ext_cb:emp_get_var/1','Grab a particular system variable from the state s'],['fun','empdb','empdb_mnesia_ext_cb:emp_get_vars/0','Get all system variables from the state store.'],['fun','empdb','empdb_mnesia_ext_cb:emp_set_var/1','Set a particular system variable in the state stor'],['fun','empdb','empdb_mnesia_ext_cb:get_commands/1','Gets the list of EMPCOMMAND objects for a given Pl'],['fun','empdb','empdb_mnesia_ext_cb:get_events/1','Gets the list of EMPEVENT objects for a givent Plu'],['fun','empdb','empdb_mnesia_ext_cb:get_plugin_defs/1','Get all the active plugin definitions for a given '],['fun','empdb','empdb_mnesia_ext_cb:get_target/1','Grab the target string for a particular user and p'],['fun','empdb','empdb_mnesia_ext_cb:plugin_get_config/1','Reset a particular plugin variable for a given plu'],['fun','empdb','empdb_mnesia_ext_cb:plugin_get_var/1','Get a particular plugin variable for a given plugi'],['fun','empdb','empdb_mnesia_ext_cb:plugin_load_prev_state/1','Grab all plugin variables for a given plugin and u'],['fun','empdb','empdb_mnesia_ext_cb:plugin_set_var/1','Set a particular plugin variable for a given plugi'],['fun','empdb','empdb_mnesia_ext_cb:plugin_state_saver/1','Update all plugin variables for a given plugin and'],['fun','empdb','empdb_mnesia_install:install/1','   Installs the EMP Mnesia backend.'],['fun','empdb','empdb_mnesia_install:install_plugin/1','Upload the binaries of everything to db.'],['fun','empdb','empdb_mnesia_install:register_plugin/1','create tables for plugin and interface.'],['fun','empdb','empdb_mnesia_install:uninstall_plugin/1','Remove all binaries for a particular plugin from d'],['fun','empdb','empdb_mnesia_install:verify/1','   Verify that your database is installed on at l'],['fun','empdb','empdb_mnesia_sub_cb:add_subscription/1','Add a subscription to the database.'],['fun','empdb','empdb_mnesia_sub_cb:get_subscriptions/1','Get all the subscriptions for a particular plugin/'],['fun','empdb','empdb_mnesia_sub_cb:rm_subscription/1','Remove a subscription by ID from the database.'],['fun','empdb','empdb_mnesia_user_cb:add_user/1','Create entry in users table.'],['fun','empdb','empdb_mnesia_user_cb:get_root_user/0','Return the root user for the emp system.'],['fun','empdb','empdb_mnesia_user_cb:get_users/0','Get all user objects in the database.'],['fun','empdb','empdb_mnesia_user_cb:rm_user/1','Remove entry in users table.'],['fun','empdb','empdb_mnesia_user_cb:user_login/1','Log-in a user and start their session using userna'],['fun','empdb','empdb_mnesia_user_cb:user_login/1','Log a user in and return their user object and the'],['fun','empdb','empdb_mnesia_user_cb:user_logout/1','Ends a valid session.'],['fun','empdb','empdb_mnesia_user_cb:verify_session/1','   Verify that a session is actually in the datab'],['fun','empdb','empdb_sup:start_link/2','Starts the EMPDB worker processes, and monitors th']];