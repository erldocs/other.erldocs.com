var index = [['app','erljsonschema','erljsonschema','[application]'],['mod','erljsonschema','erljsonschema','An simple json schema validator in Erlang, follow '],['mod','erljsonschema','mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','erljsonschema','mochinum','Useful numeric algorithms for floats that cover so'],['fun','erljsonschema','erljsonschema:validate/1','Validate if the JSON follows the schema or not.'],['fun','erljsonschema','mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','erljsonschema','mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','erljsonschema','mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','erljsonschema','mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','erljsonschema','mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','erljsonschema','mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','erljsonschema','mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','erljsonschema','mochinum:int_pow/1',' Moderately efficient way to exponentiate integers'],['fun','erljsonschema','mochinum:test/0',[]]];