var index = [['app','grass','grass','[application]'],['mod','grass','grass',[]],['mod','grass','grass_utils',[]],['mod','grass','gs_graph_server',[]],['mod','grass','gs_graph_sup',[]],['mod','grass','gs_register_server',[]],['fun','grass','grass:add_edge/1','Adds edge between verticies From and To in gra'],['fun','grass','grass:add_tag/1','Adds the attribute to a vertex V in graph G.'],['fun','grass','grass:add_vertex/1','Creates a new vertex V in graph G.'],['fun','grass','grass:clone_vertex/1','Creates an exact copy of the vertex V1 with name V'],['fun','grass','grass:create/1','Creates a new graph G.'],['fun','grass','grass:del_edge/1','Deletes the edge between the verticies From and '],['fun','grass','grass:del_tag/1','Removes the attribute with key K from vertex V in '],['fun','grass','grass:del_vertex/1','Deletes the vertex V in graph G.'],['fun','grass','grass:destroy/1','Deletes the graph G.'],['fun','grass','grass:drop/1','Deletes all the verticies and edges in the graph G'],['fun','grass','grass:edge_exists/1','Checks if an edge between verticies From and To'],['fun','grass','grass:edges/1','Returns a list of the edges connecting to the vert'],['fun','grass','grass:edges/1','Returns a list of all edges of the graph G.'],['fun','grass','grass:example/1',[]],['fun','grass','grass:graphs/0','Shows list of available graphs.'],['fun','grass','grass:init/1',[]],['fun','grass','grass:is_empty/1','Checks if the graph G have any verticies.'],['fun','grass','grass:modify_vertex/1','Convinience funtion.'],['fun','grass','grass:start/0',[]],['fun','grass','grass:start/2',[]],['fun','grass','grass:stats/1',[]],['fun','grass','grass:stop/0',[]],['fun','grass','grass:stop/1',[]],['fun','grass','grass:tags/1','Gets the value of the attribute K in vertex V of g'],['fun','grass','grass:tags/1','Gets all the attributes that belong to a given ver'],['fun','grass','grass:vertex_exists/1','Checks is the vertex V exists in graph G.'],['fun','grass','grass:verticies/1','Returns a list of the verticies of graph G connect'],['fun','grass','grass:verticies/1','Returns a list of all verticies of the graph G.'],['fun','grass','grass_utils:find_path/1','Find path between verticies From and To in the'],['fun','grass','grass_utils:find_short_path/1','Find shortest path between verticies From and T'],['fun','grass','gs_graph_server:code_change/3',[]],['fun','grass','gs_graph_server:handle_call/3',[]],['fun','grass','gs_graph_server:handle_cast/2',[]],['fun','grass','gs_graph_server:handle_info/2',[]],['fun','grass','gs_graph_server:init/1',[]],['fun','grass','gs_graph_server:start_link/1',[]],['fun','grass','gs_graph_server:stop/1',[]],['fun','grass','gs_graph_server:terminate/2',[]],['fun','grass','gs_graph_sup:init/1',[]],['fun','grass','gs_graph_sup:start_child/2',[]],['fun','grass','gs_graph_sup:start_link/0',[]],['fun','grass','gs_graph_sup:stop_child/1',[]],['fun','grass','gs_register_server:code_change/3',[]],['fun','grass','gs_register_server:create/1',[]],['fun','grass','gs_register_server:del/1',[]],['fun','grass','gs_register_server:destroy/1',[]],['fun','grass','gs_register_server:get/0',[]],['fun','grass','gs_register_server:get/1',[]],['fun','grass','gs_register_server:handle_call/3',[]],['fun','grass','gs_register_server:handle_cast/2',[]],['fun','grass','gs_register_server:handle_info/2',[]],['fun','grass','gs_register_server:init/1',[]],['fun','grass','gs_register_server:set/2',[]],['fun','grass','gs_register_server:start_link/1',[]],['fun','grass','gs_register_server:stop/0',[]],['fun','grass','gs_register_server:terminate/2',[]]];