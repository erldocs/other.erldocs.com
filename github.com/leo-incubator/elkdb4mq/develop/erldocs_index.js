var index = [['app','elkdb4mq','elkdb4mq','[application]'],['mod','elkdb4mq','elkdb4mq_app',[]],['mod','elkdb4mq','elkdb4mq_behaviour',[]],['mod','elkdb4mq','elkdb4mq_client',[]],['mod','elkdb4mq','elkdb4mq_consumer',[]],['mod','elkdb4mq','elkdb4mq_sup',[]],['mod','elkdb4mq','elkdb4mq_util',[]],['fun','elkdb4mq','elkdb4mq_app:start/2',[]],['fun','elkdb4mq','elkdb4mq_app:stop/1',[]],['fun','elkdb4mq','elkdb4mq_client:delete/1','Remove a queue.'],['fun','elkdb4mq','elkdb4mq_client:exists/1','Is exists a queue.'],['fun','elkdb4mq','elkdb4mq_client:in/1','Insert a message into the queue.'],['fun','elkdb4mq','elkdb4mq_client:is_empty/1','Tests if queue is empty and returns true if so and'],['fun','elkdb4mq','elkdb4mq_client:list/0','Retrieve queue-list.'],['fun','elkdb4mq','elkdb4mq_client:new/1','Create a new queue.'],['fun','elkdb4mq','elkdb4mq_client:out/1',[]],['fun','elkdb4mq','elkdb4mq_client:out/1','Insert a message into the queue.'],['fun','elkdb4mq','elkdb4mq_consumer:code_change/3',[]],['fun','elkdb4mq','elkdb4mq_consumer:consume/1','consume a message from the queue.'],['fun','elkdb4mq','elkdb4mq_consumer:handle_call/3',[]],['fun','elkdb4mq','elkdb4mq_consumer:handle_cast/2',[]],['fun','elkdb4mq','elkdb4mq_consumer:handle_info/2',[]],['fun','elkdb4mq','elkdb4mq_consumer:init/1',[]],['fun','elkdb4mq','elkdb4mq_consumer:start_link/2',[]],['fun','elkdb4mq','elkdb4mq_consumer:status/1','get state from the queue.'],['fun','elkdb4mq','elkdb4mq_consumer:stop/1',[]],['fun','elkdb4mq','elkdb4mq_consumer:terminate/2',[]],['fun','elkdb4mq','elkdb4mq_sup:init/1',[]],['fun','elkdb4mq','elkdb4mq_sup:start_link/0',[]],['fun','elkdb4mq','elkdb4mq_util:clock/0','Retrieve clock (including datetime and second).'],['fun','elkdb4mq','elkdb4mq_util:gen_connection_pool/1','Generate connection pooling workers.']];