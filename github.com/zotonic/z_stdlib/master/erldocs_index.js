var index = [['app','z_stdlib','z_stdlib','[application]'],['mod','z_stdlib','proper_utils',[]],['mod','z_stdlib','z_convert','Conversion functions for all kinds of data types.'],['mod','z_stdlib','z_css','Utility functions for CSS processing.'],['mod','z_stdlib','z_email_utils','Useful routines for e-mail address handling.'],['mod','z_stdlib','z_html_charref','Converts HTML 4 charrefs and entities to codepoint'],['mod','z_stdlib','z_string','String related functions.'],['mod','z_stdlib','z_tempfile','Simple temporary file handling, deletes the file w'],['mod','z_stdlib','z_ubf',[]],['mod','z_stdlib','z_url','Misc utility URL functions for zotonic.'],['mod','z_stdlib','z_url_fetch','Fetch (part of) the data of an Url, including its '],['mod','z_stdlib','z_url_metadata','Discover metadata about an url.'],['fun','z_stdlib','proper_utils:opts/0','Default options for PropEr runs.'],['fun','z_stdlib','proper_utils:print_stdout/1','Run a function and output to stdout.'],['fun','z_stdlib','proper_utils:qc/1',[]],['fun','z_stdlib','proper_utils:qc/2','like proper:quickcheck/2, but print to stdout.'],['fun','z_stdlib','proper_utils:qc_/1',[]],['fun','z_stdlib','proper_utils:qc_/2','proper:quickcheck/1 helper for eunit.'],['fun','z_stdlib','z_convert:clean_lower/1','Convert to lower case, strip surrounding whitespac'],['fun','z_stdlib','z_convert:convert_json/1','Convert json from facebook favour to an easy to us'],['fun','z_stdlib','z_convert:ip_to_list/1',[]],['fun','z_stdlib','z_convert:ip_to_long/1','Convert an IP address from a string, IPv4 tuple or'],['fun','z_stdlib','z_convert:long_to_ip/1','Convert long int to IP address tuple.'],['fun','z_stdlib','z_convert:to_atom/1','Convert (almost) any value to an atom.'],['fun','z_stdlib','z_convert:to_binary/1','Convert (almost) any value to an atom.'],['fun','z_stdlib','z_convert:to_binary/2',[]],['fun','z_stdlib','z_convert:to_bool/1','Quite loose conversion of values to boolean.'],['fun','z_stdlib','z_convert:to_bool_strict/1','Convert values to boolean values according to the '],['fun','z_stdlib','z_convert:to_date/1','Convert an input to a date.'],['fun','z_stdlib','z_convert:to_datetime/1','Convert an input to a (universal) datetime, using '],['fun','z_stdlib','z_convert:to_flatlist/1','Flatten list and convert to string.'],['fun','z_stdlib','z_convert:to_float/1','Convert (almost) any value to a float.'],['fun','z_stdlib','z_convert:to_integer/1','Convert (almost) any value to an integer.'],['fun','z_stdlib','z_convert:to_isotime/1','Convert a datetime (in local time) to an ISO time '],['fun','z_stdlib','z_convert:to_json/1','Convert an Erlang structure to a format that can b'],['fun','z_stdlib','z_convert:to_list/1','Convert (almost) any value to a list.'],['fun','z_stdlib','z_convert:to_localtime/1','Convert a utc date time to local.'],['fun','z_stdlib','z_convert:to_time/1','Convert an input to a time.'],['fun','z_stdlib','z_convert:to_utc/1','Convert a local date time to utc.'],['fun','z_stdlib','z_convert:unicode_to_utf8/1',[]],['fun','z_stdlib','z_css:parse/1',[]],['fun','z_stdlib','z_css:sanitize/1',[]],['fun','z_stdlib','z_css:sanitize_style/1',[]],['fun','z_stdlib','z_css:scan/1',[]],['fun','z_stdlib','z_email_utils:extract_emails/1','Extract e-mail addresses from a text.'],['fun','z_stdlib','z_email_utils:is_email/1','Check if the argument is an e-mail address (withou'],['fun','z_stdlib','z_html_charref:charref/1','Convert a decimal charref, hex charref, or html en'],['fun','z_stdlib','z_string:concat/2',[]],['fun','z_stdlib','z_string:contains/2','Return true if What is found in the string.'],['fun','z_stdlib','z_string:ends_with/2','Return true if Word ends with End.'],['fun','z_stdlib','z_string:escape_ical/1','Escape special characters for ical RFC2445 element'],['fun','z_stdlib','z_string:first_char/1','Return the first character of a string.'],['fun','z_stdlib','z_string:is_string/1','Check if the variable is a one dimensional list, p'],['fun','z_stdlib','z_string:last_char/1','Return the last character of a string.'],['fun','z_stdlib','z_string:line/1','Make sure that the string is on one line only, rep'],['fun','z_stdlib','z_string:nospaces/1','Remove all spaces and control characters from a st'],['fun','z_stdlib','z_string:replace/3','Replace a string inside another string  Copyright'],['fun','z_stdlib','z_string:sanitize_utf8/1','Sanitize an utf-8 string, remove all non-utf-8 cha'],['fun','z_stdlib','z_string:split/2','Split a string, see http://www.erlang.org/pipermai'],['fun','z_stdlib','z_string:split_lines/1','Split the binary into lines.'],['fun','z_stdlib','z_string:starts_with/2','Return true if Start is a prefix of Word.'],['fun','z_stdlib','z_string:to_lower/1','Return a lowercase string for the input.'],['fun','z_stdlib','z_string:to_name/1','Map a string to a value that can be used as a name'],['fun','z_stdlib','z_string:to_rootname/1','Filter a filename so that we obtain a basename tha'],['fun','z_stdlib','z_string:to_slug/1','Map a string to a slug that can be used in the uri'],['fun','z_stdlib','z_string:to_upper/1','Return a uppercase string for the input.'],['fun','z_stdlib','z_string:trim/1','Remove all occurences of a character at the start '],['fun','z_stdlib','z_string:trim/1','Remove whitespace at the start and end of the stri'],['fun','z_stdlib','z_string:trim_left/1','Remove all occurences of a char at the start of a '],['fun','z_stdlib','z_string:trim_left/1','Remove whitespace at the start the string.'],['fun','z_stdlib','z_string:trim_left_func/2',[]],['fun','z_stdlib','z_string:trim_right/1','Remove all occurences of a char at the end of the '],['fun','z_stdlib','z_string:trim_right/1','Remove whitespace at the end of the string.'],['fun','z_stdlib','z_string:truncate/2','Truncate a string.'],['fun','z_stdlib','z_string:truncate/3',[]],['fun','z_stdlib','z_string:truncatewords/2',[]],['fun','z_stdlib','z_string:truncatewords/3',[]],['fun','z_stdlib','z_string:unquote/1','Remove the first and last char if they are double '],['fun','z_stdlib','z_string:unquote/2',[]],['fun','z_stdlib','z_string:x/0',[]],['fun','z_stdlib','z_tempfile:is_tempfile/1','Check if the file is a temporary filename.'],['fun','z_stdlib','z_tempfile:new/0','Return a new unique filename, start a monitoring p'],['fun','z_stdlib','z_tempfile:new/1','Return a new unique filename, start a monitoring p'],['fun','z_stdlib','z_tempfile:tempfile/0','return a unique temporary filename.'],['fun','z_stdlib','z_tempfile:tempfile/1','return a unique temporary filename with a set exte'],['fun','z_stdlib','z_tempfile:temppath/0','Returns the path where to store temporary files.'],['fun','z_stdlib','z_ubf:deabstract/1',[]],['fun','z_stdlib','z_ubf:decode/1',[]],['fun','z_stdlib','z_ubf:decode/2',[]],['fun','z_stdlib','z_ubf:decode_init/0',[]],['fun','z_stdlib','z_ubf:decode_init/1',[]],['fun','z_stdlib','z_ubf:encode/1',[]],['fun','z_stdlib','z_ubf:encode/2',[]],['fun','z_stdlib','z_ubf:encode_print/1',[]],['fun','z_stdlib','z_url:abs_link/1','Given a relative URL and a base URL, calculate the'],['fun','z_stdlib','z_url:decode_data_url/1','Decode a "data:" url to its parts.'],['fun','z_stdlib','z_url:hex_decode/1',[]],['fun','z_stdlib','z_url:hex_encode/1',[]],['fun','z_stdlib','z_url:location/1','Find the definitive location of an url, removing u'],['fun','z_stdlib','z_url:percent_encode/1','Percent encoding/decoding as defined by RFC 3986 ('],['fun','z_stdlib','z_url:percent_encode/2',[]],['fun','z_stdlib','z_url:remove_protocol/1','Naive function to remove the protocol from an Url.'],['fun','z_stdlib','z_url:split_base_host/1',[]],['fun','z_stdlib','z_url:url_decode/1',[]],['fun','z_stdlib','z_url:url_encode/1',[]],['fun','z_stdlib','z_url:url_path_encode/1',[]],['fun','z_stdlib','z_url:url_valid_char/1',[]],['fun','z_stdlib','z_url_fetch:fetch/1','Fetch the data and headers from an url.'],['fun','z_stdlib','z_url_fetch:fetch_partial/1','Fetch the first N bytes of data and headers from a'],['fun','z_stdlib','z_url_fetch:fetch_partial/1','Fetch the first kilobytes of data and headers from'],['fun','z_stdlib','z_url_metadata:fetch/1','Fetch metadata information for the URL.'],['fun','z_stdlib','z_url_metadata:filename/1',[]],['fun','z_stdlib','z_url_metadata:p/1','Fetch properties of the fetched metadata.']];