var index = [['app','mechanic','mechanic','[application]'],['mod','mechanic','armstrong_websocket',[]],['mod','mechanic','bert_websocket',[]],['mod','mechanic','gen_socket',[]],['mod','mechanic','gen_websocket',[]],['mod','mechanic','logger',[]],['mod','mechanic','logger_sup',[]],['mod','mechanic','mechanic',[]],['mod','mechanic','mechanic_acceptor',[]],['mod','mechanic','mechanic_acceptor_sup',[]],['mod','mechanic','mechanic_channel',[]],['mod','mechanic','mechanic_channel_sup',[]],['mod','mechanic','mechanic_frame',[]],['mod','mechanic','mechanic_headers',[]],['mod','mechanic','mechanic_socket_proxy',[]],['mod','mechanic','mechanic_socket_sup',[]],['mod','mechanic','mechanic_sup',[]],['mod','mechanic','plain_fsm','A behaviour/support library for writing plain Erla'],['mod','mechanic','plain_fsm_xform','Parse transform utility for plain_fsm.'],['mod','mechanic','reloader','Erlang module for automatically reloading modified'],['mod','mechanic','tcp_socket',[]],['fun','mechanic','armstrong_websocket:decode/1',[]],['fun','mechanic','armstrong_websocket:encode/1',[]],['fun','mechanic','armstrong_websocket:init/1',[]],['fun','mechanic','armstrong_websocket:on_close/1',[]],['fun','mechanic','armstrong_websocket:on_error/1',[]],['fun','mechanic','armstrong_websocket:on_open/0',[]],['fun','mechanic','armstrong_websocket:on_recv/1',[]],['fun','mechanic','armstrong_websocket:on_send/1',[]],['fun','mechanic','bert_websocket:decode/1',[]],['fun','mechanic','bert_websocket:encode/1',[]],['fun','mechanic','bert_websocket:init/1',[]],['fun','mechanic','bert_websocket:on_close/1',[]],['fun','mechanic','bert_websocket:on_error/1',[]],['fun','mechanic','bert_websocket:on_open/0',[]],['fun','mechanic','bert_websocket:on_recv/1',[]],['fun','mechanic','bert_websocket:on_send/1',[]],['fun','mechanic','gen_socket:behaviour_info/1',[]],['fun','mechanic','gen_socket:closed/1',[]],['fun','mechanic','gen_socket:closing/1',[]],['fun','mechanic','gen_socket:code_change/3',[]],['fun','mechanic','gen_socket:data_vsn/0',[]],['fun','mechanic','gen_socket:opened/1',[]],['fun','mechanic','gen_socket:opening/1',[]],['fun','mechanic','gen_socket:send/1',[]],['fun','mechanic','gen_socket:spawn_link/2',[]],['fun','mechanic','gen_websocket:behaviour_info/1',[]],['fun','mechanic','gen_websocket:init_it/1',[]],['fun','mechanic','gen_websocket:send/1',[]],['fun','mechanic','gen_websocket:start_link/1',[]],['fun','mechanic','gen_websocket:start_link/2',[]],['fun','mechanic','logger:code_change/1',[]],['fun','mechanic','logger:handle_call/1',[]],['fun','mechanic','logger:handle_cast/1',[]],['fun','mechanic','logger:handle_info/1',[]],['fun','mechanic','logger:init/1',[]],['fun','mechanic','logger:start_link/0',[]],['fun','mechanic','logger:terminate/1',[]],['fun','mechanic','logger:write/1',[]],['fun','mechanic','logger:write/1',[]],['fun','mechanic','logger_sup:init/1',[]],['fun','mechanic','logger_sup:start_link/0',[]],['fun','mechanic','logger_sup:terminate/1',[]],['fun','mechanic','mechanic:start/0',[]],['fun','mechanic','mechanic:start/1',[]],['fun','mechanic','mechanic:stop/1',[]],['fun','mechanic','mechanic_acceptor:init/1',[]],['fun','mechanic','mechanic_acceptor:start/0',[]],['fun','mechanic','mechanic_acceptor_sup:init/1',[]],['fun','mechanic','mechanic_acceptor_sup:start_link/0',[]],['fun','mechanic','mechanic_acceptor_sup:terminate/2',[]],['fun','mechanic','mechanic_channel:broadcast/2',[]],['fun','mechanic','mechanic_channel:code_change/1',[]],['fun','mechanic','mechanic_channel:connect/2',[]],['fun','mechanic','mechanic_channel:disconnect/1',[]],['fun','mechanic','mechanic_channel:handle_call/3',[]],['fun','mechanic','mechanic_channel:handle_cast/2',[]],['fun','mechanic','mechanic_channel:handle_info/2',[]],['fun','mechanic','mechanic_channel:init/1',[]],['fun','mechanic','mechanic_channel:start_link/1',[]],['fun','mechanic','mechanic_channel:terminate/1',[]],['fun','mechanic','mechanic_channel_sup:init/1',[]],['fun','mechanic','mechanic_channel_sup:start_link/0',[]],['fun','mechanic','mechanic_frame:reframe/1',[]],['fun','mechanic','mechanic_frame:unframe/1',[]],['fun','mechanic','mechanic_headers:parse/1',[]],['fun','mechanic','mechanic_socket_proxy:init/1',[]],['fun','mechanic','mechanic_socket_proxy:start/1',[]],['fun','mechanic','mechanic_socket_proxy:start_link/1',[]],['fun','mechanic','mechanic_socket_sup:init/1',[]],['fun','mechanic','mechanic_socket_sup:start_link/0',[]],['fun','mechanic','mechanic_sup:init/1',[]],['fun','mechanic','mechanic_sup:start_link/0',[]],['fun','mechanic','plain_fsm:behaviour_info/1','Defines which functions this behaviour expects to '],['fun','mechanic','plain_fsm:extended_receive/1','Virtual function used to wrap receive clauses.'],['fun','mechanic','plain_fsm:handle_msg/3','Called in a "catch-all" clause within a receive st'],['fun','mechanic','plain_fsm:handle_system_msg/4','Called when the process receives a system message.'],['fun','mechanic','plain_fsm:hibernate/1','Virtual function used to wrap a call to the BIF er'],['fun','mechanic','plain_fsm:info/1','retrieves meta-data for the plain_fsm process.'],['fun','mechanic','plain_fsm:parent_EXIT/2','Handles parent termination properly.'],['fun','mechanic','plain_fsm:spawn/1','Equivalent to proc_lib:spawn(StartF).'],['fun','mechanic','plain_fsm:spawn_link/1','Equivalent to proc_lib:spawn_link(StartF).'],['fun','mechanic','plain_fsm:spawn_opt/1','Equivalent to proc_lib:spawn_opt(Node, StartF, Opt'],['fun','mechanic','plain_fsm:spawn_opt/1','Equivalent to proc_lib:spawn_opt(StartF, Opts).'],['fun','mechanic','plain_fsm:start_opt/4',[]],['fun','mechanic','plain_fsm:store_name/1','stores an internal name for the FSM        (for s'],['fun','mechanic','plain_fsm:wake_up/5',[]],['fun','mechanic','plain_fsm_xform:format_error/1',[]],['fun','mechanic','plain_fsm_xform:parse_transform/2',[]],['fun','mechanic','reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','mechanic','reloader:handle_call/3','gen_server callback.'],['fun','mechanic','reloader:handle_cast/2','gen_server callback.'],['fun','mechanic','reloader:handle_info/2','gen_server callback.'],['fun','mechanic','reloader:init/1','gen_server init, opens the server in an initial st'],['fun','mechanic','reloader:start/0','Start the reloader.'],['fun','mechanic','reloader:start_link/0','Start the reloader.'],['fun','mechanic','reloader:stop/0','Stop the reloader.'],['fun','mechanic','reloader:terminate/2','gen_server termination callback.'],['fun','mechanic','tcp_socket:decode/1',[]],['fun','mechanic','tcp_socket:encode/1',[]],['fun','mechanic','tcp_socket:init/1',[]],['fun','mechanic','tcp_socket:on_close/1',[]],['fun','mechanic','tcp_socket:on_error/1',[]],['fun','mechanic','tcp_socket:on_open/0',[]],['fun','mechanic','tcp_socket:on_recv/1',[]]];