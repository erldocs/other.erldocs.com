var index = [['app','dflow','dflow','[application]'],['mod','dflow','dflow','     This is a flow processing library which aims'],['mod','dflow','dflow_app',[]],['mod','dflow','dflow_debug','Example debug dflow.'],['mod','dflow','dflow_graph',[]],['mod','dflow','dflow_sup',[]],['fun','dflow','dflow:build/1','Builds a flow process tree or graph based the Head'],['fun','dflow','dflow:build/1','See build/2 with Options set to [optmize].'],['fun','dflow','dflow:describe/1','Traverses the process tree to give a representatio'],['fun','dflow','dflow:start/1','Sends a start signal to the Flow.'],['fun','dflow','dflow:terminate/1','Terminates a Flow.'],['fun','dflow','dflow_app:start/2',[]],['fun','dflow','dflow_app:stop/1',[]],['fun','dflow','dflow_debug:describe/1','We simpley describe this module as "debug".'],['fun','dflow','dflow_debug:done/2','When our child is done we print the total time tak'],['fun','dflow','dflow_debug:emit/1','When our child emits data to us we pass it through'],['fun','dflow','dflow_debug:init/1','Init can be called with one or two arguments, the '],['fun','dflow','dflow_debug:start/1','When our start/2 is triggered we store the current'],['fun','dflow','dflow_graph:desc_to_graphviz/1','Translates the output from describe/1 to a graphvi'],['fun','dflow','dflow_graph:write_dot/1','A helpful wrapper that combines, describe/1,  des'],['fun','dflow','dflow_sup:init/1',[]],['fun','dflow','dflow_sup:start_link/0',[]]];