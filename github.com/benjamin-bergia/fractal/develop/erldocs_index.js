var index = [['app','fractal','fractal','[application]'],['mod','fractal','engine',[]],['mod','fractal','engine_sup',[]],['mod','fractal','fractal_app',[]],['mod','fractal','fractal_sup',[]],['mod','fractal','l1_conf_parser',[]],['mod','fractal','l3_conf_parser',[]],['mod','fractal','router',[]],['mod','fractal','store_rx',[]],['mod','fractal','store_sup',[]],['mod','fractal','tree_sup',[]],['mod','fractal','view',[]],['mod','fractal','view_acc',[]],['mod','fractal','view_core',[]],['mod','fractal','view_rx',[]],['mod','fractal','view_sup',[]],['mod','fractal','view_tx',[]],['mod','fractal','weighted_engine',[]],['fun','fractal','engine:process/4','  Do:  	Send a synchronous request to the engine'],['fun','fractal','engine_sup:init/1','  Do:  	Notify the View from a Status change (ca'],['fun','fractal','engine_sup:start_link/0','  Do:  	Start and link to a new engine superviso'],['fun','fractal','fractal_app:start/2',[]],['fun','fractal','fractal_app:stop/1',[]],['fun','fractal','fractal_sup:init/1',[]],['fun','fractal','fractal_sup:start_link/0',[]],['fun','fractal','l1_conf_parser:parse/1',[]],['fun','fractal','l3_conf_parser:parse/1','  Do:  	Call break for each view contained in th'],['fun','fractal','router:gen_pub/1','  Do:  	Generate new provider id allowing the vi'],['fun','fractal','router:notify/2','  Do:  	Notify a status change to the correspond'],['fun','fractal','router:query/1','  Do:  	Send a message to the store to get the s'],['fun','fractal','store_rx:get_status/1',[]],['fun','fractal','store_rx:handle_call/3',[]],['fun','fractal','store_rx:handle_cast/2',[]],['fun','fractal','store_rx:init/1',[]],['fun','fractal','store_rx:install/0',[]],['fun','fractal','store_rx:set_status/2',[]],['fun','fractal','store_rx:start_link/0',[]],['fun','fractal','store_rx:terminate/2',[]],['fun','fractal','store_sup:init/1',[]],['fun','fractal','store_sup:start_link/0',[]],['fun','fractal','tree_sup:init/1',[]],['fun','fractal','tree_sup:start_link/0',[]],['fun','fractal','view:notify/2','  Do:  	Notify the View from a Status change (ca'],['fun','fractal','view:propagate/2','  Do:  	Notify the View from a Status change and'],['fun','fractal','view:start_link/8','  Do:  	Start and link to a new view  With:  	'],['fun','fractal','view_acc:forward/4','  Do:  	Forward a message to this accumulator  '],['fun','fractal','view_acc:start_link/3','  Do:  	Start and link to a new accumulator  Wi'],['fun','fractal','view_acc:terminate/2',[]],['fun','fractal','view_core:forward/5','  Do:  	Forward a message to this module  With:'],['fun','fractal','view_core:start_link/3',[]],['fun','fractal','view_core:start_link/7','  Do:  	Start and link a new core  With:  	Tid'],['fun','fractal','view_core:terminate/3',[]],['fun','fractal','view_rx:forward/2','  Do:  	Forward a message to all suscribers  Wi'],['fun','fractal','view_rx:start_link/3','  Do: 	Start and link a new receiver  With:  	'],['fun','fractal','view_rx:terminate/2',[]],['fun','fractal','view_sup:get_pid/2','  Do:  	Return the pid stored in the ETS table '],['fun','fractal','view_sup:get_pid/3',[]],['fun','fractal','view_sup:init/1','  Do:  	Notify the View from a Status change (ca'],['fun','fractal','view_sup:set_pid/3','  Do:  	Register a new pid in the ETS table  Wi'],['fun','fractal','view_sup:set_pid/4',[]],['fun','fractal','view_sup:start_link/10','  Do:  	Start and link to a new view supervisor'],['fun','fractal','view_sup:start_link/4',[]],['fun','fractal','view_tx:forward/2','  Do:  	Forward message to this transmitter  Wi'],['fun','fractal','view_tx:start_link/2','  Do:  	Start and link to a new transmitter  Wi'],['fun','fractal','view_tx:terminate/2',[]],['fun','fractal','weighted_engine:init/1',[]],['fun','fractal','weighted_engine:process/3','  Do:  	Send a synchronous request to the engine'],['fun','fractal','weighted_engine:start_link/0','  Do:  	Start and link to a new weighted_engine.'],['fun','fractal','weighted_engine:terminate/2',[]]];