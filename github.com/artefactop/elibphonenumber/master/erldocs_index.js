var index = [['app','elibphonenumber','elibphonenumber','[application]'],['mod','elibphonenumber','phonenumber',[]],['mod','elibphonenumber','phonenumber_util',[]],['fun','elibphonenumber','phonenumber:clear/1',[]],['fun','elibphonenumber','phonenumber:clear_country_code/1',[]],['fun','elibphonenumber','phonenumber:clear_country_code_source/1',[]],['fun','elibphonenumber','phonenumber:clear_extension/1',[]],['fun','elibphonenumber','phonenumber:clear_italian_leading_zero/1',[]],['fun','elibphonenumber','phonenumber:clear_national_number/1',[]],['fun','elibphonenumber','phonenumber:clear_number_of_leading_zeros/1',[]],['fun','elibphonenumber','phonenumber:clear_preferred_domestic_carrier_code/1',[]],['fun','elibphonenumber','phonenumber:clear_raw_input/1',[]],['fun','elibphonenumber','phonenumber:exactly_same_as/1',[]],['fun','elibphonenumber','phonenumber:get_country_code/1',[]],['fun','elibphonenumber','phonenumber:get_country_code_source/1',[]],['fun','elibphonenumber','phonenumber:get_extension/1',[]],['fun','elibphonenumber','phonenumber:get_national_number/1',[]],['fun','elibphonenumber','phonenumber:get_number_of_leading_zeros/1',[]],['fun','elibphonenumber','phonenumber:get_preferred_domestic_carrier_code/1',[]],['fun','elibphonenumber','phonenumber:get_raw_input/1',[]],['fun','elibphonenumber','phonenumber:has_country_code/1',[]],['fun','elibphonenumber','phonenumber:has_country_code_source/1',[]],['fun','elibphonenumber','phonenumber:has_extension/1',[]],['fun','elibphonenumber','phonenumber:has_italian_leading_zero/1',[]],['fun','elibphonenumber','phonenumber:has_national_number/1',[]],['fun','elibphonenumber','phonenumber:has_number_of_leading_zeros/1',[]],['fun','elibphonenumber','phonenumber:has_preferred_domestic_carrier_code/1',[]],['fun','elibphonenumber','phonenumber:has_raw_input/1',[]],['fun','elibphonenumber','phonenumber:is_italian_leading_zero/1',[]],['fun','elibphonenumber','phonenumber:merge_from/1',[]],['fun','elibphonenumber','phonenumber:new/0',[]],['fun','elibphonenumber','phonenumber:set_country_code/1',[]],['fun','elibphonenumber','phonenumber:set_country_code_source/1',[]],['fun','elibphonenumber','phonenumber:set_extension/1',[]],['fun','elibphonenumber','phonenumber:set_italian_leading_zero/1',[]],['fun','elibphonenumber','phonenumber:set_national_number/1',[]],['fun','elibphonenumber','phonenumber:set_number_of_leading_zeros/1',[]],['fun','elibphonenumber','phonenumber:set_preferred_domestic_carrier_code/1',[]],['fun','elibphonenumber','phonenumber:set_raw_input/1',[]],['fun','elibphonenumber','phonenumber_util:convert_alpha_characters_in_number/1','Converts all alpha characters in a number to their'],['fun','elibphonenumber','phonenumber_util:format/1','Formats a phone number in the specified format usi'],['fun','elibphonenumber','phonenumber_util:format_by_pattern/1','TODO.'],['fun','elibphonenumber','phonenumber_util:format_in_original_format/1','Formats a phone number using the original phone nu'],['fun','elibphonenumber','phonenumber_util:format_national_number_with_carrier_code/1','Formats a phone number in national format for dial'],['fun','elibphonenumber','phonenumber_util:format_national_number_with_preferred_carrier_code/1','Formats a phone number in national format for dial'],['fun','elibphonenumber','phonenumber_util:format_number_for_mobile_dialing/1','Returns a number formatted in such a way that it c'],['fun','elibphonenumber','phonenumber_util:format_out_of_country_calling_number/1','Formats a phone number for out-of-country dialing '],['fun','elibphonenumber','phonenumber_util:format_out_of_country_keeping_alpha_chars/1','Formats a phone number for out-of-country dialing '],['fun','elibphonenumber','phonenumber_util:get_country_code_for_region/1','Returns the country calling code for a specific re'],['fun','elibphonenumber','phonenumber_util:get_country_mobile_token/1','Returns the mobile token for the provided country '],['fun','elibphonenumber','phonenumber_util:get_example_number/1','Gets a valid fixed-line number for the specified r'],['fun','elibphonenumber','phonenumber_util:get_example_number_for_non_geo_entity/1','Gets a valid number for the specified country call'],['fun','elibphonenumber','phonenumber_util:get_example_number_for_type/1','Gets a valid number of the specified type for the '],['fun','elibphonenumber','phonenumber_util:get_length_of_geograpical_area_code/1',' Gets the length of the geographical area code fro'],['fun','elibphonenumber','phonenumber_util:get_length_of_national_destination_code/1','Gets the length of the national destination code ('],['fun','elibphonenumber','phonenumber_util:get_national_significant_number/1','Gets the national significant number of a phone nu'],['fun','elibphonenumber','phonenumber_util:get_ndd_prefix_for_region/1','Returns the national dialling prefix for a specifi'],['fun','elibphonenumber','phonenumber_util:get_number_type/1','Gets the type of a phone number.'],['fun','elibphonenumber','phonenumber_util:get_region_code_for_country_code/1','Returns the region code that matches the specific '],['fun','elibphonenumber','phonenumber_util:get_region_code_for_number/1','Returns the region where a phone number is from.'],['fun','elibphonenumber','phonenumber_util:get_region_codes_for_country_calling_code/1','Populates a list with the region codes that match '],['fun','elibphonenumber','phonenumber_util:get_supported_regions/0','Convenience method to get a list of what regions t'],['fun','elibphonenumber','phonenumber_util:hello/1','TEST.'],['fun','elibphonenumber','phonenumber_util:is_alpha_number/1','Returns true if the number is a valid vanity (alph'],['fun','elibphonenumber','phonenumber_util:is_nanpa_country/1','Checks if this is a region under the North America'],['fun','elibphonenumber','phonenumber_util:is_number_match/1','Takes two phone numbers and compares them for equa'],['fun','elibphonenumber','phonenumber_util:is_number_match_with_one_string/1','Takes two phone numbers and compares them for equa'],['fun','elibphonenumber','phonenumber_util:is_number_match_with_two_strings/1','Takes two phone numbers as strings and compares th'],['fun','elibphonenumber','phonenumber_util:is_possible_number/1','Convenience wrapper around IsPossibleNumberWithRea'],['fun','elibphonenumber','phonenumber_util:is_possible_number_for_string/1','Checks whether a phone number is a possible number'],['fun','elibphonenumber','phonenumber_util:is_possible_number_with_reason/1','Checks whether a phone number is a possible number'],['fun','elibphonenumber','phonenumber_util:is_valid_number/1','Tests whether a phone number matches a valid patte'],['fun','elibphonenumber','phonenumber_util:is_valid_number_for_region/1','Tests whether a phone number is valid for a certai'],['fun','elibphonenumber','phonenumber_util:normalize_diallable_chars_only/1','Normalizes a string of characters representing a p'],['fun','elibphonenumber','phonenumber_util:normalize_digits_only/1','Normalizes a string of characters representing a p'],['fun','elibphonenumber','phonenumber_util:parse/1','Parses a string and returns it in proto buffer for'],['fun','elibphonenumber','phonenumber_util:parse_and_keep_raw_input/1','Parses a string and returns it in proto buffer for'],['fun','elibphonenumber','phonenumber_util:truncate_too_long_number/1','Attempts to extract a valid number from a phone nu']];