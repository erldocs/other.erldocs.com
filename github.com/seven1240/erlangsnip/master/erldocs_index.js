var index = [['app','erlangsnip','erlangsnip','[application]'],['mod','erlangsnip','test','TEMPLATE.'],['mod','erlangsnip','test_app','Callbacks for the test application.'],['mod','erlangsnip','test_deps','Ensure that the relatively-installed dependencies '],['mod','erlangsnip','test_sup','Supervisor for the test application.'],['mod','erlangsnip','test_web','Web server for test.'],['fun','erlangsnip','test:start/0','Start the test server.'],['fun','erlangsnip','test:stop/0','Stop the test server.'],['fun','erlangsnip','test_app:start/2','application start callback for test.'],['fun','erlangsnip','test_app:stop/1','application stop callback for test.'],['fun','erlangsnip','test_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','erlangsnip','test_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','erlangsnip','test_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','erlangsnip','test_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','erlangsnip','test_deps:get_base_dir/1','Return the application directory for Module.'],['fun','erlangsnip','test_deps:local_path/1','Return an application-relative directory for this '],['fun','erlangsnip','test_deps:local_path/1','Return an application-relative directory from Modu'],['fun','erlangsnip','test_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','erlangsnip','test_sup:init/1','supervisor callback.'],['fun','erlangsnip','test_sup:start_link/0','API for starting the supervisor.'],['fun','erlangsnip','test_sup:upgrade/0','Add processes if necessary.'],['fun','erlangsnip','test_web:loop/2',[]],['fun','erlangsnip','test_web:start/1',[]],['fun','erlangsnip','test_web:stop/0',[]]];