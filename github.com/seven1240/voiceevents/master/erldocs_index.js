var index = [['app','voiceevents','voiceevents','[application]'],['mod','voiceevents','endpoints',[]],['mod','voiceevents','freeswitch','A module for interfacing with FreeSWITCH using mod'],['mod','voiceevents','freeswitch_connector',[]],['mod','voiceevents','freeswitch_event',[]],['mod','voiceevents','voiceEvents','TEMPLATE.'],['mod','voiceevents','voiceEvents_app','Callbacks for the voiceEvents application.'],['mod','voiceevents','voiceEvents_deps','Ensure that the relatively-installed dependencies '],['mod','voiceevents','voiceEvents_sup','Supervisor for the voiceEvents application.'],['mod','voiceevents','voiceEvents_web','Web server for voiceEvents.'],['fun','voiceevents','endpoints:add/1',[]],['fun','voiceevents','endpoints:all/0',[]],['fun','voiceevents','endpoints:check_heartbeat/0',[]],['fun','voiceevents','endpoints:code_change/3',[]],['fun','voiceevents','endpoints:count/0',[]],['fun','voiceevents','endpoints:delete/1',[]],['fun','voiceevents','endpoints:delete_all/0',[]],['fun','voiceevents','endpoints:failure/1',[]],['fun','voiceevents','endpoints:find/1',[]],['fun','voiceevents','endpoints:find_for_event/1',[]],['fun','voiceevents','endpoints:handle_call/3',[]],['fun','voiceevents','endpoints:handle_cast/2',[]],['fun','voiceevents','endpoints:handle_info/2',[]],['fun','voiceevents','endpoints:heartbeat_success/0',[]],['fun','voiceevents','endpoints:init/1',[]],['fun','voiceevents','endpoints:start_link/0',[]],['fun','voiceevents','endpoints:success/2',[]],['fun','voiceevents','endpoints:terminate/2',[]],['fun','voiceevents','endpoints:unregister_event/1',[]],['fun','voiceevents','freeswitch:api/2','Same as @link{api/3} except theres no additional '],['fun','voiceevents','freeswitch:api/3','Make a blocking API call to FreeSWITCH.'],['fun','voiceevents','freeswitch:bgapi/3','Make a backgrounded API call to FreeSWITCH.'],['fun','voiceevents','freeswitch:bgapi/4','Make a backgrounded API call to FreeSWITCH.'],['fun','voiceevents','freeswitch:close/1','Close the connection to Node.'],['fun','voiceevents','freeswitch:event/2','Request to receive any events in the list List.'],['fun','voiceevents','freeswitch:get_event_body/1','Return the body of the event or {error, notfound} '],['fun','voiceevents','freeswitch:get_event_header/2','Return the value for a specific header in an event'],['fun','voiceevents','freeswitch:get_event_name/1','Return the name of the event.'],['fun','voiceevents','freeswitch:getpid/1','Get the fake pid of the FreeSWITCH node at Node.'],['fun','voiceevents','freeswitch:handlecall/2','Request that FreeSWITCH send any events pertaining'],['fun','voiceevents','freeswitch:handlecall/3','Request that FreeSWITCH send any events pertaining'],['fun','voiceevents','freeswitch:nixevent/2','Stop receiving any events in the list Events from '],['fun','voiceevents','freeswitch:noevents/1','Stop receiving any events from Node.'],['fun','voiceevents','freeswitch:send/2','Send a raw term to FreeSWITCH.'],['fun','voiceevents','freeswitch:sendevent/3','Send an event to FreeSWITCH.'],['fun','voiceevents','freeswitch:sendmsg/3','Send a message to the call identified by UUID.'],['fun','voiceevents','freeswitch:start_event_handler/1','Spawn Module:Function as an event handler.'],['fun','voiceevents','freeswitch_connector:code_change/3',[]],['fun','voiceevents','freeswitch_connector:handle_call/3',[]],['fun','voiceevents','freeswitch_connector:handle_cast/2',[]],['fun','voiceevents','freeswitch_connector:handle_info/2',[]],['fun','voiceevents','freeswitch_connector:init/1',[]],['fun','voiceevents','freeswitch_connector:start_link/0',[]],['fun','voiceevents','freeswitch_connector:terminate/2',[]],['fun','voiceevents','freeswitch_event:bg_extract_commands/1',[]],['fun','voiceevents','freeswitch_event:code_change/3',[]],['fun','voiceevents','freeswitch_event:handle_call/3',[]],['fun','voiceevents','freeswitch_event:handle_cast/2',[]],['fun','voiceevents','freeswitch_event:handle_info/2',[]],['fun','voiceevents','freeswitch_event:init/1',[]],['fun','voiceevents','freeswitch_event:process/1',[]],['fun','voiceevents','freeswitch_event:send_http_request/3',[]],['fun','voiceevents','freeswitch_event:start_link/0',[]],['fun','voiceevents','freeswitch_event:terminate/2',[]],['fun','voiceevents','voiceEvents:start/0','Start the voiceEvents server.'],['fun','voiceevents','voiceEvents:stop/0','Stop the voiceEvents server.'],['fun','voiceevents','voiceEvents_app:start/2','application start callback for voiceEvents.'],['fun','voiceevents','voiceEvents_app:stop/1','application stop callback for voiceEvents.'],['fun','voiceevents','voiceEvents_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','voiceevents','voiceEvents_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','voiceevents','voiceEvents_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','voiceevents','voiceEvents_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','voiceevents','voiceEvents_deps:get_base_dir/1','Return the application directory for Module.'],['fun','voiceevents','voiceEvents_deps:local_path/1','Return an application-relative directory for this '],['fun','voiceevents','voiceEvents_deps:local_path/1','Return an application-relative directory from Modu'],['fun','voiceevents','voiceEvents_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','voiceevents','voiceEvents_sup:init/1','supervisor callback.'],['fun','voiceevents','voiceEvents_sup:start_link/0','API for starting the supervisor.'],['fun','voiceevents','voiceEvents_sup:upgrade/0','Add processes if necessary.'],['fun','voiceevents','voiceEvents_web:rest_response/1',[]],['fun','voiceevents','voiceEvents_web:rest_response/3',[]],['fun','voiceevents','voiceEvents_web:start/1',[]],['fun','voiceevents','voiceEvents_web:stop/0',[]]];