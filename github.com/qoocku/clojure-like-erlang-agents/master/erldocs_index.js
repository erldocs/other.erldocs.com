var index = [['app','clojure-like-erlang-agents','clojure-like-erlang-agents','[application]'],['mod','clojure-like-erlang-agents','agent','Agent client API.'],['mod','clojure-like-erlang-agents','agent_proc','An implementation of agent process not to be super'],['mod','clojure-like-erlang-agents','agent_ref','Toy client agent process reference.'],['mod','clojure-like-erlang-agents','agent_srv','?? framework.'],['mod','clojure-like-erlang-agents','agent_value_watch','The agent watcher (observator) process implementat'],['fun','clojure-like-erlang-agents','agent:add_watch/1','Binds to an agent a watching function.'],['fun','clojure-like-erlang-agents','agent:get/1','Returns an agent property.'],['fun','clojure-like-erlang-agents','agent:is/1','Tests agents properties.'],['fun','clojure-like-erlang-agents','agent:pid/1','Returns the agent process pid.'],['fun','clojure-like-erlang-agents','agent:send/1','Sends to an agent a function to be evaluated async'],['fun','clojure-like-erlang-agents','agent:send_off/1','Sends to an agent a function to be evaluated async'],['fun','clojure-like-erlang-agents','agent:send_off/1','Sends to an agent a function to be evaluated async'],['fun','clojure-like-erlang-agents','agent:set/1','Sets an agent property.'],['fun','clojure-like-erlang-agents','agent:start/1','Start unsupervised agent with the InitialState as '],['fun','clojure-like-erlang-agents','agent:start/1','Starts unsupervised agent with the InitialState as'],['fun','clojure-like-erlang-agents','agent:start_link/1','Starts an agent to be supervised with the InitialS'],['fun','clojure-like-erlang-agents','agent:start_link/1','Starts an agent to be supervised with initial stat'],['fun','clojure-like-erlang-agents','agent:start_link_ref/1','Starts an agent to be supervised with the InitialS'],['fun','clojure-like-erlang-agents','agent:start_link_ref/1','Starts an agent to be supervised with initial stat'],['fun','clojure-like-erlang-agents','agent:start_ref/1','Start unsupervised agent with the InitialState as '],['fun','clojure-like-erlang-agents','agent:start_ref/1','Starts unsupervised agent with the InitialState as'],['fun','clojure-like-erlang-agents','agent:state/1','Returns an agents state value.'],['fun','clojure-like-erlang-agents','agent:stop/1','Stops an agent asynchronously.'],['fun','clojure-like-erlang-agents','agent:sync_stop/1','Stops an agent synchronously (the caller is blocke'],['fun','clojure-like-erlang-agents','agent_proc:start/1','Starts simple agent process.'],['fun','clojure-like-erlang-agents','agent_ref:add_watch/1','Adds a watching function to an agent.'],['fun','clojure-like-erlang-agents','agent_ref:get/1','Gets agents property.'],['fun','clojure-like-erlang-agents','agent_ref:is/1','Test some agents properties or equalness.'],['fun','clojure-like-erlang-agents','agent_ref:new/1','Creates a new instance of this module.'],['fun','clojure-like-erlang-agents','agent_ref:pid/0','Returns agents process pid.'],['fun','clojure-like-erlang-agents','agent_ref:send/1','Sends a function to an agent.'],['fun','clojure-like-erlang-agents','agent_ref:send_off/1','Sends a function off an agent.'],['fun','clojure-like-erlang-agents','agent_ref:send_off/1','Sends a function off an agent.'],['fun','clojure-like-erlang-agents','agent_ref:set/1','Sets agents property.'],['fun','clojure-like-erlang-agents','agent_ref:state/0','Returns agents state value.'],['fun','clojure-like-erlang-agents','agent_value_watch:new/1','Creates watcher process.'],['fun','clojure-like-erlang-agents','agent_value_watch:notify_watchers/1','Notify agents watchers that the state value has b']];