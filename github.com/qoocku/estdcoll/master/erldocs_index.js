var index = [['app','estdcoll','estdcoll','[application]'],['mod','estdcoll','estdcoll','Erlang Standard Collection Library Utils.'],['mod','estdcoll','estdcoll_iterators',[]],['mod','estdcoll','i_iterator_dict','Erlang Standard Collection Iterators Library.'],['mod','estdcoll','i_iterator_gb_set','Erlang Standard Collection Iterators Library.'],['mod','estdcoll','i_iterator_gb_tree','Erlang Standard Collection Iterators Library.'],['mod','estdcoll','i_iterator_list','Erlang Standard Collection Iterators Library.'],['mod','estdcoll','i_iterator_set','Erlang Standard Collection Iterators Library.'],['fun','estdcoll','estdcoll:inherit_behavior/1','Flattens the behavior "inheritance" chain.'],['fun','estdcoll','estdcoll:inherit_behaviour/1','Equivalent to inherit_behavior / 2.'],['fun','estdcoll','estdcoll:merge/2',[]],['fun','estdcoll','estdcoll:register_merge/1','Registers callback for merging collection of type '],['fun','estdcoll','estdcoll_iterators:all_loop/4',[]],['fun','estdcoll','estdcoll_iterators:any_loop/4',[]],['fun','estdcoll','estdcoll_iterators:do_next/1',[]],['fun','estdcoll','estdcoll_iterators:fold_loop/5',[]],['fun','estdcoll','estdcoll_iterators:foreach_loop/4',[]],['fun','estdcoll','estdcoll_iterators:iterator_to_list/1',[]],['fun','estdcoll','i_iterator_dict:new/2',[]],['fun','estdcoll','i_iterator_gb_set:all/1',[]],['fun','estdcoll','i_iterator_gb_set:any/1',[]],['fun','estdcoll','i_iterator_gb_set:dropwhile/1',[]],['fun','estdcoll','i_iterator_gb_set:dropwhile_next/1',[]],['fun','estdcoll','i_iterator_gb_set:filter/1',[]],['fun','estdcoll','i_iterator_gb_set:filter_next/1',[]],['fun','estdcoll','i_iterator_gb_set:fold/1',[]],['fun','estdcoll','i_iterator_gb_set:foreach/1',[]],['fun','estdcoll','i_iterator_gb_set:hd/0',[]],['fun','estdcoll','i_iterator_gb_set:head/0',[]],['fun','estdcoll','i_iterator_gb_set:map/1',[]],['fun','estdcoll','i_iterator_gb_set:new/1','Creates an iterator using gb_trees:iterator/0 valu'],['fun','estdcoll','i_iterator_gb_set:new/1','Creates an iterator using gb_trees:iterator/0 valu'],['fun','estdcoll','i_iterator_gb_set:new/1','Creates an iterator using gb_trees:iterator/0 valu'],['fun','estdcoll','i_iterator_gb_set:next/0',[]],['fun','estdcoll','i_iterator_gb_set:next_iter/1',[]],['fun','estdcoll','i_iterator_gb_set:partition/1',[]],['fun','estdcoll','i_iterator_gb_set:tail/0','Returns iterator referencing all but the first ite'],['fun','estdcoll','i_iterator_gb_set:takewhile/1',[]],['fun','estdcoll','i_iterator_gb_set:takewhile_next/1',[]],['fun','estdcoll','i_iterator_gb_set:tl/0',[]],['fun','estdcoll','i_iterator_gb_tree:all/1',[]],['fun','estdcoll','i_iterator_gb_tree:any/1',[]],['fun','estdcoll','i_iterator_gb_tree:dropwhile/1',[]],['fun','estdcoll','i_iterator_gb_tree:dropwhile_next/1',[]],['fun','estdcoll','i_iterator_gb_tree:filter/1',[]],['fun','estdcoll','i_iterator_gb_tree:filter_next/1',[]],['fun','estdcoll','i_iterator_gb_tree:fold/1',[]],['fun','estdcoll','i_iterator_gb_tree:foreach/1',[]],['fun','estdcoll','i_iterator_gb_tree:hd/0',[]],['fun','estdcoll','i_iterator_gb_tree:head/0',[]],['fun','estdcoll','i_iterator_gb_tree:map/1',[]],['fun','estdcoll','i_iterator_gb_tree:new/1','Creates an iterator using gb_trees:iterator/0 valu'],['fun','estdcoll','i_iterator_gb_tree:new/1','Creates an iterator using gb_trees:iterator/0 valu'],['fun','estdcoll','i_iterator_gb_tree:new/1','Creates an iterator using gb_trees:iterator/0 valu'],['fun','estdcoll','i_iterator_gb_tree:next/0',[]],['fun','estdcoll','i_iterator_gb_tree:next_iter/1',[]],['fun','estdcoll','i_iterator_gb_tree:partition/1',[]],['fun','estdcoll','i_iterator_gb_tree:tail/0','Returns iterator referencing all but the first ite'],['fun','estdcoll','i_iterator_gb_tree:takewhile/1',[]],['fun','estdcoll','i_iterator_gb_tree:takewhile_next/1',[]],['fun','estdcoll','i_iterator_gb_tree:tl/0',[]],['fun','estdcoll','i_iterator_list:all/1',[]],['fun','estdcoll','i_iterator_list:any/1',[]],['fun','estdcoll','i_iterator_list:dropwhile/1',[]],['fun','estdcoll','i_iterator_list:dropwhile_next/1',[]],['fun','estdcoll','i_iterator_list:filter/1',[]],['fun','estdcoll','i_iterator_list:filter_next/1',[]],['fun','estdcoll','i_iterator_list:fold/1',[]],['fun','estdcoll','i_iterator_list:foreach/1',[]],['fun','estdcoll','i_iterator_list:hd/0',[]],['fun','estdcoll','i_iterator_list:head/0','Returns the first item referenced by the iterator.'],['fun','estdcoll','i_iterator_list:map/1',[]],['fun','estdcoll','i_iterator_list:new/1',[]],['fun','estdcoll','i_iterator_list:new/2',[]],['fun','estdcoll','i_iterator_list:new/3',[]],['fun','estdcoll','i_iterator_list:next/0',[]],['fun','estdcoll','i_iterator_list:next_iter/1',[]],['fun','estdcoll','i_iterator_list:partition/1',[]],['fun','estdcoll','i_iterator_list:tail/0','Returns iterator referencing all but the first ite'],['fun','estdcoll','i_iterator_list:takewhile/1',[]],['fun','estdcoll','i_iterator_list:takewhile_next/1',[]],['fun','estdcoll','i_iterator_list:tl/0',[]],['fun','estdcoll','i_iterator_set:new/1',[]]];