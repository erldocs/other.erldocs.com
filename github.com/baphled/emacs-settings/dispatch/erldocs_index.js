var index = [['app','emacs-settings','emacs-settings','[application]'],['mod','emacs-settings','ast_transformer',[]],['mod','emacs-settings','bad_module',[]],['mod','emacs-settings','bad_transformer',[]],['mod','emacs-settings','frabjous',[]],['mod','emacs-settings','frabjous_helper',[]],['mod','emacs-settings','merl',[]],['mod','emacs-settings','merl_adapter',[]],['mod','emacs-settings','merl_route',[]],['mod','emacs-settings','merl_route_table',[]],['mod','emacs-settings','merl_router',[]],['mod','emacs-settings','merl_script',[]],['mod','emacs-settings','merl_util',[]],['mod','emacs-settings','missing_module',[]],['mod','emacs-settings','multi_pass',[]],['mod','emacs-settings','multi_pass_test',[]],['mod','emacs-settings','pt_test',[]],['mod','emacs-settings','remote_call',[]],['mod','emacs-settings','single_pass',[]],['mod','emacs-settings','single_pass_test',[]],['mod','emacs-settings','smerl',' Smerl: Simple Metaprogramming for Erlang.'],['mod','emacs-settings','test_component',[]],['fun','emacs-settings','ast_transformer:behaviour_info/1',[]],['fun','emacs-settings','bad_transformer:is_complete/1',[]],['fun','emacs-settings','bad_transformer:start/0',[]],['fun','emacs-settings','bad_transformer:transform/3',[]],['fun','emacs-settings','frabjous:invoke_transformer/3',[]],['fun','emacs-settings','frabjous:parse_transform/2',[]],['fun','emacs-settings','frabjous_helper:atom_to_var/1',[]],['fun','emacs-settings','frabjous_helper:capitalize_string/1',[]],['fun','emacs-settings','frabjous_helper:string_to_ast/1',[]],['fun','emacs-settings','merl:generator/1',[]],['fun','emacs-settings','merl:generator/2',[]],['fun','emacs-settings','merl_adapter:service/1',[]],['fun','emacs-settings','merl_adapter:start/1',[]],['fun','emacs-settings','merl_adapter:start/2',[]],['fun','emacs-settings','merl_adapter:stop/0',[]],['fun','emacs-settings','merl_route:attr/1',[]],['fun','emacs-settings','merl_route:invoke/1',[]],['fun','emacs-settings','merl_route:matches/1',[]],['fun','emacs-settings','merl_route_table:add_site/2',[]],['fun','emacs-settings','merl_route_table:clear/0',[]],['fun','emacs-settings','merl_route_table:code_change/3',[]],['fun','emacs-settings','merl_route_table:find_match/1',[]],['fun','emacs-settings','merl_route_table:handle_call/3',[]],['fun','emacs-settings','merl_route_table:handle_cast/2',[]],['fun','emacs-settings','merl_route_table:handle_info/2',[]],['fun','emacs-settings','merl_route_table:init/1',[]],['fun','emacs-settings','merl_route_table:start_link/0',[]],['fun','emacs-settings','merl_route_table:terminate/2',[]],['fun','emacs-settings','merl_router:code_change/3',[]],['fun','emacs-settings','merl_router:dispatch/4',[]],['fun','emacs-settings','merl_router:find_match/1',[]],['fun','emacs-settings','merl_router:handle_call/3',[]],['fun','emacs-settings','merl_router:handle_cast/2',[]],['fun','emacs-settings','merl_router:handle_info/2',[]],['fun','emacs-settings','merl_router:init/1',[]],['fun','emacs-settings','merl_router:reload_config/0',[]],['fun','emacs-settings','merl_router:start_link/1',[]],['fun','emacs-settings','merl_router:stop/0',[]],['fun','emacs-settings','merl_router:terminate/2',[]],['fun','emacs-settings','merl_script:execute/2',[]],['fun','emacs-settings','merl_util:formatb/2',[]],['fun','emacs-settings','merl_util:fun_name/1',[]],['fun','emacs-settings','merl_util:make_generator/2',[]],['fun','emacs-settings','merl_util:pretty_float/1',[]],['fun','emacs-settings','multi_pass:is_complete/1',[]],['fun','emacs-settings','multi_pass:start/0',[]],['fun','emacs-settings','multi_pass:transform/3',[]],['fun','emacs-settings','pt_test:code_change/3',[]],['fun','emacs-settings','pt_test:handle_call/3',[]],['fun','emacs-settings','pt_test:handle_cast/2',[]],['fun','emacs-settings','pt_test:handle_info/2',[]],['fun','emacs-settings','pt_test:init/1',[]],['fun','emacs-settings','pt_test:start_link/0',[]],['fun','emacs-settings','pt_test:terminate/2',[]],['fun','emacs-settings','remote_call:is_complete/1',[]],['fun','emacs-settings','remote_call:start/1',[]],['fun','emacs-settings','remote_call:transform/3',[]],['fun','emacs-settings','single_pass:is_complete/1',[]],['fun','emacs-settings','single_pass:start/0',[]],['fun','emacs-settings','single_pass:transform/3',[]],['fun','emacs-settings','smerl:add_func/1','Add a new function to the meta_mod and return the '],['fun','emacs-settings','smerl:add_func/1','Add a new function to the meta_mod and return the '],['fun','emacs-settings','smerl:compile/1','Compile the module represented by the meta_mod and'],['fun','emacs-settings','smerl:compile/1','Compile the module represented by the meta_mod and'],['fun','emacs-settings','smerl:curry/1','Curry the function from the module or meta_mod   '],['fun','emacs-settings','smerl:curry/1','Curry the function from the module with the given '],['fun','emacs-settings','smerl:curry/1','Get the curried form for the function and paramete'],['fun','emacs-settings','smerl:curry_add/1','Curry the function in the module, rename the curri'],['fun','emacs-settings','smerl:curry_add/1','Curry the function form from the meta_mod, then ad'],['fun','emacs-settings','smerl:curry_add/1','Add the curried form of the function    in the me'],['fun','emacs-settings','smerl:curry_add/1','Add the curried form of the function in the meta_m'],['fun','emacs-settings','smerl:curry_replace/1','Replace the function in the meta_mod with    its '],['fun','emacs-settings','smerl:curry_replace/1','Replace the function in the meta_mod with    its '],['fun','emacs-settings','smerl:embed_all/1','Apply the embed_params function with the list of {'],['fun','emacs-settings','smerl:embed_params/1','Apply embed_params/2 to the function from the meta'],['fun','emacs-settings','smerl:embed_params/1','Apply embed_params/2 to a function from the meta_m'],['fun','emacs-settings','smerl:embed_params/1','This function takes a function form and list of na'],['fun','emacs-settings','smerl:extend/1','Similar to extend/2, with the addition of the Ari'],['fun','emacs-settings','smerl:extend/1','extend/2  Add all the parent modules functions t'],['fun','emacs-settings','smerl:extend/4',[]],['fun','emacs-settings','smerl:for_file/1','Create a meta_mod for a module from its source fil'],['fun','emacs-settings','smerl:for_file/1','Equivalent to for_file(SrcFilePath, []).'],['fun','emacs-settings','smerl:for_module/1','Create a meta_mod tuple for an existing module.'],['fun','emacs-settings','smerl:for_module/1','Equivalent to for_module(ModuleName, []).'],['fun','emacs-settings','smerl:get_attribute/1','Get the value a the modules attribute.'],['fun','emacs-settings','smerl:get_export_all/1','Get the export_all value for the module.'],['fun','emacs-settings','smerl:get_exports/1','Return the list of exports in the meta_mod.'],['fun','emacs-settings','smerl:get_forms/1','Return the list of function forms in the meta_mod.'],['fun','emacs-settings','smerl:get_func/1','Get the form for the function with the specified a'],['fun','emacs-settings','smerl:get_module/1','Return the module name for the meta_mod.'],['fun','emacs-settings','smerl:has_func/1','Check whether the meta_mod has a function with the'],['fun','emacs-settings','smerl:new/1','Create a new meta_mod for a module with the given '],['fun','emacs-settings','smerl:remove_export/1','Remove the export from the list of exports in the '],['fun','emacs-settings','smerl:remove_func/1','Try to remove the function from the meta_mod.'],['fun','emacs-settings','smerl:rename/1','Change the name of the function represented by the'],['fun','emacs-settings','smerl:replace_func/1','  Replace an existing function with the new one.'],['fun','emacs-settings','smerl:set_export_all/1','Set the export_all value for the module.'],['fun','emacs-settings','smerl:set_exports/1','Set the meta_mods export list to the new list.'],['fun','emacs-settings','smerl:set_forms/2',[]],['fun','emacs-settings','smerl:set_module/1','Set the meta_mods module name.'],['fun','emacs-settings','smerl:to_src/1','Write the pretty printed source code for the modul'],['fun','emacs-settings','smerl:to_src/1','Return the pretty-printed source code for the modu']];