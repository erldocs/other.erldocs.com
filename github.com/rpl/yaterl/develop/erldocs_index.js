var index = [['app','yaterl','yaterl','[application]'],['mod','yaterl','yate_decode','yate_decode is a simple yate module to decode ya'],['mod','yaterl','yate_encode','yate_encode is a simple yate module to encode ya'],['mod','yaterl','yate_event','yate_event is an helper module for yate event ma'],['mod','yaterl','yate_message','yate_message is an helper module for yate messag'],['mod','yaterl','yaterl_app','yaterl_app is an OTP application entry point, it'],['mod','yaterl','yaterl_config','yaterl_config is used internally to get and set '],['mod','yaterl','yaterl_connection_mgr','yaterl_connection_mgr is a gen_srv erlang proces'],['mod','yaterl','yaterl_gen_mod',[]],['mod','yaterl','yaterl_incoming_event_srv','yaterl_incoming_event_srv is a gen_server erlang'],['mod','yaterl','yaterl_logger','yaterl_logger is a gen_server erlang process tha'],['mod','yaterl','yaterl_stdio_connection','yaterl_stdio_connection is a gen_server erlang p'],['mod','yaterl','yaterl_subscribe_mgr','yaterl_subscribe_mgr is a gen_fsm erlang process'],['mod','yaterl','yaterl_sup','yaterl_sup is an OTP supervisor, it will start y'],['mod','yaterl','yaterl_tracer',[]],['fun','yaterl','yate_decode:from_binary/1','decode message type and call specialized attribute'],['fun','yaterl','yate_encode:to_binary/1','encode a yate message from a yate_event record, or'],['fun','yaterl','yate_event:attr/1',' Change an attribute value from a yate event.'],['fun','yaterl','yate_event:attr/1',' Get attribute value from a yate event.'],['fun','yaterl','yate_event:attrs/1',' get all attributes from a yate event.'],['fun','yaterl','yate_event:attrs/2',' Change all attributes from a yate event.'],['fun','yaterl','yate_event:change_event_attribute/3','[INTERNAL API]: change attributes value.'],['fun','yaterl','yate_event:direction/1',' Change yate event direction.'],['fun','yaterl','yate_event:direction/1',' Get attribute value from a yate event.'],['fun','yaterl','yate_event:is_error/1',' Test for error event.'],['fun','yaterl','yate_event:is_install/1',' Test for install event.'],['fun','yaterl','yate_event:is_message/1',' Test for message event.'],['fun','yaterl','yate_event:is_setlocal/1',' Test for setlocal event.'],['fun','yaterl','yate_event:is_uninstall/1',' Test for uninstall event.'],['fun','yaterl','yate_event:is_unwatch/1',' Test for unwatch event.'],['fun','yaterl','yate_event:is_watch/1',' Test for watch event.'],['fun','yaterl','yate_event:new/1',' Create a new yate event of EventType type and '],['fun','yaterl','yate_event:new/1',' Create a new yate event of EventType type.'],['fun','yaterl','yate_event:type/1',' Change yate event type.'],['fun','yaterl','yate_event:type/1',' Get type from a yate event.'],['fun','yaterl','yate_message:id/1',' Change a yate message id.'],['fun','yaterl','yate_message:id/1',' Get yate message id.'],['fun','yaterl','yate_message:is_processed/1',' Check if a yate message is processed.'],['fun','yaterl','yate_message:name/1',' Change a yate message name.'],['fun','yaterl','yate_message:name/1',' Get yate message name.'],['fun','yaterl','yate_message:new/0',' Create a new empty yate message.'],['fun','yaterl','yate_message:new/1',' Create a populated yate message.'],['fun','yaterl','yate_message:new/1',' Create a populated yate message (empty retvalue).'],['fun','yaterl','yate_message:new/1',' Create a named yate message.'],['fun','yaterl','yate_message:param/1',' Change a yate message parameters value.'],['fun','yaterl','yate_message:param/1',' Get yate message parameters value.'],['fun','yaterl','yate_message:reply/1',' Create an answer yate event from a given yate eve'],['fun','yaterl','yate_message:reply/1',' Create an answer yate event from a given yate eve'],['fun','yaterl','yate_message:retvalue/1',' Change a yate message retvalue.'],['fun','yaterl','yate_message:retvalue/1',' Get yate message retvalue.'],['fun','yaterl','yate_message:set_processed/1',' Set a yate message processed flag to true.'],['fun','yaterl','yate_message:set_processed/2',' Set a yate message processed flag to "true"/true '],['fun','yaterl','yate_message:time/1',' Change a yate message time.'],['fun','yaterl','yate_message:time/1',' Get yate message time.'],['fun','yaterl','yaterl_app:start/2',' [APPLICATION CALLBACK] Starts yaterl_sup supervis'],['fun','yaterl','yaterl_app:stop/1',' [APPLICATION CALLBACK] Stop OTP application.'],['fun','yaterl','yaterl_config:log_files/1',' Set the application and sasl log files.'],['fun','yaterl','yaterl_config:log_level/0',' Get the current log_level (defaults to error).'],['fun','yaterl','yaterl_config:log_level/1',' Set the current log_level.'],['fun','yaterl','yaterl_config:tracing_config/0',[]],['fun','yaterl','yaterl_config:tracing_config/3',[]],['fun','yaterl','yaterl_config:tracing_enabled/0',[]],['fun','yaterl','yaterl_config:whereis_yaterl_connection_mgr/0',' Get the yaterl_connection_mgr location.'],['fun','yaterl','yaterl_config:whereis_yaterl_connection_mgr/1',' Set the yaterl_connection_mgr location.'],['fun','yaterl','yaterl_config:yaterl_connection_maxbytesline/0',' Get the current maxbytesline value (defaults to 8'],['fun','yaterl','yaterl_config:yaterl_connection_maxbytesline/1',' Set the current maxbytesline value.'],['fun','yaterl','yaterl_config:yaterl_custom_module_name/0',' Get the current custom module name.'],['fun','yaterl','yaterl_config:yaterl_custom_module_name/1',' Set the current custom module name.'],['fun','yaterl','yaterl_config:yaterl_sup_mode/0',' Get the current yaterl_sup_mode (defaults to all_'],['fun','yaterl','yaterl_config:yaterl_sup_mode/1',' Set the current yaterl_sup_mode.'],['fun','yaterl','yaterl_connection_mgr:code_change/3',' [GEN_SERVER CALLBACK] Convert process state when '],['fun','yaterl','yaterl_connection_mgr:get_yate_connection/0',' get current yate connection.'],['fun','yaterl','yaterl_connection_mgr:handle_call/3',' [GEN_SERVER CALLBACK] Handling call messages.'],['fun','yaterl','yaterl_connection_mgr:handle_cast/2',' [GEN_SERVER CALLBACK] Handling cast messages.'],['fun','yaterl','yaterl_connection_mgr:handle_info/2',' [GEN_SERVER CALLBACK] Handling all non call/cast '],['fun','yaterl','yaterl_connection_mgr:init/1',' [GEN_SERVER CALLBACK] Initiates the server.'],['fun','yaterl','yaterl_connection_mgr:is_connected/0',' check if there is a managed connection.'],['fun','yaterl','yaterl_connection_mgr:received_binary_data/1',' receive binary data from current active connectio'],['fun','yaterl','yaterl_connection_mgr:send_binary_data/1',' send a yate event and return immediatelly.'],['fun','yaterl','yaterl_connection_mgr:set_yate_connection/2',' set current yate connection.'],['fun','yaterl','yaterl_connection_mgr:start_link/0',' Starts the server.'],['fun','yaterl','yaterl_connection_mgr:terminate/2',' [GEN_SERVER CALLBACK] Handling terminate sequence'],['fun','yaterl','yaterl_gen_mod:ack/1',' create a binary encoded ack (unhandled yate messa'],['fun','yaterl','yaterl_gen_mod:behaviour_info/1',' BEHAVIOUR CALLBACK return yaterl_gen_mod callback'],['fun','yaterl','yaterl_gen_mod:dispatch/1',' immediately send a yate message.'],['fun','yaterl','yaterl_gen_mod:reply/1',' create a binary encoded reply (handled yate messa'],['fun','yaterl','yaterl_gen_mod:shutdown/1',[]],['fun','yaterl','yaterl_gen_mod:start_subscribe_sequence/1',[]],['fun','yaterl','yaterl_incoming_event_srv:code_change/3',' [GEN_SERVER CALLBACK] Convert process state when '],['fun','yaterl','yaterl_incoming_event_srv:connection_available/1',[]],['fun','yaterl','yaterl_incoming_event_srv:handle_cast/2',' [GEN_SERVER CALLBACK] Handling cast messages.'],['fun','yaterl','yaterl_incoming_event_srv:init/1',' [GEN_SERVER CALLBACK] Initiates the server.'],['fun','yaterl','yaterl_incoming_event_srv:run/1',' Run yate event processing.'],['fun','yaterl','yaterl_incoming_event_srv:start/1',' Starts the server.'],['fun','yaterl','yaterl_incoming_event_srv:subscribe_completed/1',[]],['fun','yaterl','yaterl_incoming_event_srv:subscribe_error/3',[]],['fun','yaterl','yaterl_incoming_event_srv:terminate/2',' [GEN_SERVER CALLBACK] Handling terminate sequence'],['fun','yaterl','yaterl_logger:code_change/3',' [GEN_SERVER CALLBACK] Convert process state when '],['fun','yaterl','yaterl_logger:error_msg/1',' process an error_msg.'],['fun','yaterl','yaterl_logger:error_msg/1',' process an error_msg.'],['fun','yaterl','yaterl_logger:handle_call/3',' [GEN_SERVER CALLBACK] Handling call messages.'],['fun','yaterl','yaterl_logger:handle_cast/2',' [GEN_SERVER CALLBACK] Handling cast messages.'],['fun','yaterl','yaterl_logger:info_msg/1',' process an info_msg.'],['fun','yaterl','yaterl_logger:info_msg/1',' process an info_msg.'],['fun','yaterl','yaterl_logger:init/1',' [GEN_SERVER CALLBACK] Initiates the server.'],['fun','yaterl','yaterl_logger:log_level/0',' Get the current log_level.'],['fun','yaterl','yaterl_logger:log_level/1',' Set the current log_level.'],['fun','yaterl','yaterl_logger:start_link/0',' Starts the server.'],['fun','yaterl','yaterl_logger:terminate/2',' [GEN_SERVER CALLBACK] Handling terminate sequence'],['fun','yaterl','yaterl_logger:warning_msg/1',' process a warning_msg.'],['fun','yaterl','yaterl_logger:warning_msg/1',' process a warning_msg.'],['fun','yaterl','yaterl_stdio_connection:code_change/3',' [GEN_SERVER CALLBACK] Convert process state when '],['fun','yaterl','yaterl_stdio_connection:get_manager/0',' Return the current registered connection manager.'],['fun','yaterl','yaterl_stdio_connection:handle_call/3',' [GEN_SERVER CALLBACK] Handling call messages.'],['fun','yaterl','yaterl_stdio_connection:handle_cast/2',' [GEN_SERVER CALLBACK] Handling cast messages.'],['fun','yaterl','yaterl_stdio_connection:handle_info/2',' [GEN_SERVER CALLBACK] Handling all non call/cast '],['fun','yaterl','yaterl_stdio_connection:init/1',' [GEN_SERVER CALLBACK] Initiates the server.'],['fun','yaterl','yaterl_stdio_connection:is_managed/0',' Check if this connection is registered to a conne'],['fun','yaterl','yaterl_stdio_connection:received_binary_data/1',' Received binary data to yate (routed to yaterl_co'],['fun','yaterl','yaterl_stdio_connection:send_binary_data/1',' Send binary data to yate.'],['fun','yaterl','yaterl_stdio_connection:start_link/0',' Starts the server.'],['fun','yaterl','yaterl_stdio_connection:terminate/2',' [GEN_SERVER CALLBACK] Handling terminate sequence'],['fun','yaterl','yaterl_subscribe_mgr:code_change/4',' [GEN_SERVER CALLBACK] Convert process state when '],['fun','yaterl','yaterl_subscribe_mgr:handle_sync_event/4','[GEN_FSM CALLBACK] handle sync event on any state.'],['fun','yaterl','yaterl_subscribe_mgr:handle_yate_event/1',' Handle an incoming yate subscribe event (watch, u'],['fun','yaterl','yaterl_subscribe_mgr:init/1',' [GEN_FSM CALLBACK] Initiates the server.'],['fun','yaterl','yaterl_subscribe_mgr:resolve_custom_module/1',' Resolve subscribed yate_message routing.'],['fun','yaterl','yaterl_subscribe_mgr:start_link/0',' Starts the server.'],['fun','yaterl','yaterl_subscribe_mgr:start_subscribe_sequence/1',' Start the configured subscribe sequence on the ac'],['fun','yaterl','yaterl_subscribe_mgr:STARTED/2','[GEN_FSM CALLBACK] handle STARTED state events.'],['fun','yaterl','yaterl_subscribe_mgr:SUBSCRIBE/2','[GEN_FSM CALLBACK] handle SUBSCRIBE state events'],['fun','yaterl','yaterl_subscribe_mgr:terminate/3',' [GEN_FSM CALLBACK] Handling terminate sequence.'],['fun','yaterl','yaterl_sup:init/1',' [SUPERVISOR CALLBACK] Initiates the supervisor.'],['fun','yaterl','yaterl_sup:start_link/1',' Starts yaterl_sup supervisor as configured      '],['fun','yaterl','yaterl_tracer:add_message/3',[]],['fun','yaterl','yaterl_tracer:add_note/3',[]],['fun','yaterl','yaterl_tracer:code_change/3',[]],['fun','yaterl','yaterl_tracer:handle_call/3',[]],['fun','yaterl','yaterl_tracer:handle_cast/2',[]],['fun','yaterl','yaterl_tracer:handle_info/2',[]],['fun','yaterl','yaterl_tracer:init/1',[]],['fun','yaterl','yaterl_tracer:start_link/0',[]],['fun','yaterl','yaterl_tracer:start_trace/0',[]],['fun','yaterl','yaterl_tracer:stop_trace/0',[]],['fun','yaterl','yaterl_tracer:terminate/2',[]]];