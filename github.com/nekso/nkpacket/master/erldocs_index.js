var index = [['app','nkpacket','nkpacket','[application]'],['mod','nkpacket','nkpacket_app','NkPACKET OTP Application Module.'],['mod','nkpacket','nkpacket_config','NkPACKET Config Server.'],['mod','nkpacket','nkpacket_config_cache',[]],['mod','nkpacket','nkpacket_connection','Generic tranport connection process.'],['mod','nkpacket','nkpacket_connection_lib',[]],['mod','nkpacket','nkpacket_connection_ws','WS Connection Library Functions.'],['mod','nkpacket','nkpacket_cowboy',[]],['mod','nkpacket','nkpacket_dns','NkPACKET DNS cache and utilities with RFC3263 supp'],['mod','nkpacket','nkpacket_protocol','Protocol behaviour  This module shows the behavio'],['mod','nkpacket','nkpacket_protocol_http','Protocol behaviour.'],['mod','nkpacket','nkpacket_stun','RFC5389 STUN utility functions.'],['mod','nkpacket','nkpacket_sup',[]],['mod','nkpacket','nkpacket_transport','NkPACKET Transport control module.'],['mod','nkpacket','nkpacket_transport_http',[]],['mod','nkpacket','nkpacket_transport_sctp',[]],['mod','nkpacket','nkpacket_transport_tcp',[]],['mod','nkpacket','nkpacket_transport_udp',[]],['mod','nkpacket','nkpacket_util','Common library utility funcions.'],['fun','nkpacket','nkpacket_app:start/0','Starts NkPACKET stand alone.'],['fun','nkpacket','nkpacket_config:del/1','Deletes a config value.'],['fun','nkpacket','nkpacket_config:get/1','Gets an config value.'],['fun','nkpacket','nkpacket_config:get/1','Equivalent to get(Key, undefined).'],['fun','nkpacket','nkpacket_config:increment/1','Atomically increments or decrements a counter.'],['fun','nkpacket','nkpacket_config:load_domain/1','Loads a domain configuration.'],['fun','nkpacket','nkpacket_config:put/1','Sets a config value.'],['fun','nkpacket','nkpacket_config:register_protocol/1',[]],['fun','nkpacket','nkpacket_config:register_protocol/1',[]],['fun','nkpacket','nkpacket_connection:connect/1','Starts a new outbound connection.'],['fun','nkpacket','nkpacket_connection:get_timeout/1','Reads the remaining time to timeout.'],['fun','nkpacket','nkpacket_connection:reset_timeout/1','Re-starts the idle timeout with new time.'],['fun','nkpacket','nkpacket_connection:send/1','Sends a new message to a started connection.'],['fun','nkpacket','nkpacket_connection:start/1','Starts a new transport process for an already star'],['fun','nkpacket','nkpacket_connection:stop/1','Stops a started connection.'],['fun','nkpacket','nkpacket_connection:stop/1','Stops a started connection with reason normal.'],['fun','nkpacket','nkpacket_connection:unparse/1','Performs an unparse using connection context.'],['fun','nkpacket','nkpacket_connection_lib:is_max/1','Checks if we already have the maximum number of co'],['fun','nkpacket','nkpacket_connection_lib:raw_send/1','Sends data directly to a transport.'],['fun','nkpacket','nkpacket_connection_lib:raw_stop/1','Stops a transport.'],['fun','nkpacket','nkpacket_connection_ws:start_handshake/1',[]],['fun','nkpacket','nkpacket_dns:clear/0','Clear all stored information in the cache.'],['fun','nkpacket','nkpacket_dns:clear/1','Clear all info about Domain in the cache.'],['fun','nkpacket','nkpacket_dns:get_ips/1','Gets all IPs for this host, or [] if not found.'],['fun','nkpacket','nkpacket_dns:get_naptr/1','Finds published services using DNS NAPTR search.'],['fun','nkpacket','nkpacket_dns:get_srvs/1','Gets all hosts for a SRV domain, sorting the resul'],['fun','nkpacket','nkpacket_dns:resolve/1','Finds the ips, transports and ports to try for Uri'],['fun','nkpacket','nkpacket_protocol:behavior_info/1','No mandatory functions.'],['fun','nkpacket','nkpacket_protocol:conn_bridge/1','This function is called on incoming data for bridg'],['fun','nkpacket','nkpacket_protocol:conn_handle_call/1','Called when the connection received a gen_server:c'],['fun','nkpacket','nkpacket_protocol:conn_handle_cast/1','Called when the connection received a gen_server:c'],['fun','nkpacket','nkpacket_protocol:conn_handle_info/1','Called when the connection received an erlang mess'],['fun','nkpacket','nkpacket_protocol:conn_init/1','Called when the connection starts.'],['fun','nkpacket','nkpacket_protocol:conn_parse/1','This function is called when a new message arrives'],['fun','nkpacket','nkpacket_protocol:conn_stop/1','Called when the connection stops.'],['fun','nkpacket','nkpacket_protocol:conn_unparse/1','This function is called when a new message must be'],['fun','nkpacket','nkpacket_protocol:default_port/1','If you implement this function, it will be used to'],['fun','nkpacket','nkpacket_protocol:http_init/1','This callback is called for the http/https "pseudo'],['fun','nkpacket','nkpacket_protocol:listen_handle_call/1','Called when the listening transport received a gen'],['fun','nkpacket','nkpacket_protocol:listen_handle_cast/1','Called when the listening transport received a gen'],['fun','nkpacket','nkpacket_protocol:listen_handle_info/1','Called when the listening transport received an er'],['fun','nkpacket','nkpacket_protocol:listen_init/1','Called when the listening transport starts.'],['fun','nkpacket','nkpacket_protocol:listen_parse/1','This function is called only for UDP transports us'],['fun','nkpacket','nkpacket_protocol:listen_stop/1','Called when the listening transport stops.'],['fun','nkpacket','nkpacket_protocol:transports/1','If you implement this function, it must return, fo'],['fun','nkpacket','nkpacket_protocol:unparse/1','Implement this function to provide a quick unpar'],['fun','nkpacket','nkpacket_protocol_http:default_port/1',[]],['fun','nkpacket','nkpacket_protocol_http:http_init/1',[]],['fun','nkpacket','nkpacket_protocol_http:transports/1',[]],['fun','nkpacket','nkpacket_stun:binding_request/0','Generates a Binding request.'],['fun','nkpacket','nkpacket_stun:binding_response/1','Generates a Binding response.'],['fun','nkpacket','nkpacket_stun:decode/1','Decodes a STUN packet.'],['fun','nkpacket','nkpacket_transport:get_defport/1','Gets the default port for a protocol.'],['fun','nkpacket','nkpacket_transport:get_listener/1',[]],['fun','nkpacket','nkpacket_util:find_main_ip/0','Equivalent to find_main_ip(auto, ipv4).'],['fun','nkpacket','nkpacket_util:find_main_ip/1','Finds the best local IP.'],['fun','nkpacket','nkpacket_util:get_local_ips/0','Get all local network ips.'],['fun','nkpacket','nkpacket_util:log_level/1','Changes log level for console.']];