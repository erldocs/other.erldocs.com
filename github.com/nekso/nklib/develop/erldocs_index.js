var index = [['app','nklib','nklib','[application]'],['mod','nklib','nklib','Nekso Standard Library.'],['mod','nklib','nklib_app','NkLIB OTP Application Module.'],['mod','nklib','nklib_code','Nekso Erlang code parser and hot loader utilities.'],['mod','nklib','nklib_counters','Nekso Process Counters.'],['mod','nklib','nklib_gen_server','Common library utility funcions.'],['mod','nklib','nklib_headers','General Header processing functions.'],['mod','nklib','nklib_json','JSON Processing.'],['mod','nklib','nklib_log','Common library utility funcions.'],['mod','nklib','nklib_parse','Generic parsing functions.'],['mod','nklib','nklib_parse_tokens',[]],['mod','nklib','nklib_parse_uri',[]],['mod','nklib','nklib_proc','Nekso Process Registry.'],['mod','nklib','nklib_reglist','Generic registration data type.'],['mod','nklib','nklib_sort','Sorting of dependant elements.'],['mod','nklib','nklib_store','Nekso In-Memory Database.'],['mod','nklib','nklib_sup',[]],['mod','nklib','nklib_unparse','General message generation functions.'],['fun','nklib','nklib:get_env/1','Gets a environment value from the applications con'],['fun','nklib','nklib:get_env/1','Equivalent to get_env(App, Key, undefined).'],['fun','nklib','nklib_app:start/0','Starts NkLIB stand alone.'],['fun','nklib','nklib_code:call_expr/1','Generates a call expression (mod:fun(A1,B1,..))  '],['fun','nklib','nklib_code:callback_expr/1','Generates a call expression (fun(A0,B0...) -&gt; m'],['fun','nklib','nklib_code:case_expr/1','Generates a case expression  case mod:fun(A2,B2..'],['fun','nklib','nklib_code:compile/1','Compiles a syntaxTree into a module.'],['fun','nklib','nklib_code:expression/1','Parses an erlang expression intro a syntaxTree() '],['fun','nklib','nklib_code:fun_expr/1','Generates a function expression (fun(A1,B1,..) -&g'],['fun','nklib','nklib_code:get_funs/1','Gets the list of exported functions of a module.'],['fun','nklib','nklib_code:getter/1','Generates a getter function (fun() -&gt; Value.).'],['fun','nklib','nklib_code:write/1','Writes a generated tree as a standard erlang file.'],['fun','nklib','nklib_counters:async/1','Performs an asynchronous multiple counter update a'],['fun','nklib','nklib_counters:del/1','Removes all Name counter updates sent from Pid.'],['fun','nklib','nklib_counters:del/1','Equivalent to del(Name, self()).'],['fun','nklib','nklib_counters:incr/1','Creates or increments synchronously a Name counter'],['fun','nklib','nklib_counters:incr/1','Equivalent to incr(Name, Value, self()).'],['fun','nklib','nklib_counters:incr/1','Equivalent to incr(Name, 1, self()).'],['fun','nklib','nklib_counters:value/1','Gets a counters current value.'],['fun','nklib','nklib_gen_server:code_change/1',[]],['fun','nklib','nklib_headers:header/1','Generates a single header.'],['fun','nklib','nklib_headers:new/3','Generates a header list from a list of specificati'],['fun','nklib','nklib_headers:update/4','Performs a serie of modifications to a headers lis'],['fun','nklib','nklib_json:decode/1','Decodes a JSON as a map.'],['fun','nklib','nklib_json:encode/1','Encodes a term() to JSON.'],['fun','nklib','nklib_json:encode_pretty/1','Encodes a term() to JSON.'],['fun','nklib','nklib_log:console_loglevel/1','Changes log level for console.'],['fun','nklib','nklib_log:debug/0','Changes log level for console.'],['fun','nklib','nklib_log:error/0',[]],['fun','nklib','nklib_log:info/0',[]],['fun','nklib','nklib_log:notice/0',[]],['fun','nklib','nklib_log:warning/0',[]],['fun','nklib','nklib_parse:dates/1','Gets a list of calendar:datetime() from Term'],['fun','nklib','nklib_parse:fullpath/1','Processes full path with "." and "..".'],['fun','nklib','nklib_parse:integers/1','Gets a list of integer() from Term'],['fun','nklib','nklib_parse:name/1','Converts anything to a valid header name (lowercas'],['fun','nklib','nklib_parse:path/1','Adds starting "/" and removes ending "/".'],['fun','nklib','nklib_parse:ruris/1','Parses all URIs found in Term as Request-URIs.'],['fun','nklib','nklib_parse:tokens/1','Gets a list of tokens() from Term'],['fun','nklib','nklib_parse:unquote/1','Removes leading and trailing \" if present.'],['fun','nklib','nklib_parse:uris/1','Parses all URIs found in Term.'],['fun','nklib','nklib_parse_tokens:tokens/1','Parse a serie of tokens in a string.'],['fun','nklib','nklib_parse_uri:uris/1','Parse a series of uris in a string  Can parse &gt'],['fun','nklib','nklib_proc:del/1','Unregisters a previously registered Name, associat'],['fun','nklib','nklib_proc:del/1','Equivalent to del(Name, self()).'],['fun','nklib','nklib_proc:del_all/0','Equivalent to del_all(self()).'],['fun','nklib','nklib_proc:del_all/1','Unregisters all registrations from this process.'],['fun','nklib','nklib_proc:fold_names/1','Folds over all registered names in the same way as'],['fun','nklib','nklib_proc:fold_pids/2','Folds over all registered pids in the same way as '],['fun','nklib','nklib_proc:put/1','Registers Name (and Value) as associated with this'],['fun','nklib','nklib_proc:put/1','Equivalent to put(Name, Value, self()).'],['fun','nklib','nklib_proc:put/1','Equivalent to put(Name, undefined, self()).'],['fun','nklib','nklib_proc:reg/1','Similar to reg(Name, Value, Pid), but, in case oth'],['fun','nklib','nklib_proc:reg/1','Similar to put(Name, Value, Pid) but only allows f'],['fun','nklib','nklib_proc:reg/1','Equivalent to reg(Name, Value, self()).'],['fun','nklib','nklib_proc:reg/1','Equivalent to reg(Name, undefined, self()).'],['fun','nklib','nklib_proc:register_name/1','Process registration compatible with global:regist'],['fun','nklib','nklib_proc:send/1','Sends a message to a registered process compatible'],['fun','nklib','nklib_proc:size/0','Gets the number of registered processes.'],['fun','nklib','nklib_proc:start/2','Starts a new gen_server or gen_fsm, allowing regis'],['fun','nklib','nklib_proc:start_link/2','Starts a new gen_server or gen_fsm, allowing regis'],['fun','nklib','nklib_proc:try_call/1','Tries to call a function with a previous lock  If'],['fun','nklib','nklib_proc:unregister_name/1','Unregistration compatible with global:unregister_n'],['fun','nklib','nklib_proc:values/1','Gets all registered Values for Name, along with re'],['fun','nklib','nklib_proc:wait_del/1','Waits for Name to be unregistered from all pids be'],['fun','nklib','nklib_proc:wait_del/1','Equivalent to wait_del(Name, 5000)).'],['fun','nklib','nklib_proc:wait_put/1','Waits for Name to be registered from any process b'],['fun','nklib','nklib_proc:wait_put/1','Equivalent to wait_put(Name, 5000).'],['fun','nklib','nklib_proc:whereis_name/1','Finds a registered Name compatible with global:whe'],['fun','nklib','nklib_reglist:down/1',[]],['fun','nklib','nklib_reglist:find_pids/1','Finds all processes that have registered this RegT'],['fun','nklib','nklib_reglist:find_regs/1','Finds all RegTerms that this process have register'],['fun','nklib','nklib_reglist:get_all/1','Gets all registered processes.'],['fun','nklib','nklib_reglist:new/0','Initializes the data type.'],['fun','nklib','nklib_reglist:reg/1','Register a RegTerm for the process having Pid.'],['fun','nklib','nklib_reglist:unreg/1','Unregisters a RegTerm for the process having Pid.'],['fun','nklib','nklib_reglist:unreg_all/1','Unregisters all processes registered for this RegT'],['fun','nklib','nklib_sort:top_sort/1','Sortes a lists of elements with dependencies, so t'],['fun','nklib','nklib_store:del/1','Deletes a record from database.'],['fun','nklib','nklib_store:fold/1','Folds over all records in database like lists:fold'],['fun','nklib','nklib_store:get/1','Gets a record from database using Default if not f'],['fun','nklib','nklib_store:get/1','Equivalent to get(Key, not_found).'],['fun','nklib','nklib_store:put/1','Inserts a Value in database under Key.'],['fun','nklib','nklib_store:put/1','Equivalent to put(Key, Value, []).'],['fun','nklib','nklib_store:update/1','Updates a record in database, applying Fun to the '],['fun','nklib','nklib_store:update/1','Equivalent to update(Key, Fun, []).'],['fun','nklib','nklib_unparse:header/1',[]],['fun','nklib','nklib_unparse:token/1','Serializes a list of token()'],['fun','nklib','nklib_unparse:uri/1','Serializes an uri() or list of uri() into a binary'],['fun','nklib','nklib_unparse:uri2/1','Serializes an uri() or list of uri() into a binary']];