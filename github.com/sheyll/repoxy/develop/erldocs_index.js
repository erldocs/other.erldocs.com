var index = [['app','repoxy','repoxy','[application]'],['mod','repoxy','repoxy','   Provide main/1 function to enable rebar escri'],['mod','repoxy','repoxy_core','   The actual core functionality that repoxy prov'],['mod','repoxy','repoxy_facade','   Process incoming requests coming in via handle'],['mod','repoxy','repoxy_rebar_cfg','   Utilities for dealing with rebar configuration'],['mod','repoxy','repoxy_rebar_plugin','   Process repoxy commands from inside rebar via '],['mod','repoxy','repoxy_sexp','   Parse/Generate strings containing s-expression'],['mod','repoxy','repoxy_sup',[]],['mod','repoxy','repoxy_tcp','   A tcp server that listens on port 5678 for cli'],['fun','repoxy','repoxy:shutdown/0','  Exits repoxy, Can be called from anywhere to ex'],['fun','repoxy','repoxy_core:add_app_info/2','  Add an app info to the.'],['fun','repoxy','repoxy_core:backup_node/0','  Save code_path and loaded applications to be re'],['fun','repoxy','repoxy_core:compile_file/1','  Compile and loada single file and return the co'],['fun','repoxy','repoxy_core:empty_prj_cfg/0','  Create an empty project_cfg - use this only in '],['fun','repoxy','repoxy_core:get_app_infos/1','  Extract #app_info{}s from a project config.'],['fun','repoxy','repoxy_core:get_app_paths/1','  Return a list of app name - app base directory '],['fun','repoxy','repoxy_core:load_apps_into_node/1','  Load the applications added by add_app_info/2 i'],['fun','repoxy','repoxy_core:load_rebar/0','  Start rebar the first time, initialize the conf'],['fun','repoxy','repoxy_core:rebar/1','  Run rebar command.'],['fun','repoxy','repoxy_core:restore_node/1','  Unload the rebar application from the current n'],['fun','repoxy','repoxy_facade:app_compiled/1','  Add the information about an application to the'],['fun','repoxy','repoxy_facade:handle_request/1','  Handle incoming erlang terms that represent a c'],['fun','repoxy','repoxy_facade:start_link/0','  Start the facade fsm that handles request for a'],['fun','repoxy','repoxy_rebar_cfg:add_keep_going/1','  Add keep_going=true to a rebar config.'],['fun','repoxy','repoxy_rebar_cfg:add_log_level/1','  Add the default log level configuration initial'],['fun','repoxy','repoxy_rebar_cfg:add_operation_counter/1','  Add a counter for executed operations to a reba'],['fun','repoxy','repoxy_rebar_cfg:add_proj_dir/1','  Add the toplevel directory of the project.'],['fun','repoxy','repoxy_rebar_cfg:add_repoxy_plugin/1','  Add repoxy_rebar_plugin as plugin to a rebar co'],['fun','repoxy','repoxy_rebar_cfg:add_script_name/1','  Add the location of the rebar executable to a r'],['fun','repoxy','repoxy_rebar_cfg:add_vsn_cache/1','  Add an empty initialized version cache to a r'],['fun','repoxy','repoxy_rebar_cfg:load_project_config/1','  Add the toplevel directory of the project.'],['fun','repoxy','repoxy_rebar_cfg:new/0','  Create a new empty rebar config.'],['fun','repoxy','repoxy_rebar_cfg:replace_with_global_config/1','  Replace a rerbar config with configuration foun'],['fun','repoxy','repoxy_rebar_plugin:post_compile/2','  Report all applications that rebar discovers to'],['fun','repoxy','repoxy_sexp:from_erl/1','  Convert an erlang term to an s-expression strin'],['fun','repoxy','repoxy_sexp:to_erl/1','  Convert a string containing an s-expression as '],['fun','repoxy','repoxy_sup:start_link/0','  Starts the supervisor.'],['fun','repoxy','repoxy_tcp:start_link/0',' ------------------------------------------------']];