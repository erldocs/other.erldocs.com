var index = [['app','bstr','bstr','[application]'],['mod','bstr','bstr',[]],['fun','bstr','bstr:chars/1','  Returns a string composed of Character repeated'],['fun','bstr','bstr:chars/1','Returns a string composed of Character repeated Nu'],['fun','bstr','bstr:concat/1','Returns the concatenation of String1 and String2.'],['fun','bstr','bstr:concat/1','Returns the concatenation of Strings.'],['fun','bstr','bstr:copies/1','Returns String duplicated Number times.'],['fun','bstr','bstr:cspan/1','  Returns the length of the longest prefix of Str'],['fun','bstr','bstr:ends_with/1','  Returns true if Subject ends with Suffix.'],['fun','bstr','bstr:fields/1','  Extracts (possibly empty) fields in String sepa'],['fun','bstr','bstr:join/1','Joins Strings into a new string using Separator to'],['fun','bstr','bstr:left/1','  Adjusts Strings length to Number characters, p'],['fun','bstr','bstr:left/1','  Adjusts Strings length to Number, possibly pad'],['fun','bstr','bstr:replace/1','  Replaces every occurrence of Needle in Haystack'],['fun','bstr','bstr:right/1','  Adjusts Strings length to Number, possibly pad'],['fun','bstr','bstr:right/1','  Adjusts Strings length to Number, possibly pad'],['fun','bstr','bstr:span/1','Returns the length of the longest prefix of String'],['fun','bstr','bstr:starts_with/1','  Returns true if Subject starts with Prefix.'],['fun','bstr','bstr:strip/1','  Removes leading and/or trailing occurrences of '],['fun','bstr','bstr:strip/1','Removes leading/trailing blanks from String depend'],['fun','bstr','bstr:strip/1','Removes leading and trailing blanks from String.'],['fun','bstr','bstr:substr/1','  Extracts a substring of String, consisting of n'],['fun','bstr','bstr:substr/1','Extracts the substring of String that begins at St'],['fun','bstr','bstr:tokens/1','  Extracts tokens in String separated by any one ']];