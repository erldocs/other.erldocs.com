var index = [['app','epvm','epvm','[application]'],['mod','epvm','epvm_bridge',[]],['mod','epvm','epvm_interp',[]],['mod','epvm','epvm_pyc',[]],['mod','epvm','epvm_val',[]],['mod','epvm','reloader','Erlang module for automatically reloading modified'],['fun','epvm','epvm_bridge:start_link/0',[]],['fun','epvm','epvm_bridge:start_link/1',[]],['fun','epvm','epvm_interp:call/2',[]],['fun','epvm','epvm_interp:new/0',[]],['fun','epvm','epvm_pyc:parse/1',[]],['fun','epvm','epvm_pyc:parse_file/1',[]],['fun','epvm','epvm_pyc:unmarshal/1',[]],['fun','epvm','epvm_val:from_py/1',[]],['fun','epvm','epvm_val:to_py/1',[]],['fun','epvm','reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','epvm','reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','epvm','reloader:handle_call/3','gen_server callback.'],['fun','epvm','reloader:handle_cast/2','gen_server callback.'],['fun','epvm','reloader:handle_info/2','gen_server callback.'],['fun','epvm','reloader:init/1','gen_server init, opens the server in an initial st'],['fun','epvm','reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','epvm','reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','epvm','reloader:start/0','Start the reloader.'],['fun','epvm','reloader:start_link/0','Start the reloader.'],['fun','epvm','reloader:stop/0','Stop the reloader.'],['fun','epvm','reloader:terminate/2','gen_server termination callback.']];