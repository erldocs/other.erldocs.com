var index = [['app','pacman_server','pacman_server','[application]'],['mod','pacman_server','game_engine',[]],['mod','pacman_server','game_server','   Pacman game server.'],['mod','pacman_server','game_util',[]],['mod','pacman_server','game_worker',[]],['mod','pacman_server','ghost','Ghost server.'],['mod','pacman_server','pacman','.'],['mod','pacman_server','pacman_app','.'],['mod','pacman_server','pacman_sup','.'],['mod','pacman_server','pacman_web','.'],['mod','pacman_server','router','   Router for connecting a running game with one '],['fun','pacman_server','game_engine:collision/2',' Detects collisions between Pacman and object that'],['fun','pacman_server','game_engine:eat/2',' Eats pacdots or fruit in given position,        '],['fun','pacman_server','game_engine:handle/3',' handle(Action, Args, State) is called when a clie'],['fun','pacman_server','game_engine:load_maps/0',[]],['fun','pacman_server','game_engine:move/2',' Move, called when the client wishes to move Pacma'],['fun','pacman_server','game_engine:move_ghosts/1',' Moves ghosts according to their AI logic.'],['fun','pacman_server','game_engine:start/2',' Starts a new game, returns a unique token for ide'],['fun','pacman_server','game_engine:state/2',' Returns the game state, such as current score, th'],['fun','pacman_server','game_server:code_change/3',[]],['fun','pacman_server','game_server:handle_call/3',[]],['fun','pacman_server','game_server:handle_cast/2',[]],['fun','pacman_server','game_server:handle_info/2',[]],['fun','pacman_server','game_server:init/1',[]],['fun','pacman_server','game_server:new_connection/2',[]],['fun','pacman_server','game_server:sock_opts/0',[]],['fun','pacman_server','game_server:start_link/0',[]],['fun','pacman_server','game_server:terminate/2',[]],['fun','pacman_server','game_util:allowed_position/2',' Returns true if pacman is allowed to occupy the g'],['fun','pacman_server','game_util:append_object/3',[]],['fun','pacman_server','game_util:find_objects/2',' Returns a list of all positions where Type can be'],['fun','pacman_server','game_util:get_objects/2',' Returns the object at given position in the map.'],['fun','pacman_server','game_util:get_path/3',[]],['fun','pacman_server','game_util:has_object/3',' Returns true if Type can be found in the given po'],['fun','pacman_server','game_util:make_map/1',' Returns {Level, {Array, Size}}, based on {Level, '],['fun','pacman_server','game_util:map2digraph/1',[]],['fun','pacman_server','game_util:map2display/1',' Returns the map formatted for display to the user'],['fun','pacman_server','game_util:map2txt/1',[]],['fun','pacman_server','game_util:neighbours/2',' Returns a list of coordinates to the neighbours o'],['fun','pacman_server','game_util:pos2index/2',[]],['fun','pacman_server','game_util:remove_object/3',[]],['fun','pacman_server','game_util:set_objects/3',' Sets the given position in the map to Objects,  '],['fun','pacman_server','game_util:set_pacman/2',' Inserts PacMan at the given position in the map.'],['fun','pacman_server','game_util:token/1',[]],['fun','pacman_server','game_util:until_first_corner/1',' Returns the steps required to get to the first co'],['fun','pacman_server','game_worker:code_change/3',[]],['fun','pacman_server','game_worker:handle_call/3',[]],['fun','pacman_server','game_worker:handle_cast/2',[]],['fun','pacman_server','game_worker:handle_info/2',' Receive data from client, call the corresponding '],['fun','pacman_server','game_worker:init/1',' Initialize new game state record.'],['fun','pacman_server','game_worker:start/1',' Starts a new game, returns a unique token for ide'],['fun','pacman_server','game_worker:terminate/2',[]],['fun','pacman_server','ghost:change_mode/1',[]],['fun','pacman_server','ghost:chase/1',[]],['fun','pacman_server','ghost:code_change/3',[]],['fun','pacman_server','ghost:handle_call/3',[]],['fun','pacman_server','ghost:handle_cast/2',[]],['fun','pacman_server','ghost:handle_info/2',[]],['fun','pacman_server','ghost:init/1',[]],['fun','pacman_server','ghost:move/2',' Returns the next move for given ghost process.'],['fun','pacman_server','ghost:scatter/1',[]],['fun','pacman_server','ghost:start_link/2',[]],['fun','pacman_server','ghost:terminate/2',[]],['fun','pacman_server','pacman:start/0',[]],['fun','pacman_server','pacman:stop/0',[]],['fun','pacman_server','pacman_app:start/2',[]],['fun','pacman_server','pacman_app:stop/1',[]],['fun','pacman_server','pacman_sup:init/1',[]],['fun','pacman_server','pacman_sup:start_link/0',[]],['fun','pacman_server','pacman_web:loop/1',[]],['fun','pacman_server','pacman_web:start/1',[]],['fun','pacman_server','pacman_web:stop/0',[]],['fun','pacman_server','router:clear/1',' Removes all pids connected to Token.'],['fun','pacman_server','router:code_change/3',[]],['fun','pacman_server','router:handle_call/3',[]],['fun','pacman_server','router:handle_cast/2',[]],['fun','pacman_server','router:handle_info/2',[]],['fun','pacman_server','router:init/1',[]],['fun','pacman_server','router:register/2',[]],['fun','pacman_server','router:start_link/0',[]],['fun','pacman_server','router:state_update/2',[]],['fun','pacman_server','router:terminate/2',[]],['fun','pacman_server','router:unregister/2',[]]];