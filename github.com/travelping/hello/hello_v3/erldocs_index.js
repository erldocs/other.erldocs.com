var index = [['app','hello','hello','[application]'],['mod','hello','hello','This module is the main interface to the hello app'],['mod','hello','hello_client','This module contains an RPC client.'],['mod','hello','hello_decoder',[]],['mod','hello','hello_handler','RPC handler behaviour.'],['mod','hello','hello_json',[]],['mod','hello','hello_lib',[]],['mod','hello','hello_listener',[]],['mod','hello','hello_msgpack',[]],['mod','hello','hello_router',[]],['mod','hello','hello_service',[]],['fun','hello','hello:bind/2',[]],['fun','hello','hello:call_service/2',[]],['fun','hello','hello:call_service/3',[]],['fun','hello','hello:start/0','Starts the application and all dependencies.'],['fun','hello','hello:start/2','Callback for application behaviour.'],['fun','hello','hello:start_listener/1',[]],['fun','hello','hello:start_listener/2',[]],['fun','hello','hello:start_listener/5',[]],['fun','hello','hello:start_service/2',[]],['fun','hello','hello:stop/1','Callback for application behaviour.'],['fun','hello','hello:stop_listener/1',[]],['fun','hello','hello:stop_service/1',[]],['fun','hello','hello:unbind/2',[]],['fun','hello','hello_client:behaviour_info/1',[]],['fun','hello','hello_client:call/2',[]],['fun','hello','hello_client:call/3',[]],['fun','hello','hello_client:handle_internal/2',[]],['fun','hello','hello_client:start/4',[]],['fun','hello','hello_client:start/5',[]],['fun','hello','hello_client:start_link/2',[]],['fun','hello','hello_client:start_link/3',[]],['fun','hello','hello_client:start_supervised/4',[]],['fun','hello','hello_client:start_supervised/5',[]],['fun','hello','hello_client:stop/1',[]],['fun','hello','hello_client:stop_supervised/1',[]],['fun','hello','hello_decoder:decode/2',[]],['fun','hello','hello_decoder:encode/2',[]],['fun','hello','hello_decoder:mime_type/1',[]],['fun','hello','hello_handler:behaviour_info/1',[]],['fun','hello','hello_handler:get_handler/4',[]],['fun','hello','hello_handler:notify/1','Send an RPC notification with positional or named '],['fun','hello','hello_handler:process/2',[]],['fun','hello','hello_handler:reply/2','Send an asynchronous reply to an RPC request.'],['fun','hello','hello_handler:set_idle_timeout/1','Set the idle timeout of a handler.'],['fun','hello','hello_handler:set_idle_timeout/1','Equivalent to set_idle_timeout(self(), Timeout).'],['fun','hello','hello_json:decode/1',[]],['fun','hello','hello_json:encode/1',[]],['fun','hello','hello_json:mime_type/0',[]],['fun','hello','hello_lib:get/2',[]],['fun','hello','hello_lib:get/3',[]],['fun','hello','hello_lib:get_in/2',[]],['fun','hello','hello_lib:to_binary/1',[]],['fun','hello','hello_lib:wrap/1',[]],['fun','hello','hello_listener:all/0',[]],['fun','hello','hello_listener:async_incoming_message/3',[]],['fun','hello','hello_listener:await_answer/0',[]],['fun','hello','hello_listener:behaviour_info/1',[]],['fun','hello','hello_listener:handle_incoming_message/3',[]],['fun','hello','hello_listener:lookup/1',[]],['fun','hello','hello_listener:port/1',[]],['fun','hello','hello_listener:start/5',[]],['fun','hello','hello_listener:stop/1',[]],['fun','hello','hello_msgpack:decode/1',[]],['fun','hello','hello_msgpack:encode/1',[]],['fun','hello','hello_msgpack:mime_type/0',[]],['fun','hello','hello_router:route/3',[]],['fun','hello','hello_service:all/0',[]],['fun','hello','hello_service:await/1',[]],['fun','hello','hello_service:call/3',[]],['fun','hello','hello_service:outgoing_message/2',[]],['fun','hello','hello_service:register_link/2',[]],['fun','hello','hello_service:unregister_link/1',[]]];