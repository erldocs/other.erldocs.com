var index = [['app','recon','recon','[application]'],['mod','recon','recon','Recon, as a module, provides access to the high-le'],['mod','recon','recon_alloc','Functions to deal with   Erlangs memory   alloc'],['mod','recon','recon_lib','Regroups useful functionality used by recon when d'],['mod','recon','recon_trace','   recon_trace is a module that handles tracing i'],['fun','recon','recon:bin_leak/1','Refc binaries can be leaking when barely-busy proc'],['fun','recon','recon:files/0','returns a list of all file handles open on the nod'],['fun','recon','recon:get_state/1','Fetch the internal state of an OTP process.'],['fun','recon','recon:get_state/1','Shorthand call to recon:get_state(PidTerm, 5000)'],['fun','recon','recon:inet_count/2','Fetches a given attribute from all inet ports (TCP'],['fun','recon','recon:inet_window/3','Fetches a given attribute from all inet ports (TCP'],['fun','recon','recon:info/1','Allows to be similar to erlang:process_info/2, but'],['fun','recon','recon:info/1','Allows to be similar to erlang:process_info/1, but'],['fun','recon','recon:info/3','Equivalent to info(&lt;A.B.C&gt;) where A, B, and '],['fun','recon','recon:info/4','Equivalent to info(&lt;A.B.C&gt;, Key) where A, B,'],['fun','recon','recon:named_rpc/1','Runs an arbitrary fun (of arity 0) over one or mor'],['fun','recon','recon:named_rpc/1','Shorthand for named_rpc(Nodes, Fun, infinity).'],['fun','recon','recon:named_rpc/1','Shorthand for named_rpc([node()|nodes()], Fun).'],['fun','recon','recon:node_stats/4','Gathers statistics N time, waiting Interval millis'],['fun','recon','recon:node_stats_list/2','Shorthand for node_stats(N, Interval, fun(X,Acc) -'],['fun','recon','recon:node_stats_print/2','Shorthand for node_stats(N, Interval, fun(X,_) -&g'],['fun','recon','recon:port_info/1','Allows to be similar to erlang:port_info/2, but al'],['fun','recon','recon:port_info/1','Allows to be similar to erlang:port_info/1, but al'],['fun','recon','recon:port_types/0','Shows a list of all different ports on the node wi'],['fun','recon','recon:proc_count/2','Fetches a given attribute from all processes and r'],['fun','recon','recon:proc_window/3','Fetches a given attribute from all processes and r'],['fun','recon','recon:remote_load/1','Equivalent to remote_load(nodes(), Mod).'],['fun','recon','recon:remote_load/2','Loads one or more modules remotely, in a diskless '],['fun','recon','recon:rpc/1','Runs an arbitrary fun (of arity 0) over one or mor'],['fun','recon','recon:rpc/1','Shorthand for rpc(Nodes, Fun, infinity).'],['fun','recon','recon:rpc/1','Shorthand for rpc([node()|nodes()], Fun).'],['fun','recon','recon:sctp/0','returns a list of all SCTP ports (the data type) o'],['fun','recon','recon:source/1','Obtain the source code of a module compiled with d'],['fun','recon','recon:tcp/0','returns a list of all TCP ports (the data type) op'],['fun','recon','recon:udp/0','returns a list of all UDP ports (the data type) op'],['fun','recon','recon_alloc:allocators/0','returns a dump of all allocator settings and value'],['fun','recon','recon_alloc:average_block_sizes/1','Checks all allocators in allocator() and returns t'],['fun','recon','recon_alloc:cache_hit_rates/0','looks at the mseg_alloc allocator (allocator used '],['fun','recon','recon_alloc:fragmentation/1','Compares the block sizes to the carrier sizes, bot'],['fun','recon','recon_alloc:memory/1','Equivalent to memory(Key, current).'],['fun','recon','recon_alloc:memory/2','reports one of multiple possible memory values for'],['fun','recon','recon_alloc:sbcs_to_mbcs/1','compares the amount of single block carriers (sbcs'],['fun','recon','recon_alloc:set_unit/1','set the current unit to be used by recon_alloc.'],['fun','recon','recon_alloc:snapshot/0','Take a new snapshot of the current memory allocato'],['fun','recon','recon_alloc:snapshot_clear/0','clear the current snapshot in the process dictiona'],['fun','recon','recon_alloc:snapshot_get/0','returns the current snapshot stored by snapshot/0.'],['fun','recon','recon_alloc:snapshot_load/1','load a snapshot from a given file.'],['fun','recon','recon_alloc:snapshot_print/0','print a dump of the current snapshot stored by sna'],['fun','recon','recon_alloc:snapshot_save/1','save the current snapshot taken by snapshot/0 to a'],['fun','recon','recon_lib:count/1','Takes a list of terms, and counts how often each o'],['fun','recon','recon_lib:inet_attrs/1','Returns the attributes (recon:inet_attrs()) of  a'],['fun','recon','recon_lib:inet_attrs/2','Returns the attributes required for a given inet p'],['fun','recon','recon_lib:port_list/1','Returns a list of all the open ports in the VM, bu'],['fun','recon','recon_lib:port_list/1','Returns a list of all the open ports in the VM, co'],['fun','recon','recon_lib:proc_attrs/1','Returns the attributes of a given process.'],['fun','recon','recon_lib:proc_attrs/1','Returns the attributes (recon:proc_attrs()) of  a'],['fun','recon','recon_lib:sample/1','Runs a fun once, waits Ms, runs the fun again,  a'],['fun','recon','recon_lib:sliding_window/1','Compare two samples and return a list based on som'],['fun','recon','recon_lib:term_to_pid/1','Transforms a given term to a pid.'],['fun','recon','recon_lib:term_to_port/1','Transforms a given term to a port.'],['fun','recon','recon_lib:time_fold/6','Calls a given function every Interval milliseconds'],['fun','recon','recon_lib:time_map/5','Calls a given function every Interval milliseconds'],['fun','recon','recon_lib:triple_to_pid/3','Equivalent of pid(X,Y,Z) in the Erlang shell.'],['fun','recon','recon_trace:calls/1','Allows to set trace patterns and pid specification'],['fun','recon','recon_trace:calls/1','Equivalent to calls({Mod, Fun, Args}, Max, []).'],['fun','recon','recon_trace:clear/0','Stops all tracing at once.']];