var index = [['app','elib','elib','[application]'],['mod','elib','baktools','mnesia backup utility functions.'],['mod','elib','delegation_server',[]],['mod','elib','edict',[]],['mod','elib','efile',[]],['mod','elib','elib',[]],['mod','elib','elib_sup',[]],['mod','elib','elists','Extra lists functions.'],['mod','elib','emath','Mathematical functions.'],['mod','elib','emod','Module helper functions.'],['mod','elib','emp2','Erlang Macro Processor.'],['mod','elib','erlport_server',[]],['mod','elib','estring','Extra string functions that arent available in st'],['mod','elib','esys',[]],['mod','elib','etable','Mnesia utility functions.'],['mod','elib','etest','Common test utility functions.'],['mod','elib','gen_cache','Generic caching server.'],['mod','elib','ots','Osmos Term Storage aka Ordered Term Storage.'],['mod','elib','plists','plists is a drop-in replacement for module lists,'],['mod','elib','ptable','Like etable, but uses plists for table chunks.'],['mod','elib','reltools','Release packaging and handling functions.'],['mod','elib','timeout_server',[]],['mod','elib','uri_server','Uri Server generates uris suitable for thing ids.'],['fun','elib','baktools:backup/0',[]],['fun','elib','baktools:backup/1',[]],['fun','elib','baktools:backup/3','Activate, backup, then deactivate a checkpoint nam'],['fun','elib','delegation_server:code_change/4',[]],['fun','elib','delegation_server:handle_event/3',[]],['fun','elib','delegation_server:handle_info/3',[]],['fun','elib','delegation_server:handle_sync_event/4',[]],['fun','elib','delegation_server:init/1',[]],['fun','elib','delegation_server:processing/2',[]],['fun','elib','delegation_server:processing/3',[]],['fun','elib','delegation_server:queue/2','Queue a process for execution on one of the delega'],['fun','elib','delegation_server:queue_len/1',[]],['fun','elib','delegation_server:queue_singleton/2','Queue a singleton process for execution.'],['fun','elib','delegation_server:set_delegates/2','Set new delegate specs.'],['fun','elib','delegation_server:singleton/2',[]],['fun','elib','delegation_server:singleton/3',[]],['fun','elib','delegation_server:start_link/2',[]],['fun','elib','delegation_server:terminate/3',[]],['fun','elib','edict:find_default/3','Return Default value if Key is not found in Dict.'],['fun','elib','edict:from_proplist/1','Creates a dict of {Key, [Val]} from a proplist tha'],['fun','elib','efile:recursive_delete/1',[]],['fun','elib','elib:start/2',[]],['fun','elib','elib:stop/1',[]],['fun','elib','elib:validate/2',[]],['fun','elib','elib:validate/3',[]],['fun','elib','elib:validate_match/2',[]],['fun','elib','elib_sup:init/1',[]],['fun','elib','elib_sup:start_link/0',[]],['fun','elib','elists:first/2','Return the first element where F returns true, or '],['fun','elib','elists:mapfilter/1','Combines map and filter into 1 operation.'],['fun','elib','elists:mapfilter_chain/2',[]],['fun','elib','elists:prepend/2','Equivalent to [Elem | List].'],['fun','elib','elists:propmerge/3','Merge 2 proplists.'],['fun','elib','elists:sort_chain_generator/1',[]],['fun','elib','elists:splitmany/1','Split List into many lists, each with N elements.'],['fun','elib','elists:sublist/3',[]],['fun','elib','elists:union/2',[]],['fun','elib','emath:elfhash/1','Calculates ELFHash of character list.'],['fun','elib','emath:mean/1','Calculates mean of list of numbers.'],['fun','elib','emath:moving_avg/1','Calculates moving average given a Ratio.'],['fun','elib','emath:random/1','Drop in replacement for random:uniform.'],['fun','elib','emath:scale/1','Ensures N is between Min and Max.'],['fun','elib','emath:scale/1','Ensures N is between 0 and 1.'],['fun','elib','emod:compile_templates/1','Compile applications template modules.'],['fun','elib','emod:proc_chain/1',[]],['fun','elib','emod:reload/1','Forced reload Module or Modules.'],['fun','elib','emp2:parse_transform/2',[]],['fun','elib','erlport_server:code_change/3',[]],['fun','elib','erlport_server:handle_call/3',[]],['fun','elib','erlport_server:handle_cast/2',[]],['fun','elib','erlport_server:handle_info/2',[]],['fun','elib','erlport_server:init/1',[]],['fun','elib','erlport_server:request/2',[]],['fun','elib','erlport_server:request/3',[]],['fun','elib','erlport_server:start_link/3',[]],['fun','elib','erlport_server:start_link_opts/3',[]],['fun','elib','erlport_server:terminate/2',[]],['fun','elib','estring:encode_utf8/1','Encode a string as utf-8.'],['fun','elib','estring:format/2',[]],['fun','elib','estring:is_upper/1','Tests if String is upper case.'],['fun','elib','estring:is_utf8/1','Test if string is utf-8 encoded.'],['fun','elib','estring:join/2',[]],['fun','elib','estring:lcs_len/1','Return length of the longest common subsequence (l'],['fun','elib','estring:lower/1',[]],['fun','elib','estring:partial_match/1','Tests if two strings are similar using prefix and '],['fun','elib','estring:querydecode/1','Decode a url query string.'],['fun','elib','estring:random/1','Returns a random alphanumeric string of length Siz'],['fun','elib','estring:read_file/1','Returns the contents of file as a list.'],['fun','elib','estring:replace/1','Replace first instance of Key in String with Val.'],['fun','elib','estring:replace_all/1','Replaces all instances of Key in String with Val.'],['fun','elib','estring:similar/1','Test if two strings are similar using the ratio of'],['fun','elib','estring:split/1','Splits String at first instance of Sep.'],['fun','elib','estring:splitc/1','Faster, character based version of split/2.'],['fun','elib','estring:strip/1','Strips newline and whitespace characters from Stri'],['fun','elib','estring:strip_all/1','Strip all characters from both ends of string.'],['fun','elib','estring:striptokens/1','Tokenize the string with separators, then strip ea'],['fun','elib','estring:striptokens/1','Tokenize the string, then strip each token.'],['fun','elib','estring:title_word/1','Title case word by converting first character to u'],['fun','elib','estring:to_title/1','Title cases String, calling title_word/1 on each w'],['fun','elib','estring:tokenize/1','Return a list containing tokens from each string.'],['fun','elib','estring:urldecode/1','Decode the query part of a url.'],['fun','elib','estring:utf8_to_unicode/1','Convert a utf-8 string to unicode.'],['fun','elib','esys:handle_debug/3',[]],['fun','elib','esys:trace_debug/2',[]],['fun','elib','esys:trace_opts/0',[]],['fun','elib','esys:write_debug/3',[]],['fun','elib','etable:activate_frag/1',[]],['fun','elib','etable:add_copies/1','Add table copies of Type to Node.'],['fun','elib','etable:add_copies/1','Equivalent to add_copies(Tabs, Node, Type, 20000).'],['fun','elib','etable:add_frag/1',[]],['fun','elib','etable:add_frag_node/2',[]],['fun','elib','etable:add_frags/2',[]],['fun','elib','etable:clear_frags/1',[]],['fun','elib','etable:collect/1','Collect all results from Table, NObjects at a time'],['fun','elib','etable:collect/1','Equivalent to collect(Table, Spec, 100, read).'],['fun','elib','etable:del_frag/1',[]],['fun','elib','etable:del_frag_node/2',[]],['fun','elib','etable:del_frags/2',[]],['fun','elib','etable:delete_frags/1',[]],['fun','elib','etable:dets_foreach/3',[]],['fun','elib','etable:dets_foreach/4',[]],['fun','elib','etable:dets_update_counter/2',[]],['fun','elib','etable:dets_update_counter/3',[]],['fun','elib','etable:ets_foreach/2',[]],['fun','elib','etable:ets_foreach/3',[]],['fun','elib','etable:ets_foreach/4',[]],['fun','elib','etable:ets_update_counter/2',[]],['fun','elib','etable:ets_update_counter/3',[]],['fun','elib','etable:foldl/3',[]],['fun','elib','etable:foldl/4',[]],['fun','elib','etable:foldl/6',[]],['fun','elib','etable:foldl/7',[]],['fun','elib','etable:force_delete_table/1','Use this function if mnesia:table_info(Tab, cstruc'],['fun','elib','etable:force_load/1','Force load any Tables that do not load within Time'],['fun','elib','etable:force_load/1','Equivalent to force_load(Tables, 20000).'],['fun','elib','etable:foreach/1','Calls F on each result from Table, NObjects at a t'],['fun','elib','etable:foreach/1','If Lock is write, then Context = sync_transaction.'],['fun','elib','etable:foreach/1','Equivalent to foreach(F, Table, Spec, read).'],['fun','elib','etable:foreach/1','Iterate over each record in table, calling F on ea'],['fun','elib','etable:frag_activity/3',[]],['fun','elib','etable:frag_info/2',[]],['fun','elib','etable:frag_read/2',[]],['fun','elib','etable:frag_write/2',[]],['fun','elib','etable:fragment/2',[]],['fun','elib','etable:opts/2',[]],['fun','elib','etable:unfragment/1',[]],['fun','elib','etest:init_env/1','Set application env based on optional common test '],['fun','elib','etest:load_apps/1','Load applications with optional common test config'],['fun','elib','etest:start_apps/1',[]],['fun','elib','gen_cache:cache/1','Store Value in cache server, referenced by Term.'],['fun','elib','gen_cache:cache/1','Equivalent to cache(Name, Term, Value, 300000).'],['fun','elib','gen_cache:forget/1','Remove the Value referenced by Term from the cache'],['fun','elib','gen_cache:recall/1','Lookup the Value referenced by Term from the cache'],['fun','elib','gen_cache:recall_apply/1','Looks up result in cache server.'],['fun','elib','gen_cache:recall_apply/5',[]],['fun','elib','gen_cache:start_link/1','Equivalent to gen_server:start_link({local, Name},'],['fun','elib','ots:clear/1',[]],['fun','elib','ots:close/1',[]],['fun','elib','ots:delete/2',[]],['fun','elib','ots:foldl/3',[]],['fun','elib','ots:foldl/4',[]],['fun','elib','ots:foldl/5',[]],['fun','elib','ots:foldl/6',[]],['fun','elib','ots:foldl/7',[]],['fun','elib','ots:foreach/2',[]],['fun','elib','ots:foreach/3',[]],['fun','elib','ots:foreach/4',[]],['fun','elib','ots:foreach/5',[]],['fun','elib','ots:foreach/6',[]],['fun','elib','ots:open/3',[]],['fun','elib','ots:open/4',[]],['fun','elib','ots:read/2',[]],['fun','elib','ots:read/3',[]],['fun','elib','ots:select_range/4',[]],['fun','elib','ots:select_range/5',[]],['fun','elib','ots:write/3',[]],['fun','elib','plists:all/2','Same semantics as in module lists.'],['fun','elib','plists:all/3','Same semantics as in module lists.'],['fun','elib','plists:any/2','Same semantics as in module lists.'],['fun','elib','plists:any/3','Same semantics as in module lists.'],['fun','elib','plists:filter/2','Same semantics as in module lists.'],['fun','elib','plists:filter/3','Same semantics as in module lists.'],['fun','elib','plists:fold/3','Like below, but assumes 1 as the Malt.'],['fun','elib','plists:fold/4','Like below, but uses the Fun as the Fuse by defaul'],['fun','elib','plists:fold/5','fold is more complex when made parallel.'],['fun','elib','plists:foreach/2','Same semantics as in module lists.'],['fun','elib','plists:foreach/3','Same semantics as in module lists.'],['fun','elib','plists:keysort/2','author: Jacob Perkins.'],['fun','elib','plists:keysort/3','author: Jacob Perkins.'],['fun','elib','plists:map/2','Same semantics as in module lists.'],['fun','elib','plists:map/3','Same semantics as in module lists.'],['fun','elib','plists:mapfilter/2','author: Jacob Perkins.'],['fun','elib','plists:mapfilter/3','author: Jacob Perkins.'],['fun','elib','plists:mapfilter_list/2','Maps list, then filters any items that are false.'],['fun','elib','plists:mapreduce/2','Like below, assumes default MapMalt of 1.'],['fun','elib','plists:mapreduce/3','This is a very basic mapreduce.'],['fun','elib','plists:partition/2','Same semantics as in module lists.'],['fun','elib','plists:partition/3','Same semantics as in module lists.'],['fun','elib','plists:runmany/3','Like below, but assumes a Malt of 1, meaning each'],['fun','elib','plists:runmany/4','All of the other functions are implemented with ru'],['fun','elib','plists:sort/1','Same semantics as in module lists.'],['fun','elib','plists:sort/2','Same semantics as in module lists.'],['fun','elib','plists:sort/3','This version lets you specify your own malt for so'],['fun','elib','plists:umerge/1','author: Jacob Perkins.'],['fun','elib','plists:umerge/2','author: Jacob Perkins.'],['fun','elib','plists:usort/1','Same semantics as in module lists.'],['fun','elib','plists:usort/2','Same semantics as in module lists.'],['fun','elib','plists:usort/3','This version lets you specify your own malt for us'],['fun','elib','ptable:ets_foreach/4',[]],['fun','elib','ptable:ets_foreach/5',[]],['fun','elib','ptable:fold/5',[]],['fun','elib','ptable:fold/6',[]],['fun','elib','ptable:fold/7',[]],['fun','elib','ptable:fold/8',[]],['fun','elib','ptable:fold/9',[]],['fun','elib','ptable:foreach/4',[]],['fun','elib','ptable:foreach/5',[]],['fun','elib','ptable:foreach/6',[]],['fun','elib','ptable:foreach/7',[]],['fun','elib','ptable:nobjects/1',[]],['fun','elib','reltools:create_RELEASES/1','Create initial RELEASES file for release in Root d'],['fun','elib','reltools:create_RELEASES/1','Create initial RELEASES file for named release.'],['fun','elib','reltools:current_release/0','Get the current release.'],['fun','elib','reltools:install_release/1','Permanently install named release.'],['fun','elib','reltools:make_release/1','Make release with default root directory.'],['fun','elib','reltools:make_release/2','Uses systools to make boot scripts and release pac'],['fun','elib','reltools:make_upgrade/1','Make relup then make the release.'],['fun','elib','reltools:make_upgrade/1','Make upgrade release package from the current rele'],['fun','elib','reltools:make_upgrade/2','Equivalent to make_upgrade(Name, From, code:root_d'],['fun','elib','reltools:permanent_release/0','Get the first permanent release.'],['fun','elib','reltools:set_release_vsn/1','Set permanent release version.'],['fun','elib','timeout_server:call_later/4',[]],['fun','elib','timeout_server:call_now/1',[]],['fun','elib','timeout_server:code_change/3',[]],['fun','elib','timeout_server:handle_call/3',[]],['fun','elib','timeout_server:handle_cast/2',[]],['fun','elib','timeout_server:handle_info/2',[]],['fun','elib','timeout_server:init/1',[]],['fun','elib','timeout_server:start_link/0',[]],['fun','elib','timeout_server:terminate/2',[]],['fun','elib','uri_server:start_link/1','Equivalent to gen_server:start_link({local, Name},'],['fun','elib','uri_server:start_link/1','Equivalent to start_link(Name, Table, Prefix ++ ":'],['fun','elib','uri_server:start_link/1','Equivalent to start_link(Name, Table, [], 30).'],['fun','elib','uri_server:uri/1','Generate a new uri.']];