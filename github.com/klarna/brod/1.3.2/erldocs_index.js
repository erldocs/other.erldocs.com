var index = [['app','brod','brod','[application]'],['mod','brod','brod',[]],['mod','brod','brod_consumer',[]],['mod','brod','brod_kafka','A kafka protocol implementation.'],['mod','brod','brod_kafka_errors','A kafka error code handling.'],['mod','brod','brod_producer',[]],['mod','brod','brod_utils',[]],['fun','brod','brod:console_consumer/4',[]],['fun','brod','brod:consume/1','Start consuming data from a partition.'],['fun','brod','brod:consume/1','A simple alternative for consume/7 with predefined'],['fun','brod','brod:fetch/1','Fetch a single message set from a specified topic/'],['fun','brod','brod:fetch/1','Equivalent to fetch(Hosts, Topic, Partition, Offse'],['fun','brod','brod:file_consumer/5',[]],['fun','brod','brod:get_metadata/1','Fetch broker metadata.'],['fun','brod','brod:get_metadata/1','Fetch broker metadata.'],['fun','brod','brod:get_offsets/1','Get valid offsets for a specified topic/partition.'],['fun','brod','brod:get_offsets/1','Equivalent to get_offsets(Hosts, Topic, Partition,'],['fun','brod','brod:produce/1','Send one or more {key, value} messages to a broker'],['fun','brod','brod:produce/1','Equivalent to produce(Pid, Topic, Partition, [{Key'],['fun','brod','brod:produce/1','Equivalent to produce(Pid, Topic, 0, &lt;&lt;&gt;&'],['fun','brod','brod:produce_sync/1','Send one or more {key, value} messages to a broker'],['fun','brod','brod:produce_sync/1','Equivalent to produce_sync(Pid, Topic, Partition, '],['fun','brod','brod:produce_sync/1','Equivalent to produce_sync(Pid, Topic, 0, &lt;&lt;'],['fun','brod','brod:simple_consumer/5',[]],['fun','brod','brod:start_consumer/1','Equivalent to start_link_consumer(Hosts, Topic, Pa'],['fun','brod','brod:start_link_consumer/1','Start consumer process.'],['fun','brod','brod:start_link_producer/1','Start a process to publish messages to kafka.'],['fun','brod','brod:start_link_producer/1','Equivalent to start_link_producer(Hosts, 1, 1000).'],['fun','brod','brod:start_producer/1','Equivalent to start_link_producer(Hosts, RequiredA'],['fun','brod','brod:start_producer/1','Equivalent to start_link_producer(Hosts).'],['fun','brod','brod:stop_consumer/1','Stop consumer process.'],['fun','brod','brod:stop_producer/1','Stop producer process.'],['fun','brod','brod_consumer:code_change/3',[]],['fun','brod','brod_consumer:consume/1',[]],['fun','brod','brod_consumer:debug/1','Enable debugging on consumer and its connection to'],['fun','brod','brod_consumer:format_status/2',[]],['fun','brod','brod_consumer:get_socket/1',[]],['fun','brod','brod_consumer:handle_call/3',[]],['fun','brod','brod_consumer:handle_cast/2',[]],['fun','brod','brod_consumer:handle_info/2',[]],['fun','brod','brod_consumer:init/1',[]],['fun','brod','brod_consumer:no_debug/1','Disable debugging.'],['fun','brod','brod_consumer:start_link/1',[]],['fun','brod','brod_consumer:start_link/1',[]],['fun','brod','brod_consumer:stop/1',[]],['fun','brod','brod_consumer:terminate/2',[]],['fun','brod','brod_kafka:api_key/1',[]],['fun','brod','brod_kafka:decode/2',[]],['fun','brod','brod_kafka:encode/1',[]],['fun','brod','brod_kafka:encode/2',[]],['fun','brod','brod_kafka:is_error/1',[]],['fun','brod','brod_kafka:parse_stream/2','Parse binary stream of kafka responses.'],['fun','brod','brod_kafka_errors:decode/1','Decode kafka protocol error code integer into atom'],['fun','brod','brod_kafka_errors:desc/1','Get description string of error codes.'],['fun','brod','brod_kafka_errors:is_error/1','Return true if it is not ZERO error code.'],['fun','brod','brod_producer:code_change/3',[]],['fun','brod','brod_producer:debug/1','Enable debugging on producer and its connection to'],['fun','brod','brod_producer:format_status/2',[]],['fun','brod','brod_producer:get_sockets/1',[]],['fun','brod','brod_producer:handle_call/3',[]],['fun','brod','brod_producer:handle_cast/2',[]],['fun','brod','brod_producer:handle_info/2',[]],['fun','brod','brod_producer:init/1',[]],['fun','brod','brod_producer:no_debug/1','Disable debugging.'],['fun','brod','brod_producer:produce/1',[]],['fun','brod','brod_producer:start_link/1',[]],['fun','brod','brod_producer:start_link/1',[]],['fun','brod','brod_producer:stop/1',[]],['fun','brod','brod_producer:terminate/2',[]],['fun','brod','brod_utils:fetch_response_to_message_set/1',[]],['fun','brod','brod_utils:get_metadata/1',[]],['fun','brod','brod_utils:get_metadata/2',[]],['fun','brod','brod_utils:try_connect/1',[]]];