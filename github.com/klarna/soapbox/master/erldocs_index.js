var index = [['app','soapbox','soapbox','[application]'],['mod','soapbox','soapbox','The SoapBox RPC engine.'],['mod','soapbox','soapbox_method_anon','Parameterized module for creating an anonymous soa'],['mod','soapbox','soapbox_method_constant','Parameterized module for creating a soapbox method'],['mod','soapbox','soapbox_method_router','Parameterized module for combining two soapbox met'],['mod','soapbox','soapbox_method_routing','Utilities for using soapbox_method_router.'],['mod','soapbox','soapbox_obj','SoapBox objects.'],['mod','soapbox','soapbox_type','SoapBox type behaviour and typechecker.'],['mod','soapbox','soapbox_type_routefn','Soapbox type for soapbox_method_router internal ro'],['fun','soapbox','soapbox:annotate/2',[]],['fun','soapbox','soapbox:do_call/2',[]],['fun','soapbox','soapbox:handler/1',[]],['fun','soapbox','soapbox_method_anon:call/1',[]],['fun','soapbox','soapbox_method_anon:spec/1',[]],['fun','soapbox','soapbox_method_anon:verify/1',[]],['fun','soapbox','soapbox_method_constant:call/1',[]],['fun','soapbox','soapbox_method_constant:spec/1',[]],['fun','soapbox','soapbox_method_constant:verify/1',[]],['fun','soapbox','soapbox_method_router:call/1',[]],['fun','soapbox','soapbox_method_router:spec/1',[]],['fun','soapbox','soapbox_method_router:verify/1',[]],['fun','soapbox','soapbox_method_routing:behaviour_info/1',[]],['fun','soapbox','soapbox_method_routing:callable/0',[]],['fun','soapbox','soapbox_method_routing:forward/0',[]],['fun','soapbox','soapbox_method_routing:make_routing/3',[]],['fun','soapbox','soapbox_method_routing:make_routing_from_module/1',[]],['fun','soapbox','soapbox_method_routing:routing/3',[]],['fun','soapbox','soapbox_method_routing:specable/0',[]],['fun','soapbox','soapbox_method_routing:verifyable/0',[]],['fun','soapbox','soapbox_obj:all/1',[]],['fun','soapbox','soapbox_obj:del/1',[]],['fun','soapbox','soapbox_obj:difference/2',[]],['fun','soapbox','soapbox_obj:equal/1','Deep object equality.'],['fun','soapbox','soapbox_obj:filter/1',[]],['fun','soapbox','soapbox_obj:fold/1',[]],['fun','soapbox','soapbox_obj:from_list/1',[]],['fun','soapbox','soapbox_obj:from_list/1',[]],['fun','soapbox','soapbox_obj:from_proplist/1',[]],['fun','soapbox','soapbox_obj:from_proplist/1',[]],['fun','soapbox','soapbox_obj:get/1',[]],['fun','soapbox','soapbox_obj:get/1',[]],['fun','soapbox','soapbox_obj:intersection/2',[]],['fun','soapbox','soapbox_obj:is_empty/1',[]],['fun','soapbox','soapbox_obj:is_key/1',[]],['fun','soapbox','soapbox_obj:is_object/1',[]],['fun','soapbox','soapbox_obj:is_value/1',[]],['fun','soapbox','soapbox_obj:keys/1',[]],['fun','soapbox','soapbox_obj:map/1',[]],['fun','soapbox','soapbox_obj:mapfold/1',[]],['fun','soapbox','soapbox_obj:multiget/1',[]],['fun','soapbox','soapbox_obj:multiset/1',[]],['fun','soapbox','soapbox_obj:new/0',[]],['fun','soapbox','soapbox_obj:pick/1',[]],['fun','soapbox','soapbox_obj:set/1',[]],['fun','soapbox','soapbox_obj:size/1',[]],['fun','soapbox','soapbox_obj:to_list/1',[]],['fun','soapbox','soapbox_obj:union/2',[]],['fun','soapbox','soapbox_type:assert_conversion_error/1',[]],['fun','soapbox','soapbox_type:assert_internal_error/1',[]],['fun','soapbox','soapbox_type:assert_normalization_error/1',[]],['fun','soapbox','soapbox_type:assert_validation_error/1',[]],['fun','soapbox','soapbox_type:behaviour_info/1',[]],['fun','soapbox','soapbox_type:check/1',[]],['fun','soapbox','soapbox_type:check_val/1',[]],['fun','soapbox','soapbox_type:get_error/2',[]],['fun','soapbox','soapbox_type:raise/1',[]],['fun','soapbox','soapbox_type:spec_args/1',[]],['fun','soapbox','soapbox_type:spec_type/1',[]],['fun','soapbox','soapbox_type:spec_value/1',[]],['fun','soapbox','soapbox_type:subst_def/2',[]],['fun','soapbox','soapbox_type:subst_imp/2',[]],['fun','soapbox','soapbox_type_routefn:convert/2',[]],['fun','soapbox','soapbox_type_routefn:name/1',[]],['fun','soapbox','soapbox_type_routefn:normalize/2',[]],['fun','soapbox','soapbox_type_routefn:parameters/0',[]],['fun','soapbox','soapbox_type_routefn:validate/2',[]]];