var index = [['app','emacs_erl','emacs_erl','[application]'],['mod','emacs_erl','emacs_erl_util',[]],['mod','emacs_erl','emacs_shell_reloader','Erlang module for automatically reloading modified'],['mod','emacs_erl','inc_test_compiler','.'],['fun','emacs_erl','emacs_erl_util:start/0',[]],['fun','emacs_erl','emacs_erl_util:stop/0',[]],['fun','emacs_erl','emacs_shell_reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','emacs_erl','emacs_shell_reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','emacs_erl','emacs_shell_reloader:handle_call/3','gen_server callback.'],['fun','emacs_erl','emacs_shell_reloader:handle_cast/2','gen_server callback.'],['fun','emacs_erl','emacs_shell_reloader:handle_info/2','gen_server callback.'],['fun','emacs_erl','emacs_shell_reloader:init/1','gen_server init, opens the server in an initial st'],['fun','emacs_erl','emacs_shell_reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','emacs_erl','emacs_shell_reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','emacs_erl','emacs_shell_reloader:start/0','Start the reloader.'],['fun','emacs_erl','emacs_shell_reloader:start_link/0','Start the reloader.'],['fun','emacs_erl','emacs_shell_reloader:stop/0','Stop the reloader.'],['fun','emacs_erl','emacs_shell_reloader:terminate/2','gen_server termination callback.'],['fun','emacs_erl','inc_test_compiler:start_link/0',[]],['fun','emacs_erl','inc_test_compiler:stop/0',[]]];