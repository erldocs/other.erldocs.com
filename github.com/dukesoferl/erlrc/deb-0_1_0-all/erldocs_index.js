var index = [['app','erlrc','erlrc','[application]'],['mod','erlrc','erlrc_boot',[]],['mod','erlrc','erlrc_lib',[]],['mod','erlrc','erlrcdynamic','Dynamic hooks intended to be called from packaging'],['mod','erlrc','erlrcsupnotify','Additional functions a supervisor can (optionally)'],['fun','erlrc','erlrc_boot:boot/0','Load and start the applications specified in the e'],['fun','erlrc','erlrc_boot:make_release_resource/1','Return a release resource structure (see OTP Desig'],['fun','erlrc','erlrc_boot:write_boot_script/1','Write a release resource file (see OTP Design Prin'],['fun','erlrc','erlrc_boot:write_release_resource/1','Write a release resource file (see OTP Design Prin'],['fun','erlrc','erlrc_lib:get_apps_dir/0',[]],['fun','erlrc','erlrc_lib:load_application/1','Load the given application App, obeying an overrid'],['fun','erlrc','erlrcdynamic:downgrade/1','Downgrade an application from new version to old v'],['fun','erlrc','erlrcdynamic:downgrade/1','OldDir and NewDir are assumed to be in the standar'],['fun','erlrc','erlrcdynamic:start/1','Start the specified application version located in'],['fun','erlrc','erlrcdynamic:start/1','Assumes Dir is the standard location under code:li'],['fun','erlrc','erlrcdynamic:stop/1','Stop the specified application version.'],['fun','erlrc','erlrcdynamic:unload/1','Unload the modules corresponding to application ve'],['fun','erlrc','erlrcdynamic:unload/1','Assumes Dir is the standard location under code:li'],['fun','erlrc','erlrcdynamic:upgrade/1','Upgrade an application from old version to new ver'],['fun','erlrc','erlrcdynamic:upgrade/1','OldDir and NewDir are assumed to be in the standar'],['fun','erlrc','erlrcsupnotify:sup_downgrade_notify/1','Notification of downgrade (before downgrade has oc'],['fun','erlrc','erlrcsupnotify:sup_upgrade_notify/1','Notification of upgrade (after upgrade has occurre']];