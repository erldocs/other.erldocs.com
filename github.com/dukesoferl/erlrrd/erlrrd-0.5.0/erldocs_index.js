var index = [['app','erlrrd','erlrrd','[application]'],['mod','erlrrd','erlrrd',[]],['mod','erlrrd','erlrrd_app',[]],['mod','erlrrd','erlrrd_sup',[]],['mod','erlrrd','erlrrdcached',[]],['fun','erlrrd','erlrrd:c/1','Equivalent to combine(Args).'],['fun','erlrrd','erlrrd:cd/1','  ask the rrdtool unix process to change directori'],['fun','erlrrd','erlrrd:combine/1','"joins" and quotes the given arg list.'],['fun','erlrrd','erlrrd:create/1','Set up a new Round Robin Database (RRD).'],['fun','erlrrd','erlrrd:dump/1','   Dump the contents of an RRD in plain ASCII.'],['fun','erlrrd','erlrrd:fetch/1','  Get data for a certain time period from a RRD.'],['fun','erlrrd','erlrrd:first/1','Return the date of the first data sample in an RRA'],['fun','erlrrd','erlrrd:graph/1','  Create a graph from data stored in one or severa'],['fun','erlrrd','erlrrd:info/1','Get information about an RRD.'],['fun','erlrrd','erlrrd:last/1','   Return the date of the last data sample in an R'],['fun','erlrrd','erlrrd:lastupdate/1','   Return the most recent update to an RRD.'],['fun','erlrrd','erlrrd:ls/0',' lists all *.rrd files in rrdtool unix process  '],['fun','erlrrd','erlrrd:mkdir/1','  ask the rrdtool unix process to create a directo'],['fun','erlrrd','erlrrd:pwd/0',' return the rrdtool unix process        current '],['fun','erlrrd','erlrrd:resize/1','   Change the size of individual RRAs.'],['fun','erlrrd','erlrrd:restore/1','Restore an RRD in XML format to a binary RRD.'],['fun','erlrrd','erlrrd:start/0','Equivalent to erlrrd_app:start().'],['fun','erlrrd','erlrrd:start_link/0','Equivalent to start_link("rrdtool -").'],['fun','erlrrd','erlrrd:start_link/1','calls gen_server:start_link    RRDToolCmd is the '],['fun','erlrrd','erlrrd:stop/0','Equivalent to erlrrd_app:stop().'],['fun','erlrrd','erlrrd:tune/1','Alter setup of an RRD.'],['fun','erlrrd','erlrrd:update/1','Store new data values into an RRD.'],['fun','erlrrd','erlrrd:updatev/1','Operationally equivalent to update except for outp'],['fun','erlrrd','erlrrd:xport/1','  Export data retrieved from one or several RRDs.'],['fun','erlrrd','erlrrd_app:start/0',[]],['fun','erlrrd','erlrrd_app:start/2',[]],['fun','erlrrd','erlrrd_app:stop/0',[]],['fun','erlrrd','erlrrd_app:stop/1',[]],['fun','erlrrd','erlrrd_sup:init/1',[]],['fun','erlrrd','erlrrd_sup:start_link/0',[]],['fun','erlrrd','erlrrd_sup:start_link/1',[]],['fun','erlrrd','erlrrdcached:alive/0',[]],['fun','erlrrd','erlrrdcached:code_change/3',[]],['fun','erlrrd','erlrrdcached:handle_call/3',[]],['fun','erlrrd','erlrrdcached:handle_cast/2',[]],['fun','erlrrd','erlrrdcached:handle_info/2',[]],['fun','erlrrd','erlrrdcached:init/1',[]],['fun','erlrrd','erlrrdcached:listen_file/0',[]],['fun','erlrrd','erlrrdcached:pid_file/0',[]],['fun','erlrrd','erlrrdcached:ping/0',[]],['fun','erlrrd','erlrrdcached:start_link/1',[]],['fun','erlrrd','erlrrdcached:terminate/2',[]]];