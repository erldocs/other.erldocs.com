var index = [['app','observerl','observerl','[application]'],['mod','observerl','aggregate','      Gets started when an observer gets a subscr'],['mod','observerl','common_functions','     This should be a collection of common functi'],['mod','observerl','eval','      Takes a string in the format "fun(X) X+1 en'],['mod','observerl','filter','    This module runs a list of filters on a value'],['mod','observerl','observer','      Create an observer to observe a stream of d'],['mod','observerl','observerl_app',[]],['mod','observerl','observerl_sup',[]],['mod','observerl','sized_window','     sized window notifies the subscriber when th'],['mod','observerl','test_run','.'],['mod','observerl','timed_window','     A process for storing a window of a timed si'],['fun','observerl','aggregate:add/1','   Adds a new value to the aggregate and returns '],['fun','observerl','aggregate:current/1','   Returns the current value of the aggregate.'],['fun','observerl','aggregate:start_link/1','   Starts a new aggregator for a subscriber.'],['fun','observerl','aggregate:stop/1','   Stops the aggregating process.'],['fun','observerl','common_functions:is_defined_function/1',[]],['fun','observerl','common_functions:moving_average/0',[]],['fun','observerl','common_functions:standard_deviation_population/0',[]],['fun','observerl','common_functions:standard_deviation_sample/0',[]],['fun','observerl','common_functions:sum/0',[]],['fun','observerl','eval:make_fun/1','    Creates a function from a string or binary.'],['fun','observerl','eval:make_funs/1','    Creates a list of functions from a list of st'],['fun','observerl','filter:match/1',[]],['fun','observerl','observer:list_subscribers/0','    Returns a list of subscribers.'],['fun','observerl','observer:list_subscribers/1','    Returns a list of currently subscribed subscr'],['fun','observerl','observer:on_completed/0','    Used by the provider to signal the end of str'],['fun','observerl','observer:on_completed/1','    Used by the provider to signal the end of str'],['fun','observerl','observer:on_error/1','    Used by the provider to signal an exception.'],['fun','observerl','observer:on_error/1','    Used by the provider to signal an exception.'],['fun','observerl','observer:on_next/1','    Used by the provider to add values to the obs'],['fun','observerl','observer:on_next/1','    Used by the provider to add values to the obs'],['fun','observerl','observer:start_link/0','    Starts a new observer, only use this if you a'],['fun','observerl','observer:start_link/1','    Starts a new observer with a specific name.'],['fun','observerl','observer:stop/0','    Stops the observer, if created using start_li'],['fun','observerl','observer:stop/1','    Stops an observer by pid.'],['fun','observerl','observer:subscribe/1','    Subscribes to an observer by pid.'],['fun','observerl','observer:subscribe/1','    Subscribes to an observer.'],['fun','observerl','observer:unsubscribe/1','    Unsubscribes a subscriber from the observer.'],['fun','observerl','observer:unsubscribe/1','    Unsubscribes from an observer, takes in the p'],['fun','observerl','observerl_app:start/2','Starts the application.'],['fun','observerl','observerl_app:stop/1','Stops the application.'],['fun','observerl','observerl_sup:add_observer/1','     Starts a new observer.'],['fun','observerl','observerl_sup:init/1',[]],['fun','observerl','observerl_sup:start_link/0',[]],['fun','observerl','sized_window:current_window/1','Returns the data in the current window.'],['fun','observerl','sized_window:start_link/1','   Starts the server     WinSize is the number o'],['fun','observerl','sized_window:stop/1','stops the window.'],['fun','observerl','sized_window:update/2','    Updates the current window with new data.'],['fun','observerl','test_run:common_fun/0',[]],['fun','observerl','test_run:moving_average/0',[]],['fun','observerl','test_run:run/0',[]],['fun','observerl','test_run:run_named/0',[]],['fun','observerl','test_run:run_sized_window/0',[]],['fun','observerl','test_run:run_timed_window/0',[]],['fun','observerl','test_run:transform/0',[]],['fun','observerl','timed_window:current_window/1','     Returns the data in the current window.'],['fun','observerl','timed_window:start_link/1','   Starts the server.'],['fun','observerl','timed_window:stop/1','     Stops the window process     Instance is th'],['fun','observerl','timed_window:update/1','    Updates the current window with new data    ']];