var index = [['app','eadc-hub','eadc-hub','[application]'],['mod','eadc-hub','eadc_app','Module eadc_app starts all required supervisors an'],['mod','eadc-hub','eadc_client_fsm',[]],['mod','eadc-hub','eadc_listener',[]],['mod','eadc-hub','eadc_master',[]],['mod','eadc-hub','eadc_user',[]],['mod','eadc-hub','eadc_utils',[]],['mod','eadc-hub','plugin_bot',[]],['mod','eadc-hub','plugin_hub_merge',[]],['mod','eadc-hub','sha1',[]],['mod','eadc-hub','utf8',[]],['mod','eadc-hub','xml',[]],['fun','eadc-hub','eadc_app:get_app_env/1','Returns option with name Opt from command line o'],['fun','eadc-hub','eadc_app:init/1','Supervisor callback.'],['fun','eadc-hub','eadc_app:start/1','Prepares mnesia tables, starts tiger-hash applicat'],['fun','eadc-hub','eadc_app:start_client/0','A startup function for spawning new client connect'],['fun','eadc-hub','eadc_app:start_table/1','If table TableName exists just do mnesia:wait_for_'],['fun','eadc-hub','eadc_app:stop/1','Application callback.'],['fun','eadc-hub','eadc_client_fsm:all_pids/0',[]],['fun','eadc-hub','eadc_client_fsm:client_all/0',[]],['fun','eadc-hub','eadc_client_fsm:client_delete/1',[]],['fun','eadc-hub','eadc_client_fsm:client_get/1',[]],['fun','eadc-hub','eadc_client_fsm:client_write/1',[]],['fun','eadc-hub','eadc_client_fsm:get_pid_by_sid/1',[]],['fun','eadc-hub','eadc_client_fsm:get_unical_cid/1',[]],['fun','eadc-hub','eadc_client_fsm:get_unical_SID/0',[]],['fun','eadc-hub','eadc_client_fsm:IDENTIFY STAGE/2',[]],['fun','eadc-hub','eadc_client_fsm:inf_update/2',[]],['fun','eadc-hub','eadc_client_fsm:NORMAL STAGE/2',[]],['fun','eadc-hub','eadc_client_fsm:PROTOCOL STAGE/2',[]],['fun','eadc-hub','eadc_client_fsm:set_socket/2',[]],['fun','eadc-hub','eadc_client_fsm:start_link/0',[]],['fun','eadc-hub','eadc_client_fsm:test/1',[]],['fun','eadc-hub','eadc_client_fsm:VERIFY STAGE/2',[]],['fun','eadc-hub','eadc_listener:init/1','Called by gen_server framework at process startup.'],['fun','eadc-hub','eadc_listener:start_link/1','Called by supervisor to start the listening proces'],['fun','eadc-hub','eadc_master:init/1','Called by gen_server framework at process startup.'],['fun','eadc-hub','eadc_master:start_link/0','Called by supervisor to start the listening proces'],['fun','eadc-hub','eadc_user:access/1','returns true if current user have rights for perm'],['fun','eadc-hub','eadc_user:access/2',[]],['fun','eadc-hub','eadc_user:client_find/1','returns list of Clients which match with ClentPatt'],['fun','eadc-hub','eadc_user:get_client_account/1',[]],['fun','eadc-hub','eadc_user:init/0',[]],['fun','eadc-hub','eadc_utils:a2s/1','Converts %% ["some", "little string"] -&gt; "some '],['fun','eadc-hub','eadc_utils:account_all/0','returns list of all accounts.'],['fun','eadc-hub','eadc_utils:account_get/1','returns account record with Login.'],['fun','eadc-hub','eadc_utils:account_get_login/1','finds account with this Nick or Cid.'],['fun','eadc-hub','eadc_utils:account_write/1','writes account into mnesia table.'],['fun','eadc-hub','eadc_utils:base32/1','returns base32 character corresponding to V like 1'],['fun','eadc-hub','eadc_utils:base32_decode/1','returns base32 decoded string of String.'],['fun','eadc-hub','eadc_utils:base32_encode/1','returns base32 encoded string of String.'],['fun','eadc-hub','eadc_utils:broadcast/1',[]],['fun','eadc-hub','eadc_utils:code_reload/1','does make and loads Module if its possible.'],['fun','eadc-hub','eadc_utils:deparse_inf/1','combines parsed inf message like [{NI, "test"}, '],['fun','eadc-hub','eadc_utils:error_to_pid/1','sends error message to Pid by send_to_pid/2'],['fun','eadc-hub','eadc_utils:get_option/3',[]],['fun','eadc-hub','eadc_utils:get_options/1',[]],['fun','eadc-hub','eadc_utils:get_required_field/2',[]],['fun','eadc-hub','eadc_utils:get_val/1','returns value with key Key or NO KEY.'],['fun','eadc-hub','eadc_utils:info_to_pid/1','sends info message to Pid by send_to_pid/2'],['fun','eadc-hub','eadc_utils:parse_inf/1','parses inf message like "NItest DEdesc" into List='],['fun','eadc-hub','eadc_utils:quote/1','quotes space, newline and \ characters.'],['fun','eadc-hub','eadc_utils:random_base32/1','returns base32 encoded string with length Count.'],['fun','eadc-hub','eadc_utils:redirect_to/3',[]],['fun','eadc-hub','eadc_utils:s2a/1','Converts "some little\sstring" -&gt; ["some", "lit'],['fun','eadc-hub','eadc_utils:send_to_pid/1','applies convert/1 to Param if needed and sends Str'],['fun','eadc-hub','eadc_utils:send_to_pids/2','applies send_to_pid/2 to every pid of Pids.'],['fun','eadc-hub','eadc_utils:set_option/3',[]],['fun','eadc-hub','eadc_utils:set_val/1','replaces tuple {Key, OldVar} with {Key, Val} in li'],['fun','eadc-hub','eadc_utils:unbase32/1','A=unbase32(base32(A)).'],['fun','eadc-hub','eadc_utils:unquote/1','removes escape character for space, newline and \'],['fun','eadc-hub','plugin_bot:chat_msg/1',[]],['fun','eadc-hub','plugin_bot:init/0',[]],['fun','eadc-hub','plugin_bot:terminate/0',[]],['fun','eadc-hub','plugin_bot:user_login/1',[]],['fun','eadc-hub','plugin_hub_merge:chat_msg/1',[]],['fun','eadc-hub','plugin_hub_merge:init/0',[]],['fun','eadc-hub','plugin_hub_merge:master_command/1',[]],['fun','eadc-hub','plugin_hub_merge:terminate/0',[]],['fun','eadc-hub','plugin_hub_merge:user_login/1',[]],['fun','eadc-hub','plugin_hub_merge:user_quit/1',[]],['fun','eadc-hub','sha1:binstring/1',[]],['fun','eadc-hub','sha1:hexstring/1',[]],['fun','eadc-hub','utf8:from_utf8/1',[]],['fun','eadc-hub','utf8:to_utf8/1',[]],['fun','eadc-hub','xml:crypt/1',[]],['fun','eadc-hub','xml:element_to_string/1',[]],['fun','eadc-hub','xml:get_attr/2',[]],['fun','eadc-hub','xml:get_attr_s/2',[]],['fun','eadc-hub','xml:get_cdata/1',[]],['fun','eadc-hub','xml:get_path_s/2',[]],['fun','eadc-hub','xml:get_subtag/2',[]],['fun','eadc-hub','xml:get_subtag_cdata/2',[]],['fun','eadc-hub','xml:get_tag_attr/2',[]],['fun','eadc-hub','xml:get_tag_attr_s/2',[]],['fun','eadc-hub','xml:get_tag_cdata/1',[]],['fun','eadc-hub','xml:make_text_node/1',[]],['fun','eadc-hub','xml:remove_cdata/1',[]],['fun','eadc-hub','xml:replace_tag_attr/3',[]],['fun','eadc-hub','xml:string_to_element/1',[]],['fun','eadc-hub','xml:uncrypt/1',[]]];