var index = [['app','erlang-q','erlang-q','[application]'],['mod','erlang-q','q_demo_handler','Demo gen_event callback implementation.'],['mod','erlang-q','q_ipcp',' Implements most parts of the Q ipc protocol speci'],['mod','erlang-q','q_server','Q connection server.'],['mod','erlang-q','q_table','Q table helpers.'],['fun','erlang-q','q_demo_handler:code_change/3',[]],['fun','erlang-q','q_demo_handler:handle_call/2',[]],['fun','erlang-q','q_demo_handler:handle_event/2',[]],['fun','erlang-q','q_demo_handler:handle_info/2',[]],['fun','erlang-q','q_demo_handler:init/1',[]],['fun','erlang-q','q_demo_handler:terminate/2',[]],['fun','erlang-q','q_ipcp:bin_to_hexstr/1',[]],['fun','erlang-q','q_ipcp:capability/1','ipc protocol capability to atom.'],['fun','erlang-q','q_ipcp:deserialize/1','deserialize binary data.'],['fun','erlang-q','q_ipcp:deserialize_header/1','deserialize binary header data.'],['fun','erlang-q','q_ipcp:endianness/1','ipc protocol endianness to atom.'],['fun','erlang-q','q_ipcp:hexstr_to_bin/1',[]],['fun','erlang-q','q_ipcp:serialize/1','serialize data.'],['fun','erlang-q','q_ipcp:serialize_boolean/1','create boolean type.'],['fun','erlang-q','q_ipcp:serialize_booleans/1','create boolean vector type.'],['fun','erlang-q','q_ipcp:serialize_byte/1','create byte type.'],['fun','erlang-q','q_ipcp:serialize_bytes/1','create byte vector type.'],['fun','erlang-q','q_ipcp:serialize_char/1','create char type.'],['fun','erlang-q','q_ipcp:serialize_chars/1','create char vector type.'],['fun','erlang-q','q_ipcp:serialize_float/1','create float type.'],['fun','erlang-q','q_ipcp:serialize_floats/1','create float vector type.'],['fun','erlang-q','q_ipcp:serialize_generallist/1','create generallist type.'],['fun','erlang-q','q_ipcp:serialize_guid/1','create guid type.'],['fun','erlang-q','q_ipcp:serialize_guids/1','create guid vector type.'],['fun','erlang-q','q_ipcp:serialize_int/1','create int type.'],['fun','erlang-q','q_ipcp:serialize_ints/1','create int vector type.'],['fun','erlang-q','q_ipcp:serialize_long/1','create long type.'],['fun','erlang-q','q_ipcp:serialize_longs/1','create long vector type.'],['fun','erlang-q','q_ipcp:serialize_real/1','create real type.'],['fun','erlang-q','q_ipcp:serialize_reals/1','create real vector type.'],['fun','erlang-q','q_ipcp:serialize_short/1','create short type.'],['fun','erlang-q','q_ipcp:serialize_shorts/1','create short vector type.'],['fun','erlang-q','q_ipcp:serialize_string/1','create char vector type.'],['fun','erlang-q','q_ipcp:serialize_symbol/1',[]],['fun','erlang-q','q_ipcp:serialize_symbols/1','create symbol vector type.'],['fun','erlang-q','q_server:code_change/3',[]],['fun','erlang-q','q_server:handle_call/3',[]],['fun','erlang-q','q_server:handle_cast/2',[]],['fun','erlang-q','q_server:handle_info/2',[]],['fun','erlang-q','q_server:init/1',[]],['fun','erlang-q','q_server:start_link/1','Starts the server.'],['fun','erlang-q','q_server:terminate/2',[]],['fun','erlang-q','q_table:cell/1','Get the value of a cell.'],['fun','erlang-q','q_table:col/1','Get the values of a col.'],['fun','erlang-q','q_table:cols/1','Cols of the table.'],['fun','erlang-q','q_table:foreach/1','Calls Fun(Row) for each element of the table.'],['fun','erlang-q','q_table:height/1','Number of rows of the table.'],['fun','erlang-q','q_table:map/1','Map the rows of a table.'],['fun','erlang-q','q_table:map/1','Map the values of a col.'],['fun','erlang-q','q_table:row/1','Get the values of a row.'],['fun','erlang-q','q_table:rows/1','Rows of the table in list form.'],['fun','erlang-q','q_table:width/1','Number of cols of the table.']];