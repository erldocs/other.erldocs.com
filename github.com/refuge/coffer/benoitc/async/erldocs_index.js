var index = [['app','coffer','coffer','[application]'],['mod','coffer','coffer',[]],['mod','coffer','coffer_app',[]],['mod','coffer','coffer_backend',[]],['mod','coffer','coffer_blob',[]],['mod','coffer','coffer_deps',[]],['mod','coffer','coffer_server',[]],['mod','coffer','coffer_storage',[]],['mod','coffer','coffer_storage_ets',[]],['mod','coffer','coffer_storage_localdisk',[]],['mod','coffer','coffer_sup',[]],['mod','coffer','coffer_util',[]],['fun','coffer','coffer:add_storage/1',[]],['fun','coffer','coffer:all/1',[]],['fun','coffer','coffer:delete/2',[]],['fun','coffer','coffer:enumerate/1',[]],['fun','coffer','coffer:enumerate/2',[]],['fun','coffer','coffer:fetch/1',[]],['fun','coffer','coffer:fetch/1',[]],['fun','coffer','coffer:foldl/3',[]],['fun','coffer','coffer:foreach/2',[]],['fun','coffer','coffer:get_storage/1',[]],['fun','coffer','coffer:list_storages/0',[]],['fun','coffer','coffer:new_stream/2',[]],['fun','coffer','coffer:new_upload/2',[]],['fun','coffer','coffer:remove_storage/1',[]],['fun','coffer','coffer:simple_fetch/2',[]],['fun','coffer','coffer:start/0','Start the coffer application.'],['fun','coffer','coffer:start_enumerate/1',[]],['fun','coffer','coffer:stat/2',[]],['fun','coffer','coffer:stop/0','Start the coffer application.'],['fun','coffer','coffer:upload/2',[]],['fun','coffer','coffer:upload/3',[]],['fun','coffer','coffer_app:ensure_deps_started/0',[]],['fun','coffer','coffer_app:ensure_started/1',[]],['fun','coffer','coffer_app:start/2',[]],['fun','coffer','coffer_app:stop/1',[]],['fun','coffer','coffer_blob:from_path/2',[]],['fun','coffer','coffer_blob:parse_ref/1',[]],['fun','coffer','coffer_blob:path/2',[]],['fun','coffer','coffer_blob:validate_ref/1',[]],['fun','coffer','coffer_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','coffer','coffer_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','coffer','coffer_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','coffer','coffer_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','coffer','coffer_deps:get_base_dir/1','Return the application directory for Module.'],['fun','coffer','coffer_deps:local_path/1','Return an application-relative directory for this '],['fun','coffer','coffer_deps:local_path/1','Return an application-relative directory from Modu'],['fun','coffer','coffer_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','coffer','coffer_server:add/3',[]],['fun','coffer','coffer_server:code_change/3',[]],['fun','coffer','coffer_server:get/1',[]],['fun','coffer','coffer_server:handle_call/3',[]],['fun','coffer','coffer_server:handle_cast/2',[]],['fun','coffer','coffer_server:handle_info/2',[]],['fun','coffer','coffer_server:init/1',[]],['fun','coffer','coffer_server:list/0',[]],['fun','coffer','coffer_server:remove/1',[]],['fun','coffer','coffer_server:start_link/1',[]],['fun','coffer','coffer_server:terminate/2',[]],['fun','coffer','coffer_storage:code_change/3',[]],['fun','coffer','coffer_storage:delete/2',[]],['fun','coffer','coffer_storage:enumerate/1',[]],['fun','coffer','coffer_storage:handle_call/3',[]],['fun','coffer','coffer_storage:handle_cast/2',[]],['fun','coffer','coffer_storage:handle_info/2',[]],['fun','coffer','coffer_storage:init/1',[]],['fun','coffer','coffer_storage:lookup_receiver/1',[]],['fun','coffer','coffer_storage:new_stream/2',[]],['fun','coffer','coffer_storage:new_upload/2',[]],['fun','coffer','coffer_storage:notify/2','notify an event for this storage.'],['fun','coffer','coffer_storage:register_receiver/1',[]],['fun','coffer','coffer_storage:start/3',[]],['fun','coffer','coffer_storage:stat/2',[]],['fun','coffer','coffer_storage:stop/1',[]],['fun','coffer','coffer_storage:subscribe/1','Subscribe to storage events for a storage named St'],['fun','coffer','coffer_storage:terminate/2',[]],['fun','coffer','coffer_storage:unregister_receiver/1',[]],['fun','coffer','coffer_storage:unsubscribe/1','Remove subscribtion created using subscribe(Storag'],['fun','coffer','coffer_storage_ets:delete/2',[]],['fun','coffer','coffer_storage_ets:enumerate/2',[]],['fun','coffer','coffer_storage_ets:enumerate_loop/2',[]],['fun','coffer','coffer_storage_ets:init/2',[]],['fun','coffer','coffer_storage_ets:new_receiver/3',[]],['fun','coffer','coffer_storage_ets:new_stream/3',[]],['fun','coffer','coffer_storage_ets:receive_loop/3',[]],['fun','coffer','coffer_storage_ets:stat/2',[]],['fun','coffer','coffer_storage_ets:stream_loop/4',[]],['fun','coffer','coffer_storage_ets:terminate/1',[]],['fun','coffer','coffer_storage_localdisk:delete/2',[]],['fun','coffer','coffer_storage_localdisk:enumerate/2',[]],['fun','coffer','coffer_storage_localdisk:enumerate_loop/2',[]],['fun','coffer','coffer_storage_localdisk:init/2',[]],['fun','coffer','coffer_storage_localdisk:new_receiver/3',[]],['fun','coffer','coffer_storage_localdisk:new_stream/3',[]],['fun','coffer','coffer_storage_localdisk:receive_loop/4',[]],['fun','coffer','coffer_storage_localdisk:stat/2',[]],['fun','coffer','coffer_storage_localdisk:stream_loop/3',[]],['fun','coffer','coffer_storage_localdisk:terminate/1',[]],['fun','coffer','coffer_sup:init/1',[]],['fun','coffer','coffer_sup:start_link/0',[]],['fun','coffer','coffer_util:await/1',[]],['fun','coffer','coffer_util:await/1','Wait until a process registers under a local name.'],['fun','coffer','coffer_util:content_hash/1',[]],['fun','coffer','coffer_util:content_hash_on_stream/2',[]],['fun','coffer','coffer_util:gettempdir/0','Get a usable temporary directory using the first o'],['fun','coffer','coffer_util:lookup/1','Resolve a local name to a pid.'],['fun','coffer','coffer_util:lookup_members/1','Lookup the process ids of all members of a group.'],['fun','coffer','coffer_util:register/1','Register the local process under a local name.'],['fun','coffer','coffer_util:register_member/1','Register the local process as a member of a group.'],['fun','coffer','coffer_util:unregister/1','Unregister the local process from a name.'],['fun','coffer','coffer_util:unregister_member/1','Unregister the local process as a member of a grou']];