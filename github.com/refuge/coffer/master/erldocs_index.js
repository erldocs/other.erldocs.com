var index = [['app','coffer','coffer','[application]'],['mod','coffer','coffer',[]],['mod','coffer','coffer_app',[]],['mod','coffer','coffer_backend',[]],['mod','coffer','coffer_blob',[]],['mod','coffer','coffer_config','module to maintain an update the config when neede'],['mod','coffer','coffer_config_backend',[]],['mod','coffer','coffer_config_util',[]],['mod','coffer','coffer_deps',[]],['mod','coffer','coffer_econfig',[]],['mod','coffer','coffer_http',[]],['mod','coffer','coffer_http_blob',[]],['mod','coffer','coffer_http_config',[]],['mod','coffer','coffer_http_root',[]],['mod','coffer','coffer_http_stat',[]],['mod','coffer','coffer_http_storage',[]],['mod','coffer','coffer_http_storages',[]],['mod','coffer','coffer_http_util',[]],['mod','coffer','coffer_server',[]],['mod','coffer','coffer_storage',[]],['mod','coffer','coffer_storage_ets',[]],['mod','coffer','coffer_storage_localdisk',[]],['mod','coffer','coffer_sup',[]],['mod','coffer','coffer_util',[]],['fun','coffer','coffer:add_storage/1',[]],['fun','coffer','coffer:all/1',[]],['fun','coffer','coffer:blob_exists/2',[]],['fun','coffer','coffer:delete/2',[]],['fun','coffer','coffer:enumerate/1',[]],['fun','coffer','coffer:enumerate/2',[]],['fun','coffer','coffer:fetch/1',[]],['fun','coffer','coffer:fetch/1',[]],['fun','coffer','coffer:foldl/3',[]],['fun','coffer','coffer:foreach/2',[]],['fun','coffer','coffer:get_storage/1',[]],['fun','coffer','coffer:list_storages/0',[]],['fun','coffer','coffer:new_stream/2',[]],['fun','coffer','coffer:new_upload/2',[]],['fun','coffer','coffer:remove_storage/1',[]],['fun','coffer','coffer:simple_fetch/2',[]],['fun','coffer','coffer:start/0','Start the coffer application.'],['fun','coffer','coffer:start_enumerate/1',[]],['fun','coffer','coffer:stat/2',[]],['fun','coffer','coffer:stop/0','Start the coffer application.'],['fun','coffer','coffer:stop_enumerate/1',[]],['fun','coffer','coffer:upload/2',[]],['fun','coffer','coffer:upload/3',[]],['fun','coffer','coffer_app:ensure_deps_started/0',[]],['fun','coffer','coffer_app:ensure_started/1',[]],['fun','coffer','coffer_app:get_app_env/1',[]],['fun','coffer','coffer_app:get_app_env/2',[]],['fun','coffer','coffer_app:start/2',[]],['fun','coffer','coffer_app:stop/1',[]],['fun','coffer','coffer_blob:from_path/2',[]],['fun','coffer','coffer_blob:parse_ref/1',[]],['fun','coffer','coffer_blob:path/2',[]],['fun','coffer','coffer_blob:validate_ref/1',[]],['fun','coffer','coffer_config:all/0',[]],['fun','coffer','coffer_config:bind_opts/1',[]],['fun','coffer','coffer_config:code_change/3',[]],['fun','coffer','coffer_config:del/1',[]],['fun','coffer','coffer_config:del/2',[]],['fun','coffer','coffer_config:get/1',[]],['fun','coffer','coffer_config:get/2',[]],['fun','coffer','coffer_config:get/3',[]],['fun','coffer','coffer_config:handle_call/3',[]],['fun','coffer','coffer_config:handle_cast/2',[]],['fun','coffer','coffer_config:handle_info/2',[]],['fun','coffer','coffer_config:http_env/0',[]],['fun','coffer','coffer_config:init/1',[]],['fun','coffer','coffer_config:init_http/1',[]],['fun','coffer','coffer_config:set/2',[]],['fun','coffer','coffer_config:set/3',[]],['fun','coffer','coffer_config:start_link/0',[]],['fun','coffer','coffer_config:start_link1/1',[]],['fun','coffer','coffer_config:start_listener/3',[]],['fun','coffer','coffer_config:terminate/2',[]],['fun','coffer','coffer_config_util:http_config/0',[]],['fun','coffer','coffer_config_util:http_config/1',[]],['fun','coffer','coffer_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','coffer','coffer_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','coffer','coffer_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','coffer','coffer_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','coffer','coffer_deps:get_base_dir/1','Return the application directory for Module.'],['fun','coffer','coffer_deps:local_path/1','Return an application-relative directory for this '],['fun','coffer','coffer_deps:local_path/1','Return an application-relative directory from Modu'],['fun','coffer','coffer_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','coffer','coffer_econfig:all/1',[]],['fun','coffer','coffer_econfig:delete_value/2',[]],['fun','coffer','coffer_econfig:delete_value/3',[]],['fun','coffer','coffer_econfig:get_value/2',[]],['fun','coffer','coffer_econfig:get_value/3',[]],['fun','coffer','coffer_econfig:get_value/4',[]],['fun','coffer','coffer_econfig:init/1',[]],['fun','coffer','coffer_econfig:set_value/3',[]],['fun','coffer','coffer_econfig:set_value/4',[]],['fun','coffer','coffer_econfig:terminate/1',[]],['fun','coffer','coffer_http:dispatch_rules/0',[]],['fun','coffer','coffer_http:dispatch_rules/1',[]],['fun','coffer','coffer_http_blob:handle/2',[]],['fun','coffer','coffer_http_blob:init/3',[]],['fun','coffer','coffer_http_blob:terminate/3',[]],['fun','coffer','coffer_http_config:handle/2',[]],['fun','coffer','coffer_http_config:init/3',[]],['fun','coffer','coffer_http_config:terminate/3',[]],['fun','coffer','coffer_http_root:handle/2',[]],['fun','coffer','coffer_http_root:init/3',[]],['fun','coffer','coffer_http_root:terminate/3',[]],['fun','coffer','coffer_http_stat:handle/2',[]],['fun','coffer','coffer_http_stat:init/3',[]],['fun','coffer','coffer_http_stat:terminate/3',[]],['fun','coffer','coffer_http_storage:handle/2',[]],['fun','coffer','coffer_http_storage:init/3',[]],['fun','coffer','coffer_http_storage:terminate/3',[]],['fun','coffer','coffer_http_storages:handle/2',[]],['fun','coffer','coffer_http_storages:init/3',[]],['fun','coffer','coffer_http_storages:terminate/3',[]],['fun','coffer','coffer_http_util:error/2',[]],['fun','coffer','coffer_http_util:error/3',[]],['fun','coffer','coffer_http_util:error/4',[]],['fun','coffer','coffer_http_util:maybe_prettify_json/2',[]],['fun','coffer','coffer_http_util:not_allowed/2',[]],['fun','coffer','coffer_http_util:not_found/1',[]],['fun','coffer','coffer_http_util:ok/1',[]],['fun','coffer','coffer_http_util:ok/2',[]],['fun','coffer','coffer_http_util:to_json/2',[]],['fun','coffer','coffer_server:add/3',[]],['fun','coffer','coffer_server:code_change/3',[]],['fun','coffer','coffer_server:get/1',[]],['fun','coffer','coffer_server:handle_call/3',[]],['fun','coffer','coffer_server:handle_cast/2',[]],['fun','coffer','coffer_server:handle_info/2',[]],['fun','coffer','coffer_server:init/1',[]],['fun','coffer','coffer_server:list/0',[]],['fun','coffer','coffer_server:remove/1',[]],['fun','coffer','coffer_server:start_link/1',[]],['fun','coffer','coffer_server:terminate/2',[]],['fun','coffer','coffer_storage:blob_exists/2',[]],['fun','coffer','coffer_storage:code_change/3',[]],['fun','coffer','coffer_storage:delete/2',[]],['fun','coffer','coffer_storage:enumerate/1',[]],['fun','coffer','coffer_storage:handle_call/3',[]],['fun','coffer','coffer_storage:handle_cast/2',[]],['fun','coffer','coffer_storage:handle_info/2',[]],['fun','coffer','coffer_storage:init/1',[]],['fun','coffer','coffer_storage:lookup_receiver/1',[]],['fun','coffer','coffer_storage:new_stream/2',[]],['fun','coffer','coffer_storage:new_upload/2',[]],['fun','coffer','coffer_storage:notify/2','notify an event for this storage.'],['fun','coffer','coffer_storage:register_receiver/1',[]],['fun','coffer','coffer_storage:start/3',[]],['fun','coffer','coffer_storage:stat/2',[]],['fun','coffer','coffer_storage:stop/1',[]],['fun','coffer','coffer_storage:subscribe/1','Subscribe to storage events for a storage named St'],['fun','coffer','coffer_storage:terminate/2',[]],['fun','coffer','coffer_storage:unregister_receiver/1',[]],['fun','coffer','coffer_storage:unsubscribe/1','Remove subscribtion created using subscribe(Storag'],['fun','coffer','coffer_storage_ets:blob_exists/2',[]],['fun','coffer','coffer_storage_ets:delete/2',[]],['fun','coffer','coffer_storage_ets:enumerate/2',[]],['fun','coffer','coffer_storage_ets:enumerate_loop/2',[]],['fun','coffer','coffer_storage_ets:init/2',[]],['fun','coffer','coffer_storage_ets:new_receiver/3',[]],['fun','coffer','coffer_storage_ets:new_stream/3',[]],['fun','coffer','coffer_storage_ets:receive_loop/3',[]],['fun','coffer','coffer_storage_ets:stat/2',[]],['fun','coffer','coffer_storage_ets:stream_loop/4',[]],['fun','coffer','coffer_storage_ets:terminate/1',[]],['fun','coffer','coffer_storage_localdisk:blob_exists/2',[]],['fun','coffer','coffer_storage_localdisk:delete/2',[]],['fun','coffer','coffer_storage_localdisk:enumerate/2',[]],['fun','coffer','coffer_storage_localdisk:enumerate_loop/2',[]],['fun','coffer','coffer_storage_localdisk:init/2',[]],['fun','coffer','coffer_storage_localdisk:new_receiver/3',[]],['fun','coffer','coffer_storage_localdisk:new_stream/3',[]],['fun','coffer','coffer_storage_localdisk:receive_loop/4',[]],['fun','coffer','coffer_storage_localdisk:stat/2',[]],['fun','coffer','coffer_storage_localdisk:stream_loop/3',[]],['fun','coffer','coffer_storage_localdisk:terminate/1',[]],['fun','coffer','coffer_sup:init/1',[]],['fun','coffer','coffer_sup:start_link/0',[]],['fun','coffer','coffer_util:await/1',[]],['fun','coffer','coffer_util:await/1','Wait until a process registers under a local name.'],['fun','coffer','coffer_util:content_hash/1',[]],['fun','coffer','coffer_util:content_hash_on_stream/2',[]],['fun','coffer','coffer_util:gettempdir/0','Get a usable temporary directory using the first o'],['fun','coffer','coffer_util:lookup/1','Resolve a local name to a pid.'],['fun','coffer','coffer_util:lookup_members/1','Lookup the process ids of all members of a group.'],['fun','coffer','coffer_util:register/1','Register the local process under a local name.'],['fun','coffer','coffer_util:register_member/1','Register the local process as a member of a group.'],['fun','coffer','coffer_util:require/1','Start the given applications if they were not alre'],['fun','coffer','coffer_util:to_list/1','converto a value to a list.'],['fun','coffer','coffer_util:unregister/1','Unregister the local process from a name.'],['fun','coffer','coffer_util:unregister_member/1','Unregister the local process as a member of a grou']];