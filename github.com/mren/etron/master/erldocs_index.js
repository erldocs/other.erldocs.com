var index = [['app','etron','etron','[application]'],['mod','etron','client',[]],['mod','etron','config','config for the server.'],['mod','etron','gui','This module creates and updates the GUI for the cu'],['mod','etron','new_client','  a game client which connects to a server, recei'],['mod','etron','new_gui','  draws the state of the game.'],['mod','etron','new_gui_helpers','  helper functions used by new_gui to draw player'],['mod','etron','server','  the server is responsible for mapping client so'],['mod','etron','server_state','  interface to an abstract data type ServerState'],['mod','etron','tcp','  abstract away the details of accepting connecti'],['mod','etron','test_client',[]],['mod','etron','utility','Utility class for the server/logic to manipulate o'],['mod','etron','utility_test',[]],['mod','etron','wxgl_canvas','  implements the callback interface expected by n'],['fun','etron','client:start/0',[]],['fun','etron','client:start/1',[]],['fun','etron','client:start/2',[]],['fun','etron','config:get/1','exports a dictionary with all configurations.'],['fun','etron','gui:generatePlayerColours/1',[]],['fun','etron','gui:init/0',[]],['fun','etron','gui:init/3',[]],['fun','etron','gui:updateGameState/2',[]],['fun','etron','new_client:start/1','  start a client and connect to server Host on Po'],['fun','etron','new_client:start/2',[]],['fun','etron','new_gui:start/2','  start expects a callback module implementing th'],['fun','etron','new_gui_helpers:drawPlayer/3','  draw tail of a player in the color of that play'],['fun','etron','server:start/1','  start a gameserver which will listen on Port'],['fun','etron','server_state:add_client/2','  associates a Client with a color and returns th'],['fun','etron','server_state:get_clients/1','  returns all clients previously added to the ser'],['fun','etron','server_state:get_player_id/2','  returns the color associated with a player conn'],['fun','etron','server_state:new/0','  returns a new empty ServerState'],['fun','etron','server_state:remove_client/2','  removes a Client association with a color  and'],['fun','etron','tcp:send/2','  convert Message to binary and send it to Socket'],['fun','etron','tcp:startServer/2','  start a tcp server listening on Port.'],['fun','etron','tcp:stopServer/1',[]],['fun','etron','test_client:connect/0',[]],['fun','etron','test_client:disconnect/1',[]],['fun','etron','utility:crashHandling/3','Logic for crash handling.'],['fun','etron','utility:gameActive/1','Returns true if the game is active.'],['fun','etron','utility:getActivePlayers/1','Returns a list of active players.'],['fun','etron','utility:getCrashedPlayers/3','	Returns a list of all player Ids who crashed this'],['fun','etron','utility:getPlayerId/1','Returns all Ids of the Players in the list.'],['fun','etron','utility:getPlayersStart/2','Returns random start positions of submitted Player'],['fun','etron','utility:hasPlayer/2','Returns the Id if the player is in the player list'],['fun','etron','utility:playerCrash/1','Returns a list of PlayerIds who crashed against ea'],['fun','etron','utility:playerCrash/2','Checks if Player has same coordinates than another'],['fun','etron','utility:tailCrash/2','Returns a List of PlayerIds who crashed against a '],['fun','etron','utility:updateDirection/3','Update PlayerIds direction in Players list to Dire'],['fun','etron','utility:updatePosition/1','Updates position of all players in list.'],['fun','etron','utility:updateStatus/3','Updates PlayerIds state in Players list to NewStat'],['fun','etron','utility:wallCrash/2','Returns a list of PlayerIds who crashed against a '],['fun','etron','wxgl_canvas:afterDraw/1',[]],['fun','etron','wxgl_canvas:beforeDraw/1',[]],['fun','etron','wxgl_canvas:close/1',[]],['fun','etron','wxgl_canvas:fillRect/5',[]],['fun','etron','wxgl_canvas:init/2',[]],['fun','etron','wxgl_canvas:setColor/2',[]],['fun','etron','wxgl_canvas:setKeyUpCallback/2',[]],['fun','etron','wxgl_canvas:setSize/2',[]]];