var index = [['app','elixir_chat','elixir_chat','[application]'],['mod','elixir_chat','blocktrans_extractor',[]],['mod','elixir_chat','blocktrans_parser',[]],['mod','elixir_chat','blocktrans_scanner',[]],['mod','elixir_chat','erlydtl','   Public interface for ErlyDTL.'],['mod','elixir_chat','erlydtl_compiler','   ErlyDTL template compiler.'],['mod','elixir_chat','erlydtl_contrib_humanize',[]],['mod','elixir_chat','erlydtl_custom_tags',[]],['mod','elixir_chat','erlydtl_dateformat',[]],['mod','elixir_chat','erlydtl_dateformat_tests',[]],['mod','elixir_chat','erlydtl_deps','   ErlyDTL helper module.'],['mod','elixir_chat','erlydtl_example_variable_storage',[]],['mod','elixir_chat','erlydtl_extension_test',[]],['mod','elixir_chat','erlydtl_filters','   Template filters.'],['mod','elixir_chat','erlydtl_functional_tests','      ErlyDTL test suite.'],['mod','elixir_chat','erlydtl_i18n',[]],['mod','elixir_chat','erlydtl_runtime',[]],['mod','elixir_chat','erlydtl_scanner','   Template language scanner.'],['mod','elixir_chat','erlydtl_slice',[]],['mod','elixir_chat','erlydtl_unittests',[]],['mod','elixir_chat','erlydtl_unparser',[]],['mod','elixir_chat','gettext',[]],['mod','elixir_chat','i18n_manager',[]],['mod','elixir_chat','po_generator',[]],['mod','elixir_chat','po_scanner',[]],['mod','elixir_chat','sources_parser',[]],['mod','elixir_chat','sources_parser_unittests',[]],['fun','elixir_chat','blocktrans_extractor:extract/1',[]],['fun','elixir_chat','blocktrans_parser:parse/1',[]],['fun','elixir_chat','blocktrans_scanner:scan/1',[]],['fun','elixir_chat','erlydtl:compile/2',[]],['fun','elixir_chat','erlydtl:compile/2',[]],['fun','elixir_chat','erlydtl:compile_dir/1',[]],['fun','elixir_chat','erlydtl:compile_dir/1',[]],['fun','elixir_chat','erlydtl_compiler:compile/2',[]],['fun','elixir_chat','erlydtl_compiler:compile/3',[]],['fun','elixir_chat','erlydtl_compiler:compile_dir/2',[]],['fun','elixir_chat','erlydtl_compiler:compile_dir/3',[]],['fun','elixir_chat','erlydtl_compiler:format/3',[]],['fun','elixir_chat','erlydtl_compiler:merge_info/2',[]],['fun','elixir_chat','erlydtl_compiler:parse/1',[]],['fun','elixir_chat','erlydtl_compiler:resolve_scoped_variable_ast/2',[]],['fun','elixir_chat','erlydtl_compiler:value_ast/5',[]],['fun','elixir_chat','erlydtl_contrib_humanize:intcomma/1',[]],['fun','elixir_chat','erlydtl_custom_tags:custom1/1',[]],['fun','elixir_chat','erlydtl_custom_tags:custom2/2',[]],['fun','elixir_chat','erlydtl_custom_tags:custom3/2',[]],['fun','elixir_chat','erlydtl_dateformat:format/1',[]],['fun','elixir_chat','erlydtl_dateformat:format/2',[]],['fun','elixir_chat','erlydtl_dateformat_tests:run_tests/0',[]],['fun','elixir_chat','erlydtl_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','elixir_chat','erlydtl_deps:get_base_dir/1','Return the application directory for Module.'],['fun','elixir_chat','erlydtl_extension_test:compile_ast/3',[]],['fun','elixir_chat','erlydtl_extension_test:parse/1',[]],['fun','elixir_chat','erlydtl_extension_test:scan/1',[]],['fun','elixir_chat','erlydtl_filters:add/2','Adds to values.'],['fun','elixir_chat','erlydtl_filters:addDefaultURI/1',[]],['fun','elixir_chat','erlydtl_filters:addslashes/1','Adds slashes before quotes.'],['fun','elixir_chat','erlydtl_filters:capfirst/1','Capitalizes the first character of the value.'],['fun','elixir_chat','erlydtl_filters:cast_to_float/1',[]],['fun','elixir_chat','erlydtl_filters:cast_to_integer/1',[]],['fun','elixir_chat','erlydtl_filters:center/2','Centers the value in a field of a given width.'],['fun','elixir_chat','erlydtl_filters:cut/2','Removes all values of arg from the given string.'],['fun','elixir_chat','erlydtl_filters:date/1','Formats a date according to the default format.'],['fun','elixir_chat','erlydtl_filters:date/2','Formats a date according to the given format.'],['fun','elixir_chat','erlydtl_filters:default/2','If value evaluates to false, use given default.'],['fun','elixir_chat','erlydtl_filters:default_if_none/2','If (and only if) value is undefined, use given def'],['fun','elixir_chat','erlydtl_filters:dictsort/2','Takes a list of dictionaries or proplists and retu'],['fun','elixir_chat','erlydtl_filters:dictsortreversed/2','Same as dictsort, but the list is reversed.'],['fun','elixir_chat','erlydtl_filters:divisibleby/2','Returns true if the value is divisible by the argu'],['fun','elixir_chat','erlydtl_filters:escapejs/1','Escapes characters for use in JavaScript strings.'],['fun','elixir_chat','erlydtl_filters:filesizeformat/1','Format the value like a human-readable file size.'],['fun','elixir_chat','erlydtl_filters:first/1','Returns the first item in a list.'],['fun','elixir_chat','erlydtl_filters:fix_ampersands/1','Replaces ampersands with & entities.'],['fun','elixir_chat','erlydtl_filters:floatformat/2','When used without an argument, rounds a floating-p'],['fun','elixir_chat','erlydtl_filters:force_escape/1','Applies HTML escaping to a string.'],['fun','elixir_chat','erlydtl_filters:format_integer/1',[]],['fun','elixir_chat','erlydtl_filters:format_number/1',[]],['fun','elixir_chat','erlydtl_filters:get_digit/2','Given a whole number, returns the requested digit,'],['fun','elixir_chat','erlydtl_filters:iriencode/1',[]],['fun','elixir_chat','erlydtl_filters:join/2','Joins a list with a given separator.'],['fun','elixir_chat','erlydtl_filters:last/1','Returns the last item in a list.'],['fun','elixir_chat','erlydtl_filters:length/1','Returns the length of the value.'],['fun','elixir_chat','erlydtl_filters:length_is/2','Returns True iff the values length is the argumen'],['fun','elixir_chat','erlydtl_filters:linebreaks/1','Replaces line breaks in plain text with appropriat'],['fun','elixir_chat','erlydtl_filters:linebreaksbr/1','Converts all newlines to HTML line breaks.'],['fun','elixir_chat','erlydtl_filters:linenumbers/1','Displays text with line numbers.'],['fun','elixir_chat','erlydtl_filters:ljust/2','Left-aligns the value in a field of a given width.'],['fun','elixir_chat','erlydtl_filters:lower/1','Converts a string into all lowercase.'],['fun','elixir_chat','erlydtl_filters:make_list/1','Returns the value turned into a list.'],['fun','elixir_chat','erlydtl_filters:phone2numeric/1','Converts a phone number (possibly containing lette'],['fun','elixir_chat','erlydtl_filters:pluralize/1',[]],['fun','elixir_chat','erlydtl_filters:pluralize/2','Returns a plural suffix if the value is not 1.'],['fun','elixir_chat','erlydtl_filters:pprint/1','"pretty print" arbitrary data structures.'],['fun','elixir_chat','erlydtl_filters:random/1','Returns a random item from the given list.'],['fun','elixir_chat','erlydtl_filters:random_num/1',[]],['fun','elixir_chat','erlydtl_filters:random_range/1',[]],['fun','elixir_chat','erlydtl_filters:removetags/2',[]],['fun','elixir_chat','erlydtl_filters:rjust/2','Right-aligns the value in a field of a given width'],['fun','elixir_chat','erlydtl_filters:round/2',[]],['fun','elixir_chat','erlydtl_filters:slice/2','Returns a slice of the list.'],['fun','elixir_chat','erlydtl_filters:slugify/1','Converts to lowercase, removes non-word characters'],['fun','elixir_chat','erlydtl_filters:stringformat/2','Returns a formatted string.'],['fun','elixir_chat','erlydtl_filters:stringformat_io/7','  A conversion specifier contains two or more cha'],['fun','elixir_chat','erlydtl_filters:striptags/1','Strips all [X]HTML tags.'],['fun','elixir_chat','erlydtl_filters:time/1','Formats a time according to the given format.'],['fun','elixir_chat','erlydtl_filters:time/2',[]],['fun','elixir_chat','erlydtl_filters:timesince/1',[]],['fun','elixir_chat','erlydtl_filters:timesince/2',[]],['fun','elixir_chat','erlydtl_filters:timeuntil/1',[]],['fun','elixir_chat','erlydtl_filters:timeuntil/2',[]],['fun','elixir_chat','erlydtl_filters:title/1','Converts a string into titlecase.'],['fun','elixir_chat','erlydtl_filters:truncatechars/2','Truncates a string after a certain number of chara'],['fun','elixir_chat','erlydtl_filters:truncatewords/2','Truncates a string after a certain number of words'],['fun','elixir_chat','erlydtl_filters:truncatewords_html/2','Similar to truncatewords, except that it is aware '],['fun','elixir_chat','erlydtl_filters:unjoin/2',[]],['fun','elixir_chat','erlydtl_filters:unordered_list/1','Recursively takes a self-nested list and returns a'],['fun','elixir_chat','erlydtl_filters:upper/1','Converts a string into all uppercase.'],['fun','elixir_chat','erlydtl_filters:urlencode/1','Escapes a value for use in a URL.'],['fun','elixir_chat','erlydtl_filters:urlize/1','Converts URLs in text into clickable links.'],['fun','elixir_chat','erlydtl_filters:urlize/2',[]],['fun','elixir_chat','erlydtl_filters:urlizetrunc/2','Converts URLs into clickable links just like urliz'],['fun','elixir_chat','erlydtl_filters:wordcount/1','Returns the number of words.'],['fun','elixir_chat','erlydtl_filters:wordwrap/2','Wraps words at specified line length, uses &lt;BR/'],['fun','elixir_chat','erlydtl_filters:yesno/2','Given a string mapping values for true, false and '],['fun','elixir_chat','erlydtl_functional_tests:run_test/1',[]],['fun','elixir_chat','erlydtl_functional_tests:run_tests/0',[]],['fun','elixir_chat','erlydtl_i18n:translate/2',[]],['fun','elixir_chat','erlydtl_scanner:resume/1',[]],['fun','elixir_chat','erlydtl_scanner:scan/1','Scan the template string T and return the a token '],['fun','elixir_chat','erlydtl_slice:slice/2',[]],['fun','elixir_chat','erlydtl_slice:slice_input_cases/7',[]],['fun','elixir_chat','erlydtl_unittests:run_tests/0',[]],['fun','elixir_chat','erlydtl_unparser:unparse/1',[]],['fun','elixir_chat','gettext:key2str/2',[]],['fun','elixir_chat','i18n_manager:generate_pos/1',[]],['fun','elixir_chat','po_generator:generate_file/3',[]],['fun','elixir_chat','po_scanner:scan/1',[]],['fun','elixir_chat','sources_parser:parse/0',[]],['fun','elixir_chat','sources_parser:parse/1',[]],['fun','elixir_chat','sources_parser:process_content/2',[]],['fun','elixir_chat','sources_parser_unittests:run_tests/0',[]]];