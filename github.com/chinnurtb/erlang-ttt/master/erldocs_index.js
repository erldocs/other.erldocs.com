var index = [['app','erlang-ttt','erlang-ttt','[application]'],['mod','erlang-ttt','ai',[]],['mod','erlang-ttt','board',[]],['mod','erlang-ttt','erlangttt_app',[]],['mod','erlang-ttt','erlangttt_sup',[]],['mod','erlang-ttt','game_loop',[]],['mod','erlang-ttt','game_record',[]],['mod','erlang-ttt','game_rules',[]],['mod','erlang-ttt','game_state_interactor',[]],['mod','erlang-ttt','human',[]],['mod','erlang-ttt','player_type_importer',[]],['mod','erlang-ttt','player_type_interactor',[]],['mod','erlang-ttt','player_type_validator',[]],['mod','erlang-ttt','runner',[]],['mod','erlang-ttt','special_case',[]],['mod','erlang-ttt','std_io',[]],['mod','erlang-ttt','ui_interactor',[]],['fun','erlang-ttt','ai:take_space/3',[]],['fun','erlang-ttt','board:create/1',[]],['fun','erlang-ttt','board:is_open_space/2',[]],['fun','erlang-ttt','board:take_space/3',[]],['fun','erlang-ttt','board:to_string/1',[]],['fun','erlang-ttt','erlangttt_app:start/2',[]],['fun','erlang-ttt','erlangttt_app:stop/1',[]],['fun','erlang-ttt','erlangttt_sup:init/1',[]],['fun','erlang-ttt','erlangttt_sup:start_link/0',[]],['fun','erlang-ttt','game_loop:start/1',[]],['fun','erlang-ttt','game_record:get_board/1',[]],['fun','erlang-ttt','game_record:get_player_turn/1',[]],['fun','erlang-ttt','game_record:get_player_type/2',[]],['fun','erlang-ttt','game_record:new_game/1',[]],['fun','erlang-ttt','game_record:set_player_type/2',[]],['fun','erlang-ttt','game_record:switch_player_turn/1',[]],['fun','erlang-ttt','game_record:take_space/3',[]],['fun','erlang-ttt','game_record:untaken_space/0',[]],['fun','erlang-ttt','game_rules:diagonal_winner/1',[]],['fun','erlang-ttt','game_rules:draw/1',[]],['fun','erlang-ttt','game_rules:end_game/1',[]],['fun','erlang-ttt','game_rules:horizontal_winner/1',[]],['fun','erlang-ttt','game_rules:vertical_winner/1',[]],['fun','erlang-ttt','game_state_interactor:retrieve_player_turn_space/3',[]],['fun','erlang-ttt','game_state_interactor:take_turn/2',[]],['fun','erlang-ttt','game_state_interactor:update/2',[]],['fun','erlang-ttt','game_state_interactor:update_player_type/3',[]],['fun','erlang-ttt','human:take_space/2',[]],['fun','erlang-ttt','player_type_importer:import/1',[]],['fun','erlang-ttt','player_type_interactor:player_type/2',[]],['fun','erlang-ttt','player_type_validator:validate/1',[]],['fun','erlang-ttt','runner:run/1',[]],['fun','erlang-ttt','special_case:check/3',[]],['fun','erlang-ttt','std_io:atom_input/0',[]],['fun','erlang-ttt','std_io:flash/1',[]],['fun','erlang-ttt','std_io:integer_input/0',[]],['fun','erlang-ttt','std_io:prompt/1',[]],['fun','erlang-ttt','ui_interactor:end_game/2',[]],['fun','erlang-ttt','ui_interactor:get_player_type/2',[]],['fun','erlang-ttt','ui_interactor:greet/1',[]],['fun','erlang-ttt','ui_interactor:inform_move_invalid/1',[]],['fun','erlang-ttt','ui_interactor:inform_player_type_invalid/1',[]],['fun','erlang-ttt','ui_interactor:print_board/2',[]],['fun','erlang-ttt','ui_interactor:take_space/2',[]]];