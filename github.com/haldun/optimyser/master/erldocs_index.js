var index = [['app','optimyser','optimyser','[application]'],['mod','optimyser','cron',[]],['mod','optimyser','optimyser','TEMPLATE.'],['mod','optimyser','optimyser_app','Callbacks for the optimyser application.'],['mod','optimyser','optimyser_deps','Ensure that the relatively-installed dependencies '],['mod','optimyser','optimyser_experiment',[]],['mod','optimyser','optimyser_logger',[]],['mod','optimyser','optimyser_sup','Supervisor for the optimyser application.'],['mod','optimyser','optimyser_taguchi',[]],['mod','optimyser','optimyser_util',[]],['mod','optimyser','optimyser_web','Web server for optimyser.'],['fun','optimyser','cron:add/1',[]],['fun','optimyser','cron:add/3',[]],['fun','optimyser','cron:add/4',[]],['fun','optimyser','cron:code_change/3',[]],['fun','optimyser','cron:handle_call/3',[]],['fun','optimyser','cron:handle_cast/2',[]],['fun','optimyser','cron:handle_info/2',[]],['fun','optimyser','cron:info/0',[]],['fun','optimyser','cron:init/1',[]],['fun','optimyser','cron:remove/1',[]],['fun','optimyser','cron:run_early/1',[]],['fun','optimyser','cron:start_link/0',[]],['fun','optimyser','cron:start_link/1',[]],['fun','optimyser','cron:start_link/2',[]],['fun','optimyser','cron:stop/0',[]],['fun','optimyser','cron:terminate/2',[]],['fun','optimyser','cron:test_jobs/0',[]],['fun','optimyser','cron:wakeup/0',[]],['fun','optimyser','optimyser:create_log_table/0',[]],['fun','optimyser','optimyser:log_table_name/0',[]],['fun','optimyser','optimyser:start/0','Start the optimyser server.'],['fun','optimyser','optimyser:stop/0','Stop the optimyser server.'],['fun','optimyser','optimyser_app:start/2','application start callback for optimyser.'],['fun','optimyser','optimyser_app:stop/1','application stop callback for optimyser.'],['fun','optimyser','optimyser_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','optimyser','optimyser_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','optimyser','optimyser_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','optimyser','optimyser_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','optimyser','optimyser_deps:get_base_dir/1','Return the application directory for Module.'],['fun','optimyser','optimyser_deps:local_path/1','Return an application-relative directory for this '],['fun','optimyser','optimyser_deps:local_path/1','Return an application-relative directory from Modu'],['fun','optimyser','optimyser_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','optimyser','optimyser_experiment:decode/1','Decodes a json string to optimyser experiment reco'],['fun','optimyser','optimyser_experiment:encode/1','Encode the given experiment to json string.'],['fun','optimyser','optimyser_experiment:get_experiment/1','Retrieves the experiment with given id.'],['fun','optimyser','optimyser_experiment:get_stats/1',[]],['fun','optimyser','optimyser_experiment:get_stats_json/1',[]],['fun','optimyser','optimyser_experiment:init_experiment/1','Create combinations, scheme and determines if the '],['fun','optimyser','optimyser_experiment:pick_combination/1','Pick a combination for given experiment.'],['fun','optimyser','optimyser_experiment:save_experiment/1','Save the given experiment to mnesia table.'],['fun','optimyser','optimyser_experiment:test_page_js/1','Return the test page javascript code for given exp'],['fun','optimyser','optimyser_experiment:test_page_js_ab/3',[]],['fun','optimyser','optimyser_logger:code_change/3',[]],['fun','optimyser','optimyser_logger:export_to_mysql/1',[]],['fun','optimyser','optimyser_logger:handle_call/3',[]],['fun','optimyser','optimyser_logger:handle_cast/2',[]],['fun','optimyser','optimyser_logger:handle_info/2',[]],['fun','optimyser','optimyser_logger:init/1',[]],['fun','optimyser','optimyser_logger:log_goal_page/1','Log goal page visit to database.'],['fun','optimyser','optimyser_logger:log_test_page/1','Log landing page visit to database.'],['fun','optimyser','optimyser_logger:monitor_logs/0',[]],['fun','optimyser','optimyser_logger:start_link/0',[]],['fun','optimyser','optimyser_logger:terminate/2',[]],['fun','optimyser','optimyser_logger:update_combination_visit/2',[]],['fun','optimyser','optimyser_logger:update_conversion/2',[]],['fun','optimyser','optimyser_logger:update_impression/1','Increments the total impression count for the expe'],['fun','optimyser','optimyser_sup:init/1','supervisor callback.'],['fun','optimyser','optimyser_sup:start_link/0','API for starting the supervisor.'],['fun','optimyser','optimyser_sup:upgrade/0','Add processes if necessary.'],['fun','optimyser','optimyser_taguchi:add_array/2',[]],['fun','optimyser','optimyser_taguchi:arrange_array/2',[]],['fun','optimyser','optimyser_taguchi:code_change/3',[]],['fun','optimyser','optimyser_taguchi:get_stats/0',[]],['fun','optimyser','optimyser_taguchi:get_taguchi_array/1','Returns true if the given combination scheme is ap'],['fun','optimyser','optimyser_taguchi:handle_call/3',[]],['fun','optimyser','optimyser_taguchi:handle_cast/2',[]],['fun','optimyser','optimyser_taguchi:handle_info/2',[]],['fun','optimyser','optimyser_taguchi:init/1',[]],['fun','optimyser','optimyser_taguchi:is_taguchi/1',[]],['fun','optimyser','optimyser_taguchi:start_link/0',[]],['fun','optimyser','optimyser_taguchi:terminate/2',[]],['fun','optimyser','optimyser_util:dump_to_textfile/2',[]],['fun','optimyser','optimyser_util:export_combid/1',[]],['fun','optimyser','optimyser_util:export_guid/0',[]],['fun','optimyser','optimyser_util:import_combid/1',[]],['fun','optimyser','optimyser_util:new_guid/0',[]],['fun','optimyser','optimyser_util:shuffle/1','Shuffles a list.'],['fun','optimyser','optimyser_util:string_join/2',[]],['fun','optimyser','optimyser_web:loop/2','Main web server loop.'],['fun','optimyser','optimyser_web:start/1','Starts optimyser web server.'],['fun','optimyser','optimyser_web:stop/0','Stops optimyser web server.']];