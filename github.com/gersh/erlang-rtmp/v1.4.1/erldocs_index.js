var index = [['app','erlang-rtmp','erlang-rtmp','[application]'],['mod','erlang-rtmp','rtmp','       RTMP encoding/decoding module.'],['mod','erlang-rtmp','rtmp_lib','       RTMP encoding/decoding module.'],['mod','erlang-rtmp','rtmp_monitor','       RTMP socket monitor.'],['mod','erlang-rtmp','rtmp_socket','       RTMP socket module.'],['mod','erlang-rtmp','rtmpt','       RTMPT interface.'],['fun','erlang-rtmp','rtmp:decode/1','Encodes outgoing message to chunked binary packet,'],['fun','erlang-rtmp','rtmp:decode_list/1',[]],['fun','erlang-rtmp','rtmp:element/2',[]],['fun','erlang-rtmp','rtmp:encode/1','Encodes outgoing message to chunked binary packet,'],['fun','erlang-rtmp','rtmp:encode_list/1',[]],['fun','erlang-rtmp','rtmp:setelement/3',[]],['fun','erlang-rtmp','rtmp_lib:connect/1','Send connect request to server.'],['fun','erlang-rtmp','rtmp_lib:connect/1','Send connect request to server with some predefine'],['fun','erlang-rtmp','rtmp_lib:createStream/1',[]],['fun','erlang-rtmp','rtmp_lib:pause_notify/2',[]],['fun','erlang-rtmp','rtmp_lib:play/3',[]],['fun','erlang-rtmp','rtmp_lib:play_complete/3',[]],['fun','erlang-rtmp','rtmp_lib:play_start/2',[]],['fun','erlang-rtmp','rtmp_lib:seek_failed/2',[]],['fun','erlang-rtmp','rtmp_lib:seek_notify/3',[]],['fun','erlang-rtmp','rtmp_lib:shared_object_connect/2',[]],['fun','erlang-rtmp','rtmp_lib:shared_object_set/4',[]],['fun','erlang-rtmp','rtmp_lib:wait_for_reply/2',[]],['fun','erlang-rtmp','rtmp_monitor:init/1','Called by gen_server framework at process startup.'],['fun','erlang-rtmp','rtmp_monitor:start_link/0','Called by a supervisor to start the listening proc'],['fun','erlang-rtmp','rtmp_monitor:start_link/1',[]],['fun','erlang-rtmp','rtmp_socket:accept/1','Accepts client connection on socket Socket, starts'],['fun','erlang-rtmp','rtmp_socket:connect/1','Accepts client connection on socket Socket, starts'],['fun','erlang-rtmp','rtmp_socket:getopts/1','Just the same as inet:getopts/2 this function gets'],['fun','erlang-rtmp','rtmp_socket:getstat/1',[]],['fun','erlang-rtmp','rtmp_socket:invoke/2',[]],['fun','erlang-rtmp','rtmp_socket:invoke/4',[]],['fun','erlang-rtmp','rtmp_socket:notify/4',[]],['fun','erlang-rtmp','rtmp_socket:send/1','Sends message to client.'],['fun','erlang-rtmp','rtmp_socket:setopts/1','Just the same as inet:setopts/2 this function chan'],['fun','erlang-rtmp','rtmp_socket:start_server/1','Starts RTMP listener on port Port, registered unde'],['fun','erlang-rtmp','rtmp_socket:start_socket/1','Starts RTMP socket with provided consumer and init'],['fun','erlang-rtmp','rtmp_socket:status/1',[]],['fun','erlang-rtmp','rtmp_socket:status/1',[]],['fun','erlang-rtmp','rtmpt:close/2','Closes RTMPT session.'],['fun','erlang-rtmp','rtmpt:idle/3','Asks RTMPT buffer for any data, need to be receive'],['fun','erlang-rtmp','rtmpt:open/2','Opens RTMPT session.'],['fun','erlang-rtmp','rtmpt:send/4','Push data to RTMP socket and asks RTMPT buffer for']];