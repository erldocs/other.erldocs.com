var index = [['app','beam-erl','beam-erl','[application]'],['mod','beam-erl','beam_bifs',[]],['mod','beam-erl','beam_flow',[]],['fun','beam-erl','beam_bifs:boand/1','  Emit the boolean and of the streaming value and'],['fun','beam-erl','beam_bifs:bonot/0','  Emit the boolean not of the streaming value and'],['fun','beam-erl','beam_bifs:boor/1','  Emit the boolean or of the streaming value and '],['fun','beam-erl','beam_bifs:boxor/1','  Emit the boolean xor of the streaming value and'],['fun','beam-erl','beam_bifs:eq/1','  Is the streaming value equal to some a priori k'],['fun','beam-erl','beam_bifs:fdiv/1','  Emit the floating point division of the streami'],['fun','beam-erl','beam_bifs:gt/1','  Is the streaming value greater than to some a p'],['fun','beam-erl','beam_bifs:gte/1','  Is the streaming value greater than or equal to'],['fun','beam-erl','beam_bifs:iband/1','  Emit the binary and of the streaming value and '],['fun','beam-erl','beam_bifs:ibnot/0','  Emit the binary not of the streaming value.'],['fun','beam-erl','beam_bifs:ibor/1','  Emit the binary or of the streaming value and a'],['fun','beam-erl','beam_bifs:ibsl/1','  Emit the binary shift left of the streaming val'],['fun','beam-erl','beam_bifs:ibsr/1','  Emit the binary shift right of the streaming va'],['fun','beam-erl','beam_bifs:ibxor/1','  Emit the binary xor of the streaming value and '],['fun','beam-erl','beam_bifs:idiv/1','  Emit the integral division of the streaming val'],['fun','beam-erl','beam_bifs:irem/1','  Emit the integral remainder of the streaming va'],['fun','beam-erl','beam_bifs:lt/1','  Is the streaming value less than to some a prio'],['fun','beam-erl','beam_bifs:lte/1','  Is the streaming value less than or equal to so'],['fun','beam-erl','beam_bifs:minus/1','  Emit the subtraction of the streaming value to '],['fun','beam-erl','beam_bifs:mul/1','  Emit the multiplication of the streaming value '],['fun','beam-erl','beam_bifs:neq/1','  Is the streaming value not equal to some a prio'],['fun','beam-erl','beam_bifs:plus/1','  Emit the addition of the streaming value to an '],['fun','beam-erl','beam_bifs:seq/1','  Is the streaming value exactly equal to some a '],['fun','beam-erl','beam_bifs:sne/1','  Is the streaming value exactly not equal to som'],['fun','beam-erl','beam_bifs:uminus/0','  Emits the unary minus of the streaming value.'],['fun','beam-erl','beam_bifs:uplus/0','  Emit the unary plus of the streaming value.'],['fun','beam-erl','beam_flow:branch/1','  Branch a flow into multiple sub flows.'],['fun','beam-erl','beam_flow:branch/1','  Branch a flow into multiple sub flows.'],['fun','beam-erl','beam_flow:combine/1','  Combine, or union, a set of pipelines into a si'],['fun','beam-erl','beam_flow:combine/1','  Combine, or union, a set of pipelines into an e'],['fun','beam-erl','beam_flow:filter/1','  Define a filter oepration given a Module, Fun a'],['fun','beam-erl','beam_flow:filter/1','  Define a filter operation given a predicate (bo'],['fun','beam-erl','beam_flow:infill/3','  Replace occurances of the atom in and ctx w'],['fun','beam-erl','beam_flow:net/1','  Produce a human eye friendly representation of '],['fun','beam-erl','beam_flow:new/0','  Create a new empty flow.'],['fun','beam-erl','beam_flow:pipe/1','  Connect a set of flow operations in a named pip'],['fun','beam-erl','beam_flow:push/1','  Push Data into a stream identified by Label int'],['fun','beam-erl','beam_flow:push/1','  Push Data into a stream identified by Label int'],['fun','beam-erl','beam_flow:transform/1','  Define a transform operation given a Module, Fu'],['fun','beam-erl','beam_flow:transform/1','  Define a transform operation given a function r']];