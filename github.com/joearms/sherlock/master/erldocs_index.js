var index = [['app','sherlock','sherlock','[application]'],['mod','sherlock','mochiweb_html','Loosely tokenizes and generates parse trees for HT'],['mod','sherlock','sherlock',[]],['mod','sherlock','sherlock_app',[]],['mod','sherlock','sherlock_best',[]],['mod','sherlock','sherlock_get_mails',[]],['mod','sherlock','sherlock_lib',[]],['mod','sherlock','sherlock_mails',[]],['mod','sherlock','sherlock_parse_mails',[]],['mod','sherlock','sherlock_similar',[]],['mod','sherlock','sherlock_tfidf',[]],['mod','sherlock','text_analyzers',[]],['fun','sherlock','mochiweb_html:escape/1','Escape a string such that its safe for HTML (amp;'],['fun','sherlock','mochiweb_html:escape_attr/1','Escape a string such that its safe for HTML attrs'],['fun','sherlock','mochiweb_html:parse/1','tokenize and then transform the token stream into '],['fun','sherlock','mochiweb_html:parse_tokens/1','Transform the output of tokens(Doc) into a HTML tr'],['fun','sherlock','mochiweb_html:to_html/1','Convert a list of html_token() to a HTML document.'],['fun','sherlock','mochiweb_html:to_tokens/1','Convert a html_node() tree to a list of tokens.'],['fun','sherlock','mochiweb_html:tokens/1','Transform the input UTF-8 HTML into a token stream'],['fun','sherlock','sherlock_app:start/2',[]],['fun','sherlock','sherlock_app:stop/1',[]],['fun','sherlock','sherlock_best:add/3',[]],['fun','sherlock','sherlock_best:final/1',[]],['fun','sherlock','sherlock_best:init/1',[]],['fun','sherlock','sherlock_get_mails:fetch_files/2',[]],['fun','sherlock','sherlock_get_mails:get_index/1',[]],['fun','sherlock','sherlock_get_mails:parse_index/2',[]],['fun','sherlock','sherlock_lib:file2term/1',[]],['fun','sherlock','sherlock_lib:merge_kv/2','  Take a property list [{Key,Val}] where Key can '],['fun','sherlock','sherlock_lib:month2index/1',[]],['fun','sherlock','sherlock_lib:show_ets/2',[]],['fun','sherlock','sherlock_lib:term2file/2',[]],['fun','sherlock','sherlock_parse_mails:parse_compressed_mail_file/3',[]],['fun','sherlock','sherlock_similar:cosine_similarity/2',[]],['fun','sherlock','sherlock_similar:cross/2',[]],['fun','sherlock','sherlock_similar:norm/1',[]],['fun','sherlock','sherlock_tfidf:extract_all_words_in_file/1',[]],['fun','sherlock','sherlock_tfidf:final/1',[]],['fun','sherlock','sherlock_tfidf:keywords_in_binary/2',[]],['fun','sherlock','sherlock_tfidf:keywords_in_file/2',[]],['fun','sherlock','sherlock_tfidf:start/0',[]],['fun','sherlock','sherlock_tfidf:update/2',[]],['fun','sherlock','text_analyzers:integer_analyzer_factory/2','Tokenize incoming text as integers.'],['fun','sherlock','text_analyzers:noop_analyzer_factory/2','Treat the incoming text as a single token.'],['fun','sherlock','text_analyzers:standard_analyzer_factory/2','Tokenize incoming text using roughly the same rule'],['fun','sherlock','text_analyzers:whitespace_analyzer_factory/2','Tokenize incoming text using whitespace, return th']];