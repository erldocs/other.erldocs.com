var index = [['app','crary','crary','[application]'],['mod','crary','crary_app','.'],['mod','crary','crary_body','This module provides functions for detecting, read'],['mod','crary','crary_headers','This module acts an an associative data-structure '],['mod','crary','crary_port','This module is responsible for opening a TCP port '],['mod','crary','crary_sock','Sock abstraction for HTTP.'],['mod','crary','crary_sup',[]],['mod','crary','crary_util','note that stuff here may/should end up somewhere e'],['fun','crary','crary_app:start/2','   This function is called whenever an applicatio'],['fun','crary','crary_app:stop/1','   This function is called whenever an applicatio'],['fun','crary','crary_body:done_writing/1','Writing the Trailers and the closing chunk.'],['fun','crary','crary_body:done_writing/1','Writing the closing chunk.'],['fun','crary','crary_body:has_body/1','Does this request have a body that needs to be rea'],['fun','crary','crary_body:new_reader/1','Return a new chunk reader.'],['fun','crary','crary_body:new_writer/1','Return a new chunk writer.'],['fun','crary','crary_body:read/1','Read and return Len bytes.'],['fun','crary','crary_body:read/1','Read and return the next available chunk.'],['fun','crary','crary_body:read_all/1','Read and return the full body.'],['fun','crary','crary_body:with_writer/1','Call F(Writer) with a new writer, automatically cl'],['fun','crary','crary_body:write/1','Write a chunk of data.'],['fun','crary','crary_headers:add/1','Return headers() extended with the specified heade'],['fun','crary','crary_headers:add/2','Return headers() extended with the specified heade'],['fun','crary','crary_headers:extend/1','Return headers() extended with the specified heade'],['fun','crary','crary_headers:foreach/1','Call F({K, V}) for each header in Headers.'],['fun','crary','crary_headers:from_sock/1','Create a header() structure from the socket.'],['fun','crary','crary_headers:from_sock/2','Create a header() structure from the socket.'],['fun','crary','crary_headers:get/1','Return the value of the header given by the Name.'],['fun','crary','crary_headers:get/1','Return the value of the header given by the Name.'],['fun','crary','crary_headers:has/1','Does Headers include Name?.'],['fun','crary','crary_headers:lookup/1','Does Headers include Name?.'],['fun','crary','crary_headers:new/0','Create an empty headers() structure.'],['fun','crary','crary_headers:new/1','Create a header() structure from data.'],['fun','crary','crary_headers:to_list/1','Convert Headers to a tuple_list().'],['fun','crary','crary_headers:write/1','Write Headers to socket, including terminating bla'],['fun','crary','crary_port:accepted/1','crary_sock calls this to notify this module that i'],['fun','crary','crary_port:start_link/1','Start a crary_port server to listen on a port.'],['fun','crary','crary_port:start_link/1','Start a crary_port server to listen on a port.'],['fun','crary','crary_sock:done_reading/1','Indicate that the handler or controller is done re'],['fun','crary','crary_sock:done_writing/1','Indicate that the handler or controller is done wr'],['fun','crary','crary_sock:peer_name/1','Return the name of the sockets peer.'],['fun','crary','crary_sock:peer_port/1','Return the port of the sockets peer.'],['fun','crary','crary_sock:peername/1','Return the address and port of the sockets peer.'],['fun','crary','crary_sock:read/1','Return a binary of the next Len bytes read from So'],['fun','crary','crary_sock:read/1','Return the next Len bytes read from Sock.'],['fun','crary','crary_sock:read_line/1','Return a string of the next line read from the soc'],['fun','crary','crary_sock:read_line/1','Return a string of the next line read from the soc'],['fun','crary','crary_sock:read_req_line/1','Read the request line from the socket.'],['fun','crary','crary_sock:read_req_line/1','Read the request line from the socket.'],['fun','crary','crary_sock:sockname/1','Return the address and port of the sockets local '],['fun','crary','crary_sock:start_link/1','Usually only called by crary_port to spawn/accept/'],['fun','crary','crary_sock:this_name/1','Return the name of the sockets local side.'],['fun','crary','crary_sock:this_port/1','Return the port of the sockets local side.'],['fun','crary','crary_sock:write/1','Write to the socket.'],['fun','crary','crary_sock:write_resp_line/1','Write the response line to the socket.'],['fun','crary','crary_sock:write_resp_line/1','Write the response line to the socket.'],['fun','crary','crary_sup:init/1','   Whenever a supervisor is started using   supe'],['fun','crary','crary_sup:start_link/0','Starts the supervisor.'],['fun','crary','crary_util:spawn_link/1','proc_lib:spawn_link() doesnt detect uncaught thro']];