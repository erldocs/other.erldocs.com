 :: Extracting meta information
$ infinity  `git ls-remote --heads --tags 'https://github.com/megaplan/eworkman'  2>&1`
>>> [repo] 1 branches, 2 tags
WTF {ok,{{"HTTP/1.1",200,"OK"},
         [{"cache-control","max-age=300"},
          {"connection","keep-alive"},
          {"date","Sat, 10 Oct 2015 19:34:37 GMT"},
          {"via","1.1 varnish"},
          {"accept-ranges","bytes"},
          {"etag","\"0cc52ed56c74d74dcc2a47084bc0b52114ce0a44\""},
          {"vary","Authorization,Accept-Encoding"},
          {"content-length","588"},
          {"content-type","text/plain; charset=utf-8"},
          {"expires","Sat, 10 Oct 2015 19:39:37 GMT"},
          {"content-security-policy","default-src 'none'"},
          {"x-xss-protection","1; mode=block"},
          {"x-frame-options","deny"},
          {"x-content-type-options","nosniff"},
          {"strict-transport-security","max-age=31536000"},
          {"x-served-by","cache-ams4128-AMS"},
          {"x-cache","MISS"},
          {"x-cache-hits","0"},
          {"access-control-allow-origin","*"},
          {"source-age","0"}],
         "{name,\"eworkman\"}.\n{target_path,\"github.com/megaplan/eworkman\"}.\n{url,\"https://github.com/megaplan/eworkman\"}.\n{vsn_format,2}.\n{vsn_pass,101}.\n{time_begin,{{2015,9,21},{23,28,25}}}.\n{method,git}.\n{count_tags,2}.\n{count_branches,1}.\n{revisions,[{rev,branch,\"master\",\"11f6fed1b1b27cc18c85abccfb09701272faa04d\",\n                 true,[],[]},\n            {rev,tag,\"v0.0.33\",\"51708bdf45fafcf327340e85fc73fabe48325b70\",\n                 true,[],[]},\n            {rev,tag,\"v0.0.45\",\"9d879d7a58670b9b006dd26fb79f40bef52b0159\",\n                 true,[],[]}]}.\n{time_end,{{2015,9,21},{23,28,26}}}.\n"}}
 :: Writing meta to "/home/pete/wefwefwef/docs/other/f23e5e7ee87a9ccf0d77e7cd51827e3214fce80f/meta.txt"
 :: Skipping tag "v0.0.45"
 :: Skipping tag "v0.0.33"
 :: Skipping branch "master"
 :: Finishing up
$ 5000  `rm -r '/home/pete/wefwefwef/docs/other/f23e5e7ee87a9ccf0d77e7cd51827e3214fce80f/eworkman'  2>&1`
