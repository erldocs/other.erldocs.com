var index = [['app','tinymt-erlang','tinymt-erlang','[application]'],['mod','tinymt-erlang','tinymt32','TinyMT 32-bit pseudo random generator module in pu'],['fun','tinymt-erlang','tinymt32:init/1','Initialize default polynomial for TinyMT  and ret'],['fun','tinymt-erlang','tinymt32:init_by_list32/1','Generate a TinyMT internal state from a list of 32'],['fun','tinymt-erlang','tinymt32:next_state/1','Advance TinyMT state for one step.'],['fun','tinymt-erlang','tinymt32:seed/0','Set the default seed value to TinyMT state in the '],['fun','tinymt-erlang','tinymt32:seed/1','Set the seed value to TinyMT state in the process '],['fun','tinymt-erlang','tinymt32:seed/1','Set the seed value to TinyMT state in the process '],['fun','tinymt-erlang','tinymt32:seed0/0','Set the default seed value to TinyMT state in the '],['fun','tinymt-erlang','tinymt32:setgenparams/1','Set the generation parameter values to TinyMT poly'],['fun','tinymt-erlang','tinymt32:setgenparams/1','Set the generation parameter values to TinyMT poly'],['fun','tinymt-erlang','tinymt32:temper/1','Generate 32bit unsigned integer from the TinyMT in'],['fun','tinymt-erlang','tinymt32:temper_float/1','Generate 32bit-resolution float from the TinyMT in'],['fun','tinymt-erlang','tinymt32:uniform/0','Generate 32bit-resolution float from the TinyMT in'],['fun','tinymt-erlang','tinymt32:uniform/1','Generate 32bit-resolution float from the given Tin'],['fun','tinymt-erlang','tinymt32:uniform_s/1','Generate 32bit-resolution float from the given Tin'],['fun','tinymt-erlang','tinymt32:uniform_s/1','Generate 32bit-resolution float from the given Tin']];