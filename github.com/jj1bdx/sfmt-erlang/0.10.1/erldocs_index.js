var index = [['app','sfmt-erlang','sfmt-erlang','[application]'],['mod','sfmt-erlang','sfmt','SIMD-oriented Fast Mersenne Twister (SFMT).'],['mod','sfmt-erlang','sfmt_pure','SIMD-oriented Fast Mersenne Twister (SFMT) in pure'],['mod','sfmt-erlang','sfmt_pure_tests','SIMD-oriented Fast Mersenne Twister (SFMT) EUnit t'],['mod','sfmt-erlang','sfmt_tests','SIMD-oriented Fast Mersenne Twister (SFMT) EUnit t'],['fun','sfmt-erlang','sfmt:gen_rand32/1','generates a 32-bit random number from the given ra'],['fun','sfmt-erlang','sfmt:gen_rand32_max/1','generates a 32-bit random number from the given ra'],['fun','sfmt-erlang','sfmt:gen_rand_all/1','filling the internal state array with SFMT PRNG.'],['fun','sfmt-erlang','sfmt:gen_rand_float/1','generates a float random number from the given ran'],['fun','sfmt-erlang','sfmt:gen_rand_list32/1','generating the 32-bit integer list of PRNG,      '],['fun','sfmt-erlang','sfmt:gen_rand_list_float/1','generating a list of uniform floats of [0.0, 1.0]'],['fun','sfmt-erlang','sfmt:get_idstring/0','returns SFMT identification string.'],['fun','sfmt-erlang','sfmt:get_lib_refc/0','returns NIF library reference count.'],['fun','sfmt-erlang','sfmt:get_min_array_size32/0','returns array size of internal state.'],['fun','sfmt-erlang','sfmt:init_by_list32/1','generates an internal state from a list of 32-bit '],['fun','sfmt-erlang','sfmt:init_gen_rand/1','generates an internal state from an integer seed.'],['fun','sfmt-erlang','sfmt:intstate_to_list_max/1','converts an internal state table to a list of N32 '],['fun','sfmt-erlang','sfmt:intstate_to_randlist/1','converts an internal state table to a list of N32 '],['fun','sfmt-erlang','sfmt:intstate_to_randlist_float/1','converts an internal state table to a list of [0.0'],['fun','sfmt-erlang','sfmt:randlist_to_intstate/1','converts a valid internal state from a list of N32'],['fun','sfmt-erlang','sfmt:seed/0','Initialize the process dictionary with seed0/0.'],['fun','sfmt-erlang','sfmt:seed/1','Puts the seed computed from given three integers '],['fun','sfmt-erlang','sfmt:seed/1','Puts the seed computed from the given integer    '],['fun','sfmt-erlang','sfmt:seed0/0','Returns the default internal state.'],['fun','sfmt-erlang','sfmt:uniform/0','Returns a uniformly-distributed float random numbe'],['fun','sfmt-erlang','sfmt:uniform/1','Returns a uniformly-distributed integer random num'],['fun','sfmt-erlang','sfmt:uniform_s/1','Returns a uniformly-distributed integer random num'],['fun','sfmt-erlang','sfmt:uniform_s/1','With a given state,       Returns a uniformly-dis'],['fun','sfmt-erlang','sfmt_pure:gen_rand32/1','generates a 32-bit random number from the given ra'],['fun','sfmt-erlang','sfmt_pure:gen_rand_all/1','filling the internal state array with SFMT PRNG.'],['fun','sfmt-erlang','sfmt_pure:gen_rand_list32/1','generating the 32-bit integer list of PRNG,      '],['fun','sfmt-erlang','sfmt_pure:get_idstring/0','returns SFMT identification string.'],['fun','sfmt-erlang','sfmt_pure:get_min_array_size32/0','returns array size of internal state.'],['fun','sfmt-erlang','sfmt_pure:init_by_list32/1','generates an internal state from a list of 32-bit '],['fun','sfmt-erlang','sfmt_pure:init_gen_rand/1','generates an internal state from an integer seed.'],['fun','sfmt-erlang','sfmt_pure:seed/0','Initialize the process dictionary with seed0/0,  '],['fun','sfmt-erlang','sfmt_pure:seed/1','Puts the seed computed from given three integers '],['fun','sfmt-erlang','sfmt_pure:seed/1','Puts the seed computed from the given integer    '],['fun','sfmt-erlang','sfmt_pure:seed0/0','Returns the default internal state.'],['fun','sfmt-erlang','sfmt_pure:uniform/0','Returns a uniformly-distributed float random numbe'],['fun','sfmt-erlang','sfmt_pure:uniform/1','Returns a uniformly-distributed integer random num'],['fun','sfmt-erlang','sfmt_pure:uniform_s/1',[]],['fun','sfmt-erlang','sfmt_pure:uniform_s/1','With a given state,       Returns a uniformly-dis'],['fun','sfmt-erlang','sfmt_pure_tests:reds/1','counting reduction of sfmt_pure:init_gen_rand/1.'],['fun','sfmt-erlang','sfmt_pure_tests:test_short_speed/0','running speed test for 10 times of  100000 calls '],['fun','sfmt-erlang','sfmt_pure_tests:test_speed/0','running speed test for 100 times of  100000 calls'],['fun','sfmt-erlang','sfmt_tests:reds/1','counting reduction of sfmt:init_gen_rand/1.'],['fun','sfmt-erlang','sfmt_tests:test_short_speed/0','running speed test for 10 times of  10000 calls f'],['fun','sfmt-erlang','sfmt_tests:test_speed/0','running speed test for 100 times of  100000 calls']];