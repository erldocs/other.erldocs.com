var index = [['app','vsp_aufgabe2','vsp_aufgabe2','[application]'],['mod','vsp_aufgabe2','controller','     This module provides the functionality of th'],['mod','vsp_aufgabe2','logging','    This module provides the functionality of log'],['mod','vsp_aufgabe2','mstNode','     Public starting module of a node.'],['mod','vsp_aufgabe2','nodeFunction','     TODO writing the doc.'],['mod','vsp_aufgabe2','nodeUtil','     This module contains some utility functions.'],['mod','vsp_aufgabe2','response','     TODO writing the doc.'],['mod','vsp_aufgabe2','starter','     This module provides the functionality of th'],['mod','vsp_aufgabe2','werkzeug',[]],['fun','vsp_aufgabe2','controller:main/10','   This function the the receive loop.'],['fun','vsp_aufgabe2','logging:logDebug/1',[]],['fun','vsp_aufgabe2','logging:logGraph/3',[]],['fun','vsp_aufgabe2','logging:logMessage/2','   The Function logs the given Message into a .lo'],['fun','vsp_aufgabe2','logging:logPreStatus/9',[]],['fun','vsp_aufgabe2','logging:logStatus/9',[]],['fun','vsp_aufgabe2','mstNode:start/2','   This function starts a node in the sleeping st'],['fun','vsp_aufgabe2','nodeFunction:changeRoot/3','   TODO doc.'],['fun','vsp_aufgabe2','nodeFunction:report/5','   This function sends a report-message on the In'],['fun','vsp_aufgabe2','nodeFunction:test/8','   This function search for a new edge and sends '],['fun','vsp_aufgabe2','nodeFunction:wakeup/2','   This function is called from the sleeping stat'],['fun','vsp_aufgabe2','nodeUtil:exitNode/1','   This Function exits the current node and log i'],['fun','vsp_aufgabe2','nodeUtil:findGlobalHosts/0',[]],['fun','vsp_aufgabe2','nodeUtil:infinity/0','   TODO doc.'],['fun','vsp_aufgabe2','nodeUtil:sendMessageTo/2','    % OtherNodePID = global:whereis_name(OtherNode'],['fun','vsp_aufgabe2','response:accept/6','   TODO doc   returns:     {ok, NewTestEdge, Ne'],['fun','vsp_aufgabe2','response:connect/7','   This function is in charge of figuring out, if'],['fun','vsp_aufgabe2','response:initiate/8','  TODO doc   GlobalVars: {BestEdge, BestWT, Test'],['fun','vsp_aufgabe2','response:reject/9','   TODO doc.'],['fun','vsp_aufgabe2','response:report/10','   TODO doc     ReportedEdgeWeight: The weigt of'],['fun','vsp_aufgabe2','response:test/11','   TODO doc   returns:     {ok, NewEdgeOrddict,'],['fun','vsp_aufgabe2','starter:scenario1/0','   Starts the first scenario with 5 nodes.'],['fun','vsp_aufgabe2','starter:scenario2/0','   Starts the second scenario with 7 nodes (Aufga'],['fun','vsp_aufgabe2','starter:scenario3/0','   Starts the second scenario with 4 nodes (Undir'],['fun','vsp_aufgabe2','werkzeug:bestimme_mis/2',[]],['fun','vsp_aufgabe2','werkzeug:delete_last/1',[]],['fun','vsp_aufgabe2','werkzeug:emptySL/0',[]],['fun','vsp_aufgabe2','werkzeug:findneSL/2',[]],['fun','vsp_aufgabe2','werkzeug:findSL/2',[]],['fun','vsp_aufgabe2','werkzeug:get_config_value/2',[]],['fun','vsp_aufgabe2','werkzeug:lengthSL/1',[]],['fun','vsp_aufgabe2','werkzeug:list2String/1',[]],['fun','vsp_aufgabe2','werkzeug:logging/2',[]],['fun','vsp_aufgabe2','werkzeug:logstop/0',[]],['fun','vsp_aufgabe2','werkzeug:maxNrSL/1',[]],['fun','vsp_aufgabe2','werkzeug:minNrSL/1',[]],['fun','vsp_aufgabe2','werkzeug:notemptySL/1',[]],['fun','vsp_aufgabe2','werkzeug:popfiSL/1',[]],['fun','vsp_aufgabe2','werkzeug:popSL/1',[]],['fun','vsp_aufgabe2','werkzeug:pushSL/2',[]],['fun','vsp_aufgabe2','werkzeug:reset_timer/3',[]],['fun','vsp_aufgabe2','werkzeug:shuffle/1',[]],['fun','vsp_aufgabe2','werkzeug:timeMilliSecond/0',[]],['fun','vsp_aufgabe2','werkzeug:to_String/1',[]],['fun','vsp_aufgabe2','werkzeug:type_is/1',[]]];