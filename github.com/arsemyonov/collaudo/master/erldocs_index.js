var index = [['app','collaudo','collaudo','[application]'],['mod','collaudo','cld',[]],['mod','collaudo','cld_app',[]],['mod','collaudo','cld_manager',[]],['mod','collaudo','cld_stats',[]],['mod','collaudo','cld_sup',[]],['mod','collaudo','cld_websocket_handler',[]],['mod','collaudo','cld_worker',[]],['mod','collaudo','cld_worker_sup',[]],['mod','collaudo','mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','collaudo','mochinum','Useful numeric algorithms for floats that cover so'],['fun','collaudo','cld:start/0',[]],['fun','collaudo','cld_app:start/2',[]],['fun','collaudo','cld_app:stop/1',[]],['fun','collaudo','cld_manager:code_change/3',[]],['fun','collaudo','cld_manager:handle_call/3',[]],['fun','collaudo','cld_manager:handle_cast/2',[]],['fun','collaudo','cld_manager:handle_info/2',[]],['fun','collaudo','cld_manager:init/1',[]],['fun','collaudo','cld_manager:start_link/0',[]],['fun','collaudo','cld_manager:start_worker/0',[]],['fun','collaudo','cld_manager:stop_workers/0',[]],['fun','collaudo','cld_manager:terminate/2',[]],['fun','collaudo','cld_stats:code_change/3',[]],['fun','collaudo','cld_stats:handle_call/3',[]],['fun','collaudo','cld_stats:handle_cast/2',[]],['fun','collaudo','cld_stats:handle_info/2',[]],['fun','collaudo','cld_stats:init/1',[]],['fun','collaudo','cld_stats:request/0',[]],['fun','collaudo','cld_stats:reset/0',[]],['fun','collaudo','cld_stats:start_client/0',[]],['fun','collaudo','cld_stats:start_link/0',[]],['fun','collaudo','cld_stats:stop_client/0',[]],['fun','collaudo','cld_stats:terminate/2',[]],['fun','collaudo','cld_sup:init/1',[]],['fun','collaudo','cld_sup:start_link/0',[]],['fun','collaudo','cld_websocket_handler:init/3',[]],['fun','collaudo','cld_websocket_handler:websocket_handle/3',[]],['fun','collaudo','cld_websocket_handler:websocket_info/3',[]],['fun','collaudo','cld_websocket_handler:websocket_init/3',[]],['fun','collaudo','cld_websocket_handler:websocket_terminate/3',[]],['fun','collaudo','cld_worker:code_change/4',[]],['fun','collaudo','cld_worker:handle_event/3',[]],['fun','collaudo','cld_worker:handle_info/3',[]],['fun','collaudo','cld_worker:handle_sync_event/4',[]],['fun','collaudo','cld_worker:init/1',[]],['fun','collaudo','cld_worker:start_link/1',[]],['fun','collaudo','cld_worker:state_idle/2',[]],['fun','collaudo','cld_worker:state_idle/3',[]],['fun','collaudo','cld_worker:state_working/2',[]],['fun','collaudo','cld_worker:state_working/3',[]],['fun','collaudo','cld_worker:terminate/3',[]],['fun','collaudo','cld_worker_sup:children/0',[]],['fun','collaudo','cld_worker_sup:init/1',[]],['fun','collaudo','cld_worker_sup:start_child/1',[]],['fun','collaudo','cld_worker_sup:start_link/0',[]],['fun','collaudo','cld_worker_sup:stop_child/1',[]],['fun','collaudo','cld_worker_sup:stop_children/0',[]],['fun','collaudo','mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','collaudo','mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','collaudo','mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','collaudo','mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','collaudo','mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','collaudo','mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','collaudo','mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','collaudo','mochinum:int_pow/1',' Moderately efficient way to exponentiate integers']];