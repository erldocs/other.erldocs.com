var index = [['app','skel','skel','[application]'],['mod','skel','sk_assembler','This module takes a workflow specification, and co'],['mod','skel','sk_assembler_sequential','This takes a workflow specification, parses it and'],['mod','skel','sk_cluster','This module contains the intitialisation logic of '],['mod','skel','sk_cluster_decomp','This module contains what happens in the decomposi'],['mod','skel','sk_cluster_recomp','This module contains what happens in the recomposi'],['mod','skel','sk_data','This module encapsulates all functions relating to'],['mod','skel','sk_farm','This module contains the initialization logic of a'],['mod','skel','sk_farm_collector','This module contains the collector logic of a Farm'],['mod','skel','sk_farm_emitter','This module contains the emitter logic of a Farm s'],['mod','skel','sk_feedback','This module contains feedback skeleton initializ'],['mod','skel','sk_feedback_bicounter','This module contains feedback skeleton counter l'],['mod','skel','sk_feedback_filter','This module contains feedback skeleton filter lo'],['mod','skel','sk_feedback_receiver','This module contains Feedback skeleton filter logi'],['mod','skel','sk_map','This module contains the Map skeleton initialisati'],['mod','skel','sk_map_combiner','This module contains the Map skeleton combiner log'],['mod','skel','sk_map_partitioner','This module contains the simple map skeleton par'],['mod','skel','sk_ord','This module contains ord skeleton initialization'],['mod','skel','sk_ord_reorderer','This module contains ord skeleton reordering log'],['mod','skel','sk_ord_tagger','This module contains ord skeleton tagger logic.'],['mod','skel','sk_pipe','This module contains pipe skeleton initializatio'],['mod','skel','sk_profile','This module contains various functions to help us '],['mod','skel','sk_reduce','This module contains Reduce skeleton initializatio'],['mod','skel','sk_reduce_decomp','This module contains Reduce skeleton decomp logic.'],['mod','skel','sk_reduce_reducer','This module contains Reduce skeleton reduce logic.'],['mod','skel','sk_seq','This module contains the most logic of the most ba'],['mod','skel','sk_sink','This module contains the sink logic.'],['mod','skel','sk_source','This module contains the source logic.'],['mod','skel','sk_tracer','This module contains utility functions for tracing'],['mod','skel','sk_utils','This module contains functions designed to start a'],['mod','skel','skel','This module is the root module of the Skel libra'],['fun','skel','sk_assembler:make/1','Function to produce a set of processes according t'],['fun','skel','sk_assembler:make_hyb/1',[]],['fun','skel','sk_assembler:run/1','Function to produce and start a set of processes a'],['fun','skel','sk_assembler_sequential:compose/1',[]],['fun','skel','sk_assembler_sequential:id/1',[]],['fun','skel','sk_assembler_sequential:run/1',[]],['fun','skel','sk_cluster:make/1','Initialises the Cluster wrapper using both the dev'],['fun','skel','sk_cluster:make_hyb/1',[]],['fun','skel','sk_cluster:make_hyb/1',[]],['fun','skel','sk_cluster:make_hyb/1',[]],['fun','skel','sk_cluster_decomp:start/1','Initialises the decomposition process.'],['fun','skel','sk_cluster_recomp:start/1','Initialises the recomposition process.'],['fun','skel','sk_data:apply/1','Allows a given function, formatted as a data messa'],['fun','skel','sk_data:decomp_by/1','Standardises the format of the developer-defined d'],['fun','skel','sk_data:filter_with/1','Standardises the format of teh developer-defined c'],['fun','skel','sk_data:fmap/1','Allows a given function to be applied to a value i'],['fun','skel','sk_data:peek/1','Retrieves, but does not remove, the topmost identi'],['fun','skel','sk_data:pop/1','Retrieves and removes the topmost identifier of a '],['fun','skel','sk_data:pure/1','Formats a piece of data under D of any data type a'],['fun','skel','sk_data:push/1','Adds an identifier to a given data message.'],['fun','skel','sk_data:recomp_with/1','Standardises the format of the developer-defined r'],['fun','skel','sk_data:reduce_with/1','Standardises the format of the developer-defined r'],['fun','skel','sk_data:value/1','Extracts and returns a data messages value.'],['fun','skel','sk_farm:make/1','Initialises a Farm skeleton given the number of wo'],['fun','skel','sk_farm:make_hyb/1',[]],['fun','skel','sk_farm_collector:start/1','Initialises the collector; forwards any and all ou'],['fun','skel','sk_farm_emitter:start/1','Initialises the emitter.'],['fun','skel','sk_feedback:make/1','Initialises a Feedback skeleton.'],['fun','skel','sk_feedback_bicounter:cast/1','The commands given by a process under Commands are'],['fun','skel','sk_feedback_bicounter:start/0','Initialises a counter.'],['fun','skel','sk_feedback_bicounter:subscribe/1','Subscribes the calling process to the counter at C'],['fun','skel','sk_feedback_filter:start/1','Initialises the constraint-checking filter process'],['fun','skel','sk_feedback_receiver:start/1','Begins the receiver, taking recycled and non-recyc'],['fun','skel','sk_map:make/1','Initialises an instance of the Map skeleton ready '],['fun','skel','sk_map:make/1','Initialises an instance of the Map skeleton ready '],['fun','skel','sk_map:make_hyb/1','Initialises an instance of the Hybrid Map skeleton'],['fun','skel','sk_map_combiner:start/1','Initialises the recomposition process for when the'],['fun','skel','sk_map_combiner:start/1','Initialises the recomposition process for when the'],['fun','skel','sk_map_partitioner:start/1','Starts the recursive partitioning of inputs.'],['fun','skel','sk_map_partitioner:start_hyb/1',[]],['fun','skel','sk_ord:make/1','Constructs an Ord skeleton wrapper to ensure the o'],['fun','skel','sk_ord_reorderer:start/1','Ensures that output is given in the same order as '],['fun','skel','sk_ord_tagger:start/1','Starts the tagger, labelling each input so that th'],['fun','skel','sk_pipe:make/1','Produces workers according to the specified workfl'],['fun','skel','sk_profile:benchmark/1','Produces a list of averages for the time taken by '],['fun','skel','sk_reduce:fold1/2','Sequential reduce entry-point.'],['fun','skel','sk_reduce:make/1','Readies an instance of the Reduce skeleton.'],['fun','skel','sk_reduce_decomp:start/1','Starts the reduce process.'],['fun','skel','sk_reduce_reducer:start/1','Starts the reducer worker.'],['fun','skel','sk_seq:make/1','Spawns a worker process performing the function Wo'],['fun','skel','sk_seq:start/1','Starts the worker process task.'],['fun','skel','sk_sink:make/0','Creates the process to which the final results are'],['fun','skel','sk_sink:make/1','Creates the process to which the final results are'],['fun','skel','sk_sink:start_acc/1','Sets the sink process to receive messages from oth'],['fun','skel','sk_sink:start_mod/1','Initiates loop to receive messages from child proc'],['fun','skel','sk_source:make/1','Creates a new child process using Input, given the'],['fun','skel','sk_source:start/1','Transmits each input in Input to the process NextP'],['fun','skel','sk_tracer:report_event/1','Reports a process event where no message is sent t'],['fun','skel','sk_tracer:report_event/1','Reports a message between two processes.'],['fun','skel','sk_tracer:start/0','Opens a viewer displaying a graphic representation'],['fun','skel','sk_tracer:t/1','Alias for report_event/4.'],['fun','skel','sk_tracer:t/1','Alias for report_event/5.'],['fun','skel','sk_utils:start_worker/1','Provides a worker with its tasks, the workflow Wor'],['fun','skel','sk_utils:start_worker_hyb/1',[]],['fun','skel','sk_utils:start_workers/1','Starts a given number NWorkers of workers as child'],['fun','skel','sk_utils:start_workers_hyb/1',[]],['fun','skel','sk_utils:stop_workers/1','Sends the halt command to each worker in the given'],['fun','skel','skel:do/1','The second entry-point function to the Skel librar'],['fun','skel','skel:run/1','Primary entry-point function to the Skel library.']];