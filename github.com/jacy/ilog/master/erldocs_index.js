var index = [['app','ilog','ilog','[application]'],['mod','ilog','erltl','ErlTL is a simple Erlang template language.'],['mod','ilog','expanded_logging',[]],['mod','ilog','ilog_app',[]],['mod','ilog','ilog_sup',[]],['mod','ilog','log_roller',[]],['mod','ilog','log_roller_h','An event handler that broadcasts log messages to s'],['mod','ilog','log_roller_logger',[]],['mod','ilog','log_roller_server',[]],['mod','ilog','log_roller_utils','Browse log files collected by a log_roller subscri'],['mod','ilog','lr_cache',[]],['mod','ilog','lr_config',[]],['mod','ilog','lr_filter',[]],['mod','ilog','lr_hooks',[]],['mod','ilog','lr_tail',[]],['mod','ilog','lr_web_server',[]],['mod','ilog','lrb',[]],['fun','ilog','erltl:compile/1','Compile the ErlTL file with user-defined options.'],['fun','ilog','erltl:compile/1','Compile the ErlTL file with the default options: '],['fun','ilog','erltl:forms_for_data/1','Parse the raw text of an ErlTL template and return'],['fun','ilog','erltl:forms_for_data/2','Equivalent to forms_form_data(Data, ModuleName, []'],['fun','ilog','erltl:forms_for_file/1','Parse the ErlTL file and return its representation'],['fun','ilog','erltl:forms_for_file/1','Equivalent to forms_for_file(Filename, []).'],['fun','ilog','expanded_logging:parse_transform/2',[]],['fun','ilog','ilog_app:start/2',[]],['fun','ilog','ilog_app:stop/1',[]],['fun','ilog','ilog_sup:init/1',[]],['fun','ilog','ilog_sup:start_link/0',[]],['fun','ilog','log_roller:build_rel/1',[]],['fun','ilog','log_roller:queue_length/0',[]],['fun','ilog','log_roller:start/0',[]],['fun','ilog','log_roller:start/2','start the application.'],['fun','ilog','log_roller:stop/1','stop the application.'],['fun','ilog','log_roller_logger:do_log/5',[]],['fun','ilog','log_roller_logger:do_log/6',[]],['fun','ilog','log_roller_logger:set/2',[]],['fun','ilog','log_roller_server:build_rel/1',[]],['fun','ilog','log_roller_server:compile_templates/0',[]],['fun','ilog','log_roller_server:init/1',[]],['fun','ilog','log_roller_server:start/0',[]],['fun','ilog','log_roller_server:start/2','start the application.'],['fun','ilog','log_roller_server:start_phase/3',[]],['fun','ilog','log_roller_server:stop/1','stop the application.'],['fun','ilog','lr_cache:delete/2',[]],['fun','ilog','lr_cache:get/2',[]],['fun','ilog','lr_cache:items/1',[]],['fun','ilog','lr_cache:new/1',[]],['fun','ilog','lr_cache:put/3',[]],['fun','ilog','lr_cache:size/1',[]],['fun','ilog','lr_config:get_log_configs/0',[]],['fun','ilog','lr_filter:filter/1',[]],['fun','ilog','lr_hooks:add_hook/3',[]],['fun','ilog','lr_hooks:remove_hook/2',[]],['fun','ilog','lr_hooks:start_link/0',[]],['fun','ilog','lr_tail:add_response/3',[]],['fun','ilog','lr_tail:get_responses/0',[]],['fun','ilog','lr_tail:send_log/1',[]],['fun','ilog','lr_tail:start_link/0',[]],['fun','ilog','lr_web_server:loop/2',[]],['fun','ilog','lr_web_server:start_link/1',[]],['fun','ilog','lrb:fetch/1',[]],['fun','ilog','lrb:fetch/2','fetch a list of log entries for a specific disk_lo'],['fun','ilog','lrb:fetch_all/1',[]],['fun','ilog','lrb:fetch_all/2',[]]];