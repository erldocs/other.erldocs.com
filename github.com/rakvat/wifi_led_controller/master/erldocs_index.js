var index = [['app','wifi_led_controller','wifi_led_controller','[application]'],['mod','wifi_led_controller','wifilight','wifilight.'],['mod','wifi_led_controller','wifilight_app','Callbacks for the wifilight application.'],['mod','wifi_led_controller','wifilight_communicator',[]],['mod','wifi_led_controller','wifilight_deps','Ensure that the relatively-installed dependencies '],['mod','wifi_led_controller','wifilight_player',[]],['mod','wifi_led_controller','wifilight_sup','Supervisor for the wifilight application.'],['mod','wifi_led_controller','wifilight_web','Web server for wifilight.'],['fun','wifi_led_controller','wifilight:start/0','Start the wifilight server.'],['fun','wifi_led_controller','wifilight:stop/0','Stop the wifilight server.'],['fun','wifi_led_controller','wifilight_app:start/2','application start callback for wifilight.'],['fun','wifi_led_controller','wifilight_app:stop/1','application stop callback for wifilight.'],['fun','wifi_led_controller','wifilight_communicator:code_change/3',[]],['fun','wifi_led_controller','wifilight_communicator:handle_call/3',[]],['fun','wifi_led_controller','wifilight_communicator:handle_cast/2',[]],['fun','wifi_led_controller','wifilight_communicator:handle_info/2',[]],['fun','wifi_led_controller','wifilight_communicator:init/1',[]],['fun','wifi_led_controller','wifilight_communicator:set_color/4',[]],['fun','wifi_led_controller','wifilight_communicator:start/2',[]],['fun','wifi_led_controller','wifilight_communicator:stop/0',[]],['fun','wifi_led_controller','wifilight_communicator:terminate/2',[]],['fun','wifi_led_controller','wifilight_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','wifi_led_controller','wifilight_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','wifi_led_controller','wifilight_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','wifi_led_controller','wifilight_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','wifi_led_controller','wifilight_deps:get_base_dir/1','Return the application directory for Module.'],['fun','wifi_led_controller','wifilight_deps:local_path/1','Return an application-relative directory for this '],['fun','wifi_led_controller','wifilight_deps:local_path/1','Return an application-relative directory from Modu'],['fun','wifi_led_controller','wifilight_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','wifi_led_controller','wifilight_player:code_change/3',[]],['fun','wifi_led_controller','wifilight_player:handle_call/2',[]],['fun','wifi_led_controller','wifilight_player:handle_event/2',[]],['fun','wifi_led_controller','wifilight_player:handle_info/2',[]],['fun','wifi_led_controller','wifilight_player:init/1',[]],['fun','wifi_led_controller','wifilight_player:set_transition/6',[]],['fun','wifi_led_controller','wifilight_player:start/0',[]],['fun','wifi_led_controller','wifilight_player:stop/0',[]],['fun','wifi_led_controller','wifilight_player:terminate/2',[]],['fun','wifi_led_controller','wifilight_sup:init/1','supervisor callback.'],['fun','wifi_led_controller','wifilight_sup:start_link/0','API for starting the supervisor.'],['fun','wifi_led_controller','wifilight_sup:upgrade/0','Add processes if necessary.'],['fun','wifi_led_controller','wifilight_web:loop/2',[]],['fun','wifi_led_controller','wifilight_web:start/1',[]],['fun','wifi_led_controller','wifilight_web:stop/0',[]]];