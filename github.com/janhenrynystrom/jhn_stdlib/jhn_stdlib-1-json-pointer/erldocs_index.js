var index = [['app','jhn_stdlib','jhn_stdlib','[application]'],['mod','jhn_stdlib','plist','     A property list style handling of {Key, Valu'],['fun','jhn_stdlib','plist:add/1','    Extends Plist with the property checking if i'],['fun','jhn_stdlib','plist:add/1','    Extends Plist with the property without check'],['fun','jhn_stdlib','plist:compact/1','    Ensures one property per key, with the first '],['fun','jhn_stdlib','plist:delete/1','    Restricts Plist on the key without checking i'],['fun','jhn_stdlib','plist:delete/1','    Restricts Plist on the key without checking i'],['fun','jhn_stdlib','plist:find/1','    Finds the value of the property or Default if'],['fun','jhn_stdlib','plist:find/1','    Finds the value of the property or Default if'],['fun','jhn_stdlib','plist:find/1','    Finds the value of the property or undefined '],['fun','jhn_stdlib','plist:find_all/1','    Finds the all values associated with the key.'],['fun','jhn_stdlib','plist:keys/1','    Returns all the keys.'],['fun','jhn_stdlib','plist:member/1','    Returns wether the key is to be found in the '],['fun','jhn_stdlib','plist:new/0','    Creates an empty plist.'],['fun','jhn_stdlib','plist:new/1','    Creates a plist from the zipping the lists of'],['fun','jhn_stdlib','plist:replace/1','    Replaces the first occurence in the PList, es'],['fun','jhn_stdlib','plist:replace/1','    Replaces the first occurence in the PList, ad'],['fun','jhn_stdlib','plist:values/1','    Returns all the values.']];