var index = [['app','nodectl','nodectl','[application]'],['mod','nodectl','nodeclt','Erlang application for automatically reloading mod'],['mod','nodectl','nodeclt_app','Erlang application for automatically reloading mod'],['mod','nodectl','nodeclt_clog','Cached log for dual loging (to stdout and file).'],['mod','nodectl','nodeclt_config','Configuration manager for erlang application.'],['mod','nodectl','nodeclt_flog','Dual loging (to stdout and file).'],['mod','nodectl','nodeclt_mgr','Erlang application manager for automatically reloa'],['mod','nodectl','nodeclt_reloader','Erlang module for automatically reloading modified'],['mod','nodectl','nodeclt_reloaderf','Erlang module for automatically reloading modified'],['mod','nodectl','nodeclt_sup','Erlang application for automatically reloading mod'],['mod','nodectl','nodeclt_utils','Erlang application utils for automatically reloadi'],['fun','nodectl','nodeclt:call/2',[]],['fun','nodectl','nodeclt:start/0',[]],['fun','nodectl','nodeclt:stop/0',[]],['fun','nodectl','nodeclt_app:start/0',[]],['fun','nodectl','nodeclt_app:start/2',[]],['fun','nodectl','nodeclt_app:stop/1',[]],['fun','nodectl','nodeclt_clog:code_change/3',[]],['fun','nodectl','nodeclt_clog:debug/1',[]],['fun','nodectl','nodeclt_clog:debug/2',[]],['fun','nodectl','nodeclt_clog:debug/3',[]],['fun','nodectl','nodeclt_clog:error/1',[]],['fun','nodectl','nodeclt_clog:handle_call/3',[]],['fun','nodectl','nodeclt_clog:handle_cast/2',[]],['fun','nodectl','nodeclt_clog:handle_info/2',[]],['fun','nodectl','nodeclt_clog:info/1',[]],['fun','nodectl','nodeclt_clog:init/1',[]],['fun','nodectl','nodeclt_clog:start_link/0',[]],['fun','nodectl','nodeclt_clog:terminate/2',[]],['fun','nodectl','nodeclt_config:deinit/0',[]],['fun','nodectl','nodeclt_config:deinit/1',[]],['fun','nodectl','nodeclt_config:get/2',[]],['fun','nodectl','nodeclt_config:get/3',[]],['fun','nodectl','nodeclt_config:init/0',[]],['fun','nodectl','nodeclt_config:put/2',[]],['fun','nodectl','nodeclt_config:put/3',[]],['fun','nodectl','nodeclt_config:reload/1',[]],['fun','nodectl','nodeclt_config:reload/2',[]],['fun','nodectl','nodeclt_config:rewrite/3',[]],['fun','nodectl','nodeclt_config:start/1',[]],['fun','nodectl','nodeclt_config:start/2',[]],['fun','nodectl','nodeclt_config:store/1',[]],['fun','nodectl','nodeclt_config:store/2',[]],['fun','nodectl','nodeclt_flog:chk_daemon/0',[]],['fun','nodectl','nodeclt_flog:code_change/3',[]],['fun','nodectl','nodeclt_flog:debug/1',[]],['fun','nodectl','nodeclt_flog:debug/2',[]],['fun','nodectl','nodeclt_flog:debug/3',[]],['fun','nodectl','nodeclt_flog:error/1',[]],['fun','nodectl','nodeclt_flog:handle_call/2',[]],['fun','nodectl','nodeclt_flog:handle_event/2',[]],['fun','nodectl','nodeclt_flog:handle_info/2',[]],['fun','nodectl','nodeclt_flog:info/1',[]],['fun','nodectl','nodeclt_flog:init/1',[]],['fun','nodectl','nodeclt_flog:reopen_log/0',[]],['fun','nodectl','nodeclt_flog:terminate/2',[]],['fun','nodectl','nodeclt_flog:wrap_log_size/1',[]],['fun','nodectl','nodeclt_flog:write/1',[]],['fun','nodectl','nodeclt_mgr:debug_opts/1',[]],['fun','nodectl','nodeclt_mgr:log_level/1',[]],['fun','nodectl','nodeclt_mgr:reload_cfg/0',[]],['fun','nodectl','nodeclt_mgr:reload_code/0',[]],['fun','nodectl','nodeclt_mgr:start/1',[]],['fun','nodectl','nodeclt_mgr:start_applications/1',[]],['fun','nodectl','nodeclt_mgr:status/0',[]],['fun','nodectl','nodeclt_mgr:stop/1',[]],['fun','nodectl','nodeclt_mgr:stop_and_halt/0',[]],['fun','nodectl','nodeclt_mgr:stop_applications/1',[]],['fun','nodectl','nodeclt_mgr:version/0',[]],['fun','nodectl','nodeclt_reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','nodectl','nodeclt_reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','nodectl','nodeclt_reloader:handle_call/3','gen_server callback.'],['fun','nodectl','nodeclt_reloader:handle_cast/2','gen_server callback.'],['fun','nodectl','nodeclt_reloader:handle_info/2','gen_server callback.'],['fun','nodectl','nodeclt_reloader:init/1','gen_server init, opens the server in an initial st'],['fun','nodectl','nodeclt_reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','nodectl','nodeclt_reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','nodectl','nodeclt_reloader:start/0','Start the reloader.'],['fun','nodectl','nodeclt_reloader:start_link/0','Start the reloader.'],['fun','nodectl','nodeclt_reloader:stop/0','Stop the reloader.'],['fun','nodectl','nodeclt_reloader:terminate/2','gen_server termination callback.'],['fun','nodectl','nodeclt_reloaderf:reload_code/0',[]],['fun','nodectl','nodeclt_sup:init/1',[]],['fun','nodectl','nodeclt_sup:start_link/0',[]],['fun','nodectl','nodeclt_utils:do_upgrade/1',[]],['fun','nodectl','nodeclt_utils:drop_ets/1',[]],['fun','nodectl','nodeclt_utils:get_param/3',[]],['fun','nodectl','nodeclt_utils:getAppParam/2',[]],['fun','nodectl','nodeclt_utils:hex_to_binary/1',[]],['fun','nodectl','nodeclt_utils:hex_to_list/1',[]],['fun','nodectl','nodeclt_utils:make_ets/1',[]],['fun','nodectl','nodeclt_utils:make_ets/2',[]],['fun','nodectl','nodeclt_utils:myFmt/3',[]],['fun','nodectl','nodeclt_utils:os_stat/1',[]],['fun','nodectl','nodeclt_utils:parse_args/1',[]],['fun','nodectl','nodeclt_utils:pick/3',[]],['fun','nodectl','nodeclt_utils:reload_cfg/2',[]],['fun','nodectl','nodeclt_utils:reload_code/0',[]],['fun','nodectl','nodeclt_utils:s2i/2',[]],['fun','nodectl','nodeclt_utils:safety_call/2',[]],['fun','nodectl','nodeclt_utils:safety_call/3',[]],['fun','nodectl','nodeclt_utils:setPlistVal/2',[]],['fun','nodectl','nodeclt_utils:start_applications/1',[]],['fun','nodectl','nodeclt_utils:start_childs/2',[]],['fun','nodectl','nodeclt_utils:start_groups/1',[]],['fun','nodectl','nodeclt_utils:status/0',[]],['fun','nodectl','nodeclt_utils:status/1',[]],['fun','nodectl','nodeclt_utils:stop_applications/1',[]],['fun','nodectl','nodeclt_utils:stop_dynamic_child/2',[]],['fun','nodectl','nodeclt_utils:stop_groups/1',[]],['fun','nodectl','nodeclt_utils:swap/2',[]],['fun','nodectl','nodeclt_utils:to_atom/1',[]],['fun','nodectl','nodeclt_utils:to_float/1',[]],['fun','nodectl','nodeclt_utils:to_hex/1',[]],['fun','nodectl','nodeclt_utils:to_int/1',[]],['fun','nodectl','nodeclt_utils:to_integer/1',[]],['fun','nodectl','nodeclt_utils:to_list/1',[]],['fun','nodectl','nodeclt_utils:to_utf32/1',[]],['fun','nodectl','nodeclt_utils:udelta/2',[]],['fun','nodectl','nodeclt_utils:ugs/0',[]],['fun','nodectl','nodeclt_utils:unixtime_to_localDatetime/1',[]],['fun','nodectl','nodeclt_utils:unixtime_to_universalDatetime/1',[]],['fun','nodectl','nodeclt_utils:upgrade/1',[]],['fun','nodectl','nodeclt_utils:utime/0',[]],['fun','nodectl','nodeclt_utils:whereis_phone/1',[]]];