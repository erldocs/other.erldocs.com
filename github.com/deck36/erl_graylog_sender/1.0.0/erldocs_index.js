var index = [['app','erl_graylog_sender','erl_graylog_sender','[application]'],['mod','erl_graylog_sender','erl_graylog_gelf','GELF message formatter using version 1.1 of GELF ('],['mod','erl_graylog_sender','erl_graylog_sender','Graylog sender server supporting GELF TCP, GELF UD'],['mod','erl_graylog_sender','erl_graylog_tcp_sender','This is the TCP worker module for erl_graylog_send'],['mod','erl_graylog_sender','erl_graylog_udp_sender','This is the UDP worker module for erl_graylog_send'],['fun','erl_graylog_sender','erl_graylog_gelf:from_list/1','Create GELF message from list.'],['fun','erl_graylog_sender','erl_graylog_gelf:from_list/1','Message from list.'],['fun','erl_graylog_sender','erl_graylog_gelf:get_additional/1','Get additional field of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:get_full_message/1','Get full message field of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:get_host/1','Get host field of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:get_level/1','Get level field of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:get_short_message/1','Get short message field of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:get_timestamp/1','Get timestamp of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:get_version/1','Get version of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:new/0','Message having only version and timestamp.'],['fun','erl_graylog_sender','erl_graylog_gelf:set_additional/1','Set additional field of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:set_full_message/1','Set full message field of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:set_host/1','Set host field of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:set_level/1','Set level field of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:set_short_message/1','Set short message field of message.'],['fun','erl_graylog_sender','erl_graylog_gelf:to_list/1','Message to list.'],['fun','erl_graylog_sender','erl_graylog_gelf:to_sendable/1','Convert to sendable GELF message.'],['fun','erl_graylog_sender','erl_graylog_sender:code_change/2','gen_server:code_change/3'],['fun','erl_graylog_sender','erl_graylog_sender:get_opt/1','Get option from server identified by Ref.'],['fun','erl_graylog_sender','erl_graylog_sender:get_opt/1','Get option from running singleton server.'],['fun','erl_graylog_sender','erl_graylog_sender:handle_call/1','gen_server:handle_call/3'],['fun','erl_graylog_sender','erl_graylog_sender:handle_cast/1','gen_server:handle_cast/2'],['fun','erl_graylog_sender','erl_graylog_sender:handle_info/1','gen_server:handle_info/2'],['fun','erl_graylog_sender','erl_graylog_sender:init/1','gen_server:init/1'],['fun','erl_graylog_sender','erl_graylog_sender:send/1','Send message via server identified by Ref.'],['fun','erl_graylog_sender','erl_graylog_sender:send/1','Send message via singleton server.'],['fun','erl_graylog_sender','erl_graylog_sender:set_opt/1','Set option of running server identified by Ref.'],['fun','erl_graylog_sender','erl_graylog_sender:set_opt/2','Set option of running singleton server.'],['fun','erl_graylog_sender','erl_graylog_sender:start_link/1','Start named, unnamed or singleton server.'],['fun','erl_graylog_sender','erl_graylog_sender:stop/0','Stop singleton server.'],['fun','erl_graylog_sender','erl_graylog_sender:stop/1','Stop server identified by Ref.'],['fun','erl_graylog_sender','erl_graylog_sender:terminate/2','gen_server:terminate/2'],['fun','erl_graylog_sender','erl_graylog_tcp_sender:close/1',[]],['fun','erl_graylog_sender','erl_graylog_tcp_sender:open/1',[]],['fun','erl_graylog_sender','erl_graylog_tcp_sender:send/2',[]],['fun','erl_graylog_sender','erl_graylog_udp_sender:close/1',[]],['fun','erl_graylog_sender','erl_graylog_udp_sender:open/1',[]],['fun','erl_graylog_sender','erl_graylog_udp_sender:send/2',[]]];