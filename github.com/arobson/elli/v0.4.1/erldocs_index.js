var index = [['app','elli','elli','[application]'],['mod','elli','elli',' Elli acceptor manager.'],['mod','elli','elli_example_callback',' Elli example callback.'],['mod','elli','elli_example_middleware',[]],['mod','elli','elli_handler',[]],['mod','elli','elli_middleware',' HTTP request processing middleware.'],['mod','elli','elli_middleware_compress',[]],['mod','elli','elli_request',[]],['mod','elli','elli_test','Helper for calling your Elli callback in unit test'],['mod','elli','elli_util',[]],['fun','elli','elli:code_change/3',[]],['fun','elli','elli:get_acceptors/1',[]],['fun','elli','elli:get_open_reqs/1',[]],['fun','elli','elli:get_open_reqs/2',[]],['fun','elli','elli:handle_call/3',[]],['fun','elli','elli:handle_cast/2',[]],['fun','elli','elli:handle_info/2',[]],['fun','elli','elli:init/1',[]],['fun','elli','elli:start_link/0',[]],['fun','elli','elli:start_link/1',[]],['fun','elli','elli:stop/1',[]],['fun','elli','elli:terminate/2',[]],['fun','elli','elli_example_callback:chunk_loop/1',[]],['fun','elli','elli_example_callback:handle/2',[]],['fun','elli','elli_example_callback:handle_event/3',' Handle request events, like request completed, ex'],['fun','elli','elli_example_middleware:handle/2',[]],['fun','elli','elli_example_middleware:handle_event/3',[]],['fun','elli','elli_handler:behaviour_info/1',[]],['fun','elli','elli_middleware:handle/2',[]],['fun','elli','elli_middleware:handle_event/3',[]],['fun','elli','elli_middleware_compress:postprocess/3',[]],['fun','elli','elli_request:async_send_chunk/2',' Sends a chunk asynchronously.'],['fun','elli','elli_request:body/1',[]],['fun','elli','elli_request:body_qs/1','Parses application/x-www-form-urlencoded body into'],['fun','elli','elli_request:chunk_ref/1',' Returns a reference that can be used to send chun'],['fun','elli','elli_request:close_chunk/1',' Explicitly close the chunked connection.'],['fun','elli','elli_request:get_arg/2',[]],['fun','elli','elli_request:get_arg/3',[]],['fun','elli','elli_request:get_args/1','Returns a proplist of keys and values of the origi'],['fun','elli','elli_request:get_header/2',[]],['fun','elli','elli_request:get_header/3',[]],['fun','elli','elli_request:get_range/1',' Parses the Range header from the request.'],['fun','elli','elli_request:headers/1',[]],['fun','elli','elli_request:method/1',[]],['fun','elli','elli_request:path/1',' Returns path split into binary parts.'],['fun','elli','elli_request:peer/1',[]],['fun','elli','elli_request:post_arg/2',[]],['fun','elli','elli_request:post_arg/3',[]],['fun','elli','elli_request:query_str/1','Calculates the query string associated with the gi'],['fun','elli','elli_request:raw_path/1',[]],['fun','elli','elli_request:send_chunk/2',' Sends a chunk synchronously, if the refrenced pro'],['fun','elli','elli_request:to_proplist/1',' Serializes the request record to a proplist.'],['fun','elli','elli_test:call/1',[]],['fun','elli','elli_util:encode_range/1',' Encode Range to a Content-Range value.'],['fun','elli','elli_util:file_size/1',' Get the size in bytes of the file.'],['fun','elli','elli_util:normalize_range/1',' If a valid byte-range, or byte-range-set of size ']];