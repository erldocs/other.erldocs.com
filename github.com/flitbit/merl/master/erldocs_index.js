var index = [['app','merl','merl','[application]'],['mod','merl','merl','Metaprogramming in Erlang.'],['mod','merl','merl_transform','Parse transform for merl.'],['fun','merl','merl:compile/1','Equivalent to compile(Code, []).'],['fun','merl','merl:compile/2','Compile a syntax tree or list of syntax trees repr'],['fun','merl','merl:compile_and_load/1','Equivalent to compile_and_load(Code, []).'],['fun','merl','merl:compile_and_load/2','Compile a syntax tree or list of syntax trees repr'],['fun','merl','merl:match/1','Match a pattern against a syntax tree (or patterns'],['fun','merl','merl:meta_template/1','Turn a template into a syntax tree representing th'],['fun','merl','merl:print/1','Pretty-print a syntax tree or template to the stan'],['fun','merl','merl:qquote/1','Parse text and substitute meta-variables.'],['fun','merl','merl:qquote/1','Parse text and substitute meta-variables.'],['fun','merl','merl:quote/1','Parse text.'],['fun','merl','merl:quote/1','Parse text.'],['fun','merl','merl:show/1','Print the structure of a syntax tree or template t'],['fun','merl','merl:subst/1','Substitute metavariables in a pattern or list of p'],['fun','merl','merl:switch/1','Match against one or more clauses with patterns an'],['fun','merl','merl:template/1','Turn a syntax tree or list of trees into a templat'],['fun','merl','merl:template_vars/1','Return an ordered list of the metavariables in the'],['fun','merl','merl:term/1','Create a syntax tree for a constant term.'],['fun','merl','merl:tree/1','Revert a template to a normal syntax tree.'],['fun','merl','merl:tsubst/1','Like subst/2, but does not convert the result from'],['fun','merl','merl:var/1','Create a variable.'],['fun','merl','merl_transform:parse_transform/2',[]]];