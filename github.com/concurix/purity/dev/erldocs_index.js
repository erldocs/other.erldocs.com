var index = [['app','purity','purity','[application]'],['mod','purity','cl_parser','Configurable command line argument parser.'],['mod','purity','core_aliases','Locate aliases to variables in core erlang express'],['mod','purity','purity','Pureness analysis of Erlang functions.'],['mod','purity','purity_analyse',[]],['mod','purity','purity_collect',[]],['mod','purity','purity_plt','Persistent Lookup Tables for purity.'],['mod','purity','purity_stats','Generate statistics from purity results of analyse'],['mod','purity','purity_utils','Various utility functions for purity.'],['mod','purity','runtest',[]],['fun','purity','cl_parser:parse_args/1','The Extra argument is a list of post-processing in'],['fun','purity','cl_parser:parse_args/1','Parse the command line and return a 2-tuple of opt'],['fun','purity','core_aliases:scan/1','Scan a core erlang function and return a mapping o'],['fun','purity','purity:analyse_changed/1','Remove any files with errors from the PLT, and re-'],['fun','purity','purity:files/1',[]],['fun','purity','purity:find_missing/1','Return a list of MFAs and a list of primops for wh'],['fun','purity','purity:is_pure/1','Simple purity test, only distinguishes between pur'],['fun','purity','purity:module/1','Analyse a module and return a lookup table of conc'],['fun','purity','purity:module/1',[]],['fun','purity','purity:pfiles/1',[]],['fun','purity','purity:propagate/1',[]],['fun','purity','purity:propagate/1',[]],['fun','purity','purity_analyse:analyse/1','Analyse the minimum set of required modules from t'],['fun','purity','purity_analyse:propagate/1','Select the appropriate propagation function or bot'],['fun','purity','purity_analyse:propagate_both/1','Combine purity and termination analysis.'],['fun','purity','purity_analyse:propagate_purity/1',[]],['fun','purity','purity_analyse:propagate_termination/1',[]],['fun','purity','purity_analyse:purity_of/1',[]],['fun','purity','purity_collect:file/1','Analyse a single file.'],['fun','purity','purity_collect:files/1','Analyse a list of Erlang modules.'],['fun','purity','purity_collect:module/1','Analyse a module and return a lookup table of func'],['fun','purity','purity_collect:pfiles/1','Analyse a list of modules in parallel.'],['fun','purity','purity_plt:default_path/0',[]],['fun','purity','purity_plt:dependent_modules/1','Provided a list of files, return a list of modules'],['fun','purity','purity_plt:export/1','Export a PLT into a simple deterministic structure'],['fun','purity','purity_plt:export_text/1','Export a PLT as plain text.'],['fun','purity','purity_plt:filenames/1',[]],['fun','purity','purity_plt:info_table/1',[]],['fun','purity','purity_plt:load/1',[]],['fun','purity','purity_plt:new/0',[]],['fun','purity','purity_plt:new/1',[]],['fun','purity','purity_plt:result_table/1',[]],['fun','purity','purity_plt:save/1',[]],['fun','purity','purity_plt:table/1',[]],['fun','purity','purity_plt:update/1','Update the PLT with a new table and files.'],['fun','purity','purity_plt:verify/1',[]],['fun','purity','purity_plt:verify_file/1',[]],['fun','purity','purity_plt:version/1',[]],['fun','purity','purity_stats:gather/1','Generate an assoc list of modules and their statis'],['fun','purity','purity_stats:write/1','Write an assoc list of modules and statistics to f'],['fun','purity','purity_utils:delete_modules/2','Remove any functions belonging to Modules from the'],['fun','purity','purity_utils:dependencies/1','Higher level dependency collectors which work on a'],['fun','purity','purity_utils:dependencies/1',[]],['fun','purity','purity_utils:dict_cons/1',[]],['fun','purity','purity_utils:dict_fetch/1',[]],['fun','purity','purity_utils:dict_fold/1',[]],['fun','purity','purity_utils:dict_map/1',[]],['fun','purity','purity_utils:dict_mapfold/1','Not as efficient as a native implementation would '],['fun','purity','purity_utils:dict_store/1','Update a list of keys with the same value in a dic'],['fun','purity','purity_utils:dict_store/1','Update a dict with a list of key-value pairs.'],['fun','purity','purity_utils:dict_update/1',[]],['fun','purity','purity_utils:emsg/1',[]],['fun','purity','purity_utils:emsg/1',[]],['fun','purity','purity_utils:filename_to_module/1','Return what should correspond to the Erlang module'],['fun','purity','purity_utils:fmt_mfa/1',[]],['fun','purity','purity_utils:format_time/1','Format time in miliseconds to Minutes Seconds.Mili'],['fun','purity','purity_utils:function_rmap/1',[]],['fun','purity','purity_utils:get_abstract_code_from_beam/1',[]],['fun','purity','purity_utils:get_core/1','Compile to Core Erlang and return the parsed core '],['fun','purity','purity_utils:get_core/1','Compile to Core Erlang and return the parsed core '],['fun','purity','purity_utils:get_time/0',[]],['fun','purity','purity_utils:internal_function/1','Detect common functions generated by the compiler '],['fun','purity','purity_utils:is_bif/1',[]],['fun','purity','purity_utils:is_expr/1',[]],['fun','purity','purity_utils:is_mfa/1',[]],['fun','purity','purity_utils:is_primop/1',[]],['fun','purity','purity_utils:module_rmap/1',[]],['fun','purity','purity_utils:option/1',[]],['fun','purity','purity_utils:option/1',[]],['fun','purity','purity_utils:pmap/1','Convenience wrapper around pmap/4 which uses one p'],['fun','purity','purity_utils:pmap/1','Variation of the rpc:pmap/3 function which limits '],['fun','purity','purity_utils:str/1',[]],['fun','purity','purity_utils:timed/1','Time the execution of a specified function, relyin'],['fun','purity','purity_utils:timeit/1','Convenience shortcut to timeit/3 for a function wi'],['fun','purity','purity_utils:timeit/1','Report the execution time of a function.'],['fun','purity','purity_utils:uflatten/1',[]],['fun','purity','runtest:apply_filters/2',[]],['fun','purity','runtest:build_filters/2',[]],['fun','purity','runtest:dump_term/2',[]],['fun','purity','runtest:filter_args/1',[]],['fun','purity','runtest:filter_binaries/1',[]],['fun','purity','runtest:filter_module/1',[]],['fun','purity','runtest:filter_nested/1',[]],['fun','purity','runtest:filter_pretty/1',[]],['fun','purity','runtest:filter_reasons/1',[]],['fun','purity','runtest:filter_simplify_args/1',[]],['fun','purity','runtest:main/1',[]]];