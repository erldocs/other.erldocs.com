var index = [['app','nemo','nemo','[application]'],['mod','nemo','gen_pool',[]],['mod','nemo','gen_pool_child',[]],['mod','nemo','mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','nemo','mochinum','Useful numeric algorithms for floats that cover so'],['mod','nemo','nrpc',[]],['fun','nemo','gen_pool:behavior_info/1',[]],['fun','nemo','gen_pool:code_change/3',[]],['fun','nemo','gen_pool:handle_call/3',[]],['fun','nemo','gen_pool:handle_cast/2',[]],['fun','nemo','gen_pool:handle_info/2',[]],['fun','nemo','gen_pool:init/1',[]],['fun','nemo','gen_pool:start/4',[]],['fun','nemo','gen_pool:start_link/4',[]],['fun','nemo','gen_pool:terminate/2',[]],['fun','nemo','gen_pool_child:code_change/3',[]],['fun','nemo','gen_pool_child:handle_call/3',[]],['fun','nemo','gen_pool_child:handle_cast/2',[]],['fun','nemo','gen_pool_child:handle_info/2',[]],['fun','nemo','gen_pool_child:init/1',[]],['fun','nemo','gen_pool_child:terminate/2',[]],['fun','nemo','mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','nemo','mochijson2:decode/1','Decode the given iolist to Erlang terms using the '],['fun','nemo','mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','nemo','mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','nemo','mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','nemo','mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','nemo','mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','nemo','mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','nemo','mochinum:int_pow/1',' Moderately efficient way to exponentiate integers']];