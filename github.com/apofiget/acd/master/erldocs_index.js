var index = [['app','acd','acd','[application]'],['app','acd','acd','[application]'],['mod','acd','acd_app',[]],['mod','acd','acd_ev_ws_handler',[]],['mod','acd','acd_sup',[]],['mod','acd','acd_ws',[]],['mod','acd','ar_grbl','Grbl API  Module works/tested with Arduino based '],['mod','acd','ar_grbl_handler',[]],['mod','acd','ar_serial','Arduino serial port low level communication.'],['mod','acd','commons','Functions used in some part of application.'],['mod','acd','fm','File manipulation API.'],['mod','acd','y_embed','Start Yaws in embed mode.'],['fun','acd','acd_app:start/2',[]],['fun','acd','acd_app:stop/1',[]],['fun','acd','acd_ev_ws_handler:code_change/3',[]],['fun','acd','acd_ev_ws_handler:handle_call/2',[]],['fun','acd','acd_ev_ws_handler:handle_event/2',[]],['fun','acd','acd_ev_ws_handler:handle_info/2',[]],['fun','acd','acd_ev_ws_handler:init/1',[]],['fun','acd','acd_ev_ws_handler:terminate/2',[]],['fun','acd','acd_sup:init/1',[]],['fun','acd','acd_sup:start/1',[]],['fun','acd','ar_grbl:current_status/0','Get current Arduino status and tool position.'],['fun','acd','ar_grbl:cycle_start/0','Arduino cycle start.'],['fun','acd','ar_grbl:feed_hold/0','Arduino feed hold.'],['fun','acd','ar_grbl:firmware_version/0','Get Grbl version.'],['fun','acd','ar_grbl:gcode_parameters/0','Get Gcode parameters from Arduino.'],['fun','acd','ar_grbl:kill_alarm/0','Kill alarm lock.'],['fun','acd','ar_grbl:mode/0','Get current work mode.'],['fun','acd','ar_grbl:mode/1','Set gen_server internal mode.'],['fun','acd','ar_grbl:parameters/0','Get Arduino parameters.'],['fun','acd','ar_grbl:parser_state/0','Get Grbl parser state from Arduino.'],['fun','acd','ar_grbl:reply/1','Get reply from serial port.'],['fun','acd','ar_grbl:reset_grbl/0','Make Arduino reset - send Ctrl+X to controller.'],['fun','acd','ar_grbl:run_homing_cycle/0','Run homing cycle.'],['fun','acd','ar_grbl:send/1','Send command to Arduino.'],['fun','acd','ar_grbl:start/0','Start gen_server.'],['fun','acd','ar_grbl:start_console_trace/0','Start trace async events to console.'],['fun','acd','ar_grbl:stop/0','Stop gen_server.'],['fun','acd','ar_grbl:stop_console_trace/0','Stop trace async events to console.'],['fun','acd','ar_grbl_handler:code_change/3',[]],['fun','acd','ar_grbl_handler:handle_call/2',[]],['fun','acd','ar_grbl_handler:handle_event/2',[]],['fun','acd','ar_grbl_handler:handle_info/2',[]],['fun','acd','ar_grbl_handler:init/1',[]],['fun','acd','ar_grbl_handler:terminate/2',[]],['fun','acd','ar_serial:read/1','Start serial port reader.'],['fun','acd','ar_serial:reset_device/0','Controller hardware reset.'],['fun','acd','ar_serial:send/1','Send command to serial port.'],['fun','acd','ar_serial:start/0','Start communication server, with default callback '],['fun','acd','ar_serial:start/1','Start communication server, with given callback sp'],['fun','acd','ar_serial:start_trace/1','Start controller commands and replies tracing to f'],['fun','acd','ar_serial:stop_trace/0','Stop controller commands and replies tracing.'],['fun','acd','commons:base_dir/1','  Return base directory of given application or c'],['fun','acd','commons:clear_crlf/1','  Clear LFCR  character sequence from given strin'],['fun','acd','commons:clear_lf/1','  Clear LF character from given string.'],['fun','acd','commons:date4js/1','  Return given tuple datetime as formated string.'],['fun','acd','commons:get_opt/1','  Return application configuration option value.'],['fun','acd','commons:id/1','  Return pseudo-random value with given length.'],['fun','acd','commons:re_match/1','  Give regexp and string, apply, and return resul'],['fun','acd','commons:ts/0','  Return current datetime as string in format "YY'],['fun','acd','commons:unix_ts/0','  Return current datetime as UnixTimestamp format'],['fun','acd','fm:copy/1','Copy source file From to destination file To , whe'],['fun','acd','fm:del/1','Delete file or directory F , where base directory '],['fun','acd','fm:lock/1','Lock file F for functions "rename" and "del", wher'],['fun','acd','fm:ls/0','Get directory listing where base directory is appl'],['fun','acd','fm:ls/1','Get directory listing with mask M , where base dir'],['fun','acd','fm:rename/1','Rename source file From to destination file To , w'],['fun','acd','fm:run/1','Run given file on Arduino, return generated runid '],['fun','acd','fm:unlock/1','Unlock file F , where base directory is applicatio']];