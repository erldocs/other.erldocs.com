var index = [['app','builder','builder','[application]'],['mod','builder','builder',[]],['mod','builder','builder_app',[]],['mod','builder','builder_sup',[]],['mod','builder','github_setup',[]],['fun','builder','builder_app:start/2',[]],['fun','builder','builder_app:stop/1',[]],['fun','builder','builder_sup:init/1',[]],['fun','builder','builder_sup:start_link/0',[]],['app','gir','gir','[application]'],['app','releaseman','releaseman','[application]'],['mod','releaseman','build_handler',[]],['mod','releaseman','config',[]],['mod','releaseman','release',[]],['mod','releaseman','releaseman_app',[]],['mod','releaseman','releaseman_json','Yet another JSON (RFC 4627) library for Erlang.'],['mod','releaseman','releaseman_sup',[]],['fun','releaseman','build_handler:handle/2',[]],['fun','releaseman','build_handler:init/3',[]],['fun','releaseman','build_handler:terminate/3',[]],['fun','releaseman','releaseman_app:start/2',[]],['fun','releaseman','releaseman_app:stop/1',[]],['fun','releaseman','releaseman_json:decode/1','Decode the given iolist to Erlang terms.'],['fun','releaseman','releaseman_json:decode/1','Decode the given iolist to Erlang terms using the '],['fun','releaseman','releaseman_json:decoder/1','Create a decoder/1 with the given options.'],['fun','releaseman','releaseman_json:encode/1','Encode the given as JSON to an iolist.'],['fun','releaseman','releaseman_json:encoder/1','Create an encoder/1 with the given options.'],['fun','releaseman','releaseman_sup:init/1',[]],['fun','releaseman','releaseman_sup:start_link/0',[]]];