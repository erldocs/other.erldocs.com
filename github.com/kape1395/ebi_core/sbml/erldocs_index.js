var index = [['app','ebi_core','ebi_core','[application]'],['mod','ebi_core','ebi','Main interface of the ebi application.'],['mod','ebi_core','ebi_app',[]],['mod','ebi_core','ebi_exp_series',[]],['mod','ebi_core','ebi_experiment',[]],['mod','ebi_core','ebi_model',[]],['mod','ebi_core','ebi_model_sbml',[]],['mod','ebi_core','ebi_queue_mgr',[]],['mod','ebi_core','ebi_queue_mgr_sup',[]],['mod','ebi_core','ebi_queue_sup',[]],['mod','ebi_core','ebi_solver','This module is responsible for managing solver pro'],['mod','ebi_core','ebi_sup',[]],['fun','ebi_core','ebi:code_change/3',[]],['fun','ebi_core','ebi:get_id/1','Generates SHA1 ID for the specified simulation.'],['fun','ebi_core','ebi:handle_call/3',[]],['fun','ebi_core','ebi:handle_cast/2',[]],['fun','ebi_core','ebi:handle_info/2',[]],['fun','ebi_core','ebi:init/1',[]],['fun','ebi_core','ebi:start_link/0',[]],['fun','ebi_core','ebi:stop/0',[]],['fun','ebi_core','ebi:terminate/2',[]],['fun','ebi_core','ebi:test/0',[]],['fun','ebi_core','ebi_app:install/1',[]],['fun','ebi_core','ebi_app:shutdown/0',[]],['fun','ebi_core','ebi_app:start/2',[]],['fun','ebi_core','ebi_app:startup/0',[]],['fun','ebi_core','ebi_app:stop/1',[]],['fun','ebi_core','ebi_exp_series:code_change/4',[]],['fun','ebi_core','ebi_exp_series:handle_event/3',[]],['fun','ebi_core','ebi_exp_series:handle_info/3',[]],['fun','ebi_core','ebi_exp_series:handle_sync_event/4',[]],['fun','ebi_core','ebi_exp_series:init/1','Initialize the FSM.'],['fun','ebi_core','ebi_exp_series:init/2',[]],['fun','ebi_core','ebi_exp_series:terminate/3',[]],['fun','ebi_core','ebi_experiment:code_change/4',[]],['fun','ebi_core','ebi_experiment:handle_event/3',[]],['fun','ebi_core','ebi_experiment:handle_info/3',[]],['fun','ebi_core','ebi_experiment:handle_sync_event/4',[]],['fun','ebi_core','ebi_experiment:init/1','Initialize the FSM.'],['fun','ebi_core','ebi_experiment:init/2',[]],['fun','ebi_core','ebi_experiment:terminate/3',[]],['fun','ebi_core','ebi_model:parse_file/1','Parses biosensor model file and returns correspond'],['fun','ebi_core','ebi_model:read_model/1','Reads model from a file and returns it as #model{}'],['fun','ebi_core','ebi_model_sbml:ok/0',[]],['fun','ebi_core','ebi_queue_mgr_sup:init/1',[]],['fun','ebi_core','ebi_solver:cancel/1','Cancel the simulation and delete all the related d'],['fun','ebi_core','ebi_solver:code_change/4','Handler for a code_change.'],['fun','ebi_core','ebi_solver:handle_event/3','The solver_cancel event can occur at any time duri'],['fun','ebi_core','ebi_solver:handle_info/3','This function will be invoked for any other messag'],['fun','ebi_core','ebi_solver:handle_sync_event/4','Synchronous query for the current status can be in'],['fun','ebi_core','ebi_solver:init/1','Initialize the FSM.'],['fun','ebi_core','ebi_solver:init/2','Initialized solver.'],['fun','ebi_core','ebi_solver:restarting/2','The state restarting is considered for the cases, '],['fun','ebi_core','ebi_solver:run/1','Run the actual simulation or resume it, if the sim'],['fun','ebi_core','ebi_solver:running/2','Simulation is actually executed in this state.'],['fun','ebi_core','ebi_solver:start_link/1','Start the solver with the default port program.'],['fun','ebi_core','ebi_solver:start_link/2','Start the solver.'],['fun','ebi_core','ebi_solver:status/1','Returns current status of the solver.'],['fun','ebi_core','ebi_solver:suspend/1','Suspend the simulation, if it is running now.'],['fun','ebi_core','ebi_solver:suspended/2','The solver is already suspended completely.'],['fun','ebi_core','ebi_solver:suspending/2','The solver is requested to be suspended.'],['fun','ebi_core','ebi_solver:terminate/3','Termination of the FSM.'],['fun','ebi_core','ebi_sup:init/1',[]],['fun','ebi_core','ebi_sup:start_link/1',[]]];