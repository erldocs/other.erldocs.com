var index = [['app','scm','scm','[application]'],['mod','scm','scm_app',[]],['mod','scm','scm_sup',[]],['mod','scm','scmi',[]],['mod','scm','scmi_analyze',[]],['mod','scm','scmi_analyze_derived',[]],['mod','scm','scmi_analyze_primitive',[]],['mod','scm','scmi_analyze_program',[]],['mod','scm','scmi_analyze_syntax',[]],['mod','scm','scmi_env',[]],['mod','scm','scmi_eval',[]],['mod','scm','scmtmp','This module contains functions that are not yet im'],['fun','scm','scm_app:start/2',[]],['fun','scm','scm_app:stop/1',[]],['fun','scm','scm_sup:init/1',[]],['fun','scm','scm_sup:start_link/0',[]],['fun','scm','scmi:make_call/2',[]],['fun','scm','scmi:make_define/2',[]],['fun','scm','scmi:make_if/3',[]],['fun','scm','scmi:make_lambda/2',[]],['fun','scm','scmi:make_set/2',[]],['fun','scm','scmi:make_variable/0',[]],['fun','scm','scmi_analyze:analyze/1',[]],['fun','scm','scmi_analyze:analyze/1',[]],['fun','scm','scmi_analyze:are_valid_variables/1',[]],['fun','scm','scmi_analyze:classify/1',[]],['fun','scm','scmi_analyze:is_reserved_symbol/1',[]],['fun','scm','scmi_analyze:is_valid_variable/1',[]],['fun','scm','scmi_analyze:splitnv_arguments/1',[]],['fun','scm','scmi_analyze:validate_variable/1',[]],['fun','scm','scmi_analyze:validate_variables/1',[]],['fun','scm','scmi_analyze_derived:analyze_and/1',[]],['fun','scm','scmi_analyze_derived:analyze_begin/1',[]],['fun','scm','scmi_analyze_derived:analyze_case/1',[]],['fun','scm','scmi_analyze_derived:analyze_cond/1',[]],['fun','scm','scmi_analyze_derived:analyze_cond_expand/1',[]],['fun','scm','scmi_analyze_derived:analyze_do/1',[]],['fun','scm','scmi_analyze_derived:analyze_guard/1',[]],['fun','scm','scmi_analyze_derived:analyze_let/1',[]],['fun','scm','scmi_analyze_derived:analyze_let_values/1',[]],['fun','scm','scmi_analyze_derived:analyze_letrec/1',[]],['fun','scm','scmi_analyze_derived:analyze_letrec_values/1',[]],['fun','scm','scmi_analyze_derived:analyze_letrecs/1',[]],['fun','scm','scmi_analyze_derived:analyze_lets/1',[]],['fun','scm','scmi_analyze_derived:analyze_lets_values/1',[]],['fun','scm','scmi_analyze_derived:analyze_make_parameter/1',[]],['fun','scm','scmi_analyze_derived:analyze_or/1',[]],['fun','scm','scmi_analyze_derived:analyze_parameterize/1',[]],['fun','scm','scmi_analyze_derived:analyze_quasiquote/1',[]],['fun','scm','scmi_analyze_derived:analyze_unless/1',[]],['fun','scm','scmi_analyze_derived:analyze_unquote/1',[]],['fun','scm','scmi_analyze_derived:analyze_unquote_splicing/1',[]],['fun','scm','scmi_analyze_derived:analyze_when/1',[]],['fun','scm','scmi_analyze_derived:scan_out_internal_definitions/1',[]],['fun','scm','scmi_analyze_primitive:analyze_application/2',[]],['fun','scm','scmi_analyze_primitive:analyze_assignment/2',[]],['fun','scm','scmi_analyze_primitive:analyze_if/2',[]],['fun','scm','scmi_analyze_primitive:analyze_include/2',[]],['fun','scm','scmi_analyze_primitive:analyze_include_ci/2',[]],['fun','scm','scmi_analyze_primitive:analyze_include_lib/2',[]],['fun','scm','scmi_analyze_primitive:analyze_include_lib_ci/2',[]],['fun','scm','scmi_analyze_primitive:analyze_lambda/2',[]],['fun','scm','scmi_analyze_primitive:analyze_sequence/2',[]],['fun','scm','scmi_analyze_program:analyze_define/2',[]],['fun','scm','scmi_analyze_program:analyze_define_library/2',[]],['fun','scm','scmi_analyze_program:analyze_define_record_type/2',[]],['fun','scm','scmi_analyze_program:analyze_define_syntax/2',[]],['fun','scm','scmi_analyze_program:analyze_define_values/2',[]],['fun','scm','scmi_analyze_program:analyze_import/2',[]],['fun','scm','scmi_analyze_syntax:analyze_let_syntax/2',[]],['fun','scm','scmi_analyze_syntax:analyze_letrec_syntax/2',[]],['fun','scm','scmi_analyze_syntax:analyze_syntax_error/2',[]],['fun','scm','scmi_analyze_syntax:analyze_syntax_rules/2',[]],['fun','scm','scmi_env:define_variable/1',[]],['fun','scm','scmi_env:extend/1',[]],['fun','scm','scmi_env:is_immutable/1',[]],['fun','scm','scmi_env:is_resource/1',[]],['fun','scm','scmi_env:lookup_variable/1',[]],['fun','scm','scmi_env:make_immutable/1',[]],['fun','scm','scmi_env:notify_when_destroyed/1',[]],['fun','scm','scmi_env:notify_when_destroyed/1',[]],['fun','scm','scmi_env:safe_lookup_variable/1',[]],['fun','scm','scmi_env:set_variable/1',[]],['fun','scm','scmi_env:the_empty/0',[]],['fun','scm','scmi_eval:eval/1',[]],['fun','scm','scmi_eval:eval/1',[]],['fun','scm','scmi_eval:eval/1',[]],['fun','scm','scmi_eval:eval/1',[]],['fun','scm','scmi_eval:exec/1',[]],['fun','scm','scmi_eval:exec/1',[]],['fun','scm','scmi_eval:exec/1',[]],['fun','scm','scmi_eval:exec/1',[]],['fun','scm','scmtmp:exact/1','This function is a temporary place holder.'],['fun','scm','scmtmp:inexact/1','This function is a temporary place holder.'],['fun','scm','scmtmp:make-polar/1','This function is a temporary place holder.'],['fun','scm','scmtmp:make-rational/1','This function is a temporary place holder.'],['fun','scm','scmtmp:make-rational/1','This function is a temporary place holder.'],['fun','scm','scmtmp:make-real/1','This function is a temporary place holder.'],['fun','scm','scmtmp:make-rectangular/1','This function is a temporary place holder.']];