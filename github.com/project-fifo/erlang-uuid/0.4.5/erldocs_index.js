var index = [['app','erlang-uuid','erlang-uuid','[application]'],['mod','erlang-uuid','uuid','  Erlang UUID.'],['fun','erlang-uuid','uuid:get_node/0','Get node id (IEEE 802 (MAC) address).'],['fun','erlang-uuid','uuid:is_v1/1','Predicate for checking that supplied UUID is versi'],['fun','erlang-uuid','uuid:is_v3/1','Predicate for checking that supplied UUID is versi'],['fun','erlang-uuid','uuid:is_v4/1','Predicate for checking that supplied UUID is versi'],['fun','erlang-uuid','uuid:is_v5/1','Predicate for checking that supplied UUID is versi'],['fun','erlang-uuid','uuid:is_valid/1','Predicate for checking that supplied UUID is valid'],['fun','erlang-uuid','uuid:to_binary/1','Format UUID binary from string.'],['fun','erlang-uuid','uuid:to_string/1',' Format UUID string from binary.'],['fun','erlang-uuid','uuid:to_string/2',[]],['fun','erlang-uuid','uuid:to_uuid_urn/1',' Create UUID URN from UUID binary or string.'],['fun','erlang-uuid','uuid:uuid1/0','Create a UUID v1 (timebased).'],['fun','erlang-uuid','uuid:uuid1/1',[]],['fun','erlang-uuid','uuid:uuid3/1',' Create a UUID v3 (name based, MD5 is hashing func'],['fun','erlang-uuid','uuid:uuid4/0',' Create a UUID v4 (random) as a binary.'],['fun','erlang-uuid','uuid:uuid4s/0',[]],['fun','erlang-uuid','uuid:uuid5/1',' Create a UUID v5 (name based, SHA1 is hashing fun'],['fun','erlang-uuid','uuid:variant/1','Return variant for supplied UUID.'],['fun','erlang-uuid','uuid:version/1','Return version for supplied UUID.']];