var index = [['app','snarl','snarl','[application]'],['app','snarl','snarl','[application]'],['mod','snarl','snarl',[]],['mod','snarl','snarl_app',[]],['mod','snarl','snarl_console','Interface for snarl-admin commands.'],['mod','snarl','snarl_coverage',[]],['mod','snarl','snarl_entity_coverage_fsm_sup','Supervise the rts_write FSM.'],['mod','snarl','snarl_entity_read_fsm','The coordinator for stat get operations.'],['mod','snarl','snarl_entity_read_fsm_sup','Supervise the rts_write FSM.'],['mod','snarl','snarl_entity_write_fsm','The coordinator for stat write opeartions.'],['mod','snarl','snarl_entity_write_fsm_sup','Supervise the rts_write FSM.'],['mod','snarl','snarl_full_coverage',[]],['mod','snarl','snarl_init','.'],['mod','snarl','snarl_map',[]],['mod','snarl','snarl_node_event_handler',[]],['mod','snarl','snarl_obj','A suite of functions that operate on the algebraic'],['mod','snarl','snarl_opt',[]],['mod','snarl','snarl_org_state','.'],['mod','snarl','snarl_ring_event_handler',[]],['mod','snarl','snarl_role_state','.'],['mod','snarl','snarl_sup',[]],['mod','snarl','snarl_sync_exchange_sup','.'],['mod','snarl','snarl_sync_protocol',[]],['mod','snarl','snarl_sync_read_sup','.'],['mod','snarl','snarl_sync_sup','.'],['mod','snarl','snarl_sync_tree','.'],['mod','snarl','snarl_user_state','.'],['mod','snarl','snarl_util',[]],['mod','snarl','snarl_worker',[]],['mod','snarl','snarl_yubico',[]],['fun','snarl','snarl_app:start/2',[]],['fun','snarl','snarl_app:stop/1',[]],['fun','snarl','snarl_console:aae_status/1',[]],['fun','snarl','snarl_console:add_role/1',[]],['fun','snarl','snarl_console:add_user/1',[]],['fun','snarl','snarl_console:config/1',[]],['fun','snarl','snarl_console:delete_role/1',[]],['fun','snarl','snarl_console:delete_user/1',[]],['fun','snarl','snarl_console:down/1',[]],['fun','snarl','snarl_console:export_role/1',[]],['fun','snarl','snarl_console:export_user/1',[]],['fun','snarl','snarl_console:grant_role/1',[]],['fun','snarl','snarl_console:grant_user/1',[]],['fun','snarl','snarl_console:import_role/1',[]],['fun','snarl','snarl_console:import_user/1',[]],['fun','snarl','snarl_console:join/1',[]],['fun','snarl','snarl_console:join_role/1',[]],['fun','snarl','snarl_console:leave/1',[]],['fun','snarl','snarl_console:leave_role/1',[]],['fun','snarl','snarl_console:list_role/1',[]],['fun','snarl','snarl_console:list_user/1',[]],['fun','snarl','snarl_console:passwd/1',[]],['fun','snarl','snarl_console:reip/1',[]],['fun','snarl','snarl_console:remove/1',[]],['fun','snarl','snarl_console:revoke_role/1',[]],['fun','snarl','snarl_console:revoke_user/1',[]],['fun','snarl','snarl_console:ringready/1',[]],['fun','snarl','snarl_console:staged_join/1',[]],['fun','snarl','snarl_console:status/1',[]],['fun','snarl','snarl_coverage:finish/2',[]],['fun','snarl','snarl_coverage:init/2',[]],['fun','snarl','snarl_coverage:process_results/2',[]],['fun','snarl','snarl_coverage:start/3',[]],['fun','snarl','snarl_entity_coverage_fsm_sup:init/1',[]],['fun','snarl','snarl_entity_coverage_fsm_sup:start_coverage/2',[]],['fun','snarl','snarl_entity_coverage_fsm_sup:start_coverage/3',[]],['fun','snarl','snarl_entity_coverage_fsm_sup:start_link/0',[]],['fun','snarl','snarl_entity_read_fsm:code_change/4',[]],['fun','snarl','snarl_entity_read_fsm:different/1',[]],['fun','snarl','snarl_entity_read_fsm:execute/2','Execute the get reqs.'],['fun','snarl','snarl_entity_read_fsm:finalize/2',[]],['fun','snarl','snarl_entity_read_fsm:handle_event/3',[]],['fun','snarl','snarl_entity_read_fsm:handle_info/3',[]],['fun','snarl','snarl_entity_read_fsm:handle_sync_event/4',[]],['fun','snarl','snarl_entity_read_fsm:init/1',[]],['fun','snarl','snarl_entity_read_fsm:needs_repair/1','Given the merged object MObj and a list of Replies'],['fun','snarl','snarl_entity_read_fsm:prepare/2','Calculate the Preflist.'],['fun','snarl','snarl_entity_read_fsm:reconcile/1','Reconcile conflicts among conflicting values.'],['fun','snarl','snarl_entity_read_fsm:repair/1','Repair any vnodes that do not have the correct obj'],['fun','snarl','snarl_entity_read_fsm:start/2',[]],['fun','snarl','snarl_entity_read_fsm:start/3',[]],['fun','snarl','snarl_entity_read_fsm:start/4',[]],['fun','snarl','snarl_entity_read_fsm:start/5',[]],['fun','snarl','snarl_entity_read_fsm:start_link/7',[]],['fun','snarl','snarl_entity_read_fsm:terminate/3',[]],['fun','snarl','snarl_entity_read_fsm:unique/1','Given a list return the set of unique values.'],['fun','snarl','snarl_entity_read_fsm:wait_for_n/2',[]],['fun','snarl','snarl_entity_read_fsm:waiting/2','Wait for R replies and then respond to From (origi'],['fun','snarl','snarl_entity_read_fsm_sup:init/1',[]],['fun','snarl','snarl_entity_read_fsm_sup:start_link/0',[]],['fun','snarl','snarl_entity_read_fsm_sup:start_read_fsm/1',[]],['fun','snarl','snarl_entity_write_fsm:code_change/4',[]],['fun','snarl','snarl_entity_write_fsm:execute/2','Execute the write request and then go into waiting'],['fun','snarl','snarl_entity_write_fsm:handle_event/3',[]],['fun','snarl','snarl_entity_write_fsm:handle_info/3',[]],['fun','snarl','snarl_entity_write_fsm:handle_sync_event/4',[]],['fun','snarl','snarl_entity_write_fsm:init/1','Initialize the state data.'],['fun','snarl','snarl_entity_write_fsm:prepare/2','Prepare the write by calculating the _preference l'],['fun','snarl','snarl_entity_write_fsm:start_link/5',[]],['fun','snarl','snarl_entity_write_fsm:start_link/6',[]],['fun','snarl','snarl_entity_write_fsm:terminate/3',[]],['fun','snarl','snarl_entity_write_fsm:waiting/2','Wait for W write reqs to respond.'],['fun','snarl','snarl_entity_write_fsm:write/3',[]],['fun','snarl','snarl_entity_write_fsm:write/4',[]],['fun','snarl','snarl_entity_write_fsm_sup:init/1',[]],['fun','snarl','snarl_entity_write_fsm_sup:start_link/0',[]],['fun','snarl','snarl_entity_write_fsm_sup:start_write_fsm/1',[]],['fun','snarl','snarl_full_coverage:finish/2',[]],['fun','snarl','snarl_full_coverage:init/2',[]],['fun','snarl','snarl_full_coverage:process_results/2',[]],['fun','snarl','snarl_full_coverage:start/3',[]],['fun','snarl','snarl_init:start_link/0','  Starts the server.'],['fun','snarl','snarl_map:from_orddict/1',[]],['fun','snarl','snarl_map:get/1',[]],['fun','snarl','snarl_map:merge/2',[]],['fun','snarl','snarl_map:new/0',[]],['fun','snarl','snarl_map:remove/3',[]],['fun','snarl','snarl_map:set/1',[]],['fun','snarl','snarl_map:split_path/1',[]],['fun','snarl','snarl_map:value/1',[]],['fun','snarl','snarl_node_event_handler:code_change/3',[]],['fun','snarl','snarl_node_event_handler:handle_call/2',[]],['fun','snarl','snarl_node_event_handler:handle_event/2',[]],['fun','snarl','snarl_node_event_handler:handle_info/2',[]],['fun','snarl','snarl_node_event_handler:init/1',[]],['fun','snarl','snarl_node_event_handler:terminate/2',[]],['fun','snarl','snarl_obj:ancestors/1','Given a list of snarl_obj() return a list of all t'],['fun','snarl','snarl_obj:children/1','Given a list of snarl_obj() return a list of the c'],['fun','snarl','snarl_obj:equal/1','Closure around equal/2 for use with HOFs (damn ver'],['fun','snarl','snarl_obj:equal/1','Predeicate to determine if ObjA and ObjB are equal'],['fun','snarl','snarl_obj:merge/1','Merge the list of Objs, calling the appropriate re'],['fun','snarl','snarl_obj:unique/1','Given a list of Objs return the list of uniques.'],['fun','snarl','snarl_obj:update/1','Given a Val update the Obj.'],['fun','snarl','snarl_obj:val/1',[]],['fun','snarl','snarl_obj:vclock/1','Given a vclock type Obj retrieve the vclock.'],['fun','snarl','snarl_opt:get/5',[]],['fun','snarl','snarl_opt:set/2',[]],['fun','snarl','snarl_org_state:add_trigger/4',[]],['fun','snarl','snarl_org_state:getter/2',[]],['fun','snarl','snarl_org_state:is_a/1',[]],['fun','snarl','snarl_org_state:load/2',[]],['fun','snarl','snarl_org_state:merge/2',[]],['fun','snarl','snarl_org_state:metadata/1',[]],['fun','snarl','snarl_org_state:name/1',[]],['fun','snarl','snarl_org_state:name/3',[]],['fun','snarl','snarl_org_state:new/1',[]],['fun','snarl','snarl_org_state:remove_target/3',[]],['fun','snarl','snarl_org_state:remove_trigger/3',[]],['fun','snarl','snarl_org_state:set_metadata/4',[]],['fun','snarl','snarl_org_state:to_json/1',[]],['fun','snarl','snarl_org_state:triggers/1',[]],['fun','snarl','snarl_org_state:uuid/1',[]],['fun','snarl','snarl_org_state:uuid/3',[]],['fun','snarl','snarl_ring_event_handler:code_change/3',[]],['fun','snarl','snarl_ring_event_handler:handle_call/2',[]],['fun','snarl','snarl_ring_event_handler:handle_event/2',[]],['fun','snarl','snarl_ring_event_handler:handle_info/2',[]],['fun','snarl','snarl_ring_event_handler:init/1',[]],['fun','snarl','snarl_ring_event_handler:terminate/2',[]],['fun','snarl','snarl_role_state:getter/2',[]],['fun','snarl','snarl_role_state:grant/3',[]],['fun','snarl','snarl_role_state:is_a/1',[]],['fun','snarl','snarl_role_state:load/2',[]],['fun','snarl','snarl_role_state:merge/1',[]],['fun','snarl','snarl_role_state:metadata/1',[]],['fun','snarl','snarl_role_state:name/1',[]],['fun','snarl','snarl_role_state:name/3',[]],['fun','snarl','snarl_role_state:new/1',[]],['fun','snarl','snarl_role_state:permissions/1',[]],['fun','snarl','snarl_role_state:revoke/3',[]],['fun','snarl','snarl_role_state:revoke_prefix/3',[]],['fun','snarl','snarl_role_state:set_metadata/4',[]],['fun','snarl','snarl_role_state:to_json/1',[]],['fun','snarl','snarl_role_state:uuid/1',[]],['fun','snarl','snarl_role_state:uuid/1',[]],['fun','snarl','snarl_sup:init/1',[]],['fun','snarl','snarl_sup:start_link/0',[]],['fun','snarl','snarl_sync_exchange_sup:start_child/5',[]],['fun','snarl','snarl_sync_exchange_sup:start_link/0','  Starts the supervisor.'],['fun','snarl','snarl_sync_protocol:code_change/3',[]],['fun','snarl','snarl_sync_protocol:handle_call/3',[]],['fun','snarl','snarl_sync_protocol:handle_cast/2',[]],['fun','snarl','snarl_sync_protocol:handle_info/2',[]],['fun','snarl','snarl_sync_protocol:init/1',[]],['fun','snarl','snarl_sync_protocol:start_link/4',[]],['fun','snarl','snarl_sync_protocol:terminate/2',[]],['fun','snarl','snarl_sync_read_sup:start_child/4',[]],['fun','snarl','snarl_sync_read_sup:start_link/0','  Starts the supervisor.'],['fun','snarl','snarl_sync_sup:start_child/2',[]],['fun','snarl','snarl_sync_sup:start_link/0','  Starts the supervisor.'],['fun','snarl','snarl_sync_tree:delete/3',[]],['fun','snarl','snarl_sync_tree:done/3',[]],['fun','snarl','snarl_sync_tree:get_tree/0',[]],['fun','snarl','snarl_sync_tree:insert/5',[]],['fun','snarl','snarl_sync_tree:start_link/0','  Starts the server.'],['fun','snarl','snarl_sync_tree:update/3',[]],['fun','snarl','snarl_user_state:active_org/1',[]],['fun','snarl','snarl_user_state:add_key/4',[]],['fun','snarl','snarl_user_state:add_yubikey/3',[]],['fun','snarl','snarl_user_state:getter/2',[]],['fun','snarl','snarl_user_state:grant/3',[]],['fun','snarl','snarl_user_state:is_a/1',[]],['fun','snarl','snarl_user_state:join/3',[]],['fun','snarl','snarl_user_state:join_org/3',[]],['fun','snarl','snarl_user_state:keys/1',[]],['fun','snarl','snarl_user_state:leave/3',[]],['fun','snarl','snarl_user_state:leave_org/3',[]],['fun','snarl','snarl_user_state:load/2',[]],['fun','snarl','snarl_user_state:merge/2',[]],['fun','snarl','snarl_user_state:metadata/1',[]],['fun','snarl','snarl_user_state:name/1',[]],['fun','snarl','snarl_user_state:name/3',[]],['fun','snarl','snarl_user_state:new/1',[]],['fun','snarl','snarl_user_state:orgs/1',[]],['fun','snarl','snarl_user_state:password/1',[]],['fun','snarl','snarl_user_state:password/3',[]],['fun','snarl','snarl_user_state:permissions/1',[]],['fun','snarl','snarl_user_state:remove_yubikey/3',[]],['fun','snarl','snarl_user_state:revoke/3',[]],['fun','snarl','snarl_user_state:revoke_key/3',[]],['fun','snarl','snarl_user_state:revoke_prefix/3',[]],['fun','snarl','snarl_user_state:roles/1',[]],['fun','snarl','snarl_user_state:select_org/3',[]],['fun','snarl','snarl_user_state:set_metadata/4',[]],['fun','snarl','snarl_user_state:to_json/1',[]],['fun','snarl','snarl_user_state:uuid/1',[]],['fun','snarl','snarl_user_state:uuid/3',[]],['fun','snarl','snarl_user_state:yubikeys/1',[]],['fun','snarl','snarl_util:ensure_str/1',[]],['fun','snarl','snarl_worker:handle_work/3','Perform the asynchronous fold operation.'],['fun','snarl','snarl_worker:init_worker/3','Initialize the worker.'],['fun','snarl','snarl_yubico:id/1',[]],['fun','snarl','snarl_yubico:verify/1',[]]];