var index = [['app','snarl','snarl','[application]'],['app','snarl','snarl','[application]'],['mod','snarl','snarl',[]],['mod','snarl','snarl_app',[]],['mod','snarl','snarl_console','Interface for snarl-admin commands.'],['mod','snarl','snarl_entity_coverage_fsm','The coordinator for stat get operations.'],['mod','snarl','snarl_entity_coverage_fsm_sup','Supervise the rts_write FSM.'],['mod','snarl','snarl_entity_read_fsm','The coordinator for stat get operations.'],['mod','snarl','snarl_entity_read_fsm_sup','Supervise the rts_write FSM.'],['mod','snarl','snarl_entity_write_fsm','The coordinator for stat write opeartions.'],['mod','snarl','snarl_entity_write_fsm_sup','Supervise the rts_write FSM.'],['mod','snarl','snarl_group_state','.'],['mod','snarl','snarl_node_event_handler',[]],['mod','snarl','snarl_obj','A suite of functions that operate on the algebraic'],['mod','snarl','snarl_ring_event_handler',[]],['mod','snarl','snarl_sup',[]],['mod','snarl','snarl_token_state','.'],['mod','snarl','snarl_user_state','.'],['mod','snarl','snarl_zmq_handler',[]],['fun','snarl','snarl_app:start/2',[]],['fun','snarl','snarl_app:stop/1',[]],['fun','snarl','snarl_console:add_group/1',[]],['fun','snarl','snarl_console:add_user/1',[]],['fun','snarl','snarl_console:grant_group/1',[]],['fun','snarl','snarl_console:grant_user/1',[]],['fun','snarl','snarl_console:join/1',[]],['fun','snarl','snarl_console:join_group/1',[]],['fun','snarl','snarl_console:leave/1',[]],['fun','snarl','snarl_console:leave_group/1',[]],['fun','snarl','snarl_console:passwd/1',[]],['fun','snarl','snarl_console:remove/1',[]],['fun','snarl','snarl_console:revoke_group/1',[]],['fun','snarl','snarl_console:revoke_user/1',[]],['fun','snarl','snarl_console:ringready/1',[]],['fun','snarl','snarl_entity_coverage_fsm:code_change/4',[]],['fun','snarl','snarl_entity_coverage_fsm:execute/2','Execute the get reqs.'],['fun','snarl','snarl_entity_coverage_fsm:handle_event/3',[]],['fun','snarl','snarl_entity_coverage_fsm:handle_info/3',[]],['fun','snarl','snarl_entity_coverage_fsm:handle_sync_event/4',[]],['fun','snarl','snarl_entity_coverage_fsm:init/1',[]],['fun','snarl','snarl_entity_coverage_fsm:prepare/2','Calculate the Preflist.'],['fun','snarl','snarl_entity_coverage_fsm:start/2',[]],['fun','snarl','snarl_entity_coverage_fsm:start/3',[]],['fun','snarl','snarl_entity_coverage_fsm:start/4',[]],['fun','snarl','snarl_entity_coverage_fsm:start_link/6',[]],['fun','snarl','snarl_entity_coverage_fsm:terminate/3',[]],['fun','snarl','snarl_entity_coverage_fsm:waiting/2',[]],['fun','snarl','snarl_entity_coverage_fsm_sup:init/1',[]],['fun','snarl','snarl_entity_coverage_fsm_sup:start_link/0',[]],['fun','snarl','snarl_entity_coverage_fsm_sup:start_read_fsm/1',[]],['fun','snarl','snarl_entity_read_fsm:code_change/4',[]],['fun','snarl','snarl_entity_read_fsm:different/1',[]],['fun','snarl','snarl_entity_read_fsm:execute/2','Execute the get reqs.'],['fun','snarl','snarl_entity_read_fsm:finalize/2',[]],['fun','snarl','snarl_entity_read_fsm:handle_event/3',[]],['fun','snarl','snarl_entity_read_fsm:handle_info/3',[]],['fun','snarl','snarl_entity_read_fsm:handle_sync_event/4',[]],['fun','snarl','snarl_entity_read_fsm:init/1',[]],['fun','snarl','snarl_entity_read_fsm:needs_repair/1','Given the merged object MObj and a list of Replies'],['fun','snarl','snarl_entity_read_fsm:prepare/2','Calculate the Preflist.'],['fun','snarl','snarl_entity_read_fsm:reconcile/1','Reconcile conflicts among conflicting values.'],['fun','snarl','snarl_entity_read_fsm:repair/1','Repair any vnodes that do not have the correct obj'],['fun','snarl','snarl_entity_read_fsm:start/2',[]],['fun','snarl','snarl_entity_read_fsm:start/3',[]],['fun','snarl','snarl_entity_read_fsm:start/4',[]],['fun','snarl','snarl_entity_read_fsm:start_link/6',[]],['fun','snarl','snarl_entity_read_fsm:terminate/3',[]],['fun','snarl','snarl_entity_read_fsm:unique/1','Given a list return the set of unique values.'],['fun','snarl','snarl_entity_read_fsm:wait_for_n/2',[]],['fun','snarl','snarl_entity_read_fsm:waiting/2','Wait for R replies and then respond to From (origi'],['fun','snarl','snarl_entity_read_fsm_sup:init/1',[]],['fun','snarl','snarl_entity_read_fsm_sup:start_link/0',[]],['fun','snarl','snarl_entity_read_fsm_sup:start_read_fsm/1',[]],['fun','snarl','snarl_entity_write_fsm:code_change/4',[]],['fun','snarl','snarl_entity_write_fsm:execute/2','Execute the write request and then go into waiting'],['fun','snarl','snarl_entity_write_fsm:handle_event/3',[]],['fun','snarl','snarl_entity_write_fsm:handle_info/3',[]],['fun','snarl','snarl_entity_write_fsm:handle_sync_event/4',[]],['fun','snarl','snarl_entity_write_fsm:init/1','Initialize the state data.'],['fun','snarl','snarl_entity_write_fsm:mk_reqid/0',[]],['fun','snarl','snarl_entity_write_fsm:prepare/2','Prepare the write by calculating the _preference l'],['fun','snarl','snarl_entity_write_fsm:start_link/5',[]],['fun','snarl','snarl_entity_write_fsm:start_link/6',[]],['fun','snarl','snarl_entity_write_fsm:terminate/3',[]],['fun','snarl','snarl_entity_write_fsm:waiting/2','Wait for W write reqs to respond.'],['fun','snarl','snarl_entity_write_fsm:write/3',[]],['fun','snarl','snarl_entity_write_fsm:write/4',[]],['fun','snarl','snarl_entity_write_fsm_sup:init/1',[]],['fun','snarl','snarl_entity_write_fsm_sup:start_link/0',[]],['fun','snarl','snarl_entity_write_fsm_sup:start_write_fsm/1',[]],['fun','snarl','snarl_group_state:add/2',[]],['fun','snarl','snarl_group_state:delete/2',[]],['fun','snarl','snarl_group_state:grant/2',[]],['fun','snarl','snarl_group_state:name/2',[]],['fun','snarl','snarl_group_state:new/0',[]],['fun','snarl','snarl_group_state:revoke/2',[]],['fun','snarl','snarl_node_event_handler:code_change/3',[]],['fun','snarl','snarl_node_event_handler:handle_call/2',[]],['fun','snarl','snarl_node_event_handler:handle_event/2',[]],['fun','snarl','snarl_node_event_handler:handle_info/2',[]],['fun','snarl','snarl_node_event_handler:init/1',[]],['fun','snarl','snarl_node_event_handler:terminate/2',[]],['fun','snarl','snarl_obj:ancestors/1','Given a list of snarl_obj() return a list of all t'],['fun','snarl','snarl_obj:children/1','Given a list of snarl_obj() return a list of the c'],['fun','snarl','snarl_obj:equal/1','Closure around equal/2 for use with HOFs (damn ver'],['fun','snarl','snarl_obj:equal/1','Predeicate to determine if ObjA and ObjB are equal'],['fun','snarl','snarl_obj:merge/1','Merge the list of Objs, calling the appropriate re'],['fun','snarl','snarl_obj:unique/1','Given a list of Objs return the list of uniques.'],['fun','snarl','snarl_obj:update/1','Given a Val update the Obj.'],['fun','snarl','snarl_obj:val/1',[]],['fun','snarl','snarl_obj:vclock/1','Given a vclock type Obj retrieve the vclock.'],['fun','snarl','snarl_ring_event_handler:code_change/3',[]],['fun','snarl','snarl_ring_event_handler:handle_call/2',[]],['fun','snarl','snarl_ring_event_handler:handle_event/2',[]],['fun','snarl','snarl_ring_event_handler:handle_info/2',[]],['fun','snarl','snarl_ring_event_handler:init/1',[]],['fun','snarl','snarl_ring_event_handler:terminate/2',[]],['fun','snarl','snarl_sup:init/1',[]],['fun','snarl','snarl_sup:start_link/0',[]],['fun','snarl','snarl_token_state:new/0',[]],['fun','snarl','snarl_token_state:user/2',[]],['fun','snarl','snarl_user_state:add/2',[]],['fun','snarl','snarl_user_state:claim_resource/4',[]],['fun','snarl','snarl_user_state:delete/2',[]],['fun','snarl','snarl_user_state:free_resource/3',[]],['fun','snarl','snarl_user_state:get_free_resource/2',[]],['fun','snarl','snarl_user_state:get_resource/2',[]],['fun','snarl','snarl_user_state:get_resource_stat/1',[]],['fun','snarl','snarl_user_state:grant/2',[]],['fun','snarl','snarl_user_state:join/2',[]],['fun','snarl','snarl_user_state:leave/2',[]],['fun','snarl','snarl_user_state:name/2',[]],['fun','snarl','snarl_user_state:new/0',[]],['fun','snarl','snarl_user_state:passwd/2',[]],['fun','snarl','snarl_user_state:revoke/2',[]],['fun','snarl','snarl_user_state:set_resource/3',[]],['fun','snarl','snarl_zmq_handler:init/1',[]],['fun','snarl','snarl_zmq_handler:message/1',[]]];