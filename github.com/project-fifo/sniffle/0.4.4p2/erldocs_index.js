var index = [['app','sniffle','sniffle','[application]'],['app','sniffle','sniffle','[application]'],['mod','sniffle','sniffle_app',[]],['mod','sniffle','sniffle_cloud_status',[]],['mod','sniffle','sniffle_console','Interface for sniffle-admin commands.'],['mod','sniffle','sniffle_console_dtrace','Interface for sniffle-admin commands.'],['mod','sniffle','sniffle_console_hypervisors','Interface for sniffle-admin commands.'],['mod','sniffle','sniffle_console_ipranges','Interface for sniffle-admin commands.'],['mod','sniffle','sniffle_console_networks','Interface for sniffle-admin commands.'],['mod','sniffle','sniffle_console_packages','Interface for sniffle-admin commands.'],['mod','sniffle','sniffle_console_vms','Interface for sniffle-admin commands.'],['mod','sniffle','sniffle_coverage',[]],['mod','sniffle','sniffle_coverage_sup','Supervise the rts_write FSM.'],['mod','sniffle','sniffle_create_fsm_sup','.'],['mod','sniffle','sniffle_create_pool','.'],['mod','sniffle','sniffle_dataset',[]],['mod','sniffle','sniffle_dataset_state','.'],['mod','sniffle','sniffle_dtrace',[]],['mod','sniffle','sniffle_dtrace_state','.'],['mod','sniffle','sniffle_dtrace_sup',[]],['mod','sniffle','sniffle_entity_read_fsm','The coordinator for stat get operations.'],['mod','sniffle','sniffle_entity_read_fsm_sup','Supervise the rts_write FSM.'],['mod','sniffle','sniffle_entity_write_fsm','The coordinator for stat write opeartions.'],['mod','sniffle','sniffle_entity_write_fsm_sup','Supervise the rts_write FSM.'],['mod','sniffle','sniffle_full_coverage',[]],['mod','sniffle','sniffle_hypervisor',[]],['mod','sniffle','sniffle_hypervisor_state','.'],['mod','sniffle','sniffle_img',[]],['mod','sniffle','sniffle_img_state',[]],['mod','sniffle','sniffle_iprange',[]],['mod','sniffle','sniffle_iprange_state','.'],['mod','sniffle','sniffle_network',[]],['mod','sniffle','sniffle_network_state','.'],['mod','sniffle','sniffle_node_event_handler',[]],['mod','sniffle','sniffle_obj','A suite of functions that operate on the algebraic'],['mod','sniffle','sniffle_opt',[]],['mod','sniffle','sniffle_package',[]],['mod','sniffle','sniffle_package_state','.'],['mod','sniffle','sniffle_ring_event_handler',[]],['mod','sniffle','sniffle_s3',[]],['mod','sniffle','sniffle_sup',[]],['mod','sniffle','sniffle_util',[]],['mod','sniffle','sniffle_vm',[]],['mod','sniffle','sniffle_vm_state','.'],['mod','sniffle','sniffle_worker',[]],['fun','sniffle','sniffle_app:start/2',[]],['fun','sniffle','sniffle_app:stop/1',[]],['fun','sniffle','sniffle_cloud_status:finish/2',[]],['fun','sniffle','sniffle_cloud_status:init/2',[]],['fun','sniffle','sniffle_cloud_status:process_results/2',[]],['fun','sniffle','sniffle_cloud_status:start/0',[]],['fun','sniffle','sniffle_console:aae_status/1',[]],['fun','sniffle','sniffle_console:config/1',[]],['fun','sniffle','sniffle_console:connections/1',[]],['fun','sniffle','sniffle_console:db_delete/1',[]],['fun','sniffle','sniffle_console:db_get/1',[]],['fun','sniffle','sniffle_console:db_keys/1',[]],['fun','sniffle','sniffle_console:db_update/1',[]],['fun','sniffle','sniffle_console:down/1',[]],['fun','sniffle','sniffle_console:ds/1',[]],['fun','sniffle','sniffle_console:dtrace/1',[]],['fun','sniffle','sniffle_console:fields/2',[]],['fun','sniffle','sniffle_console:get_ring/1',[]],['fun','sniffle','sniffle_console:hdr/1',[]],['fun','sniffle','sniffle_console:hvs/1',[]],['fun','sniffle','sniffle_console:ips/1',[]],['fun','sniffle','sniffle_console:join/1',[]],['fun','sniffle','sniffle_console:leave/1',[]],['fun','sniffle','sniffle_console:networks/1',[]],['fun','sniffle','sniffle_console:pkgs/1',[]],['fun','sniffle','sniffle_console:pp_json/1',[]],['fun','sniffle','sniffle_console:reip/1',[]],['fun','sniffle','sniffle_console:remove/1',[]],['fun','sniffle','sniffle_console:ringready/1',[]],['fun','sniffle','sniffle_console:staged_join/1',[]],['fun','sniffle','sniffle_console:vms/1',[]],['fun','sniffle','sniffle_console_dtrace:command/2',[]],['fun','sniffle','sniffle_console_dtrace:help/0',[]],['fun','sniffle','sniffle_console_hypervisors:command/2',[]],['fun','sniffle','sniffle_console_hypervisors:help/0',[]],['fun','sniffle','sniffle_console_ipranges:command/2',[]],['fun','sniffle','sniffle_console_ipranges:help/0',[]],['fun','sniffle','sniffle_console_networks:command/2',[]],['fun','sniffle','sniffle_console_networks:help/0',[]],['fun','sniffle','sniffle_console_packages:command/2',[]],['fun','sniffle','sniffle_console_packages:help/0',[]],['fun','sniffle','sniffle_console_vms:command/2',[]],['fun','sniffle','sniffle_console_vms:help/0',[]],['fun','sniffle','sniffle_coverage:finish/2',[]],['fun','sniffle','sniffle_coverage:init/2',[]],['fun','sniffle','sniffle_coverage:mk_reqid/0',[]],['fun','sniffle','sniffle_coverage:process_results/2',[]],['fun','sniffle','sniffle_coverage:start/3',[]],['fun','sniffle','sniffle_coverage_sup:init/1',[]],['fun','sniffle','sniffle_coverage_sup:start_coverage/2',[]],['fun','sniffle','sniffle_coverage_sup:start_coverage/3',[]],['fun','sniffle','sniffle_coverage_sup:start_link/0',[]],['fun','sniffle','sniffle_create_fsm_sup:start_link/0','  Starts the supervisor.'],['fun','sniffle','sniffle_create_pool:add/4',[]],['fun','sniffle','sniffle_create_pool:start_link/0','  Starts the server.'],['fun','sniffle','sniffle_dataset:create/1',[]],['fun','sniffle','sniffle_dataset:delete/1',[]],['fun','sniffle','sniffle_dataset:get/1',[]],['fun','sniffle','sniffle_dataset:import/1',[]],['fun','sniffle','sniffle_dataset:list/0',[]],['fun','sniffle','sniffle_dataset:list/1','Lists all vms and fiters by a given matcher set.'],['fun','sniffle','sniffle_dataset:list_/0',[]],['fun','sniffle','sniffle_dataset:read_image/6',[]],['fun','sniffle','sniffle_dataset:set/1',[]],['fun','sniffle','sniffle_dataset:set/1',[]],['fun','sniffle','sniffle_dataset:sync_repair/2',[]],['fun','sniffle','sniffle_dataset:wipe/1',[]],['fun','sniffle','sniffle_dataset_state:getter/2',[]],['fun','sniffle','sniffle_dataset_state:load/1',[]],['fun','sniffle','sniffle_dataset_state:name/2',[]],['fun','sniffle','sniffle_dataset_state:new/0',[]],['fun','sniffle','sniffle_dataset_state:set/3',[]],['fun','sniffle','sniffle_dataset_state:uuid/1',[]],['fun','sniffle','sniffle_dtrace:add/1',[]],['fun','sniffle','sniffle_dtrace:delete/1',[]],['fun','sniffle','sniffle_dtrace:get/1',[]],['fun','sniffle','sniffle_dtrace:list/0',[]],['fun','sniffle','sniffle_dtrace:list/1','Lists all vms and fiters by a given matcher set.'],['fun','sniffle','sniffle_dtrace:list_/0',[]],['fun','sniffle','sniffle_dtrace:set/1',[]],['fun','sniffle','sniffle_dtrace:set/1',[]],['fun','sniffle','sniffle_dtrace:sync_repair/2',[]],['fun','sniffle','sniffle_dtrace:wipe/1',[]],['fun','sniffle','sniffle_dtrace_state:getter/2',[]],['fun','sniffle','sniffle_dtrace_state:load/1',[]],['fun','sniffle','sniffle_dtrace_state:new/0',[]],['fun','sniffle','sniffle_dtrace_state:set/3',[]],['fun','sniffle','sniffle_dtrace_state:uuid/1',[]],['fun','sniffle','sniffle_dtrace_sup:init/1',[]],['fun','sniffle','sniffle_dtrace_sup:start_child/1',[]],['fun','sniffle','sniffle_dtrace_sup:start_link/0',[]],['fun','sniffle','sniffle_entity_read_fsm:code_change/4',[]],['fun','sniffle','sniffle_entity_read_fsm:different/1',[]],['fun','sniffle','sniffle_entity_read_fsm:execute/2','Execute the get reqs.'],['fun','sniffle','sniffle_entity_read_fsm:finalize/2',[]],['fun','sniffle','sniffle_entity_read_fsm:handle_event/3',[]],['fun','sniffle','sniffle_entity_read_fsm:handle_info/3',[]],['fun','sniffle','sniffle_entity_read_fsm:handle_sync_event/4',[]],['fun','sniffle','sniffle_entity_read_fsm:init/1',[]],['fun','sniffle','sniffle_entity_read_fsm:needs_repair/1','Given the merged object MObj and a list of Replies'],['fun','sniffle','sniffle_entity_read_fsm:prepare/2','Calculate the Preflist.'],['fun','sniffle','sniffle_entity_read_fsm:reconcile/1','Reconcile conflicts among conflicting values.'],['fun','sniffle','sniffle_entity_read_fsm:repair/1','Repair any vnodes that do not have the correct obj'],['fun','sniffle','sniffle_entity_read_fsm:start/1',[]],['fun','sniffle','sniffle_entity_read_fsm:start/2',[]],['fun','sniffle','sniffle_entity_read_fsm:start/3',[]],['fun','sniffle','sniffle_entity_read_fsm:start_link/6',[]],['fun','sniffle','sniffle_entity_read_fsm:terminate/3',[]],['fun','sniffle','sniffle_entity_read_fsm:unique/1','Given a list return the set of unique values.'],['fun','sniffle','sniffle_entity_read_fsm:wait_for_n/2',[]],['fun','sniffle','sniffle_entity_read_fsm:waiting/2','Wait for R replies and then respond to From (origi'],['fun','sniffle','sniffle_entity_read_fsm_sup:init/1',[]],['fun','sniffle','sniffle_entity_read_fsm_sup:start_link/0',[]],['fun','sniffle','sniffle_entity_read_fsm_sup:start_read_fsm/1',[]],['fun','sniffle','sniffle_entity_write_fsm:code_change/4',[]],['fun','sniffle','sniffle_entity_write_fsm:execute/2','Execute the write request and then go into waiting'],['fun','sniffle','sniffle_entity_write_fsm:handle_event/3',[]],['fun','sniffle','sniffle_entity_write_fsm:handle_info/3',[]],['fun','sniffle','sniffle_entity_write_fsm:handle_sync_event/4',[]],['fun','sniffle','sniffle_entity_write_fsm:init/1','Initialize the state data.'],['fun','sniffle','sniffle_entity_write_fsm:mk_reqid/0',[]],['fun','sniffle','sniffle_entity_write_fsm:prepare/2','Prepare the write by calculating the _preference l'],['fun','sniffle','sniffle_entity_write_fsm:start_link/5',[]],['fun','sniffle','sniffle_entity_write_fsm:start_link/6',[]],['fun','sniffle','sniffle_entity_write_fsm:terminate/3',[]],['fun','sniffle','sniffle_entity_write_fsm:waiting/2','Wait for W write reqs to respond.'],['fun','sniffle','sniffle_entity_write_fsm:write/3',[]],['fun','sniffle','sniffle_entity_write_fsm:write/4',[]],['fun','sniffle','sniffle_entity_write_fsm_sup:init/1',[]],['fun','sniffle','sniffle_entity_write_fsm_sup:start_link/0',[]],['fun','sniffle','sniffle_entity_write_fsm_sup:start_write_fsm/1',[]],['fun','sniffle','sniffle_full_coverage:finish/2',[]],['fun','sniffle','sniffle_full_coverage:init/2',[]],['fun','sniffle','sniffle_full_coverage:process_results/2',[]],['fun','sniffle','sniffle_full_coverage:start/3',[]],['fun','sniffle','sniffle_hypervisor:get/1',[]],['fun','sniffle','sniffle_hypervisor:list/0',[]],['fun','sniffle','sniffle_hypervisor:list/1','Lists all vms and fiters by a given matcher set.'],['fun','sniffle','sniffle_hypervisor:list_/0',[]],['fun','sniffle','sniffle_hypervisor:register/1',[]],['fun','sniffle','sniffle_hypervisor:service/3',[]],['fun','sniffle','sniffle_hypervisor:set/1',[]],['fun','sniffle','sniffle_hypervisor:set/1',[]],['fun','sniffle','sniffle_hypervisor:status/0',[]],['fun','sniffle','sniffle_hypervisor:sync_repair/2',[]],['fun','sniffle','sniffle_hypervisor:unregister/1',[]],['fun','sniffle','sniffle_hypervisor:update/0',[]],['fun','sniffle','sniffle_hypervisor:update/1',[]],['fun','sniffle','sniffle_hypervisor:wipe/1',[]],['fun','sniffle','sniffle_hypervisor_state:getter/2',[]],['fun','sniffle','sniffle_hypervisor_state:host/2',[]],['fun','sniffle','sniffle_hypervisor_state:load/1',[]],['fun','sniffle','sniffle_hypervisor_state:new/0',[]],['fun','sniffle','sniffle_hypervisor_state:port/2',[]],['fun','sniffle','sniffle_hypervisor_state:set/3',[]],['fun','sniffle','sniffle_hypervisor_state:uuid/1',[]],['fun','sniffle','sniffle_hypervisor_state:uuid/2',[]],['fun','sniffle','sniffle_img:backend/0',[]],['fun','sniffle','sniffle_img:create/1',[]],['fun','sniffle','sniffle_img:delete/1',[]],['fun','sniffle','sniffle_img:delete/1',[]],['fun','sniffle','sniffle_img:get/1',[]],['fun','sniffle','sniffle_img:get/1',[]],['fun','sniffle','sniffle_img:list/0',[]],['fun','sniffle','sniffle_img:list/1',[]],['fun','sniffle','sniffle_img:list_/1',[]],['fun','sniffle','sniffle_img:sync_repair/2',[]],['fun','sniffle','sniffle_img:wipe/1',[]],['fun','sniffle','sniffle_img_state:data/2',[]],['fun','sniffle','sniffle_img_state:new/0',[]],['fun','sniffle','sniffle_iprange:claim_ip/1',[]],['fun','sniffle','sniffle_iprange:create/1',[]],['fun','sniffle','sniffle_iprange:delete/1',[]],['fun','sniffle','sniffle_iprange:full/1',[]],['fun','sniffle','sniffle_iprange:get/1',[]],['fun','sniffle','sniffle_iprange:list/0',[]],['fun','sniffle','sniffle_iprange:list/1','Lists all vms and fiters by a given matcher set.'],['fun','sniffle','sniffle_iprange:list_/0',[]],['fun','sniffle','sniffle_iprange:lookup/1',[]],['fun','sniffle','sniffle_iprange:release_ip/1',[]],['fun','sniffle','sniffle_iprange:set/1',[]],['fun','sniffle','sniffle_iprange:set/1',[]],['fun','sniffle','sniffle_iprange:sync_repair/2',[]],['fun','sniffle','sniffle_iprange:wipe/1',[]],['fun','sniffle','sniffle_iprange_state:claim_ip/2',[]],['fun','sniffle','sniffle_iprange_state:current/2',[]],['fun','sniffle','sniffle_iprange_state:first/2',[]],['fun','sniffle','sniffle_iprange_state:gateway/2',[]],['fun','sniffle','sniffle_iprange_state:getter/2',[]],['fun','sniffle','sniffle_iprange_state:is_free/2',[]],['fun','sniffle','sniffle_iprange_state:last/2',[]],['fun','sniffle','sniffle_iprange_state:load/1',[]],['fun','sniffle','sniffle_iprange_state:name/2',[]],['fun','sniffle','sniffle_iprange_state:netmask/2',[]],['fun','sniffle','sniffle_iprange_state:network/2',[]],['fun','sniffle','sniffle_iprange_state:new/0',[]],['fun','sniffle','sniffle_iprange_state:parse_bin/1',[]],['fun','sniffle','sniffle_iprange_state:release_ip/2',[]],['fun','sniffle','sniffle_iprange_state:set/3',[]],['fun','sniffle','sniffle_iprange_state:tag/2',[]],['fun','sniffle','sniffle_iprange_state:to_bin/1',[]],['fun','sniffle','sniffle_iprange_state:uuid/1',[]],['fun','sniffle','sniffle_iprange_state:uuid/2',[]],['fun','sniffle','sniffle_iprange_state:vlan/2',[]],['fun','sniffle','sniffle_network:add_iprange/2',[]],['fun','sniffle','sniffle_network:claim_ip/1',[]],['fun','sniffle','sniffle_network:claim_ip/2',[]],['fun','sniffle','sniffle_network:create/1',[]],['fun','sniffle','sniffle_network:delete/1',[]],['fun','sniffle','sniffle_network:get/1',[]],['fun','sniffle','sniffle_network:list/0',[]],['fun','sniffle','sniffle_network:list/1','Lists all vms and fiters by a given matcher set.'],['fun','sniffle','sniffle_network:list_/0',[]],['fun','sniffle','sniffle_network:lookup/1',[]],['fun','sniffle','sniffle_network:remove_iprange/2',[]],['fun','sniffle','sniffle_network:set/1',[]],['fun','sniffle','sniffle_network:set/1',[]],['fun','sniffle','sniffle_network:sync_repair/2',[]],['fun','sniffle','sniffle_network:wipe/1',[]],['fun','sniffle','sniffle_network_state:add_iprange/2',[]],['fun','sniffle','sniffle_network_state:getter/2',[]],['fun','sniffle','sniffle_network_state:load/1',[]],['fun','sniffle','sniffle_network_state:name/2',[]],['fun','sniffle','sniffle_network_state:new/0',[]],['fun','sniffle','sniffle_network_state:remove_iprange/2',[]],['fun','sniffle','sniffle_network_state:set/3',[]],['fun','sniffle','sniffle_network_state:uuid/1',[]],['fun','sniffle','sniffle_network_state:uuid/2',[]],['fun','sniffle','sniffle_node_event_handler:code_change/3',[]],['fun','sniffle','sniffle_node_event_handler:handle_call/2',[]],['fun','sniffle','sniffle_node_event_handler:handle_event/2',[]],['fun','sniffle','sniffle_node_event_handler:handle_info/2',[]],['fun','sniffle','sniffle_node_event_handler:init/1',[]],['fun','sniffle','sniffle_node_event_handler:terminate/2',[]],['fun','sniffle','sniffle_obj:ancestors/1','Given a list of sniffle_obj() return a list of all'],['fun','sniffle','sniffle_obj:children/1','Given a list of sniffle_obj() return a list of the'],['fun','sniffle','sniffle_obj:equal/1','Closure around equal/2 for use with HOFs (damn ver'],['fun','sniffle','sniffle_obj:equal/1','Predeicate to determine if ObjA and ObjB are equal'],['fun','sniffle','sniffle_obj:merge/1','Merge the list of Objs, calling the appropriate re'],['fun','sniffle','sniffle_obj:unique/1','Given a list of Objs return the list of uniques.'],['fun','sniffle','sniffle_obj:update/1','Given a Val update the Obj.'],['fun','sniffle','sniffle_obj:val/1',[]],['fun','sniffle','sniffle_obj:vclock/1','Given a vclock type Obj retrieve the vclock.'],['fun','sniffle','sniffle_opt:get/5',[]],['fun','sniffle','sniffle_opt:set/2',[]],['fun','sniffle','sniffle_package:create/1',[]],['fun','sniffle','sniffle_package:delete/1',[]],['fun','sniffle','sniffle_package:get/1',[]],['fun','sniffle','sniffle_package:list/0',[]],['fun','sniffle','sniffle_package:list/1','Lists all vms and fiters by a given matcher set.'],['fun','sniffle','sniffle_package:list_/0',[]],['fun','sniffle','sniffle_package:lookup/1',[]],['fun','sniffle','sniffle_package:set/1',[]],['fun','sniffle','sniffle_package:set/1',[]],['fun','sniffle','sniffle_package:sync_repair/2',[]],['fun','sniffle','sniffle_package:wipe/1',[]],['fun','sniffle','sniffle_package_state:getter/2',[]],['fun','sniffle','sniffle_package_state:load/1',[]],['fun','sniffle','sniffle_package_state:name/2',[]],['fun','sniffle','sniffle_package_state:new/0',[]],['fun','sniffle','sniffle_package_state:set/3',[]],['fun','sniffle','sniffle_package_state:uuid/1',[]],['fun','sniffle','sniffle_package_state:uuid/2',[]],['fun','sniffle','sniffle_ring_event_handler:code_change/3',[]],['fun','sniffle','sniffle_ring_event_handler:handle_call/2',[]],['fun','sniffle','sniffle_ring_event_handler:handle_event/2',[]],['fun','sniffle','sniffle_ring_event_handler:handle_info/2',[]],['fun','sniffle','sniffle_ring_event_handler:init/1',[]],['fun','sniffle','sniffle_ring_event_handler:terminate/2',[]],['fun','sniffle','sniffle_s3:config/1',[]],['fun','sniffle','sniffle_s3:delete/2',[]],['fun','sniffle','sniffle_s3:get_access_key/0',[]],['fun','sniffle','sniffle_s3:get_bucket/1',[]],['fun','sniffle','sniffle_s3:get_host/0',[]],['fun','sniffle','sniffle_s3:get_port/0',[]],['fun','sniffle','sniffle_s3:get_secret_key/0',[]],['fun','sniffle','sniffle_s3:list/1',[]],['fun','sniffle','sniffle_s3:new_stream/2',[]],['fun','sniffle','sniffle_s3:new_upload/2',[]],['fun','sniffle','sniffle_sup:init/1',[]],['fun','sniffle','sniffle_sup:start_link/0',[]],['fun','sniffle','sniffle_util:ensure_str/1',[]],['fun','sniffle','sniffle_util:node_for/1',[]],['fun','sniffle','sniffle_vm:add_nic/2',[]],['fun','sniffle','sniffle_vm:children/2',[]],['fun','sniffle','sniffle_vm:commit_snapshot_rollback/1',[]],['fun','sniffle','sniffle_vm:create/1','Tries to creat a VM from a Package and dataset uui'],['fun','sniffle','sniffle_vm:create_backup/1',[]],['fun','sniffle','sniffle_vm:delete/1','Tries to delete a VM, either unregistering it if n'],['fun','sniffle','sniffle_vm:delete_backup/2',[]],['fun','sniffle','sniffle_vm:delete_snapshot/1','Deletes a ZFS snapshot of the Vms disks on the ah'],['fun','sniffle','sniffle_vm:get/1','Reads a VM object form the DB.'],['fun','sniffle','sniffle_vm:list/0','Lists all vms.'],['fun','sniffle','sniffle_vm:list/1','Lists all vms and fiters by a given matcher set.'],['fun','sniffle','sniffle_vm:list_/0',[]],['fun','sniffle','sniffle_vm:log/1','Adds a new log to the VM and timestamps it.'],['fun','sniffle','sniffle_vm:logs/1','Reads the logs of a vm.'],['fun','sniffle','sniffle_vm:primary_nic/2',[]],['fun','sniffle','sniffle_vm:promote_to_image/3',[]],['fun','sniffle','sniffle_vm:reboot/1','Triggers the reboot of a VM on the hypervisor allo'],['fun','sniffle','sniffle_vm:reboot/1','Triggers the reboot of a VM on the hypervisor.'],['fun','sniffle','sniffle_vm:register/1','Registers am existing VM, no checks made here.'],['fun','sniffle','sniffle_vm:remove_backup/2',[]],['fun','sniffle','sniffle_vm:remove_nic/2',[]],['fun','sniffle','sniffle_vm:restore/3',[]],['fun','sniffle','sniffle_vm:restore_backup/1',[]],['fun','sniffle','sniffle_vm:rollback_snapshot/1','Rolls back a ZFS snapshot of the Vms disks on the'],['fun','sniffle','sniffle_vm:service_clear/2',[]],['fun','sniffle','sniffle_vm:service_disable/2',[]],['fun','sniffle','sniffle_vm:service_enable/2',[]],['fun','sniffle','sniffle_vm:set/1','Sets multiple attributes on the VM object.'],['fun','sniffle','sniffle_vm:set/1','Sets a attribute on the VM object.'],['fun','sniffle','sniffle_vm:set_owner/1','Sets the owner of a VM.'],['fun','sniffle','sniffle_vm:snapshot/1','Creates a new ZFS snapshot of the Vms disks on th'],['fun','sniffle','sniffle_vm:start/1','Triggers the start of a VM on the hypervisor.'],['fun','sniffle','sniffle_vm:stop/1','Triggers the start of a VM on the hypervisor allow'],['fun','sniffle','sniffle_vm:stop/1','Triggers the stop of a VM on the hypervisor.'],['fun','sniffle','sniffle_vm:store/1',[]],['fun','sniffle','sniffle_vm:sync_repair/2',[]],['fun','sniffle','sniffle_vm:unregister/1','Unregisteres an existing VM, this includs freeling'],['fun','sniffle','sniffle_vm:update/1','Updates a virtual machine form a package uuid and '],['fun','sniffle','sniffle_vm:wipe/1',[]],['fun','sniffle','sniffle_vm_state:getter/2',[]],['fun','sniffle','sniffle_vm_state:hypervisor/2',[]],['fun','sniffle','sniffle_vm_state:load/1',[]],['fun','sniffle','sniffle_vm_state:log/3',[]],['fun','sniffle','sniffle_vm_state:new/0',[]],['fun','sniffle','sniffle_vm_state:set/3',[]],['fun','sniffle','sniffle_vm_state:uuid/1',[]],['fun','sniffle','sniffle_vm_state:uuid/2',[]],['fun','sniffle','sniffle_worker:handle_work/3','Perform the asynchronous fold operation.'],['fun','sniffle','sniffle_worker:init_worker/3','Initialize the worker.']];