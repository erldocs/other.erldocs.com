var index = [['app','oauth2','oauth2','[application]'],['mod','oauth2','oauth2','Erlang OAuth 2.0 implementation.'],['mod','oauth2','oauth2_config','Erlang OAuth 2.0 implementation.'],['mod','oauth2','oauth2_priv_set','Erlang OAuth 2.0 implementation.'],['mod','oauth2','oauth2_token','Erlang OAuth 2.0 implementation.'],['fun','oauth2','oauth2:authorize_client_credentials/1','Validates a request for an access token from clien'],['fun','oauth2','oauth2:authorize_code_grant/1','Validates a request for an access token from an au'],['fun','oauth2','oauth2:authorize_code_request/1','Validates a request for an authorization code from'],['fun','oauth2','oauth2:authorize_password/1','Validates a request for an access token from clien'],['fun','oauth2','oauth2:authorize_password/1','Validates a request for an access token from clien'],['fun','oauth2','oauth2:authorize_password/1','Validates a request for an access token from resou'],['fun','oauth2','oauth2:authorize_resource_owner/1','Authorizes a previously authenticated resource own'],['fun','oauth2','oauth2:create_authorization/5',[]],['fun','oauth2','oauth2:issue_code/1','Issues an authorization code from an authorization'],['fun','oauth2','oauth2:issue_token/1','Issues an access token without refresh token from '],['fun','oauth2','oauth2:issue_token_and_refresh/1','Issues access and refresh tokens from an authoriza'],['fun','oauth2','oauth2:refresh_access_token/1','Validates a request for an access token from a ref'],['fun','oauth2','oauth2:verify_access_code/1','Verifies an access code AccessCode and its corres'],['fun','oauth2','oauth2:verify_access_code/1','Verifies an access code AccessCode, returning its '],['fun','oauth2','oauth2:verify_access_token/1','Verifies an access token AccessToken, returning it'],['fun','oauth2','oauth2_config:backend/0','Gets the backend for validating passwords, storing'],['fun','oauth2','oauth2_config:expiry_time/0','Gets the default expiry time for access tokens.'],['fun','oauth2','oauth2_config:expiry_time/1','Gets a specific expiry time for access tokens if a'],['fun','oauth2','oauth2_config:token_generation/0','Gets the backend for generating tokens.'],['fun','oauth2','oauth2_priv_set:is_member/1','Returns true if Path is present in Set, i.e, if  '],['fun','oauth2','oauth2_priv_set:is_subset/1','Return true if Set1 is a subset of Set2, i.e., if'],['fun','oauth2','oauth2_priv_set:new/1','Constructs a new priv_set from a single path or a '],['fun','oauth2','oauth2_priv_set:union/1','Returns the union of Set1 and Set2, i.e., a set su'],['fun','oauth2','oauth2_token:generate/1','Generates a random OAuth2 token.'],['fun','oauth2','oauth2_token:strong_rand_bytes_proxy/1','Equivalent to crypto:strong_rand_bytes(N).']];