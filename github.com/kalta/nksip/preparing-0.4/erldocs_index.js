var index = [['app','nksip','nksip','[application]'],['mod','nksip','nksip','SipApps management module.'],['mod','nksip','nksip_app','NkSIP OTP Application Module.'],['mod','nksip','nksip_auth','Authentication management module.'],['mod','nksip','nksip_call',[]],['mod','nksip','nksip_call_dialog',[]],['mod','nksip','nksip_call_event',[]],['mod','nksip','nksip_call_fork','Call Fork Management.'],['mod','nksip','nksip_call_lib',[]],['mod','nksip','nksip_call_proxy','Call Proxy Management.'],['mod','nksip','nksip_call_srv','Call Server Process.'],['mod','nksip','nksip_call_uac','Call UAC Management: Request sending.'],['mod','nksip','nksip_call_uac_dialog',[]],['mod','nksip','nksip_call_uac_make','UAC process helper functions.'],['mod','nksip','nksip_call_uac_reply',[]],['mod','nksip','nksip_call_uac_resp','Call UAC Management: Response processing.'],['mod','nksip','nksip_call_uac_send','Call UAC Management: Request sending.'],['mod','nksip','nksip_call_uac_timer','Call UAC Timers.'],['mod','nksip','nksip_call_uac_transp','UAC Transport Layer.'],['mod','nksip','nksip_call_uas','Call UAS Management.'],['mod','nksip','nksip_call_uas_dialog',[]],['mod','nksip','nksip_call_uas_make','UAS Process helper functions.'],['mod','nksip','nksip_call_uas_process',[]],['mod','nksip','nksip_call_uas_reply','Call UAS Management: Reply.'],['mod','nksip','nksip_call_uas_route',[]],['mod','nksip','nksip_call_uas_timer','Call UAS Timer anagement.'],['mod','nksip','nksip_call_uas_transp','UAS Transport Layer.'],['mod','nksip','nksip_call_worker','Call Worker Module.'],['mod','nksip','nksip_callbacks','SipApp plugin callbacks default implementation.'],['mod','nksip','nksip_code_util','NkSIP Erlang code parser and hot loader utilities.'],['mod','nksip','nksip_config','NkSIP Config Server.'],['mod','nksip','nksip_config_cache','NkSIP Config Cache.'],['mod','nksip','nksip_counters','NkSIP Process Counters.'],['mod','nksip','nksip_dialog','User Dialog Management Module.'],['mod','nksip','nksip_dialog_lib',[]],['mod','nksip','nksip_dns','NkSIP DNS cache and utilities with RFC3263 support'],['mod','nksip','nksip_headers','General SIP header processing functions.'],['mod','nksip','nksip_lib','Common library utility funcions.'],['mod','nksip','nksip_parse_sipmsg','SIP message parsing functions.'],['mod','nksip','nksip_parse_tokens',[]],['mod','nksip','nksip_parse_uri',[]],['mod','nksip','nksip_parse_via',[]],['mod','nksip','nksip_proc','NkSIP Process Registry.'],['mod','nksip','nksip_reply','User Response generation functions.'],['mod','nksip','nksip_request','User Request Management Functions.'],['mod','nksip','nksip_response','User Response Management Functions.'],['mod','nksip','nksip_router','Call Distribution Router.'],['mod','nksip','nksip_sdp','RFC4566 SDP parser and generator utilities.'],['mod','nksip','nksip_sipapp','SipApp callback behaviour and default implementati'],['mod','nksip','nksip_sipapp_config','SipApps configuration.'],['mod','nksip','nksip_sipapp_srv',[]],['mod','nksip','nksip_sipapp_sup',[]],['mod','nksip','nksip_sipmsg','Internal request and responses management.'],['mod','nksip','nksip_store','NkSIP In-Memory Database.'],['mod','nksip','nksip_stun','RFC5389 STUN utility functions.'],['mod','nksip','nksip_subscription','User Subscriptions Management Module.'],['mod','nksip','nksip_subscription_lib','User Subscriptions Library Module.'],['mod','nksip','nksip_sup',[]],['mod','nksip','nksip_transport','NkSIP Transport control module.'],['mod','nksip','nksip_transport_sctp',[]],['mod','nksip','nksip_transport_sup',[]],['mod','nksip','nksip_transport_tcp',[]],['mod','nksip','nksip_transport_udp',[]],['mod','nksip','nksip_transport_ws',[]],['mod','nksip','nksip_webserver','NkSIP Webserver control.'],['mod','nksip','nksip_webserver_sup',[]],['fun','nksip','nksip:call/1','Synchronous call to the SipApps gen_server proces'],['fun','nksip','nksip:call/1','Synchronous call to the SipApps gen_server proces'],['fun','nksip','nksip:cast/1','Asynchronous call to the SipApps gen_server proce'],['fun','nksip','nksip:config/1','Gets current SipApp configuration.'],['fun','nksip','nksip:del/1','Deletes a value from SipApps store.'],['fun','nksip','nksip:find_app_id/1','Gets the internal name of an existing SipApp.'],['fun','nksip','nksip:get/1','Gets a value from SipApps store, using a default '],['fun','nksip','nksip:get/1','Gets a value from SipApps store.'],['fun','nksip','nksip:get_all/0','Gets the user and internal ids of all started SipA'],['fun','nksip','nksip:get_pid/1','Gets the SipApps gen_server process pid().'],['fun','nksip','nksip:get_uuid/1','Gets SipApps UUID.'],['fun','nksip','nksip:put/1','Inserts a value in SipApps store.'],['fun','nksip','nksip:start/1','Starts a new SipApp.'],['fun','nksip','nksip:stop/1','Stops a started SipApp, stopping any registered tr'],['fun','nksip','nksip:stop_all/0','Stops all started SipApps.'],['fun','nksip','nksip:update/1','Updates the callback module or options of a runnin'],['fun','nksip','nksip_app:start/0','Starts NkSIP stand alone.'],['fun','nksip','nksip_auth:authorize_data/1','Extracts digest authentication information from a '],['fun','nksip','nksip_auth:make_ha1/1','Generates a password hash to use in NkSIP authenti'],['fun','nksip','nksip_auth:make_request/1','Adds an Authorization or Proxy-Authorization heade'],['fun','nksip','nksip_auth:make_response/1','Generates a WWW-Authenticate or Proxy-Authenticate'],['fun','nksip','nksip_auth:realms/1','Extracts all the realms present in WWW-Authenticat'],['fun','nksip','nksip_call:app_id/1','Gets the AppId.'],['fun','nksip','nksip_call:call_id/1','Gets the CallId.'],['fun','nksip','nksip_call_dialog:session_update/1',[]],['fun','nksip','nksip_call_event:create_prov_event/1',[]],['fun','nksip','nksip_call_fork:cancel/1','Tries to cancel an ongoing fork.'],['fun','nksip','nksip_call_fork:start/1','Starts a new Forking Proxy.'],['fun','nksip','nksip_call_proxy:normalize_uriset/1','Process a UriSet generating a standard [[nksip:uri'],['fun','nksip','nksip_call_proxy:response_stateless/1','Called from nksip_call when a stateless request is'],['fun','nksip','nksip_call_proxy:route/1','Tries to route a request to set of uris, serially '],['fun','nksip','nksip_call_srv:async_work/1','Sends an asynchronous piece of nksip_call_worker:w'],['fun','nksip','nksip_call_srv:start/1','Starts a new call process.'],['fun','nksip','nksip_call_srv:stop/1','Stops a call (deleting  all associated transaction'],['fun','nksip','nksip_call_srv:sync_work/1','Sends a synchronous piece of nksip_call_worker:wor'],['fun','nksip','nksip_call_uac:cancel/1','Tries to cancel an ongoing invite request with a r'],['fun','nksip','nksip_call_uac:cancel/1','Tries to cancel an ongoing invite request with a r'],['fun','nksip','nksip_call_uac:dialog/1','Sends a new in-dialog request from inside the call'],['fun','nksip','nksip_call_uac:is_stateless/1','Checks if a response is a stateless response.'],['fun','nksip','nksip_call_uac:request/1','Starts a new UAC transaction.'],['fun','nksip','nksip_call_uac:response/1','Called when a new response is received.'],['fun','nksip','nksip_call_uac_make:make/1','Generates a new request.'],['fun','nksip','nksip_call_uac_make:make_ack/1','Generates an ACK request from an INVITE request an'],['fun','nksip','nksip_call_uac_make:make_cancel/1','Generates a CANCEL request from an INVITE request.'],['fun','nksip','nksip_call_uac_transp:resend_request/1','Resend an already sent request to the same ip, por'],['fun','nksip','nksip_call_uac_transp:send_request/1','Sends a new request.'],['fun','nksip','nksip_call_uas:do_reply/1','Sends a transaction reply.'],['fun','nksip','nksip_call_uas:reply/1','Sends a transaction reply.'],['fun','nksip','nksip_call_uas:request/1','Called when a new request is received.'],['fun','nksip','nksip_call_uas_reply:reply/1','Sends a transaction reply.'],['fun','nksip','nksip_call_uas_transp:resend_response/1','Resends a previously sent response to the same ip,'],['fun','nksip','nksip_call_uas_transp:send_response/1','Sends a new Response.'],['fun','nksip','nksip_callbacks:nkcb_authorize_data/1','This callback is called when the application use h'],['fun','nksip','nksip_callbacks:nkcb_call/1','This plugin callback function is used to call appl'],['fun','nksip','nksip_callbacks:nkcb_connection_recv/1','Called when a new message has been received and pa'],['fun','nksip','nksip_callbacks:nkcb_connection_sent/1','Called when a new message has been sent.'],['fun','nksip','nksip_callbacks:nkcb_debug/1',[]],['fun','nksip','nksip_callbacks:nkcb_dialog_update/1','Called when a dialog must update its internal stat'],['fun','nksip','nksip_callbacks:nkcb_handle_call/1','Called when the SipApp process receives a handle_c'],['fun','nksip','nksip_callbacks:nkcb_handle_cast/1','Called when the SipApp process receives a handle_c'],['fun','nksip','nksip_callbacks:nkcb_handle_info/1','Called when the SipApp process receives a handle_i'],['fun','nksip','nksip_callbacks:nkcb_make_uac_dialog/1','Called when a new in-dialog request is being gener'],['fun','nksip','nksip_callbacks:nkcb_parse_uac_opts/1','Called to parse specific UAC options.'],['fun','nksip','nksip_callbacks:nkcb_parse_uas_opt/1','Called to parse specific UAS options.'],['fun','nksip','nksip_callbacks:nkcb_route/1','Called when a proxy is preparing a routing.'],['fun','nksip','nksip_callbacks:nkcb_sip_method/1','This plugin callback is called when a call to one '],['fun','nksip','nksip_callbacks:nkcb_sipapp_updated/1','Called when the SipApp is updated with a new confi'],['fun','nksip','nksip_callbacks:nkcb_transport_uac_headers/1','Called to add headers just before sending the requ'],['fun','nksip','nksip_callbacks:nkcb_transport_uas_sent/1','Called when the transport has just sent a response'],['fun','nksip','nksip_callbacks:nkcb_uac_pre_request/1','Called when the UAC is preparing a request to be s'],['fun','nksip','nksip_callbacks:nkcb_uac_pre_response/1','Called after the UAC pre processes a response.'],['fun','nksip','nksip_callbacks:nkcb_uac_proxy_opts/1','Called to add options for proxy UAC processing.'],['fun','nksip','nksip_callbacks:nkcb_uac_reply/2','Called when the UAC transaction must send a reply '],['fun','nksip','nksip_callbacks:nkcb_uac_response/1','Called after the UAC processes a response.'],['fun','nksip','nksip_callbacks:nkcb_uas_dialog_response/1','Called when preparing a UAS dialog response.'],['fun','nksip','nksip_callbacks:nkcb_uas_method/1','Called when a new request has to be processed.'],['fun','nksip','nksip_callbacks:nkcb_uas_process/1','Called when the UAS is proceesing a request.'],['fun','nksip','nksip_callbacks:nkcb_uas_send_reply/1','Called when a new reponse is going to be sent.'],['fun','nksip','nksip_callbacks:nkcb_uas_sent_reply/1','Called when a new reponse is sent.'],['fun','nksip','nksip_callbacks:nkcb_uas_timer/1','Called when a UAS timer is fired.'],['fun','nksip','nksip_code_util:call_expr/1','Generates a call expression (mod:fun(A1,B1,..))  '],['fun','nksip','nksip_code_util:callback_expr/1','Generates a call expression (fun(A0,B0...) -&gt; m'],['fun','nksip','nksip_code_util:case_expr/1','Generates a case expression  case mod:fun(A2,B2..'],['fun','nksip','nksip_code_util:compile/1','Compiles a syntaxTree into a module.'],['fun','nksip','nksip_code_util:expression/1','Parses an erlang expression intro a syntaxTree() '],['fun','nksip','nksip_code_util:fun_expr/1','Generates a function expression (fun(A1,B1,..) -&g'],['fun','nksip','nksip_code_util:get_funs/1','Gets the list of exported functions of a module.'],['fun','nksip','nksip_code_util:getter/1','Generates a getter function (fun() -&gt; Value.).'],['fun','nksip','nksip_config:cseq/0','Gets a new CSeq.'],['fun','nksip','nksip_config:del/1','Deletes a config value.'],['fun','nksip','nksip_config:get/1','Gets an config value.'],['fun','nksip','nksip_config:get/1','Equivalent to get(Key, undefined).'],['fun','nksip','nksip_config:increment/1','Atomically increments or decrements a counter.'],['fun','nksip','nksip_config:put/1','Sets a config value.'],['fun','nksip','nksip_counters:async/1','Performs an asynchronous multiple counter update a'],['fun','nksip','nksip_counters:del/1','Removes all Name counter updates sent from Pid.'],['fun','nksip','nksip_counters:del/1','Equivalent to del(Name, self()).'],['fun','nksip','nksip_counters:incr/1','Creates or increments synchronously a Name counter'],['fun','nksip','nksip_counters:incr/1','Equivalent to incr(Name, Value, self()).'],['fun','nksip','nksip_counters:incr/1','Equivalent to incr(Name, 1, self()).'],['fun','nksip','nksip_counters:value/1','Gets a counters current value.'],['fun','nksip','nksip_dialog:app_id/1','Gets thel App of a dialog.'],['fun','nksip','nksip_dialog:app_name/1','Gets apps name.'],['fun','nksip','nksip_dialog:bye_all/0','Sends an in-dialog BYE to all existing dialogs.'],['fun','nksip','nksip_dialog:call_id/1','Gets thel Call-ID of a dialog.'],['fun','nksip','nksip_dialog:clear_authorized_list/1','Clears the authorized list of transport, ip and po'],['fun','nksip','nksip_dialog:get_all/0','Gets all started dialogs handles.'],['fun','nksip','nksip_dialog:get_all/1','Finds all started dialogs handles having Call-ID.'],['fun','nksip','nksip_dialog:get_authorized_list/1','Gets the authorized list of transport, ip and port'],['fun','nksip','nksip_dialog:get_dialog/1','Gets the dialog object corresponding to a request '],['fun','nksip','nksip_dialog:get_handle/1','Calculates a dialogs id.'],['fun','nksip','nksip_dialog:meta/1','Get a specific metadata.'],['fun','nksip','nksip_dialog:metas/1','Get a group of specific metadata.'],['fun','nksip','nksip_dialog:stop/1','Stops an existing dialog (remove it from memory).'],['fun','nksip','nksip_dialog:stop_all/0','Stops (deletes) all current dialogs.'],['fun','nksip','nksip_dialog_lib:get_handle/1','Calculates a dialogs id.'],['fun','nksip','nksip_dialog_lib:make_id/2','Calculates a dialogs id from a nksip:request() or'],['fun','nksip','nksip_dialog_lib:meta/1','Get specific metadata from the dialog.'],['fun','nksip','nksip_dialog_lib:metas/1','Get specific metadata from the dialog.'],['fun','nksip','nksip_dialog_lib:parse_handle/1',[]],['fun','nksip','nksip_dialog_lib:remote_meta/1','Extracts remote meta.'],['fun','nksip','nksip_dialog_lib:remote_metas/1','Extracts remote metas.'],['fun','nksip','nksip_dns:clear/0','Clear all stored information in the cache.'],['fun','nksip','nksip_dns:clear/1','Clear all info about Domain in the cache.'],['fun','nksip','nksip_dns:get_ips/1','Gets all IPs for this host, or [] if not found.'],['fun','nksip','nksip_dns:get_naptr/1','Finds published services using DNS NAPTR search.'],['fun','nksip','nksip_dns:get_srvs/1','Gets all hosts for a SRV domain, sorting the resul'],['fun','nksip','nksip_dns:resolve/1','Finds the ips, transports and ports to try for Uri'],['fun','nksip','nksip_headers:header/1','Generates a single header.'],['fun','nksip','nksip_headers:new/3','Generates a header list from a list of specificati'],['fun','nksip','nksip_headers:update/4','Performs a serie of modifications to a headers lis'],['fun','nksip','nksip_lib:bin_last/1','Gets the subbinary after Char.'],['fun','nksip','nksip_lib:bjoin/1','Join each element in List into a binary(), using t'],['fun','nksip','nksip_lib:bjoin/1','Joins each element in List into a binary() using &'],['fun','nksip','nksip_lib:cancel_timer/1','Cancels and existig timer.'],['fun','nksip','nksip_lib:cseq/0','Generates an incrementing-each-second 31 bit integ'],['fun','nksip','nksip_lib:defaults/1','Inserts defaults in a proplist.'],['fun','nksip','nksip_lib:delete/1','Deletes all elements in Proplist having key KeyOrK'],['fun','nksip','nksip_lib:ensure_all_started/2','Ensure that an application and all of its transiti'],['fun','nksip','nksip_lib:extract/1','Extracts all elements in Proplist having key KeyOr'],['fun','nksip','nksip_lib:find_main_ip/0','Equivalent to find_main_ip(auto, ipv4).'],['fun','nksip','nksip_lib:find_main_ip/1','Finds the best local IP.'],['fun','nksip','nksip_lib:get_binary/1','Similar to get_value(Key, List, Default) but conve'],['fun','nksip','nksip_lib:get_binary/1','Similar to get_value(Key, List, &lt;&lt;&gt;&gt;) '],['fun','nksip','nksip_lib:get_integer/1','Similar to get_value(Key, List, Default) but conve'],['fun','nksip','nksip_lib:get_integer/1','Similar to get_value(Key, List, 0) but converting '],['fun','nksip','nksip_lib:get_list/1','Similar to get_value(Key, List, Default) but conve'],['fun','nksip','nksip_lib:get_list/1','Similar to get_value(Key, List, []) but converting'],['fun','nksip','nksip_lib:get_local_ips/0','Get all local network ips.'],['fun','nksip','nksip_lib:get_value/1','Requivalent to proplists:get_value/3 but faster.'],['fun','nksip','nksip_lib:get_value/1','Equivalent to proplists:get_value/2 but faster.'],['fun','nksip','nksip_lib:gmt_to_timestamp/1','Converts a local datetime() to a timestamp(),.'],['fun','nksip','nksip_lib:hash/1','Generates a new tag of 6 chars based on a value.'],['fun','nksip','nksip_lib:hash36/1','Generates a new tag based on a value (only numbers'],['fun','nksip','nksip_lib:is_string/1','Checks if Term is a string() or [].'],['fun','nksip','nksip_lib:l_timestamp/0','Gets an microsecond-resolution timestamp.'],['fun','nksip','nksip_lib:l_timestamp_to_float/1','Generates a float representing HHMMSS.MicroSecs fo'],['fun','nksip','nksip_lib:lhash/1','Generates a new printable SHA hash binary over Bas'],['fun','nksip','nksip_lib:local_to_timestamp/1','Converts a gmt datetime() to a timestamp().'],['fun','nksip','nksip_lib:luid/0','Generates a new printable random UUID.'],['fun','nksip','nksip_lib:store_value/1','Stores a value in a proplist.'],['fun','nksip','nksip_lib:store_value/1','Stores a value in a list.'],['fun','nksip','nksip_lib:strip/1','URI Strips trailing white space.'],['fun','nksip','nksip_lib:timestamp/0','Gets an second-resolution timestamp.'],['fun','nksip','nksip_lib:timestamp_to_gmt/1','Converts a timestamp() to a gmt datetime().'],['fun','nksip','nksip_lib:timestamp_to_local/1','Converts a timestamp() to a local datetime().'],['fun','nksip','nksip_lib:to_binary/1','Converts anything into a binary().'],['fun','nksip','nksip_lib:to_host/1','Converts an IP or host to a binary host value.'],['fun','nksip','nksip_lib:to_host/1','Converts an IP or host to a binary host value.'],['fun','nksip','nksip_lib:to_integer/1','Converts anything into a integer() or error.'],['fun','nksip','nksip_lib:to_ip/1','Converts a list() or binary() into a inet:ip_addre'],['fun','nksip','nksip_lib:to_list/1','Converts anything into a string().'],['fun','nksip','nksip_lib:to_lower/1','converts a string() or binary() to a lower binary('],['fun','nksip','nksip_lib:to_upper/1','converts a string() or binary() to an upper binary'],['fun','nksip','nksip_lib:tokens/1','Splits a string() or binary() into a list of token'],['fun','nksip','nksip_lib:uid/0','Generates a new random tag of 6 chars.'],['fun','nksip','nksip_lib:unquote/1','Removes doble quotes.'],['fun','nksip','nksip_lib:uuid_4122/0','Generates a RFC4122 compatible uuid.'],['fun','nksip','nksip_parse_sipmsg:parse/1','Parses a SIP packet.'],['fun','nksip','nksip_parse_tokens:tokens/1','Parse a serie of tokens in a string.'],['fun','nksip','nksip_parse_uri:uris/1','Parse a series of uris in a string  Can parse &gt'],['fun','nksip','nksip_parse_via:vias/1','Parse a serie of VIAs in a string.'],['fun','nksip','nksip_proc:del/1','Unregisters a previously registered Name, associat'],['fun','nksip','nksip_proc:del/1','Equivalent to del(Name, self()).'],['fun','nksip','nksip_proc:del_all/0','Equivalent to del_all(self()).'],['fun','nksip','nksip_proc:del_all/1','Unregisters all registrations from this process.'],['fun','nksip','nksip_proc:fold_names/1','Folds over all registered names in the same way as'],['fun','nksip','nksip_proc:fold_pids/2','Folds over all registered pids in the same way as '],['fun','nksip','nksip_proc:put/1','Registers Name (and Value) as associated with this'],['fun','nksip','nksip_proc:put/1','Equivalent to put(Name, Value, self()).'],['fun','nksip','nksip_proc:put/1','Equivalent to put(Name, undefined, self()).'],['fun','nksip','nksip_proc:reg/1','Similar to reg(Name, Value, Pid), but, in case oth'],['fun','nksip','nksip_proc:reg/1','Similar to put(Name, Value, Pid) but only allows f'],['fun','nksip','nksip_proc:reg/1','Equivalent to reg(Name, Value, self()).'],['fun','nksip','nksip_proc:reg/1','Equivalent to reg(Name, undefined, self()).'],['fun','nksip','nksip_proc:register_name/1','Process registration compatible with global:regist'],['fun','nksip','nksip_proc:send/1','Sends a message to a registered process compatible'],['fun','nksip','nksip_proc:size/0','Gets the number of registered processes.'],['fun','nksip','nksip_proc:start/2','Starts a new gen_server or gen_fsm, allowing regis'],['fun','nksip','nksip_proc:start_link/2','Starts a new gen_server or gen_fsm, allowing regis'],['fun','nksip','nksip_proc:unregister_name/1','Unregistration compatible with global:unregister_n'],['fun','nksip','nksip_proc:values/1','Gets all registered Values for Name, along with re'],['fun','nksip','nksip_proc:wait_del/1','Waits for Name to be unregistered from all pids be'],['fun','nksip','nksip_proc:wait_del/1','Equivalent to wait_del(Name, 5000)).'],['fun','nksip','nksip_proc:wait_put/1','Waits for Name to be registered from any process b'],['fun','nksip','nksip_proc:wait_put/1','Equivalent to wait_put(Name, 5000).'],['fun','nksip','nksip_proc:whereis_name/1','Finds a registered Name compatible with global:whe'],['fun','nksip','nksip_reply:parse/1',[]],['fun','nksip','nksip_reply:reply/1','Generates a new SIP response and send options usin'],['fun','nksip','nksip_reply:warning/1','Generates a Warning.'],['fun','nksip','nksip_request:app_id/1','Gets internal apps id.'],['fun','nksip','nksip_request:app_name/1','Gets apps name.'],['fun','nksip','nksip_request:body/1','Gets the body of the request.'],['fun','nksip','nksip_request:call_id/1','Gets the callss id of a request id.'],['fun','nksip','nksip_request:get_handle/1','Gets requests id.'],['fun','nksip','nksip_request:header/1','Gets values for a header in a request.'],['fun','nksip','nksip_request:is_local_route/1','Checks if this request would be sent to a local ad'],['fun','nksip','nksip_request:meta/1','Get a specific metadata.'],['fun','nksip','nksip_request:metas/1','Get a group of specific metadata.'],['fun','nksip','nksip_request:method/1','Gets the method of the request.'],['fun','nksip','nksip_request:reply/1','Sends a reply to a request.'],['fun','nksip','nksip_response:app_id/1','Gets internal apps id.'],['fun','nksip','nksip_response:app_name/1','Gets apps name.'],['fun','nksip','nksip_response:body/1','Gets the body of the response.'],['fun','nksip','nksip_response:call_id/1','Gets the callss id of a response id.'],['fun','nksip','nksip_response:code/1','Gets the responses code.'],['fun','nksip','nksip_response:get_handle/1','Gets responses id.'],['fun','nksip','nksip_response:header/1','Gets values for a header in a response.'],['fun','nksip','nksip_response:meta/1','Get a specific metadata.'],['fun','nksip','nksip_response:metas/1','Get a group of specific metadata.'],['fun','nksip','nksip_response:wait_491/0','Sleeps a random time between 2.1 and 4 secs.'],['fun','nksip','nksip_router:get_all_calls/0','Get all started calls.'],['fun','nksip','nksip_router:incoming_sync/1','Called when a new request or response has been rec'],['fun','nksip','nksip_router:send_work_async/1','Sends an asynchronous piece of nksip_call_worker:w'],['fun','nksip','nksip_router:send_work_sync/1','Sends a synchronous piece of nksip_call_worker:wor'],['fun','nksip','nksip_sdp:empty/0','Generates an empty SDP record, using host "auto.nk'],['fun','nksip','nksip_sdp:increment/1','Increments the SDP version by one.'],['fun','nksip','nksip_sdp:is_new/1','Checks if SDP2 is newer than SDP1.'],['fun','nksip','nksip_sdp:is_sdp/1','Checks if term is an valid SDP.'],['fun','nksip','nksip_sdp:new/0','Generates a simple base SDP record (see new/2),  '],['fun','nksip','nksip_sdp:new/1','Generates a simple base SDP record.'],['fun','nksip','nksip_sdp:parse/1','Parses a binary SDP packet into a sdp() record or '],['fun','nksip','nksip_sdp:unparse/1','Generates a binary SDP packet from an sdp() record'],['fun','nksip','nksip_sdp:update/1','Updates and SDP changing all medias to inactive, r'],['fun','nksip','nksip_sipapp:handle_call/1','Called when a direct call to the SipApp process is'],['fun','nksip','nksip_sipapp:handle_cast/1','Called when a direct cast to the SipApp process is'],['fun','nksip','nksip_sipapp:handle_info/1','Called when the SipApp process receives an unknown'],['fun','nksip','nksip_sipapp:init/1','SipApp initialization.'],['fun','nksip','nksip_sipapp:sip_ack/1','Called when a valid ACK request is received.'],['fun','nksip','nksip_sipapp:sip_authorize/2','Called for every incoming request to be authorized'],['fun','nksip','nksip_sipapp:sip_bye/1','Called when a valid BYE request is received.'],['fun','nksip','nksip_sipapp:sip_cancel/1','Called when a pending INVITE request is cancelled.'],['fun','nksip','nksip_sipapp:sip_dialog_update/2','Called when a dialog has changed its state.'],['fun','nksip','nksip_sipapp:sip_get_user_pass/1','Called to check a user password for a realm.'],['fun','nksip','nksip_sipapp:sip_info/1','Called when a valid INFO request is received.'],['fun','nksip','nksip_sipapp:sip_invite/1','This function is called by NkSIP to process a new '],['fun','nksip','nksip_sipapp:sip_message/1','This function is called by NkSIP to process a new '],['fun','nksip','nksip_sipapp:sip_notify/1','This function is called by NkSIP to process a new '],['fun','nksip','nksip_sipapp:sip_options/1','Called when a OPTIONS request is received.'],['fun','nksip','nksip_sipapp:sip_publish/1','This function is called by NkSIP to process a new '],['fun','nksip','nksip_sipapp:sip_refer/1','This function is called by NkSIP to process a new '],['fun','nksip','nksip_sipapp:sip_register/1','This function is called by NkSIP to process a new '],['fun','nksip','nksip_sipapp:sip_reinvite/1','This function is called when a new in-dialog INVIT'],['fun','nksip','nksip_sipapp:sip_resubscribe/1','This function is called by NkSIP to process a new '],['fun','nksip','nksip_sipapp:sip_route/1','This function is called by NkSIP for every new req'],['fun','nksip','nksip_sipapp:sip_session_update/2','Called when a dialog has updated its SDP session p'],['fun','nksip','nksip_sipapp:sip_subscribe/1','This function is called by NkSIP to process a new '],['fun','nksip','nksip_sipapp:sip_update/1','Called when a valid UPDATE request is received.'],['fun','nksip','nksip_sipapp:terminate/1','Called when the SipApp is stopped.'],['fun','nksip','nksip_sipapp_srv:config/1','Gets a value from the sipapps configuration with '],['fun','nksip','nksip_sipapp_srv:config/1','Gets a value from the sipapps configuration.'],['fun','nksip','nksip_sipapp_srv:config/1','Gets the sipapps configuration.'],['fun','nksip','nksip_sipapp_srv:del/1','Deletes a value from SipApps store.'],['fun','nksip','nksip_sipapp_srv:get/1','Gets a value from SipApps store.'],['fun','nksip','nksip_sipapp_srv:get_appid/1','Generates a internal name (an atom()) for any term'],['fun','nksip','nksip_sipapp_srv:get_name/1','Finds the internal name corresponding to any user '],['fun','nksip','nksip_sipapp_srv:put/1','Inserts a value in SipApps store.'],['fun','nksip','nksip_sipapp_srv:put_new/1','Inserts a value in SipApps store.'],['fun','nksip','nksip_sipmsg:header/1','Extracts a header from a request or response and f'],['fun','nksip','nksip_sipmsg:header/1','Extracts a header from a request or response.'],['fun','nksip','nksip_sipmsg:is_dialog_forming/1',[]],['fun','nksip','nksip_sipmsg:meta/1','Extracts a specific metadata from a request or res'],['fun','nksip','nksip_sipmsg:metas/1','Extracts a group of metadatas from a request or re'],['fun','nksip','nksip_sipmsg:remote_meta/1','Extracts remote meta.'],['fun','nksip','nksip_sipmsg:remote_metas/1','Extracts remote metas.'],['fun','nksip','nksip_sipmsg:require/1','Checks if a token is in Require header.'],['fun','nksip','nksip_sipmsg:supported/1','Checks if a token is in Supported header.'],['fun','nksip','nksip_store:del/1','Deletes a record from database.'],['fun','nksip','nksip_store:fold/1','Folds over all records in database like lists:fold'],['fun','nksip','nksip_store:get/1','Gets a record from database using Default if not f'],['fun','nksip','nksip_store:get/1','Equivalent to get(Key, not_found).'],['fun','nksip','nksip_store:put/1','Inserts a Value in database under Key.'],['fun','nksip','nksip_store:put/1','Equivalent to put(Key, Value, []).'],['fun','nksip','nksip_store:update/1','Updates a record in database, applying Fun to the '],['fun','nksip','nksip_store:update/1','Equivalent to update(Key, Fun, []).'],['fun','nksip','nksip_stun:binding_request/0','Generates a Binding request.'],['fun','nksip','nksip_stun:binding_response/1','Generates a Binding response.'],['fun','nksip','nksip_stun:decode/1','Decodes a STUN packet.'],['fun','nksip','nksip_subscription:app_id/1','Gets thel App of a dialog.'],['fun','nksip','nksip_subscription:app_name/1','Gets apps name.'],['fun','nksip','nksip_subscription:call_id/1','Gets thel Call-ID of the subscription.'],['fun','nksip','nksip_subscription:get_all/0','Gets all started subscription ids.'],['fun','nksip','nksip_subscription:get_all/1','Finds all existing subscriptions having a Call-ID.'],['fun','nksip','nksip_subscription:get_handle/1','Get the subscripion a request, response or id.'],['fun','nksip','nksip_subscription:get_subscription/1','Gets the subscription object corresponding to a re'],['fun','nksip','nksip_subscription:meta/1','Get a specific metadata.'],['fun','nksip','nksip_subscription:metas/1','Get a group of specific metadata.'],['fun','nksip','nksip_subscription_lib:get_handle/1','Get the subscripion a request, response or id.'],['fun','nksip','nksip_subscription_lib:meta/1',[]],['fun','nksip','nksip_subscription_lib:metas/1',[]],['fun','nksip','nksip_subscription_lib:remote_meta/1','Extracts remote meta.'],['fun','nksip','nksip_subscription_lib:remote_metas/1','Extracts remote metas.'],['fun','nksip','nksip_transport:get_all/0','Gets all registered transports in all SipApps.'],['fun','nksip','nksip_transport:get_all/1','Gets all registered transports for a SipApp.'],['fun','nksip','nksip_transport:is_local/1','Checks if an nksip:uri() or nksip:via() refers to '],['fun','nksip','nksip_transport:is_local_ip/1','Checks if an IP is local to this node.'],['fun','nksip','nksip_transport:start_transport/1','Start a new listening transport.'],['fun','nksip','nksip_webserver:get_port/2','Get the real port of a webserver.'],['fun','nksip','nksip_webserver:start_server/1','Starts a new webserver, or returns a already start'],['fun','nksip','nksip_webserver:stop_all/0','Stops all servers.'],['fun','nksip','nksip_webserver:stop_server/1','Stops a started webserver.']];