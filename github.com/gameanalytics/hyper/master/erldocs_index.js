var index = [['app','hyper','hyper','[application]'],['mod','hyper','hyper',' Implementation of HyperLogLog with bias correctio'],['mod','hyper','hyper_array',[]],['mod','hyper','hyper_binary',' Registers stored in one large binary.'],['mod','hyper','hyper_binary_rle',[]],['mod','hyper','hyper_bisect',[]],['mod','hyper','hyper_const',[]],['mod','hyper','hyper_gb',[]],['fun','hyper','hyper:bytes/1',[]],['fun','hyper','hyper:card/1',[]],['fun','hyper','hyper:compact/1',[]],['fun','hyper','hyper:estimate_report/0',[]],['fun','hyper','hyper:from_json/1',[]],['fun','hyper','hyper:from_json/1',[]],['fun','hyper','hyper:insert/1',[]],['fun','hyper','hyper:insert_many/1',[]],['fun','hyper','hyper:intersect_card/1',[]],['fun','hyper','hyper:is_hyper/1',[]],['fun','hyper','hyper:new/1',[]],['fun','hyper','hyper:new/1',[]],['fun','hyper','hyper:perf_report/0',[]],['fun','hyper','hyper:precision/1',[]],['fun','hyper','hyper:reduce_precision/2',[]],['fun','hyper','hyper:run_of_zeroes/1',[]],['fun','hyper','hyper:to_json/1',[]],['fun','hyper','hyper:union/1',[]],['fun','hyper','hyper:union/2',[]],['fun','hyper','hyper_array:bytes/1',[]],['fun','hyper','hyper_array:compact/1',[]],['fun','hyper','hyper_array:decode_registers/2',[]],['fun','hyper','hyper_array:encode_registers/1',[]],['fun','hyper','hyper_array:max_merge/1',[]],['fun','hyper','hyper_array:max_merge/2',[]],['fun','hyper','hyper_array:new/1',[]],['fun','hyper','hyper_array:reduce_precision/2',[]],['fun','hyper','hyper_array:register_sum/1',[]],['fun','hyper','hyper_array:set/3',[]],['fun','hyper','hyper_array:zero_count/1',[]],['fun','hyper','hyper_binary:bytes/1',[]],['fun','hyper','hyper_binary:compact/1',[]],['fun','hyper','hyper_binary:decode_registers/2',[]],['fun','hyper','hyper_binary:encode_registers/1',[]],['fun','hyper','hyper_binary:max_merge/1',[]],['fun','hyper','hyper_binary:max_merge/2',[]],['fun','hyper','hyper_binary:new/1',[]],['fun','hyper','hyper_binary:reduce_precision/2',[]],['fun','hyper','hyper_binary:register_sum/1',[]],['fun','hyper','hyper_binary:set/3',[]],['fun','hyper','hyper_binary:zero_count/1',[]],['fun','hyper','hyper_binary_rle:bytes/1',[]],['fun','hyper','hyper_binary_rle:compact/1',[]],['fun','hyper','hyper_binary_rle:decode_registers/2',[]],['fun','hyper','hyper_binary_rle:encode_registers/1',[]],['fun','hyper','hyper_binary_rle:max_merge/1',[]],['fun','hyper','hyper_binary_rle:max_merge/2',[]],['fun','hyper','hyper_binary_rle:new/1',[]],['fun','hyper','hyper_binary_rle:reduce_precision/2',[]],['fun','hyper','hyper_binary_rle:register_sum/1',[]],['fun','hyper','hyper_binary_rle:set/3',[]],['fun','hyper','hyper_binary_rle:zero_count/1',[]],['fun','hyper','hyper_bisect:bytes/1',[]],['fun','hyper','hyper_bisect:compact/1',[]],['fun','hyper','hyper_bisect:decode_registers/2',[]],['fun','hyper','hyper_bisect:encode_registers/1',[]],['fun','hyper','hyper_bisect:max_merge/1',[]],['fun','hyper','hyper_bisect:max_merge/2',[]],['fun','hyper','hyper_bisect:new/1',[]],['fun','hyper','hyper_bisect:reduce_precision/2',[]],['fun','hyper','hyper_bisect:register_sum/1',[]],['fun','hyper','hyper_bisect:set/3',[]],['fun','hyper','hyper_bisect:zero_count/1',[]],['fun','hyper','hyper_const:bias_data/1',[]],['fun','hyper','hyper_const:estimate_data/1',[]],['fun','hyper','hyper_const:threshold/1',[]],['fun','hyper','hyper_gb:bytes/1',[]],['fun','hyper','hyper_gb:compact/1',[]],['fun','hyper','hyper_gb:decode_registers/2',[]],['fun','hyper','hyper_gb:encode_registers/1',[]],['fun','hyper','hyper_gb:max_merge/1',[]],['fun','hyper','hyper_gb:max_merge/2',[]],['fun','hyper','hyper_gb:new/1',[]],['fun','hyper','hyper_gb:reduce_precision/2',[]],['fun','hyper','hyper_gb:register_sum/1',[]],['fun','hyper','hyper_gb:set/3',[]],['fun','hyper','hyper_gb:zero_count/1',[]]];