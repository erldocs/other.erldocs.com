 :: Extracting meta information
$ infinity  `git ls-remote --heads --tags 'https://github.com/mworrell/qdate'  2>&1`
>>> [repo] 2 branches, 3 tags
WTF {ok,{{"HTTP/1.1",200,"OK"},
         [{"cache-control","max-age=300"},
          {"connection","keep-alive"},
          {"date","Sun, 11 Oct 2015 21:25:39 GMT"},
          {"via","1.1 varnish"},
          {"accept-ranges","bytes"},
          {"etag","\"fe8739bfb243da702a28f27e3258367eb4068f0a\""},
          {"vary","Authorization,Accept-Encoding"},
          {"content-length","2217"},
          {"content-type","text/plain; charset=utf-8"},
          {"expires","Sun, 11 Oct 2015 21:30:39 GMT"},
          {"content-security-policy","default-src 'none'"},
          {"x-xss-protection","1; mode=block"},
          {"x-frame-options","deny"},
          {"x-content-type-options","nosniff"},
          {"strict-transport-security","max-age=31536000"},
          {"x-served-by","cache-lcy1128-LCY"},
          {"x-cache","MISS"},
          {"x-cache-hits","0"},
          {"access-control-allow-origin","*"},
          {"source-age","0"}],
         "{name,\"qdate\"}.\n{target_path,\"github.com/mworrell/qdate\"}.\n{url,\"https://github.com/mworrell/qdate\"}.\n{vsn_format,2}.\n{vsn_pass,23}.\n{time_begin,{{2015,9,22},{0,13,2}}}.\n{method,git}.\n{count_tags,3}.\n{count_branches,2}.\n{revisions,[{rev,branch,\"master\",\"a443d476ac4ad65c15e86e6daaff1460162c9ac6\",\n                 true,\n                 [\"erlang_localtime\",\"erlware_commons\"],\n                 [\"https://github.com/bkearns/proper\",\n                  \"https://github.com/choptastic/erlang_localtime\",\n                  \"https://github.com/erlware/erlware_commons\",\n                  \"https://github.com/seancribbs/neotoma\"]},\n            {rev,branch,\"zotonic\",\"89692026f90fde34fa3810df5e984fd0963dc0ee\",\n                 true,\n                 [\"erlang_localtime\",\"erlware_commons\"],\n                 [\"https://github.com/bkearns/proper\",\n                  \"https://github.com/choptastic/erlang_localtime\",\n                  \"https://github.com/erlware/erlware_commons\",\n                  \"https://github.com/seancribbs/neotoma\"]},\n            {rev,tag,\"0.1.0\",\"868eb1acf66973c9836c947d8c2bf9b7cd6d326b\",true,\n                 [\"erlang_localtime\",\"erlware_commons\"],\n                 [\"https://github.com/bkearns/proper\",\n                  \"https://github.com/choptastic/erlang_localtime\",\n                  \"https://github.com/erlware/erlware_commons\",\n                  \"https://github.com/seancribbs/neotoma\"]},\n            {rev,tag,\"0.2.0\",\"f65cb65d0780e0da93ca75ae929ea286c8a1a506\",true,\n                 [\"erlang_localtime\",\"erlware_commons\"],\n                 [\"https://github.com/bkearns/proper\",\n                  \"https://github.com/choptastic/erlang_localtime\",\n                  \"https://github.com/erlware/erlware_commons\",\n                  \"https://github.com/seancribbs/neotoma\"]},\n            {rev,tag,\"0.2.1\",\"a32086d8652ca7c0a91f36e94f27e36919d2a6c8\",true,\n                 [\"erlang_localtime\",\"erlware_commons\"],\n                 [\"https://github.com/bkearns/proper\",\n                  \"https://github.com/choptastic/erlang_localtime\",\n                  \"https://github.com/erlware/erlware_commons\",\n                  \"https://github.com/seancribbs/neotoma\"]}]}.\n{time_end,{{2015,9,22},{0,13,3}}}.\n"}}
 :: Writing meta to "/home/pete/wefwefwef/docs/other/135b6e17e4bdf1a57246fa6c28ea2c86acb59dae/meta.txt"
 :: Skipping tag "0.1.0"
 :: Skipping tag "0.2.0"
 :: Skipping tag "0.2.1"
 :: Skipping branch "master"
 :: Skipping branch "zotonic"
 :: Finishing up
$ 5000  `rm -r '/home/pete/wefwefwef/docs/other/135b6e17e4bdf1a57246fa6c28ea2c86acb59dae/qdate'  2>&1`
