var index = [['app','zipperl','zipperl','[application]'],['mod','zipperl','yazl','YAZL yazzle (Yet Another Zipper List): A mutabl'],['fun','zipperl','yazl:delete/1','Delete the value to the right or left of the focus'],['fun','zipperl','yazl:ending/1','Type utility: get the end in a specific direction.'],['fun','zipperl','yazl:find/1','Search for the first occurrence of a value.'],['fun','zipperl','yazl:finds/1','Search for the first sequence of values that matc'],['fun','zipperl','yazl:from_list/1','Constructor: create a yazl with focus at the begi'],['fun','zipperl','yazl:from_list/1','Constructor: create a yazl with focus before the f'],['fun','zipperl','yazl:from_lists/2','Constructor: create a yazl with focus between two '],['fun','zipperl','yazl:get/1','Get the value of the element to the right or left'],['fun','zipperl','yazl:gets/1','Get the values of elements to the right or left o'],['fun','zipperl','yazl:insert/1','Insert a value to the right or left of the current'],['fun','zipperl','yazl:inserts/1','Insert a sequence of values to the left or right '],['fun','zipperl','yazl:is_empty/1','Test if a yazl is empty.'],['fun','zipperl','yazl:is_yazl/1','Test if a term appears to be a yazl.'],['fun','zipperl','yazl:map/1','Apply a map while leaving the focus unchanged.'],['fun','zipperl','yazl:move/1','Move the focus one step to the right or left.'],['fun','zipperl','yazl:moves/1','Move the focus multiple steps to the right or left'],['fun','zipperl','yazl:moveto/1','Move to the beginning or end of the list, or an a'],['fun','zipperl','yazl:moveuntil/1','Search for the first occurrence of a value that s'],['fun','zipperl','yazl:movewhile/1','Search for the first occurrence of a value that d'],['fun','zipperl','yazl:new/0','Constructor: create a new empty yazl.'],['fun','zipperl','yazl:opposite/1','Type utility: get the opposite of a direction.'],['fun','zipperl','yazl:position/1','Get the one-based index of the position to the ri'],['fun','zipperl','yazl:reverse/1','Reverse the list maintaining focus.'],['fun','zipperl','yazl:set/1','Set the value of the element to the right or left'],['fun','zipperl','yazl:sets/1','Set values of elements to the right or left of th'],['fun','zipperl','yazl:size/1','Get the length of the underlying list.'],['fun','zipperl','yazl:to_list/1','Recover the underlying list.'],['fun','zipperl','yazl:to_lists/1','Recover the underlying sublists before and after t'],['fun','zipperl','yazl:truncate/1','Delete the indicated sublist.']];