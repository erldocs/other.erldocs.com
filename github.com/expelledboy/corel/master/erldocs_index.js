var index = [['app','corel','corel','[application]'],['mod','corel','cache',[]],['mod','corel','corel',[]],['mod','corel','ctest',[]],['mod','corel','fetter',[]],['mod','corel','opts',[]],['mod','corel','spec_fsm',[]],['mod','corel','type',[]],['mod','corel','validate',[]],['fun','corel','cache:reset/1',[]],['fun','corel','cache:value/2',[]],['fun','corel','corel:assert/1',[]],['fun','corel','corel:assert/2',[]],['fun','corel','corel:timestamp/0',[]],['fun','corel','corel:timestamp/1',[]],['fun','corel','corel:trace/0',[]],['fun','corel','corel:trace/1',[]],['fun','corel','corel:trace/2',[]],['fun','corel','ctest:after_exit/1',[]],['fun','corel','ctest:await_exit/1',[]],['fun','corel','ctest:call/3',[]],['fun','corel','ctest:cast/2',[]],['fun','corel','ctest:ensure_exit/2',[]],['fun','corel','ctest:mfa_string/1',[]],['fun','corel','ctest:recv/2',[]],['fun','corel','ctest:reply/2',[]],['fun','corel','ctest:set_env/3',[]],['fun','corel','ctest:setup/0',[]],['fun','corel','fetter:new_record_with_proplist/2',[]],['fun','corel','fetter:parse_transform/2',[]],['fun','corel','fetter:set_field/4',[]],['fun','corel','fetter:set_field_from_proplist/3',[]],['fun','corel','fetter:to_xml/1',[]],['fun','corel','fetter:to_xml/2',[]],['fun','corel','opts:defined/2','determine if options are present.'],['fun','corel','opts:fget/2','get values of options.'],['fun','corel','opts:fget/3','get values of options using defaults when not pres'],['fun','corel','opts:fset/2','using proplist fset values for options.'],['fun','corel','opts:fset/3','set value of option.'],['fun','corel','opts:insert/2','using proplist add options.'],['fun','corel','opts:insert/3','add option.'],['fun','corel','opts:remove/2','delete option.'],['fun','corel','opts:replace/2','replace the options using another proplist.'],['fun','corel','opts:replace/3','replace the option with a new value.'],['fun','corel','opts:validate/1',[]],['fun','corel','spec_fsm:run/3',[]],['fun','corel','type:to_atom/1',[]],['fun','corel','type:to_float/1',[]],['fun','corel','type:to_integer/1',[]],['fun','corel','type:to_list/1',[]],['fun','corel','type:which/1',[]],['fun','corel','validate:credit_card/1',[]],['fun','corel','validate:credit_card/2',[]],['fun','corel','validate:defined/2',[]],['fun','corel','validate:email_address/1',[]],['fun','corel','validate:email_address/2',[]],['fun','corel','validate:float_string/1',[]],['fun','corel','validate:float_string/2',[]],['fun','corel','validate:has_value/2',[]],['fun','corel','validate:integer_string/1',[]],['fun','corel','validate:integer_string/2',[]],['fun','corel','validate:ip_address/1',[]],['fun','corel','validate:ip_address/2',[]],['fun','corel','validate:is_type/2',[]],['fun','corel','validate:iso_8601/1',[]],['fun','corel','validate:iso_8601/2',[]],['fun','corel','validate:len/2',[]],['fun','corel','validate:member_of/2',[]],['fun','corel','validate:no_whitespace/1',[]],['fun','corel','validate:no_whitespace/2',[]],['fun','corel','validate:numeric_string/1',[]],['fun','corel','validate:numeric_string/2',[]],['fun','corel','validate:phone_number/1',[]],['fun','corel','validate:phone_number/2',[]],['fun','corel','validate:pid_alive/1',[]],['fun','corel','validate:pid_alive/2',[]],['fun','corel','validate:process/3',[]],['fun','corel','validate:regex/1',[]],['fun','corel','validate:regex/2',[]],['fun','corel','validate:string/2',[]],['fun','corel','validate:this/2',[]]];