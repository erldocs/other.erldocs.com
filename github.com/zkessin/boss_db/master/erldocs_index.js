var index = [['app','boss_db','boss_db','[application]'],['mod','boss_db','boss_cache',[]],['mod','boss_db','boss_cache_adapter',[]],['mod','boss_db','boss_cache_controller',[]],['mod','boss_db','boss_cache_sup',[]],['mod','boss_db','boss_compiler',[]],['mod','boss_db','boss_db','Chicago Boss database abstraction.'],['mod','boss_db','boss_db_adapter',[]],['mod','boss_db','boss_db_cache',[]],['mod','boss_db','boss_db_controller',[]],['mod','boss_db','boss_db_mock_controller',[]],['mod','boss_db','boss_db_mock_sup',[]],['mod','boss_db','boss_db_pmod_pt',[]],['mod','boss_db','boss_db_pt',[]],['mod','boss_db','boss_db_sup',[]],['mod','boss_db','boss_db_test',[]],['mod','boss_db','boss_db_test_app',[]],['mod','boss_db','boss_news',[]],['mod','boss_db','boss_news_sup',[]],['mod','boss_db','boss_pool',[]],['mod','boss_db','boss_sql_lib',[]],['mod','boss_db','inflector','A string inflection and general convenience librar'],['fun','boss_db','boss_cache:delete/2',[]],['fun','boss_db','boss_cache:get/2',[]],['fun','boss_db','boss_cache:set/4',[]],['fun','boss_db','boss_cache:start/0',[]],['fun','boss_db','boss_cache:start/1',[]],['fun','boss_db','boss_cache:stop/0',[]],['fun','boss_db','boss_cache:to_hex/1','Convert an iolist to a hexadecimal string.'],['fun','boss_db','boss_cache_adapter:behaviour_info/1',[]],['fun','boss_db','boss_cache_controller:code_change/3',[]],['fun','boss_db','boss_cache_controller:handle_call/3',[]],['fun','boss_db','boss_cache_controller:handle_cast/2',[]],['fun','boss_db','boss_cache_controller:handle_info/2',[]],['fun','boss_db','boss_cache_controller:init/1',[]],['fun','boss_db','boss_cache_controller:start_link/0',[]],['fun','boss_db','boss_cache_controller:start_link/1',[]],['fun','boss_db','boss_cache_controller:terminate/2',[]],['fun','boss_db','boss_cache_sup:init/1',[]],['fun','boss_db','boss_cache_sup:start_link/0',[]],['fun','boss_db','boss_cache_sup:start_link/1',[]],['fun','boss_db','boss_compiler:compile/1',[]],['fun','boss_db','boss_compiler:compile/2',[]],['fun','boss_db','boss_compiler:parse/3',[]],['fun','boss_db','boss_db:count/1','Count the number of BossRecords of type Type in th'],['fun','boss_db','boss_db:count/1','Count the number of BossRecords of type Type in th'],['fun','boss_db','boss_db:count/3',[]],['fun','boss_db','boss_db:counter/1','Treat the record associated with Id as a counter a'],['fun','boss_db','boss_db:counter/2',[]],['fun','boss_db','boss_db:create_table/1','Create a table based on TableDefinition.'],['fun','boss_db','boss_db:create_table/3',[]],['fun','boss_db','boss_db:data_type/2',[]],['fun','boss_db','boss_db:delete/1','Delete the BossRecord with the given Id.'],['fun','boss_db','boss_db:delete/2',[]],['fun','boss_db','boss_db:depth/0',[]],['fun','boss_db','boss_db:depth/1',[]],['fun','boss_db','boss_db:dump/0',[]],['fun','boss_db','boss_db:dump/1',[]],['fun','boss_db','boss_db:execute/1','Execute database commands with interpolated parame'],['fun','boss_db','boss_db:execute/1','Execute raw database commands on SQL databases.'],['fun','boss_db','boss_db:execute/3',[]],['fun','boss_db','boss_db:find/1','Query for BossRecords.'],['fun','boss_db','boss_db:find/1','Find a BossRecord with the specified Id (e.g.'],['fun','boss_db','boss_db:find/2',[]],['fun','boss_db','boss_db:find/4',[]],['fun','boss_db','boss_db:find_first/1','Query for the first BossRecord of type Type matchi'],['fun','boss_db','boss_db:find_first/1','Query for the first BossRecord of type Type matchi'],['fun','boss_db','boss_db:find_first/4',[]],['fun','boss_db','boss_db:find_last/1','Query for the last BossRecord of type Type matchin'],['fun','boss_db','boss_db:find_last/1','Query for the last BossRecord of type Type matchin'],['fun','boss_db','boss_db:find_last/1','Query for the last BossRecord of type Type.'],['fun','boss_db','boss_db:find_last/4',[]],['fun','boss_db','boss_db:incr/1','Treat the record associated with Id as a counter a'],['fun','boss_db','boss_db:incr/1','Treat the record associated with Id as a counter a'],['fun','boss_db','boss_db:incr/3',[]],['fun','boss_db','boss_db:migrate/1','Apply migrations from list [{Tag, Fun}]  currentl'],['fun','boss_db','boss_db:migrate/2','Run database migration {Tag, Fun} in Direction.'],['fun','boss_db','boss_db:pop/0',[]],['fun','boss_db','boss_db:pop/1',[]],['fun','boss_db','boss_db:push/0',[]],['fun','boss_db','boss_db:push/1',[]],['fun','boss_db','boss_db:save_record/1','Save (that is, create or update) the given BossRec'],['fun','boss_db','boss_db:save_record/2',[]],['fun','boss_db','boss_db:start/1',[]],['fun','boss_db','boss_db:stop/0',[]],['fun','boss_db','boss_db:table_exists/1',[]],['fun','boss_db','boss_db:table_exists/2',[]],['fun','boss_db','boss_db:transaction/1','Execute a fun inside a transaction.'],['fun','boss_db','boss_db:transaction/2',[]],['fun','boss_db','boss_db:type/1','Returns the type of the BossRecord with Id, or und'],['fun','boss_db','boss_db:type/2',[]],['fun','boss_db','boss_db:validate_record/1','Validate the given BossRecord without saving it in'],['fun','boss_db','boss_db:validate_record/2','Validate the given BossRecord without saving it in'],['fun','boss_db','boss_db:validate_record_types/1','Validate the parameter types of the given BossReco'],['fun','boss_db','boss_db_adapter:behaviour_info/1',[]],['fun','boss_db','boss_db_cache:handle_collection_news/3',[]],['fun','boss_db','boss_db_cache:handle_record_news/3',[]],['fun','boss_db','boss_db_controller:code_change/3',[]],['fun','boss_db','boss_db_controller:handle_call/3',[]],['fun','boss_db','boss_db_controller:handle_cast/2',[]],['fun','boss_db','boss_db_controller:handle_info/2',[]],['fun','boss_db','boss_db_controller:init/1',[]],['fun','boss_db','boss_db_controller:start_link/0',[]],['fun','boss_db','boss_db_controller:start_link/1',[]],['fun','boss_db','boss_db_controller:terminate/2',[]],['fun','boss_db','boss_db_controller:try_connection/2',[]],['fun','boss_db','boss_db_mock_controller:code_change/3',[]],['fun','boss_db','boss_db_mock_controller:handle_call/3',[]],['fun','boss_db','boss_db_mock_controller:handle_cast/2',[]],['fun','boss_db','boss_db_mock_controller:handle_info/2',[]],['fun','boss_db','boss_db_mock_controller:init/1',[]],['fun','boss_db','boss_db_mock_controller:start_link/0',[]],['fun','boss_db','boss_db_mock_controller:start_link/1',[]],['fun','boss_db','boss_db_mock_controller:terminate/2',[]],['fun','boss_db','boss_db_mock_sup:init/1',[]],['fun','boss_db','boss_db_mock_sup:start_link/0',[]],['fun','boss_db','boss_db_mock_sup:start_link/1',[]],['fun','boss_db','boss_db_pmod_pt:format_error/1',[]],['fun','boss_db','boss_db_pmod_pt:parse_transform/2',[]],['fun','boss_db','boss_db_pt:format_error/1',[]],['fun','boss_db','boss_db_pt:function/4',[]],['fun','boss_db','boss_db_pt:parse_transform/2',[]],['fun','boss_db','boss_db_sup:init/1',[]],['fun','boss_db','boss_db_sup:start_link/0',[]],['fun','boss_db','boss_db_sup:start_link/1',[]],['fun','boss_db','boss_db_test:start/0',[]],['fun','boss_db','boss_db_test:start/1',[]],['fun','boss_db','boss_db_test:stop/0',[]],['fun','boss_db','boss_db_test_app:run_init/0',[]],['fun','boss_db','boss_db_test_app:run_setup/0',[]],['fun','boss_db','boss_db_test_app:run_tests/0',[]],['fun','boss_db','boss_db_test_app:start/1',[]],['fun','boss_db','boss_db_test_app:stop/1',[]],['fun','boss_db','boss_news:cancel_watch/1','Cancel an existing watch identified by WatchId.'],['fun','boss_db','boss_news:created/2',[]],['fun','boss_db','boss_news:deleted/2',[]],['fun','boss_db','boss_news:dump/0',[]],['fun','boss_db','boss_news:extend_watch/1','Extend an existing watch by the time-to-live speci'],['fun','boss_db','boss_news:reset/0',[]],['fun','boss_db','boss_news:set_watch/2','Same as set_watch/4, except that the watch expires'],['fun','boss_db','boss_news:set_watch/2','Same as set_watch/3, except that UserInfo is passe'],['fun','boss_db','boss_news:set_watch/2','Create or replace a watch with WatchId.'],['fun','boss_db','boss_news:start/0',[]],['fun','boss_db','boss_news:start/1',[]],['fun','boss_db','boss_news:stop/0',[]],['fun','boss_db','boss_news:updated/3',[]],['fun','boss_db','boss_news:watch/1','Same as watch/3, except that the watch expires aft'],['fun','boss_db','boss_news:watch/1','Same as watch/2, except that UserInfo will be pass'],['fun','boss_db','boss_news:watch/1','Watch records and attributes described by TopicStr'],['fun','boss_db','boss_news_sup:init/1',[]],['fun','boss_db','boss_news_sup:start_link/0',[]],['fun','boss_db','boss_news_sup:start_link/1',[]],['fun','boss_db','boss_pool:call/2',[]],['fun','boss_db','boss_pool:call/3',[]],['fun','boss_db','boss_sql_lib:convert_id_condition_to_use_table_ids/1',[]],['fun','boss_db','boss_sql_lib:convert_possible_foreign_key/5',[]],['fun','boss_db','boss_sql_lib:get_retyped_foreign_keys/1',[]],['fun','boss_db','boss_sql_lib:infer_type_from_id/1',[]],['fun','boss_db','boss_sql_lib:is_foreign_key/2',[]],['fun','boss_db','boss_sql_lib:keytype/1',[]],['fun','boss_db','inflector:camelize/1',[]],['fun','boss_db','inflector:capitalize/1',[]],['fun','boss_db','inflector:dasherize/1',[]],['fun','boss_db','inflector:foreign_key/1',[]],['fun','boss_db','inflector:humanize/1',[]],['fun','boss_db','inflector:lower_camelize/1',[]],['fun','boss_db','inflector:moduleize/1',[]],['fun','boss_db','inflector:ordinalize/1',[]],['fun','boss_db','inflector:pluralize/1',[]],['fun','boss_db','inflector:singularize/1',[]],['fun','boss_db','inflector:tableize/1',[]],['fun','boss_db','inflector:titleize/1',[]],['fun','boss_db','inflector:underscore/1',[]]];