var index = [['app','leo_storage','leo_storage','[application]'],['mod','leo_storage','leo_directory_event','Directory operations Event.'],['mod','leo_storage','leo_directory_mq',[]],['mod','leo_storage','leo_storage_api',[]],['mod','leo_storage','leo_storage_app',[]],['mod','leo_storage','leo_storage_cluster_monitor','Watchdog for a Storage-cluster.'],['mod','leo_storage','leo_storage_event_notifier','LeoStorages Event Notifier.'],['mod','leo_storage','leo_storage_handler_directory','Metadata handler for the metadata-cluster.'],['mod','leo_storage','leo_storage_handler_object','Handling an object, which is included in put, get,'],['mod','leo_storage','leo_storage_handler_sync',[]],['mod','leo_storage','leo_storage_mq',[]],['mod','leo_storage','leo_storage_read_repairer',[]],['mod','leo_storage','leo_storage_replicator',[]],['mod','leo_storage','leo_storage_statistics',[]],['mod','leo_storage','leo_storage_sup',[]],['mod','leo_storage','leo_storage_watchdog','Watchdog for Storage.'],['mod','leo_storage','leo_storage_watchdog_sub',[]],['fun','leo_storage','leo_directory_event:code_change/3',[]],['fun','leo_storage','leo_directory_event:handle_call/2',[]],['fun','leo_storage','leo_directory_event:handle_event/2',[]],['fun','leo_storage','leo_directory_event:handle_info/2',[]],['fun','leo_storage','leo_directory_event:init/1',[]],['fun','leo_storage','leo_directory_event:terminate/2',[]],['fun','leo_storage','leo_directory_mq:handle_call/2','Subscribe a message from the queue.'],['fun','leo_storage','leo_directory_mq:handle_call/3',[]],['fun','leo_storage','leo_directory_mq:init/0','Initializer.'],['fun','leo_storage','leo_directory_mq:publish/1','Input a message into the queue.'],['fun','leo_storage','leo_directory_mq:start/1','create queues and launch mq-servers.'],['fun','leo_storage','leo_directory_mq:start/2',[]],['fun','leo_storage','leo_storage_api:attach/1','attach a cluster.'],['fun','leo_storage','leo_storage_api:compact/1',[]],['fun','leo_storage','leo_storage_api:compact/3','Execute data-compaction.'],['fun','leo_storage','leo_storage_api:diagnose_data/0','Diagnose the data.'],['fun','leo_storage','leo_storage_api:get_disk_usage/0','Get the disk usage(Total, Free) on leo_storage in '],['fun','leo_storage','leo_storage_api:get_mq_consumer_state/0','Retrieve mq-consumer state.'],['fun','leo_storage','leo_storage_api:get_mq_consumer_state/1',[]],['fun','leo_storage','leo_storage_api:get_node_status/0','Retrieve the current node status.'],['fun','leo_storage','leo_storage_api:get_routing_table_chksum/0','get routing_tables checksum.'],['fun','leo_storage','leo_storage_api:mq_resume/1','Resume comsumption msg of the mq-consumer.'],['fun','leo_storage','leo_storage_api:mq_suspend/1','Suspend comsumption msg of the mq-consumer.'],['fun','leo_storage','leo_storage_api:rebalance/1','Do rebalance which means "Objects are copied to th'],['fun','leo_storage','leo_storage_api:rebalance/3',[]],['fun','leo_storage','leo_storage_api:recover_remote/2',[]],['fun','leo_storage','leo_storage_api:register_in_monitor/1','register into the managers monitor.'],['fun','leo_storage','leo_storage_api:register_in_monitor/2',[]],['fun','leo_storage','leo_storage_api:start/1','start storage-server.'],['fun','leo_storage','leo_storage_api:start/2',[]],['fun','leo_storage','leo_storage_api:start/3',[]],['fun','leo_storage','leo_storage_api:stop/0','.'],['fun','leo_storage','leo_storage_api:synchronize/1','synchronize a data.'],['fun','leo_storage','leo_storage_api:synchronize/2',[]],['fun','leo_storage','leo_storage_api:update_manager_nodes/1','update manager nodes.'],['fun','leo_storage','leo_storage_app:prep_stop/1',[]],['fun','leo_storage','leo_storage_app:start/2',[]],['fun','leo_storage','leo_storage_app:start_mnesia/0','Start mnesia and create tables.'],['fun','leo_storage','leo_storage_app:start_statistics/0','Start statistics.'],['fun','leo_storage','leo_storage_app:stop/1',[]],['fun','leo_storage','leo_storage_cluster_monitor:check_cluster_state/0','Check the cluster status       1.'],['fun','leo_storage','leo_storage_cluster_monitor:get_node_stats/0','Retrives Compaction, MQ, Disk and CPU status.'],['fun','leo_storage','leo_storage_event_notifier:code_change/3','Convert process state when code is changed.'],['fun','leo_storage','leo_storage_event_notifier:handle_call/3','gen_server callback - Module:handle_call(Request, '],['fun','leo_storage','leo_storage_event_notifier:handle_cast/2','Handling cast message.'],['fun','leo_storage','leo_storage_event_notifier:handle_info/2','Handling all non call/cast messages.'],['fun','leo_storage','leo_storage_event_notifier:init/1','Initiates the server.'],['fun','leo_storage','leo_storage_event_notifier:operate/2','Operate the data.'],['fun','leo_storage','leo_storage_event_notifier:replicate/3','Replicate the data.'],['fun','leo_storage','leo_storage_event_notifier:start_link/0','Starts the server.'],['fun','leo_storage','leo_storage_event_notifier:stop/0','Stop this server.'],['fun','leo_storage','leo_storage_event_notifier:terminate/2','This function is called by a gen_server when it is'],['fun','leo_storage','leo_storage_handler_directory:find_by_parent_dir/4','Find by index from the backenddb.'],['fun','leo_storage','leo_storage_handler_object:delete/1','Remove an object (request from storage).'],['fun','leo_storage','leo_storage_handler_object:delete/2','Remova an object (request from gateway).'],['fun','leo_storage','leo_storage_handler_object:delete/3',[]],['fun','leo_storage','leo_storage_handler_object:delete_objects_under_dir/1','Remove objects of the under directory.'],['fun','leo_storage','leo_storage_handler_object:delete_objects_under_dir/2','Remove objects of the under directory for remote-n'],['fun','leo_storage','leo_storage_handler_object:delete_objects_under_dir/3',[]],['fun','leo_storage','leo_storage_handler_object:find_uploaded_objects_by_key/1','Find already uploaded objects by original-filename'],['fun','leo_storage','leo_storage_handler_object:get/1','get object (from storage-node#1).'],['fun','leo_storage','leo_storage_handler_object:get/2','get object (from storage-node#2).'],['fun','leo_storage','leo_storage_handler_object:get/3','Retrieve an object which is requested from gateway'],['fun','leo_storage','leo_storage_handler_object:get/4','Retrieve an object which is requested from gateway'],['fun','leo_storage','leo_storage_handler_object:get/5','Retrieve a part of an object.'],['fun','leo_storage','leo_storage_handler_object:head/2','retrieve a meta-data from mata-data-server (file).'],['fun','leo_storage','leo_storage_handler_object:head/3',[]],['fun','leo_storage','leo_storage_handler_object:head_with_calc_md5/3','Retrieve a metada/data from backend_db/object-stor'],['fun','leo_storage','leo_storage_handler_object:prefix_search_and_remove_objects/1','Retrieve object of deletion from object-storage by'],['fun','leo_storage','leo_storage_handler_object:put/1','Insert an object (request from gateway).'],['fun','leo_storage','leo_storage_handler_object:put/2','Insert an object (request from gateway).'],['fun','leo_storage','leo_storage_handler_object:put/4','Insert an  object (request from remote-storage-nod'],['fun','leo_storage','leo_storage_handler_object:replicate/1','Replicate an object, which is requested from remot'],['fun','leo_storage','leo_storage_handler_object:replicate/3','Replicate an object from local to remote.'],['fun','leo_storage','leo_storage_handler_sync:force_sync/1','Synchronize object with remote-cluster(s).'],['fun','leo_storage','leo_storage_handler_sync:get_metadatas/1','Compare local-metadatas with remote-metadatas.'],['fun','leo_storage','leo_storage_handler_sync:handle_call/1','Handle sync objects with a remote storage cluster.'],['fun','leo_storage','leo_storage_handler_sync:send_addrid_and_key_to_remote/2','Send list of metadatas to remote-storage(s),     '],['fun','leo_storage','leo_storage_mq:handle_call/2','Subscribe a message from the queue.'],['fun','leo_storage','leo_storage_mq:handle_call/3',[]],['fun','leo_storage','leo_storage_mq:init/0','Initializer.'],['fun','leo_storage','leo_storage_mq:publish/1',[]],['fun','leo_storage','leo_storage_mq:publish/1',[]],['fun','leo_storage','leo_storage_mq:publish/1',[]],['fun','leo_storage','leo_storage_mq:publish/1','Input a message into the queue.'],['fun','leo_storage','leo_storage_mq:start/1','create queues and launch mq-servers.'],['fun','leo_storage','leo_storage_mq:start/2',[]],['fun','leo_storage','leo_storage_read_repairer:repair/4','Repair an object.'],['fun','leo_storage','leo_storage_replicator:init_loop/5',[]],['fun','leo_storage','leo_storage_replicator:replicate/5','Replicate an object to local-node and remote-nodes'],['fun','leo_storage','leo_storage_statistics:handle_notify/0',[]],['fun','leo_storage','leo_storage_statistics:start_link/1',[]],['fun','leo_storage','leo_storage_sup:start_link/0','start link...'],['fun','leo_storage','leo_storage_sup:stop/0','stop process.'],['fun','leo_storage','leo_storage_watchdog:handle_call/2',[]],['fun','leo_storage','leo_storage_watchdog:handle_fail/2',[]],['fun','leo_storage','leo_storage_watchdog:init/1','Initialize this process.'],['fun','leo_storage','leo_storage_watchdog:start_link/3','Start the server.'],['fun','leo_storage','leo_storage_watchdog:state/0','Retrieve state of the watchdog.'],['fun','leo_storage','leo_storage_watchdog:stop/0','Stop the server.'],['fun','leo_storage','leo_storage_watchdog_sub:handle_notify/3',[]],['fun','leo_storage','leo_storage_watchdog_sub:handle_notify/4',[]],['fun','leo_storage','leo_storage_watchdog_sub:start/0',[]]];