var index = [['app','bdberl','bdberl','[application]'],['mod','bdberl','bdberl','  Erlang interface to BerkeleyDB.'],['mod','bdberl','bdberl_logger','  SASL/OTP logger for BDB.'],['fun','bdberl','bdberl:close/1','  Close a database file with default options.'],['fun','bdberl','bdberl:close/2','  Close a database file.'],['fun','bdberl','bdberl:cursor_close/0','  Closes the cursor.'],['fun','bdberl','bdberl:cursor_current/0','  Retrieves key/data pairs from the database.'],['fun','bdberl','bdberl:cursor_next/0','  Retrieves key/data pairs from the database.'],['fun','bdberl','bdberl:cursor_open/1','  Opens a cursor on a database.'],['fun','bdberl','bdberl:cursor_prev/0','  Retrieves key/data pairs from the database.'],['fun','bdberl','bdberl:delete_database/1','  Delete a database file.'],['fun','bdberl','bdberl:driver_info/0','  Retrieve driver info.'],['fun','bdberl','bdberl:env_stat_print/0','  Print environment stats with empty flags.'],['fun','bdberl','bdberl:env_stat_print/1','  Print environment stats.'],['fun','bdberl','bdberl:get/2','  Retrieve a value based on key.'],['fun','bdberl','bdberl:get/3','  Retrieve a value based on key.'],['fun','bdberl','bdberl:get_cache_size/0','  Returns the size of the in-memory cache.'],['fun','bdberl','bdberl:get_data_dirs/0','  Returns the list of directories that bdberl sea'],['fun','bdberl','bdberl:get_data_dirs_info/0','  Returns the list of directories that bdberl sea'],['fun','bdberl','bdberl:get_lg_dir_info/0','  Returns the log directory info (name and megaby'],['fun','bdberl','bdberl:get_r/2','  Retrieve a value based on key.'],['fun','bdberl','bdberl:get_r/3','  Retrieve a value based on key.'],['fun','bdberl','bdberl:get_txn_timeout/0','  Returns the transaction timeout value.'],['fun','bdberl','bdberl:lock_stat/0','  Retrieve lock stats with no flags.'],['fun','bdberl','bdberl:lock_stat/1','  Retrieve lock stats.'],['fun','bdberl','bdberl:lock_stat_print/0','  Print lock stats with empty flags.'],['fun','bdberl','bdberl:lock_stat_print/1','  Print lock stats.'],['fun','bdberl','bdberl:log_stat/0','  Retrieve log stats with empty flags.'],['fun','bdberl','bdberl:log_stat/1','  Retrieve log stats.'],['fun','bdberl','bdberl:log_stat_print/0','  Print log stats with empty flags.'],['fun','bdberl','bdberl:log_stat_print/1','  Print log stats.'],['fun','bdberl','bdberl:memp_stat/0','  Retrieve memory pool stats with empty flags.'],['fun','bdberl','bdberl:memp_stat/1','  Retrieve memory pool stats.'],['fun','bdberl','bdberl:memp_stat_print/0','  Print memory pool stats with empty flags.'],['fun','bdberl','bdberl:memp_stat_print/1','  Print memory pool stats.'],['fun','bdberl','bdberl:mutex_stat/0','  Retrieve mutex stats with empty flags.'],['fun','bdberl','bdberl:mutex_stat/1','  Retrieve mutex stats.'],['fun','bdberl','bdberl:mutex_stat_print/0','  Print mutex stats with empty flags.'],['fun','bdberl','bdberl:mutex_stat_print/1','  Print mutex stats.'],['fun','bdberl','bdberl:open/2','  Open a database file, creating it if it does no'],['fun','bdberl','bdberl:open/3','  Open a database file.'],['fun','bdberl','bdberl:put/3','  Store a value in a database file.'],['fun','bdberl','bdberl:put/4','  Store a value in a database file.'],['fun','bdberl','bdberl:put_commit/3','  Store a value in a database file and commit the'],['fun','bdberl','bdberl:put_commit/4','  Store a value in a database file and commit the'],['fun','bdberl','bdberl:put_commit_r/3','  Store a value in a database file and commit the'],['fun','bdberl','bdberl:put_commit_r/4','  Store a value in a database file and commit the'],['fun','bdberl','bdberl:put_r/3','  Store a value in a database file raising an exc'],['fun','bdberl','bdberl:put_r/4','  Store a value in a database file raising an exc'],['fun','bdberl','bdberl:register_logger/0','  Registers the port owner pid to receive any BDB'],['fun','bdberl','bdberl:stat/1','  Retrieve database stats with empty flags.'],['fun','bdberl','bdberl:stat/2','  Retrieve database stats.'],['fun','bdberl','bdberl:stat_print/1','  Print database stats with empty flags.'],['fun','bdberl','bdberl:stat_print/2','  Print database stats.'],['fun','bdberl','bdberl:stop/0','  Stop bdberl - stops the bdberl_logger process s'],['fun','bdberl','bdberl:transaction/1','  Execute a fun inside of a transaction.'],['fun','bdberl','bdberl:transaction/2','  Execute a fun inside of a transaction.'],['fun','bdberl','bdberl:transaction/3','  Execute a fun inside of a transaction.'],['fun','bdberl','bdberl:transaction/4','  Execute a fun inside of a transaction.'],['fun','bdberl','bdberl:truncate/0','  Truncates all of the open databases.'],['fun','bdberl','bdberl:truncate/1','  Truncates a database.'],['fun','bdberl','bdberl:txn_abort/0','  Abort a transaction.'],['fun','bdberl','bdberl:txn_begin/0','  Begin a transaction with default options.'],['fun','bdberl','bdberl:txn_begin/1','  Begin a transaction.'],['fun','bdberl','bdberl:txn_commit/0','  Commit a transaction with default options.'],['fun','bdberl','bdberl:txn_commit/1','  Commit a transaction.'],['fun','bdberl','bdberl:txn_stat/0','  Retrieve transaction stats with empty flags.'],['fun','bdberl','bdberl:txn_stat/1','  Retrieve transaction stats.'],['fun','bdberl','bdberl:txn_stat_print/0','  Print transaction stats with empty flags.'],['fun','bdberl','bdberl:txn_stat_print/1','  Print transaction stats.'],['fun','bdberl','bdberl:update/3','  Updates the value of a key by executing a fun.'],['fun','bdberl','bdberl:update/4','  Updates the value of a key by executing a fun.'],['fun','bdberl','bdberl:update/5','  Updates the value of a key by executing a fun.'],['fun','bdberl','bdberl:update/6','  Updates the value of a key by executing a fun.'],['fun','bdberl','bdberl:update/7','  Updates the value of a key by executing a fun.'],['fun','bdberl','bdberl_logger:code_change/3',[]],['fun','bdberl','bdberl_logger:handle_call/3',[]],['fun','bdberl','bdberl_logger:handle_cast/2',[]],['fun','bdberl','bdberl_logger:handle_info/2',[]],['fun','bdberl','bdberl_logger:init/1',[]],['fun','bdberl','bdberl_logger:start_link/0',[]],['fun','bdberl','bdberl_logger:terminate/2',[]]];