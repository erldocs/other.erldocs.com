var index = [['app','erjik','erjik','[application]'],['mod','erjik','erjik','   Erjik main interface module.'],['mod','erjik','erjik_app','   Application callback module.'],['mod','erjik','erjik_cfg','   Configuration facility library.'],['mod','erjik','erjik_error_logger','   Replaces OTP error logger to not mess stdout w'],['mod','erjik','erjik_httpd','   Callback module for httpd behaviour.'],['mod','erjik','erjik_httpd_warden','   HTTP server process warden.'],['mod','erjik','erjik_lib','   Library module.'],['mod','erjik','erjik_log','   Logger process.'],['mod','erjik','erjik_re','Keeper of regexps.'],['mod','erjik','erjik_srv','   Main process.'],['mod','erjik','erjik_sup','   Main supervisor module.'],['fun','erjik','erjik:main/1',[]],['fun','erjik','erjik_cfg:classify/1','Classify URL by defined in configuration destinati'],['fun','erjik','erjik_cfg:get/1','Fetch configuration param value.'],['fun','erjik','erjik_cfg:hup/0','Sends reconfig signal to configuration facility '],['fun','erjik','erjik_cfg:mime_type/1','Resolves mime type for supplied filename by its su'],['fun','erjik','erjik_cfg:regexps/0','Return all regexps defined in configurations.'],['fun','erjik','erjik_cfg:start_link/0','Start configuration facility process as part of su'],['fun','erjik','erjik_error_logger:install/0','Installs itself as main error logger, removing all'],['fun','erjik','erjik_httpd:start/1','Start the server.'],['fun','erjik','erjik_httpd_warden:hup/0','Sends signal to HTTP server warden process to    '],['fun','erjik','erjik_httpd_warden:start_link/0','Start HTTP server warden process as part of superv'],['fun','erjik','erjik_lib:binary_to_ip/1','Converts binary to IP address.'],['fun','erjik','erjik_lib:challenge/1','Like lists:map/2, but:              spawns each '],['fun','erjik','erjik_lib:cidr_to_ip_range/1','Makes IP range from CIDR supplied.'],['fun','erjik','erjik_lib:flatten_ip_pool/1','Flattens IP pool.'],['fun','erjik','erjik_lib:integer_to_ip4/1','Converts integer to IPv4 address.'],['fun','erjik','erjik_lib:integer_to_ip6/1','Converts integer to IPv6 address.'],['fun','erjik','erjik_lib:ip_add/1','Adds number to IP address.'],['fun','erjik','erjik_lib:ip_family/1','Returns IP family type for supplied IP address.'],['fun','erjik','erjik_lib:ip_pool_to_list/1','Formats IP pool as text.'],['fun','erjik','erjik_lib:ip_range_to_list/1','Formats IP range as text.'],['fun','erjik','erjik_lib:ip_to_binary/1','Converts IP to binary.'],['fun','erjik','erjik_lib:ip_to_integer/1','Converts IP address to integer.'],['fun','erjik','erjik_lib:ip_to_list/1','Converts IP address in Erlang representation to te'],['fun','erjik','erjik_lib:is_in_ip_pool/1','Returns true if supplied pool contains IP specifie'],['fun','erjik','erjik_lib:is_in_ip_range/1','Return true if supplied IP range contains IP speci'],['fun','erjik','erjik_lib:is_ip/1','Return true if supplied term is valid IP address.'],['fun','erjik','erjik_lib:is_ip4/1','Return true if supplied term is valid IPv4 address'],['fun','erjik','erjik_lib:is_ip6/1','Return true if supplied term is valid IPv6 address'],['fun','erjik','erjik_lib:is_ip_pool/1','Returns true if supplied term is of type ip_pool()'],['fun','erjik','erjik_lib:is_ip_range/1','Return true if supplied term is valid IP range.'],['fun','erjik','erjik_lib:is_same_ip_type/1','Return true if both IP adresses specified is     '],['fun','erjik','erjik_lib:is_string/1','Return true if supplied term is plain ASCII text.'],['fun','erjik','erjik_lib:list_to_atom/1','"Convert" string to an atom only if the result ato'],['fun','erjik','erjik_lib:list_to_cidr/1','Converts CIDR notation to Erlang representation.'],['fun','erjik','erjik_lib:list_to_ip/1','Convert IP address from text to Erlang representat'],['fun','erjik','erjik_lib:list_to_ip4/1','Convert IPv4 address from text to Erlang represent'],['fun','erjik','erjik_lib:list_to_ip6/1','Convert IPv6 address from text to Erlang represent'],['fun','erjik','erjik_lib:list_to_ip_range/1','Parses string representation of IP range.'],['fun','erjik','erjik_lib:list_to_port_number/1','Converts string to port number.'],['fun','erjik','erjik_lib:parse_uri/1','Parses URI to components.'],['fun','erjik','erjik_lib:pmap/1','Like lists:map/2, but each fun will be applied in '],['fun','erjik','erjik_lib:preparse_config/1','Makes preparse of key-value configuration file.'],['fun','erjik','erjik_lib:preparse_config/1','Makes preparse of key-value configuration file.'],['fun','erjik','erjik_lib:read_mime_types/1','Reads and parses mime types file.'],['fun','erjik','erjik_lib:socket_to_list/1','Converts IP address and port number to text.'],['fun','erjik','erjik_lib:socket_to_list/1','Converts IP address and port number to text.'],['fun','erjik','erjik_lib:split_by_len/1','Splits apart List to chunks of Len length.'],['fun','erjik','erjik_lib:split_lines/1','Split the text to lines.'],['fun','erjik','erjik_lib:split_to_key_value/1','Split the line to a key and a value.'],['fun','erjik','erjik_lib:strip/1','Removes Characters from beginning and ending of St'],['fun','erjik','erjik_lib:timestamp/1','Formats time as text with specified time offset.'],['fun','erjik','erjik_lib:timestamp/1','Formats time as text.'],['fun','erjik','erjik_lib:uniq/1','Removes all duplicate elements from List except fi'],['fun','erjik','erjik_log:flush/0','Flush and close log file.'],['fun','erjik','erjik_log:hup/0','Sends signal to logger process to reopen log file '],['fun','erjik','erjik_log:log/1','Sends message to logger process.'],['fun','erjik','erjik_log:start_link/0','Start logger process as part of supervision tree.'],['fun','erjik','erjik_re:hup/0','Sends signal to process to reread its configuratio'],['fun','erjik','erjik_re:match/1','Finds ClassName matching for URL specified.'],['fun','erjik','erjik_re:start_link/0','Start process as part of supervision tree.'],['fun','erjik','erjik_srv:start_link/0','Start main process as part of supervision tree.'],['fun','erjik','erjik_sup:start_link/0','Start supervisor process as part of supervision tr']];