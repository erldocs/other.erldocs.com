var index = [['app','echessd','echessd','[application]'],['mod','echessd','echessd','   Echessd Server main module.'],['mod','echessd','echessd_app','   Erlang application behaviour module.'],['mod','echessd','echessd_cfg','   Echessd configuration keeper process.'],['mod','echessd','echessd_config_parser','   Echessd configuration file parser.'],['mod','echessd','echessd_db','   Interface to the Echessd persistent storage.'],['mod','echessd','echessd_game','   Game management tools.'],['mod','echessd','echessd_httpd','   inets-httpd interface.'],['mod','echessd','echessd_httpd_lib','   HTTPD related utilities.'],['mod','echessd','echessd_httpd_warden','   HTTPD warden process.'],['mod','echessd','echessd_lang','  Language info keeper process.'],['mod','echessd','echessd_lib','   Common utilities and library functions.'],['mod','echessd','echessd_log','   Logger process.'],['mod','echessd','echessd_mime_types','  MIME types reference keeper process.'],['mod','echessd','echessd_notify','   Gameplay notification tools.'],['mod','echessd','echessd_priv','  Proxy process for priv directory contents.'],['mod','echessd','echessd_query_parser','   HTTP query string parsing tools.'],['mod','echessd','echessd_rules_classic','   Classic chess rules implementation.'],['mod','echessd','echessd_styles','  CSS Styles keeper process.'],['mod','echessd','echessd_sup','   Application main supervisor.'],['fun','echessd','echessd:main/1','Program entry point.'],['fun','echessd','echessd_cfg:get/1','Return a value for the configuration key.'],['fun','echessd','echessd_cfg:hup/0','Tell the process to reread the configuration file.'],['fun','echessd','echessd_cfg:start_link/0','Start the process as part of the supervision tree.'],['fun','echessd','echessd_config_parser:default/1','Return a default value for the configuration key.'],['fun','echessd','echessd_config_parser:read/1','Read and parse the configuration file.'],['fun','echessd','echessd_db:addgame/1','Add a new game to the database.'],['fun','echessd','echessd_db:adduser/1','Add a new user.'],['fun','echessd','echessd_db:delgame/1','Remove the game from the database.'],['fun','echessd','echessd_db:deluser/1','Remove the user.'],['fun','echessd','echessd_db:dump/0','Make a dump of all users and games from the databa'],['fun','echessd','echessd_db:dump_games/0','Make a dump of all games from the database.'],['fun','echessd','echessd_db:dump_users/0','Make a dump of all user accounts from the database'],['fun','echessd','echessd_db:game_ack/1','Acknowledge the game.'],['fun','echessd','echessd_db:game_deny/1','Deny not confirmed game.'],['fun','echessd','echessd_db:game_give_up/1','Make the user to fail the game by giving up.'],['fun','echessd','echessd_db:game_request_draw/1','Make a draw request.'],['fun','echessd','echessd_db:gameply/1','Make the user turn.'],['fun','echessd','echessd_db:gamereset/1','Cancel all plies for the game.'],['fun','echessd','echessd_db:gamerewind/1','Cancel the last ply for the game.'],['fun','echessd','echessd_db:get_game_props/1','Fetch the game properties.'],['fun','echessd','echessd_db:get_user_props/1','Fetch the user properties.'],['fun','echessd','echessd_db:import_games/1','Insert the games directly to the database.'],['fun','echessd','echessd_db:import_users/1','Insert the user accounts directly to the database.'],['fun','echessd','echessd_db:init/0','Create mnesia database from scratch.'],['fun','echessd','echessd_db:list_users/0','Return a list of all registered user names.'],['fun','echessd','echessd_db:load/1','Initialize the database from the dump.'],['fun','echessd','echessd_db:set_game_props/1','Set the game properties.'],['fun','echessd','echessd_db:set_user_props/1','Set the user properties.'],['fun','echessd','echessd_db:wait/0','Wait until all database tables become available  '],['fun','echessd','echessd_game:ack/1','Acknowledge the game.'],['fun','echessd','echessd_game:add/1','Create new game and store it in the database.'],['fun','echessd','echessd_game:current_player/1',[]],['fun','echessd','echessd_game:deny/1','Deny not confirmed game.'],['fun','echessd','echessd_game:from_scratch/1','Create a new board and make all moves from the giv'],['fun','echessd','echessd_game:get_opponent/1','Fetch the opponent for the user.'],['fun','echessd','echessd_game:get_player_color/1','Fetch the color of the player.'],['fun','echessd','echessd_game:get_players/1',[]],['fun','echessd','echessd_game:get_watchers/1','Fetch watcher names for the game.'],['fun','echessd','echessd_game:getprops/1','Fetch the game properties from the database.'],['fun','echessd','echessd_game:give_up/1','Make user fail the game by giving up.'],['fun','echessd','echessd_game:hint/1','Return a list of all available moves.'],['fun','echessd','echessd_game:ply/1','Try to save user ply to the database.'],['fun','echessd','echessd_game:request_draw/1','Make request for a draw by agreement.'],['fun','echessd','echessd_game:transpose/1','Turn the board at 180 degrees.'],['fun','echessd','echessd_httpd:start_link/1','Start inets HTTP server.'],['fun','echessd','echessd_httpd_lib:add_extra_headers/1','While generating a HTML page sometimes we need to '],['fun','echessd','echessd_httpd_lib:get_extra_headers/0','Fetch all extra HTTP headers, saved in the process'],['fun','echessd','echessd_httpd_lib:reset_extra_headers/0','Remove all headers from the process dictionary.'],['fun','echessd','echessd_httpd_warden:hup/0','Sends reconfig signal to the warden process.'],['fun','echessd','echessd_httpd_warden:start_link/0','Starts warden process as part of a supervision tre'],['fun','echessd','echessd_lang:gettext/1','Fetch localized text for the given Text ID.'],['fun','echessd','echessd_lang:gettext/1','Fetch localized text for the given Text ID.'],['fun','echessd','echessd_lang:list/0','Return a list of available languages.'],['fun','echessd','echessd_lang:parse/1','Parse the Language ID to the internal representati'],['fun','echessd','echessd_lang:start_link/0','Start the process as part of the supervision tree.'],['fun','echessd','echessd_lib:administrative_offsets/0','Return a list of all adminitrative time offsets av'],['fun','echessd','echessd_lib:escape_html_entities/1','Convert all chars with special meaning in HTML to'],['fun','echessd','echessd_lib:ip2str/1','Convert IPv4 address to canonic text representatio'],['fun','echessd','echessd_lib:list_to_atom/1','Same as list_to_atom/2 but return the given defaul'],['fun','echessd','echessd_lib:list_to_atom/1','"Convert" string to an atom only if the result ato'],['fun','echessd','echessd_lib:list_to_time_offset/1','Parse the time offset string representation.'],['fun','echessd','echessd_lib:local_offset/0','Return the local time offset.'],['fun','echessd','echessd_lib:random_elem/1','Return random element of the given list.'],['fun','echessd','echessd_lib:split4pathNquery/1','Split the request URI to a Path and a Query string'],['fun','echessd','echessd_lib:string_to_terms/1','Parse the input string to a list of Erlang terms.'],['fun','echessd','echessd_lib:strip/1','Remove the Characters from the beginning and  fro'],['fun','echessd','echessd_lib:time_offset_to_list/1','Format the time offset as for ISO8601 timestamp.'],['fun','echessd','echessd_lib:timestamp/1','Format time as text with the specified time offset'],['fun','echessd','echessd_lib:timestamp/1','Format time as text.'],['fun','echessd','echessd_lib:unconsult/1','Write the Erlang terms to a file as text.'],['fun','echessd','echessd_log:debug/1','Log the message with DEBUG severity.'],['fun','echessd','echessd_log:err/1','Log the message with ERROR severity.'],['fun','echessd','echessd_log:hup/0','Tell the logger to reconfigure and reopen log file'],['fun','echessd','echessd_log:info/1','Log the message with INFO severity.'],['fun','echessd','echessd_log:start_link/0','Start the logger process as part of the supervisio'],['fun','echessd','echessd_mime_types:hup/0','Schedule configuration reload.'],['fun','echessd','echessd_mime_types:lookup/1','Search mime type for the file extension.'],['fun','echessd','echessd_mime_types:start_link/0','Start the process as part of the supervision tree.'],['fun','echessd','echessd_notify:game_ack/1','Dispatch notifications for a game acknowledge.'],['fun','echessd','echessd_notify:game_add/1','Dispatch notifications for a game creation.'],['fun','echessd','echessd_notify:game_end/1','Dispatch notifications for the game end.'],['fun','echessd','echessd_notify:game_move/1','Dispatch notifications for the move.'],['fun','echessd','echessd_priv:hup/0','Sends reconfig signal to the process.'],['fun','echessd','echessd_priv:read_file/1','Return file contents.'],['fun','echessd','echessd_priv:read_file_info/1','Return file info.'],['fun','echessd','echessd_priv:start_link/0','Starts the process as part of a supervision tree.'],['fun','echessd','echessd_query_parser:encode/1','Encode the query item value.'],['fun','echessd','echessd_query_parser:encode/1','Encode the query to URL query string.'],['fun','echessd','echessd_query_parser:parse/1','Parse the HTTP query (query string for GET, query '],['fun','echessd','echessd_rules_classic:from_scratch/1','Return chess board with chessmen in their current '],['fun','echessd','echessd_rules_classic:hint/1','Return a list of all available moves.'],['fun','echessd','echessd_rules_classic:move/1','Do the next move.'],['fun','echessd','echessd_rules_classic:transpose/1','Turn the board at 180 degrees.'],['fun','echessd','echessd_styles:get/1','Return style info.'],['fun','echessd','echessd_styles:list/0','Return a list of available styles.'],['fun','echessd','echessd_styles:parse/1','Parse the Style ID to the internal representation.'],['fun','echessd','echessd_styles:start_link/0','Start the process as part of the supervision tree.'],['fun','echessd','echessd_sup:start_link/0','Starts supervisor as part of a supervision tree.']];