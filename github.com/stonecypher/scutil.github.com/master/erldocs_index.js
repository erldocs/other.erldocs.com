var index = [['app','scutil.github.com','scutil.github.com','[application]'],['mod','scutil.github.com','sc','This is the 2011 revamp of the erlang portion of t'],['mod','scutil.github.com','sc_tests','scutil test set.'],['fun','scutil.github.com','sc:absolute_difference/1','Untested Stoch untested Takes the absolute value o'],['fun','scutil.github.com','sc:abstract_attributes/1','Untested Stoch untested'],['fun','scutil.github.com','sc:abstract_function/2','Untested Stoch untested'],['fun','scutil.github.com','sc:abstract_functions/1','Untested Stoch untested'],['fun','scutil.github.com','sc:ad_rate/5',[]],['fun','scutil.github.com','sc:additive_factorial/1','Untested Stoch untested'],['fun','scutil.github.com','sc:adjust_counter_by/1','Adds to a counters value; if the counter was not '],['fun','scutil.github.com','sc:alarm_set/3','Untested Stoch untested'],['fun','scutil.github.com','sc:alarm_terminate/1','Untested Stoch untested'],['fun','scutil.github.com','sc:all_neighbor_pairs/1','Untested Stoch untested'],['fun','scutil.github.com','sc:all_neighbor_pairs/2','Untested Stoch untested'],['fun','scutil.github.com','sc:amean_vector_normal/1','Untested Stoch untested Returns the arithmetic mea'],['fun','scutil.github.com','sc:arithmetic_mean/1','Tested Take the arithmetic mean (often called the '],['fun','scutil.github.com','sc:ascii_alphanum_list_subset/1',[]],['fun','scutil.github.com','sc:bandwidth_calc/1','Untested Stoch untested Calculates digital line ba'],['fun','scutil.github.com','sc:bandwidth_calc/1','Equivalent to bandwidth_calc(Data, all).'],['fun','scutil.github.com','sc:benchmark/1','Benchmark a lambda call.'],['fun','scutil.github.com','sc:benchmark/2',[]],['fun','scutil.github.com','sc:benchmark/3',[]],['fun','scutil.github.com','sc:bin_to_hex_list/1','Untested Stoch untested'],['fun','scutil.github.com','sc:bucket/2',[]],['fun','scutil.github.com','sc:by_distance/2','Untested Stoch untested'],['fun','scutil.github.com','sc:by_distance_raw/2','Untested Stoch untested'],['fun','scutil.github.com','sc:byte_to_hex/1','Untested Stoch untested Convert a byte() into a he'],['fun','scutil.github.com','sc:byte_to_hex_upper/1','Untested Stoch untested Convert a byte() into a he'],['fun','scutil.github.com','sc:caspers_jones_estimate/1','Untested Stoch untested See'],['fun','scutil.github.com','sc:ceil/1','Equivalent to ceiling(X).'],['fun','scutil.github.com','sc:ceiling/1','Tested Returns the ceiling (round towards positive'],['fun','scutil.github.com','sc:central_moment/1','BUGGY Untested Stoch untested Takes the Nth cetral'],['fun','scutil.github.com','sc:central_moments/1','Untested Stoch untested'],['fun','scutil.github.com','sc:central_moments/2','Untested Stoch untested'],['fun','scutil.github.com','sc:centroid/1','Untested Stoch untested Calculates the coordinate '],['fun','scutil.github.com','sc:circ_within_origin_circ/2','Untested Stoch untested'],['fun','scutil.github.com','sc:circles_contact/2','Untested Stoch untested'],['fun','scutil.github.com','sc:circles_overlap/2','Untested Stoch untested'],['fun','scutil.github.com','sc:columnate/1','Equivalent to columnate(List, 2, 3).'],['fun','scutil.github.com','sc:columnate/2',[]],['fun','scutil.github.com','sc:columnated_rows/2',[]],['fun','scutil.github.com','sc:columnated_text/2',[]],['fun','scutil.github.com','sc:columns/2',[]],['fun','scutil.github.com','sc:combinations/1','Stoch untested Provides a list of every unique com'],['fun','scutil.github.com','sc:count_bits/1','Incomplete Untested Stoch untested Counts the numb'],['fun','scutil.github.com','sc:count_of/1','Untested Stoch untested Counts the number of insta'],['fun','scutil.github.com','sc:counter_at/1','Checks a counters value; if the counter was not a'],['fun','scutil.github.com','sc:country_codes/0',[]],['fun','scutil.github.com','sc:cross_product/1','Incomplete Untested Stoch untested Calculates the '],['fun','scutil.github.com','sc:cube/1','Untested Stoch untested Cubes the input; convenien'],['fun','scutil.github.com','sc:dec_counter/1','Equivalent to adjust_counter_by(Name, -1).'],['fun','scutil.github.com','sc:dec_counter/2','Equivalent to adjust_counter_by(Name, -1 * By).'],['fun','scutil.github.com','sc:differences/1','Untested Stoch untested'],['fun','scutil.github.com','sc:distinct_neighbor_pairs/1','Untested Stoch untested'],['fun','scutil.github.com','sc:distinct_neighbor_pairs/2','Untested Stoch untested'],['fun','scutil.github.com','sc:dot_product/1','Incomplete Untested Stoch untested Calculates the '],['fun','scutil.github.com','sc:dstat/2','Untested Stoch untested Return descriptive statist'],['fun','scutil.github.com','sc:dstat_ex/2','Untested Stoch untested Return extended descriptiv'],['fun','scutil.github.com','sc:elements/2','Untested Stoch untested.'],['fun','scutil.github.com','sc:elements/3','Untested Stoch untested'],['fun','scutil.github.com','sc:elements/4','Untested Stoch untested'],['fun','scutil.github.com','sc:ensure_started/1','Equivalent to ensure_started(App, []).'],['fun','scutil.github.com','sc:ensure_started/2',[]],['fun','scutil.github.com','sc:entrypoints/1','Untested Stoch untested'],['fun','scutil.github.com','sc:entrypoints/2','Untested Stoch untested'],['fun','scutil.github.com','sc:euclidean_distance/1','Untested Stoch untested Returns the distance betwe'],['fun','scutil.github.com','sc:eval/1','DANGEROUS Untested Stoch untested modified from ht'],['fun','scutil.github.com','sc:eval/2','DANGEROUS Untested Stoch untested from http://www.'],['fun','scutil.github.com','sc:even_or_odd/1','Documentary convenience function (synonymous with '],['fun','scutil.github.com','sc:every_flag_representation/1','Untested Stoch untested Returns every interpretati'],['fun','scutil.github.com','sc:every_member_representation/1','Untested Stoch untested For a list of memberships,'],['fun','scutil.github.com','sc:every_member_representation/1','Untested Stoch untested'],['fun','scutil.github.com','sc:expand_labels/1','Stoch untested Expands a series of labels over lis'],['fun','scutil.github.com','sc:expected_value/1','Stoch untested Returns the expected value of infin'],['fun','scutil.github.com','sc:explode/1','Stoch untested Split any list by any other list, t'],['fun','scutil.github.com','sc:explode/3','Untested Stoch untested'],['fun','scutil.github.com','sc:extrema/1','Tested Returns the lowest and highest values in a '],['fun','scutil.github.com','sc:factorial/1','Untested Stoch untested'],['fun','scutil.github.com','sc:factorize/1','Untested Stoch untested Generates a list of the fa'],['fun','scutil.github.com','sc:farey_sequence/1','Render the Farey Sequence as a list of tuples.'],['fun','scutil.github.com','sc:file_to_binary_literal_as_string/1',[]],['fun','scutil.github.com','sc:first_difference/1','Untested Stoch untested'],['fun','scutil.github.com','sc:first_pos/2','Untested Stoch untested Finds the 1-offset index o'],['fun','scutil.github.com','sc:first_pos/3','Untested Stoch untested Finds the 1-offset index o'],['fun','scutil.github.com','sc:first_row/1',[]],['fun','scutil.github.com','sc:fk_readability/3','Untested Stoch untested Calculate the Flesch-Kinca'],['fun','scutil.github.com','sc:fk_readability/4','Untested Stoch untested Calculate the Flesch-Kinca'],['fun','scutil.github.com','sc:flag_sets/1','Stoch untested Returns every interpretation of the'],['fun','scutil.github.com','sc:floor/1','Tested Takes the floor (round towards negative inf'],['fun','scutil.github.com','sc:fmt/2',[]],['fun','scutil.github.com','sc:frand/0',[]],['fun','scutil.github.com','sc:frand_between/2',[]],['fun','scutil.github.com','sc:function_point_count/1','Untested Stoch untested'],['fun','scutil.github.com','sc:function_stats/1','Untested Stoch untested'],['fun','scutil.github.com','sc:gen_docs/0','(not testworthy) Generates library documentation u'],['fun','scutil.github.com','sc:gen_docs/1','(not testworthy) Generates library documentation f'],['fun','scutil.github.com','sc:gen_docs/1','(not testworthy) Generates library documentation u'],['fun','scutil.github.com','sc:general_hn_score/7','Calculates one Hacker News style ranking entry wit'],['fun','scutil.github.com','sc:geometric_mean/1','Tested Take the geometric mean of a list of number'],['fun','scutil.github.com','sc:get_linked_processes/0','Untested Stoch untested.'],['fun','scutil.github.com','sc:gmean_vector_normal/1','Untested Stoch untested Returns the geometric mean'],['fun','scutil.github.com','sc:grab_first/1',[]],['fun','scutil.github.com','sc:grid_scatter/1','Untested Stoch untested Return a Count-length list'],['fun','scutil.github.com','sc:halstead_complexity/4','Untested Stoch untested'],['fun','scutil.github.com','sc:halstead_complexity/5','Untested Stoch untested'],['fun','scutil.github.com','sc:harmonic_mean/1','Untested Stoch untested Take the harmonic mean of '],['fun','scutil.github.com','sc:has_bit/1','Incomplete Untested Stoch untested Checks whether '],['fun','scutil.github.com','sc:has_debug_info/1',[]],['fun','scutil.github.com','sc:head/1',[]],['fun','scutil.github.com','sc:hex_to_int/1','Untested Stoch untested Convert a hexstring() or h'],['fun','scutil.github.com','sc:histo_2d/1',[]],['fun','scutil.github.com','sc:histo_sample/2','Takes a historaph sample.'],['fun','scutil.github.com','sc:histograph/1','Untested Stoch untested Takes a histograph count o'],['fun','scutil.github.com','sc:hmac/3','Untested Stoch untested Shorthands for algorithms '],['fun','scutil.github.com','sc:hmac/4','Semi-Untested An implementation of RFC 2104, HMAC '],['fun','scutil.github.com','sc:hmac_md4/2','Obsolete - legacy support only - do not use in new'],['fun','scutil.github.com','sc:hmac_md5/2','Obsolete - legacy support only - do not use in new'],['fun','scutil.github.com','sc:hmac_sha1/2','Should be obsolete, but Erlangs standard library '],['fun','scutil.github.com','sc:hmean_vector_normal/1','Untested Stoch untested Returns the harmonic mean '],['fun','scutil.github.com','sc:hn_score/3','Calculates one Hacker News ranking entry, for orde'],['fun','scutil.github.com','sc:htget/1',[]],['fun','scutil.github.com','sc:implode/2','Stoch untested Append strings with separating stri'],['fun','scutil.github.com','sc:in_range/3',[]],['fun','scutil.github.com','sc:inc_counter/1','Equivalent to adjust_counter_by(Name, 1).'],['fun','scutil.github.com','sc:inc_counter/2','Equivalent to adjust_counter_by(Name, By).'],['fun','scutil.github.com','sc:index_of_first/1','Tested Returns the index of the first instance of '],['fun','scutil.github.com','sc:integer_to_radix_list/1','Untested Stoch untested Convert a number to a radi'],['fun','scutil.github.com','sc:io_list_to_hex_string/1','Untested Stoch untested Convert an io_list() to a '],['fun','scutil.github.com','sc:is_between/3',[]],['fun','scutil.github.com','sc:is_between/4',[]],['fun','scutil.github.com','sc:is_numeric_char/1',[]],['fun','scutil.github.com','sc:is_numeric_char/2',[]],['fun','scutil.github.com','sc:is_numeric_string/1','Untested Stoch untested'],['fun','scutil.github.com','sc:is_numeric_string/2','Untested Stoch untested'],['fun','scutil.github.com','sc:is_postfix/2','Untested Stoch untested'],['fun','scutil.github.com','sc:is_rand_seeded/0',[]],['fun','scutil.github.com','sc:is_repeated_list/1',[]],['fun','scutil.github.com','sc:is_sorted_list/1','Untested Stoch untested Returns true if the list i'],['fun','scutil.github.com','sc:is_unique_list/1','Untested Stoch untested Returns true if the list i'],['fun','scutil.github.com','sc:isolate_waveform/1','Untested Stoch untested Remove the baseline of a d'],['fun','scutil.github.com','sc:kendall_correlation/1','Untested Stoch untested Compute the Kendall Tau Ra'],['fun','scutil.github.com','sc:kendall_correlation/2','Equivalent to kendall(lists:zip(List1, List2)).'],['fun','scutil.github.com','sc:key_bucket/1',[]],['fun','scutil.github.com','sc:key_bucket/2',[]],['fun','scutil.github.com','sc:key_cluster/2','Untested Stoch untested'],['fun','scutil.github.com','sc:key_duplicate/1','Tested Iterates a list of {Count,Term}, producing '],['fun','scutil.github.com','sc:key_extrema/1','Untested Stoch untested.'],['fun','scutil.github.com','sc:key_extrema/2','Untested Stoch untested'],['fun','scutil.github.com','sc:key_group/2','Untested Stoch untested'],['fun','scutil.github.com','sc:key_group/3','Untested Stoch untested'],['fun','scutil.github.com','sc:key_max/1','Untested Stoch untested.'],['fun','scutil.github.com','sc:key_max/2','Untested Stoch untested'],['fun','scutil.github.com','sc:key_min/1','Untested Stoch untested.'],['fun','scutil.github.com','sc:key_min/2','Untested Stoch untested'],['fun','scutil.github.com','sc:kurtosis/1','BUGGY Untested Stoch untested'],['fun','scutil.github.com','sc:labelled_fk_readability/1','Untested Stoch untested Provides mandated human-re'],['fun','scutil.github.com','sc:last_while_pos/2','Untested Stoch untested Returns the last element o'],['fun','scutil.github.com','sc:last_while_pos/3','Untested Stoch untested'],['fun','scutil.github.com','sc:levenshtein/2','Untested Stoch untested, by fredrik svensson and a'],['fun','scutil.github.com','sc:list_cross_multiply/1',[]],['fun','scutil.github.com','sc:list_intersection/1','Stoch untested Efficiently computes the intersecti'],['fun','scutil.github.com','sc:list_intersection/2','Equivalent to list_intersection(List1, List2, unso'],['fun','scutil.github.com','sc:list_product/1','Stoch untested Takes the product of all numbers in'],['fun','scutil.github.com','sc:list_to_number/1','Untested Stoch untested Converts a list into a num'],['fun','scutil.github.com','sc:list_to_term/1','Untested Stoch untested Like binary_to_term, but n'],['fun','scutil.github.com','sc:log2/1',[]],['fun','scutil.github.com','sc:logb/2',[]],['fun','scutil.github.com','sc:map_scanline/2','Untested Stoch untested Parses a string on all thr'],['fun','scutil.github.com','sc:map_scanline/3','Untested Stoch untested Third argument passes argu'],['fun','scutil.github.com','sc:markhov_chain/2','Generates a markhov chain from a list of lists.'],['fun','scutil.github.com','sc:median/1','Untested Stoch untested Takes the median (central)'],['fun','scutil.github.com','sc:median_absolute_deviation/1','Untested Stoch untested Calculate the median absol'],['fun','scutil.github.com','sc:member_sets/1','Stoch untested For a list of memberships, return e'],['fun','scutil.github.com','sc:member_sets/1','Equivalent to member_sets(Memberships, no_absence)'],['fun','scutil.github.com','sc:merge_settings/2',[]],['fun','scutil.github.com','sc:mersenne_prime/1','Untested Stoch untested'],['fun','scutil.github.com','sc:mod/1','Untested Stoch untested Takes the modulus of an in'],['fun','scutil.github.com','sc:mode/1','Untested Stoch untested Takes the mode (most commo'],['fun','scutil.github.com','sc:module_abstract_representation/1','Untested Stoch untested'],['fun','scutil.github.com','sc:module_abstract_representation/2','Untested Stoch untested'],['fun','scutil.github.com','sc:module_atoms/1','Untested Stoch untested'],['fun','scutil.github.com','sc:module_attribute/1','BUGGY Untested Stoch untested Look up an Erlang mo'],['fun','scutil.github.com','sc:module_attribute/1','Untested Stoch untested Look up all attributes of '],['fun','scutil.github.com','sc:module_feature/2','Untested Stoch untested'],['fun','scutil.github.com','sc:module_is_loaded/1','Untested Stoch untested'],['fun','scutil.github.com','sc:moment/1','Untested Stoch untested Takes the Nth moment of a '],['fun','scutil.github.com','sc:moments/1','Untested Stoch untested'],['fun','scutil.github.com','sc:moments/2','Untested Stoch untested'],['fun','scutil.github.com','sc:months_as_short_atoms/0',[]],['fun','scutil.github.com','sc:ms_wang/0',[]],['fun','scutil.github.com','sc:multi_deck/1','Incomplete Untested Stoch untested Makes a number '],['fun','scutil.github.com','sc:multi_do/1','Untested Stoch untested Take an iteration count, a'],['fun','scutil.github.com','sc:multi_do/3','Equivalent to multi_do(C, M, F, []).'],['fun','scutil.github.com','sc:naive_bayes_likelihood/1','Stoch untested Calculates the contributing differe'],['fun','scutil.github.com','sc:naive_bayes_likelihood/1','Equivalent to naive_bayes_likelihood(FeatureEviden'],['fun','scutil.github.com','sc:nearest_to/2','Untested Stoch untested'],['fun','scutil.github.com','sc:neighbors/2',[]],['fun','scutil.github.com','sc:ngrams/1',[]],['fun','scutil.github.com','sc:ngrams/2',[]],['fun','scutil.github.com','sc:notebook_contains/2',[]],['fun','scutil.github.com','sc:notebook_contents/1',[]],['fun','scutil.github.com','sc:notebook_create/1',[]],['fun','scutil.github.com','sc:notebook_destroy/1',[]],['fun','scutil.github.com','sc:notebook_read/2',[]],['fun','scutil.github.com','sc:notebook_remove/2','Removes an item from a notebook.'],['fun','scutil.github.com','sc:notebook_validate/1',[]],['fun','scutil.github.com','sc:notebook_write/3',[]],['fun','scutil.github.com','sc:now_str_utc24/0',[]],['fun','scutil.github.com','sc:nth_difference/2','Untested Stoch untested'],['fun','scutil.github.com','sc:null_postpad_bin_to/2',[]],['fun','scutil.github.com','sc:nybble_to_hex/1','Convert a nybble() to a hexchar().'],['fun','scutil.github.com','sc:nybble_to_hex_upper/1','Convert a nybble() to a hexchar() in uppercase.'],['fun','scutil.github.com','sc:out_of_range/3',[]],['fun','scutil.github.com','sc:outcomes/2',[]],['fun','scutil.github.com','sc:paper_3d_basic_depth/4','Untested Stoch untested'],['fun','scutil.github.com','sc:paper_3d_render/1','Untested Stoch untested'],['fun','scutil.github.com','sc:paper_3d_render/2','Untested Stoch untested'],['fun','scutil.github.com','sc:paper_3d_render/3','Untested Stoch untested'],['fun','scutil.github.com','sc:paper_3d_render/4','Untested Stoch untested'],['fun','scutil.github.com','sc:parallelize/2',[]],['fun','scutil.github.com','sc:parity/1','Documentary convenience function (synonymous with '],['fun','scutil.github.com','sc:partition_by_residue/2','Untested Stoch untested'],['fun','scutil.github.com','sc:pearson_correlation/1','Untested Stoch untested Compute the Pearson Correl'],['fun','scutil.github.com','sc:pearson_correlation/2','Equivalent to pearson(lists:zip(List1, List2)).'],['fun','scutil.github.com','sc:permute/1','Stoch untested Calculate either the full or the de'],['fun','scutil.github.com','sc:permute/1','Equivalent to permute(List, length(List)).'],['fun','scutil.github.com','sc:power_set/1','Untested Stoch untested'],['fun','scutil.github.com','sc:pred_rate/1','The predicate rate of a list - counts a list of bo'],['fun','scutil.github.com','sc:probability_all/1','Untested Stoch untested Calculates the likelihood '],['fun','scutil.github.com','sc:probability_any/1','Incomplete Todo Comeback Untested Stoch untested'],['fun','scutil.github.com','sc:qsp_average/1','Incomplete Untested Stoch untested Takes the quadr'],['fun','scutil.github.com','sc:rand/1','Untested Stoch untested Returns a pseudorandom int'],['fun','scutil.github.com','sc:rand_between/2',[]],['fun','scutil.github.com','sc:random_from/1','Untested Stoch untested Take N non-repeating rando'],['fun','scutil.github.com','sc:random_from/1','Equivalent to from(1, List, no_remainder).'],['fun','scutil.github.com','sc:random_from/2','Equivalent to from(N, List, no_remainder).'],['fun','scutil.github.com','sc:random_from_weighted/1','Untested Stoch untested Take a random single item '],['fun','scutil.github.com','sc:random_unicode_char/0',[]],['fun','scutil.github.com','sc:range_scale/1','Stoch untested Get the scale of a same-sign numeri'],['fun','scutil.github.com','sc:receive_one/0','Untested Stoch untested Pop the front of the messa'],['fun','scutil.github.com','sc:record_member/1','Untested Stoch untested TODO: Needs Example Checks'],['fun','scutil.github.com','sc:replace/3',[]],['fun','scutil.github.com','sc:reset_counter/1','Untested Stoch untested Resets a counters value t'],['fun','scutil.github.com','sc:reverse_filter/2','Untested Stoch untested'],['fun','scutil.github.com','sc:reverse_map/2','Untested Stoch untested'],['fun','scutil.github.com','sc:reverse_map_filter/3','Untested Stoch untested'],['fun','scutil.github.com','sc:root_mean_square/1','Untested Stoch untested Calculates the root mean s'],['fun','scutil.github.com','sc:root_sum_square/1','Untested Stoch untested Calculate the magnitude (a'],['fun','scutil.github.com','sc:rotate_list/1','Tested Rotates the front Distance elements of a li'],['fun','scutil.github.com','sc:rotate_to_first/1','Stoch untested Rotates the list to the first insta'],['fun','scutil.github.com','sc:rotate_to_last/1','Stoch untested Rotates the list so that the first '],['fun','scutil.github.com','sc:sanitize_filename/1','Untested Stoch untested Sanitize an arbitrary stri'],['fun','scutil.github.com','sc:sanitize_tokens/1','Stoch untested Remove unacceptable elements from a'],['fun','scutil.github.com','sc:schwartz/1','Untested Stoch untested Computes a Schwartzian Tra'],['fun','scutil.github.com','sc:second_difference/1','Untested Stoch untested'],['fun','scutil.github.com','sc:segment_size/1',[]],['fun','scutil.github.com','sc:send_receive/1','Untested Stoch untested (Non-Blocking) First send '],['fun','scutil.github.com','sc:send_receive/1','Untested Stoch untested (Blocking) First send a me'],['fun','scutil.github.com','sc:send_receive_masked/1','Untested Stoch untested (Non-Blocking) First send '],['fun','scutil.github.com','sc:send_receive_masked/1','Untested Stoch untested (Blocking) First send a me'],['fun','scutil.github.com','sc:set_counter_value/1','Untested Stoch untested Sets a counters value to '],['fun','scutil.github.com','sc:shared_keys/1','Stoch untested Equivalent to shared_keys/2, but sk'],['fun','scutil.github.com','sc:shared_keys/1','Stoch untested Equivalent to shared_keys/1, but sk'],['fun','scutil.github.com','sc:shared_keys/1','Stoch untested Create sorted list X of 3-ary tuple'],['fun','scutil.github.com','sc:show/1','Untested Stoch untested'],['fun','scutil.github.com','sc:shuffle/1','Untested Stoch untested Return a list with the ori'],['fun','scutil.github.com','sc:simple_ranking/1','Untested Stoch untested Returns a ranked ordering '],['fun','scutil.github.com','sc:skewness/1','Untested Stoch untested'],['fun','scutil.github.com','sc:solarized/0','Tested Returns the Solarized palette.'],['fun','scutil.github.com','sc:solarized/1','Tested Returns members of the Solarized palette.'],['fun','scutil.github.com','sc:spearman_correlation/1','Untested Stoch untested Compute the Spearmans Ran'],['fun','scutil.github.com','sc:spearman_correlation/2','Equivalent to spearman_correlation(lists:zip(List1'],['fun','scutil.github.com','sc:split_at/2','Untested Stoch untested'],['fun','scutil.github.com','sc:square/1','Untested Stoch untested Squares the input; conveni'],['fun','scutil.github.com','sc:srand/0','Untested Stoch untested (Called automatically) Ins'],['fun','scutil.github.com','sc:srand/1','Untested Stoch untested (Called automatically) Ins'],['fun','scutil.github.com','sc:standard_card_backs/0','Incomplete Untested Stoch untested Returns the lis'],['fun','scutil.github.com','sc:standard_card_backs/1','Incomplete Untested Stoch untested Returns the fro'],['fun','scutil.github.com','sc:start_register_if_not_running/1','Untested Stoch untested Check whether a process is'],['fun','scutil.github.com','sc:start_register_if_not_running/2','Untested Stoch untested.'],['fun','scutil.github.com','sc:start_register_if_not_running/3','Untested Stoch untested.'],['fun','scutil.github.com','sc:start_register_if_not_running/4','Untested Stoch untested.'],['fun','scutil.github.com','sc:starts_with/2','Untested Stoch untested'],['fun','scutil.github.com','sc:stretch_hash/1','Untested Stoch untested Stretches a hash with a li'],['fun','scutil.github.com','sc:svn_revision/1','Untested Stoch untested Scans a module for an attr'],['fun','scutil.github.com','sc:terminate_loop/0','Untested Stoch untested'],['fun','scutil.github.com','sc:test/0','(not testworthy) Runs the test suite in terse form'],['fun','scutil.github.com','sc:test/1','(not testworthy) Runs the test suite in verbose fo'],['fun','scutil.github.com','sc:third_difference/1','Untested Stoch untested'],['fun','scutil.github.com','sc:tied_ordered_ranking/1','Untested Stoch untested Returns a tied ranked orde'],['fun','scutil.github.com','sc:tied_ranking/1','Untested Stoch untested Returns a ranked ordering '],['fun','scutil.github.com','sc:time_diff/1','Returns the difference, in seconds as a float, bet'],['fun','scutil.github.com','sc:to_lines/1','Stoch untested Cuts a string according to any of t'],['fun','scutil.github.com','sc:to_list/1','Untested Stoch untested'],['fun','scutil.github.com','sc:triangle_index/1','Untested Stoch untested'],['fun','scutil.github.com','sc:triangle_index/2','Untested Stoch untested'],['fun','scutil.github.com','sc:trim/1','Trims whitespace from both sides of a string; equi'],['fun','scutil.github.com','sc:trim_cursor/1','Trims cursor control (cr/nl/tab/vtab) from both si'],['fun','scutil.github.com','sc:truth_density/1','Equivalent to pred_rate(L).'],['fun','scutil.github.com','sc:tuple_duplicate/1','Tested Creates a tuple of fixed width, repeating t'],['fun','scutil.github.com','sc:tuple_member/1','Untested Stoch untested Checks whether E is a memb'],['fun','scutil.github.com','sc:tuple_sort/1','Untested Stoch untested'],['fun','scutil.github.com','sc:tuple_sum/1','Untested Stoch untested Returns the sum of the num'],['fun','scutil.github.com','sc:type_of/1','Untested Stoch untested Fetch the type of the argu'],['fun','scutil.github.com','sc:un_ok/1','Utility function to strip {ok, _} tuple.'],['fun','scutil.github.com','sc:union/1','Untested Stoch untested'],['fun','scutil.github.com','sc:union/2','Untested Stoch untested'],['fun','scutil.github.com','sc:union/3','Untested Stoch untested'],['fun','scutil.github.com','sc:union/4','Untested Stoch untested'],['fun','scutil.github.com','sc:unique_receive_respond/1',[]],['fun','scutil.github.com','sc:unique_receive_respond/2',[]],['fun','scutil.github.com','sc:unique_send_receive/1',[]],['fun','scutil.github.com','sc:unit_scale/1',[]],['fun','scutil.github.com','sc:unixday/0',[]],['fun','scutil.github.com','sc:unixday/1',[]],['fun','scutil.github.com','sc:unixtime/0',[]],['fun','scutil.github.com','sc:unixtime_daybase/0',[]],['fun','scutil.github.com','sc:unixtime_daybase/1',[]],['fun','scutil.github.com','sc:vector_magnitude/1','Equivalent to root_sum_square(VX).'],['fun','scutil.github.com','sc:vector_normalize/1','Incomplete Untested Stoch untested Returns the mag'],['fun','scutil.github.com','sc:walk_unique_pairings/2','Untested Stoch untested.'],['fun','scutil.github.com','sc:wang_carpet/1',[]],['fun','scutil.github.com','sc:wang_carpet/3',[]],['fun','scutil.github.com','sc:wang_row/1',[]],['fun','scutil.github.com','sc:wang_row/2',[]],['fun','scutil.github.com','sc:wang_such_that/2',[]],['fun','scutil.github.com','sc:wang_such_that/3',[]],['fun','scutil.github.com','sc:weighted_arithmetic_mean/1','Untested Stoch untested Take the weighted arithmet'],['fun','scutil.github.com','sc:ww/2',[]],['fun','scutil.github.com','sc:zip_n/1','Stoch untested Computes a zip on any sized group o'],['fun','scutil.github.com','sc:zip_n/1','Equivalent to zip_n(Ls, to_tuple).'],['fun','scutil.github.com','sc:zipf_estimate_list/1','Untested Stoch untested Estimates the zipf baselin'],['fun','scutil.github.com','sc:zipf_nearness/1','Untested Stoch untested todo.'],['fun','scutil.github.com','sc:zipf_position_estimate/1','Untested Stoch untested Estimates the zipf baselin']];