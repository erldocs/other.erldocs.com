var index = [['app','medici','medici','[application]'],['mod','medici','medici_app',[]],['mod','medici','medici_conn','   The medici_conn module handles a single princi'],['mod','medici','medici_conn_sup',[]],['mod','medici','medici_controller',[]],['mod','medici','medici_native_conn','   The medici_native conn module handles a single'],['mod','medici','medici_native_controller',[]],['mod','medici','medici_port_srv',[]],['mod','medici','medici_port_sup',[]],['mod','medici','medici_sup',[]],['mod','medici','principe_table','   An extension to the principe module that handl'],['fun','medici','medici_app:start/2',[]],['fun','medici','medici_app:stop/1',[]],['fun','medici','medici_conn:start_link/1',[]],['fun','medici','medici_conn_sup:init/1',[]],['fun','medici','medici_conn_sup:start_link/0',[]],['fun','medici','medici_conn_sup:start_link/1',[]],['fun','medici','medici_controller:code_change/3',[]],['fun','medici','medici_controller:handle_call/3',[]],['fun','medici','medici_controller:handle_cast/2',[]],['fun','medici','medici_controller:handle_info/2',[]],['fun','medici','medici_controller:init/1',[]],['fun','medici','medici_controller:start_link/0',[]],['fun','medici','medici_controller:start_link/1',[]],['fun','medici','medici_controller:terminate/2',[]],['fun','medici','medici_native_conn:start_link/1',[]],['fun','medici','medici_native_controller:code_change/3',[]],['fun','medici','medici_native_controller:handle_call/3',[]],['fun','medici','medici_native_controller:handle_cast/2',[]],['fun','medici','medici_native_controller:handle_info/2',[]],['fun','medici','medici_native_controller:init/1',[]],['fun','medici','medici_native_controller:start_link/0',[]],['fun','medici','medici_native_controller:start_link/1',[]],['fun','medici','medici_native_controller:terminate/2',[]],['fun','medici','medici_port_srv:code_change/3',[]],['fun','medici','medici_port_srv:handle_call/3',[]],['fun','medici','medici_port_srv:handle_cast/2',[]],['fun','medici','medici_port_srv:handle_info/2',[]],['fun','medici','medici_port_srv:init/1',[]],['fun','medici','medici_port_srv:start_link/1',[]],['fun','medici','medici_port_srv:terminate/2',[]],['fun','medici','medici_port_sup:init/1',[]],['fun','medici','medici_port_sup:start_link/0',[]],['fun','medici','medici_port_sup:start_link/1',[]],['fun','medici','medici_sup:init/1',[]],['fun','medici','medici_sup:start_link/0',[]],['fun','medici','medici_sup:start_link/1',[]],['fun','medici','principe_table:adddouble/1','The raw adddouble function for those who need a bi'],['fun','medici','principe_table:adddouble/1','Add an float value to the _num column of a given a'],['fun','medici','principe_table:addint/1','Add an integer value to the _num column of a given'],['fun','medici','principe_table:connect/0','  Establish a connection to the tyrant service.'],['fun','medici','principe_table:connect/1','  Establish a connection to the tyrant service us'],['fun','medici','principe_table:copy/1','Make a copy of the database file of the remote dat'],['fun','medici','principe_table:fwmkeys/1','Return a number of keys that match a given prefix.'],['fun','medici','principe_table:genuid/1','Generate a unique id within the set of primary key'],['fun','medici','principe_table:get/1','Get the value for a given key.'],['fun','medici','principe_table:iterinit/1','Start iteration protocol.'],['fun','medici','principe_table:iternext/1','Get the next key/value pair in the iteration proto'],['fun','medici','principe_table:mget/1','  Get the values for a list of keys.'],['fun','medici','principe_table:optimize/1','Change the remote database tuning parameters.'],['fun','medici','principe_table:out/1','  Remove a key from the remote database.'],['fun','medici','principe_table:put/1','  Call the Tyrant server to store a new set of co'],['fun','medici','principe_table:putcat/1','  Concatenate a set of column values to the exist'],['fun','medici','principe_table:putkeep/1','  Call the Tyrant server to add a set of column v'],['fun','medici','principe_table:query_add_condition/1','  Add a condition for a query.'],['fun','medici','principe_table:query_limit/1','Set a limit on the number of returned values for Q'],['fun','medici','principe_table:query_limit/1','Set a limit on the number of returned values for Q'],['fun','medici','principe_table:query_order/1','Set the order for returned values in Query.'],['fun','medici','principe_table:restore/1','Restore the database to a particular point in time'],['fun','medici','principe_table:rnum/1',[]],['fun','medici','principe_table:search/2','Run a prepared query against the table and return '],['fun','medici','principe_table:searchcount/2','Run a prepared query against the table and get the'],['fun','medici','principe_table:searchout/2','Run a prepared query against the table and remove '],['fun','medici','principe_table:setindex/1','  Tell the tyrant server to build an index for a '],['fun','medici','principe_table:setmst/1','Set the replication master of a remote database se'],['fun','medici','principe_table:size/1','Get the size in bytes of the remote database.'],['fun','medici','principe_table:stat/1','Get the status string of a remote database.'],['fun','medici','principe_table:sync/1','Call sync() on the remote database.'],['fun','medici','principe_table:update/1','  Update a table entry by merging Cols into exist'],['fun','medici','principe_table:vanish/1','Remove all records from the remote database.'],['fun','medici','principe_table:vsiz/1','  Get the size of the value for a given key.']];