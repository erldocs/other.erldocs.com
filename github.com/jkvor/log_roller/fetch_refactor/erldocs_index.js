var index = [['app','log_roller','log_roller','[application]'],['mod','log_roller','erltl','ErlTL is a simple Erlang template language.'],['mod','log_roller','log_roller',[]],['mod','log_roller','log_roller_config',[]],['mod','log_roller','log_roller_filter',[]],['mod','log_roller','log_roller_h','An event handler that broadcasts log messages to s'],['mod','log_roller','log_roller_raw',[]],['mod','log_roller','log_roller_server',[]],['mod','log_roller','log_roller_tail',[]],['mod','log_roller','log_roller_test',[]],['mod','log_roller','log_roller_utils','Browse log files collected by a log_roller subscri'],['mod','log_roller','log_roller_web_server',[]],['mod','log_roller','lrb','Browse log files collected by a log_roller subscri'],['fun','log_roller','erltl:compile/1','Compile the ErlTL file with user-defined options.'],['fun','log_roller','erltl:compile/1','Compile the ErlTL file with the default options: '],['fun','log_roller','erltl:forms_for_data/1','Parse the raw text of an ErlTL template and return'],['fun','log_roller','erltl:forms_for_data/2','Equivalent to forms_form_data(Data, ModuleName, []'],['fun','log_roller','erltl:forms_for_file/1','Parse the ErlTL file and return its representation'],['fun','log_roller','erltl:forms_for_file/1','Equivalent to forms_for_file(Filename, []).'],['fun','log_roller','log_roller:get_registered_subscribers/0',[]],['fun','log_roller','log_roller:queue_length/0',[]],['fun','log_roller','log_roller:register_subscriber/1','ping Node to determine if it is a subscriber and r'],['fun','log_roller','log_roller:start/0',[]],['fun','log_roller','log_roller:start/2','start the application.'],['fun','log_roller','log_roller:stop/1','stop the application.'],['fun','log_roller','log_roller_config:get_disk_loggers/0',[]],['fun','log_roller','log_roller_filter:filter/1',[]],['fun','log_roller','log_roller_server:build_rel/0',[]],['fun','log_roller','log_roller_server:compile_templates/0',[]],['fun','log_roller','log_roller_server:determine_subscriptions/0',[]],['fun','log_roller','log_roller_server:reload/0',[]],['fun','log_roller','log_roller_server:start/0',[]],['fun','log_roller','log_roller_server:start/2','start the application.'],['fun','log_roller','log_roller_server:stop/1','stop the application.'],['fun','log_roller','log_roller_server:total_writes/0',[]],['fun','log_roller','log_roller_tail:add_response/3',[]],['fun','log_roller','log_roller_tail:get_responses/0',[]],['fun','log_roller','log_roller_tail:start_link/0',[]],['fun','log_roller','lrb:disk_logger_names/0',[]],['fun','log_roller','lrb:disk_loggers/0',[]],['fun','log_roller','lrb:fetch/2','fetch a list of log entries for a specific disk_lo'],['fun','log_roller','lrb:server_loop/1',[]],['fun','log_roller','lrb:start/2',[]],['fun','log_roller','lrb:start_link/1',[]]];