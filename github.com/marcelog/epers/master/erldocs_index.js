var index = [['app','epers','epers','[application]'],['mod','epers','epers','Main module for epers.'],['mod','epers','epers_app','Eper application.'],['mod','epers','epers_doc','Implement this behavior on your entities so the re'],['mod','epers','epers_event','This module is in charge of the event management.'],['mod','epers','epers_repo','Main interface for repositories.'],['mod','epers','epers_repo_mongo','MongoDB repository implementation.'],['mod','epers','epers_repo_mysql','MySql repository implementation.'],['mod','epers','epers_repo_redis','Redis repository implementation.'],['mod','epers','epers_repo_sqlite3','SQLite3 repository implementation.'],['mod','epers','epers_repo_sup','Repository supervisor.'],['mod','epers','epers_sup','Main supervisor.'],['fun','epers','epers:call/1','Calls the given custom function of a repo with the'],['fun','epers','epers:call/1','Calls the given custom function of a repo.'],['fun','epers','epers:create_schema/0','Creates the schema for all known (configured) docs'],['fun','epers','epers:create_schema/1','Creates the schema for the docs of type DocName us'],['fun','epers','epers:create_schema/1','Creates the schema for the docs of type DocName.'],['fun','epers','epers:delete/1','Deletes the doc identified by Id.'],['fun','epers','epers:delete_all/1','Deletes all docs of type DocName.'],['fun','epers','epers:field_attrs/1','Returns all attributes of the given field.'],['fun','epers','epers:field_is/1','True if the field has a given attribute.'],['fun','epers','epers:field_name/1','Returns the name of the given field.'],['fun','epers','epers:field_type/1','Returns the type of the given field.'],['fun','epers','epers:find/1','Returns the doc identified by Id.'],['fun','epers','epers:find_by/1','Returns *all* docs that match Conditions.'],['fun','epers','epers:find_by/1','Returns Limit number of docs that match Conditions'],['fun','epers','epers:find_one/1','Returns 1 doc that matches the given Conditions.'],['fun','epers','epers:get_field/1','Returns the value of a field from an epers_doc.'],['fun','epers','epers:get_id_field/1','Returns field marked as ID for the given schema or'],['fun','epers','epers:get_repo/1','Returns the process name that handles persistence '],['fun','epers','epers:get_schema/1','Returns the schema for a given DocName.'],['fun','epers','epers:new_doc/1','Returns a new doc.'],['fun','epers','epers:new_doc/1','Returns a new doc without any fields.'],['fun','epers','epers:new_field/1','Returns a new field of the given type without attr'],['fun','epers','epers:new_field/1','Returns a new field of the given type and attribut'],['fun','epers','epers:new_schema/1','Returns a new schema.'],['fun','epers','epers:persist/1','Creates or updates the given Doc.'],['fun','epers','epers:set_field/1','Sets a value in an epers_doc.'],['fun','epers','epers_app:start/2',[]],['fun','epers','epers_app:stop/1',[]],['fun','epers','epers_doc:behaviour_info/1','Returns all behavior callbacks.'],['fun','epers','epers_event:dispatch/1','Dispatchs an event through gen_event:notify/2.'],['fun','epers','epers_event:dispatch/1','Dispatchs an event through gen_event:notify/2.'],['fun','epers','epers_repo:behaviour_info/1','Returns all behavior callbacks.'],['fun','epers','epers_repo:call/1','Calls a custom function in the given repository na'],['fun','epers','epers_repo:code_change/3',[]],['fun','epers','epers_repo:create_schema/1','Creates the schema of the given docs in the given '],['fun','epers','epers_repo:delete/1','Deletes the doc identified by id in the given repo'],['fun','epers','epers_repo:delete_all/1','Deletes all docs in the given repository name.'],['fun','epers','epers_repo:find_by/1','Finds documents that match the given conditions in'],['fun','epers','epers_repo:find_by/1','Finds documents that match the given conditions in'],['fun','epers','epers_repo:handle_call/1','handles calls.'],['fun','epers','epers_repo:handle_cast/2',[]],['fun','epers','epers_repo:handle_info/2',[]],['fun','epers','epers_repo:init/1','Called by start_link.'],['fun','epers','epers_repo:persist/1','Persist the given doc with the given repository na'],['fun','epers','epers_repo:start_link/1','Starts and links a new process for the given repo '],['fun','epers','epers_repo:terminate/2',[]],['fun','epers','epers_repo_mongo:create_schema/2',[]],['fun','epers','epers_repo_mongo:delete/3',[]],['fun','epers','epers_repo_mongo:delete_all/2',[]],['fun','epers','epers_repo_mongo:find_by/3',[]],['fun','epers','epers_repo_mongo:find_by/5',[]],['fun','epers','epers_repo_mongo:init/1',[]],['fun','epers','epers_repo_mongo:persist/2',[]],['fun','epers','epers_repo_mysql:create_schema/2',[]],['fun','epers','epers_repo_mysql:delete/3',[]],['fun','epers','epers_repo_mysql:delete_all/2',[]],['fun','epers','epers_repo_mysql:execute/2',[]],['fun','epers','epers_repo_mysql:execute/3',[]],['fun','epers','epers_repo_mysql:find_by/3',[]],['fun','epers','epers_repo_mysql:find_by/5',[]],['fun','epers','epers_repo_mysql:init/1',[]],['fun','epers','epers_repo_mysql:persist/2',[]],['fun','epers','epers_repo_redis:create_schema/2',[]],['fun','epers','epers_repo_redis:delete/3',[]],['fun','epers','epers_repo_redis:delete_all/2',[]],['fun','epers','epers_repo_redis:execute/2',[]],['fun','epers','epers_repo_redis:execute/3',[]],['fun','epers','epers_repo_redis:find_by/3',[]],['fun','epers','epers_repo_redis:find_by/5',[]],['fun','epers','epers_repo_redis:init/1',[]],['fun','epers','epers_repo_redis:persist/2',[]],['fun','epers','epers_repo_sqlite3:create_schema/2',[]],['fun','epers','epers_repo_sqlite3:delete/3',[]],['fun','epers','epers_repo_sqlite3:delete_all/2',[]],['fun','epers','epers_repo_sqlite3:execute/2',[]],['fun','epers','epers_repo_sqlite3:execute/3',[]],['fun','epers','epers_repo_sqlite3:find_by/3',[]],['fun','epers','epers_repo_sqlite3:find_by/5',[]],['fun','epers','epers_repo_sqlite3:init/1',[]],['fun','epers','epers_repo_sqlite3:persist/2',[]],['fun','epers','epers_repo_sup:init/1',[]],['fun','epers','epers_repo_sup:start_link/0',[]],['fun','epers','epers_sup:init/1',[]],['fun','epers','epers_sup:start_link/0',[]]];