var index = [['app','ehttp','ehttp','[application]'],['mod','ehttp','ehttp_bin','Miscelaneous functions to handle binaries.'],['mod','ehttp','ehttp_cookie','Cookie handling functions.'],['mod','ehttp','ehttp_header','HTTP headers manipulation functions.'],['mod','ehttp','ehttp_http','HTTP miscelaneous functions.'],['mod','ehttp','ehttp_request','Code needed to allocate, manipulate, marshall and '],['mod','ehttp','ehttp_response',[]],['mod','ehttp','ehttp_variable','This generically represents a variable and a set o'],['fun','ehttp','ehttp_bin:decode/1','Decodes an encoded character in the form %NN where'],['fun','ehttp','ehttp_bin:encode/1','Encodes a string so it can be sent by wire.'],['fun','ehttp','ehttp_bin:lc/1','Lowercases all characters between A-Z found in the'],['fun','ehttp','ehttp_bin:parse_key_equal_value/1','Given a binary in the form &lt;&lt;"key=value"&gt;'],['fun','ehttp','ehttp_bin:parse_key_values_by/1','Given a binary with key/value variables, will retu'],['fun','ehttp','ehttp_bin:reverse/1','Reverses a list.'],['fun','ehttp','ehttp_bin:split/1','Splits a binary by " " and "\t".'],['fun','ehttp','ehttp_bin:split_by_char/1','Splits a binary by the given char.'],['fun','ehttp','ehttp_bin:trim/1','Removes " " and "\t" from left and right of the bi'],['fun','ehttp','ehttp_bin:trim_left/1','Removes " " and "\t" from the left of the binary.'],['fun','ehttp','ehttp_bin:trim_right/1','Removes " " and "\t" from the right of the binary.'],['fun','ehttp','ehttp_cookie:get/1','Returns a cookie value.'],['fun','ehttp','ehttp_cookie:has/1','true if the given cookie list contains the given c'],['fun','ehttp','ehttp_cookie:marshall/1','Marshalls a cookie.'],['fun','ehttp','ehttp_cookie:new_cookie/1','Creates a new cookie with empty params.'],['fun','ehttp','ehttp_cookie:new_cookie/1','Creates a new cookie.'],['fun','ehttp','ehttp_cookie:new_cookies/0','Returns a new cookie jar.'],['fun','ehttp','ehttp_cookie:set/1','Adds a cookie to the given cookie list.'],['fun','ehttp','ehttp_cookie:set/1','Sets a cookie value.'],['fun','ehttp','ehttp_cookie:unmarshall/1','Unmarshalls a cookie from a binary.'],['fun','ehttp','ehttp_header:get/1','Returns a header value.'],['fun','ehttp','ehttp_header:get_single/1','Returns the first value found for the given key.'],['fun','ehttp','ehttp_header:has/1','true if the given header list contains the given h'],['fun','ehttp','ehttp_header:marshall/1','Serializes all headers present in list, ready to b'],['fun','ehttp','ehttp_header:new_header_list/0','Returns a new header list.'],['fun','ehttp','ehttp_header:set/1','Sets a header value.'],['fun','ehttp','ehttp_header:unmarshall/1','Parses binaries exactly like: "Key: Value" and ret'],['fun','ehttp','ehttp_http:http_delete/0','Returns the atom for HTTP method DELETE.'],['fun','ehttp','ehttp_http:http_get/0','Returns the atom for HTTP method GET.'],['fun','ehttp','ehttp_http:http_head/0','Returns the atom for HTTP method HEAD.'],['fun','ehttp','ehttp_http:http_options/0','Returns the atom for HTTP method OPTIONS.'],['fun','ehttp','ehttp_http:http_post/0','Returns the atom for HTTP method POST.'],['fun','ehttp','ehttp_http:http_put/0','Returns the atom for HTTP method PUT.'],['fun','ehttp','ehttp_http:http_trace/0','Returns the atom for HTTP method TRACE.'],['fun','ehttp','ehttp_http:http_v09/0','Returns the atom for HTTP version 0.9.'],['fun','ehttp','ehttp_http:http_v10/0','Returns the atom for HTTP version 1.0.'],['fun','ehttp','ehttp_http:http_v11/0','Returns the atom for HTTP version 1.1.'],['fun','ehttp','ehttp_http:marshall/1','Adds the end of line to the end of this binary.'],['fun','ehttp','ehttp_http:marshall_method/1','Returns the binary that corresponds to the given H'],['fun','ehttp','ehttp_http:marshall_version/1','Returns the binary for HTTP version X.'],['fun','ehttp','ehttp_http:unmarshall/1','Removes newline (\r\n and \n) from the end of the '],['fun','ehttp','ehttp_http:unmarshall_method/1','Returns the atom that corresponds to the given HTT'],['fun','ehttp','ehttp_http:unmarshall_version/1','Returns the atom that corresponds to the given HTT'],['fun','ehttp','ehttp_request:marshall/1','Serializes a request, ready to be sent by wire.'],['fun','ehttp','ehttp_request:new_request/1','Returns a new request, without specifying headers.'],['fun','ehttp','ehttp_request:new_request/1','Returns a new request.'],['fun','ehttp','ehttp_request:unmarshall/1','Unserializes a list of binaries, which should be a'],['fun','ehttp','ehttp_response:marshall/1','Serializes a response, ready to be sent by wire.'],['fun','ehttp','ehttp_response:new_response/1','Returns a new response.'],['fun','ehttp','ehttp_response:unmarshall/1','Unserializes a list of binaries, which should be a'],['fun','ehttp','ehttp_variable:get/1','Returns a variable value.'],['fun','ehttp','ehttp_variable:has/1','true if the given variable list contains the given'],['fun','ehttp','ehttp_variable:new_variables/0','Creates a new set of variables.'],['fun','ehttp','ehttp_variable:set/1','Sets a variable value.']];