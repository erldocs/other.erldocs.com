var index = [['app','statebox','statebox','[application]'],['mod','statebox','statebox_clock','Timestamp functions for statebox:new/1 and       '],['mod','statebox','statebox_counter','Integer counter based on an ordered list of counte'],['mod','statebox','statebox_identity','Functions for uniquely identifying events.'],['mod','statebox','statebox_orddict','Statebox wrappers for orddict-based storage.'],['fun','statebox','statebox_clock:now/0',[]],['fun','statebox','statebox_clock:now_to_msec/1','Converts given time of now() format to UNIX epoch '],['fun','statebox','statebox_clock:timestamp/0','Current UNIX epoch timestamp in integer millisecon'],['fun','statebox','statebox_counter:accumulate/1','Accumulate all counter events older than Timestamp'],['fun','statebox','statebox_counter:f_inc_acc/1','Return a statebox event to increment and accumulat'],['fun','statebox','statebox_counter:f_inc_acc/1','Equivalent to f_inc_acc(Value, Age,	  {statebox_c'],['fun','statebox','statebox_counter:inc/1','Return a new counter with the given counter event.'],['fun','statebox','statebox_counter:merge/1','Merge the given list of counters and return a new '],['fun','statebox','statebox_counter:value/1','Return the value of the counter (the sum of all co'],['fun','statebox','statebox_identity:entropy/0','Equivalent to entropy(node(), statebox_clock:now()'],['fun','statebox','statebox_identity:entropy/1','Return an integer that can be expected to be reaso'],['fun','statebox','statebox_orddict:f_delete/1','Returns an op() that deletes the pair if present f'],['fun','statebox','statebox_orddict:f_erase/1','Returns an op() that erases the value at K in ordd'],['fun','statebox','statebox_orddict:f_merge/1','Returns an op() that merges the orddict New to the'],['fun','statebox','statebox_orddict:f_merge_proplist/1','Returns an op() that merges the proplist New to th'],['fun','statebox','statebox_orddict:f_store/1','Returns an op() that stores Value at Key in orddic'],['fun','statebox','statebox_orddict:f_subtract/1','Returns an op() that does an ordsets:subtract(Set,'],['fun','statebox','statebox_orddict:f_union/1','Returns an op() that does an ordsets:union(New, Se'],['fun','statebox','statebox_orddict:f_update/1','Returns an op() that updates the value at Key in o'],['fun','statebox','statebox_orddict:from_values/1','Return a statebox() from a list of statebox() and/'],['fun','statebox','statebox_orddict:is_empty/1','Return true if the stateboxs value is [], false o'],['fun','statebox','statebox_orddict:orddict_from_proplist/1','Convert a proplist() to an orddict().']];