var index = [['app','conference_backend','conference_backend','[application]'],['mod','conference_backend','api_webserver',[]],['mod','conference_backend','api_webserver_sup',[]],['mod','conference_backend','authorise',[]],['mod','conference_backend','conference',[]],['mod','conference_backend','conference_manager',[]],['mod','conference_backend','conference_manager_sup',[]],['mod','conference_backend','conferencr_app',[]],['mod','conference_backend','conferencr_sup',[]],['mod','conference_backend','freeswitch','A module for interfacing with FreeSWITCH using mod'],['mod','conference_backend','outbound_call',[]],['mod','conference_backend','struct','Utilities for working with mochijson2 struct.'],['fun','conference_backend','api_webserver:code_change/3',[]],['fun','conference_backend','api_webserver:dispatch_requests/1',[]],['fun','conference_backend','api_webserver:handle_call/3',[]],['fun','conference_backend','api_webserver:handle_cast/2',[]],['fun','conference_backend','api_webserver:handle_info/2',[]],['fun','conference_backend','api_webserver:init/1',[]],['fun','conference_backend','api_webserver:start_link/1',[]],['fun','conference_backend','api_webserver:stop/0',[]],['fun','conference_backend','api_webserver:terminate/2',[]],['fun','conference_backend','api_webserver_sup:init/1',[]],['fun','conference_backend','api_webserver_sup:start_link/1',[]],['fun','conference_backend','authorise:authorise/2',[]],['fun','conference_backend','conference:start/1',[]],['fun','conference_backend','conference_manager:authorise/2',[]],['fun','conference_backend','conference_manager:code_change/3',[]],['fun','conference_backend','conference_manager:handle_call/3',[]],['fun','conference_backend','conference_manager:handle_cast/2',[]],['fun','conference_backend','conference_manager:handle_info/2',[]],['fun','conference_backend','conference_manager:init/1',[]],['fun','conference_backend','conference_manager:start_conference/1',[]],['fun','conference_backend','conference_manager:start_link/0',[]],['fun','conference_backend','conference_manager:terminate/2',[]],['fun','conference_backend','conference_manager_sup:init/1',[]],['fun','conference_backend','conference_manager_sup:start_link/0',[]],['fun','conference_backend','conferencr_app:start/2',[]],['fun','conference_backend','conferencr_app:start_all/0',[]],['fun','conference_backend','conferencr_app:stop/1',[]],['fun','conference_backend','conferencr_sup:init/1',[]],['fun','conference_backend','conferencr_sup:start_link/0',[]],['fun','conference_backend','freeswitch:api/2','Same as @link{api/3} except theres no additional '],['fun','conference_backend','freeswitch:api/3','Make a blocking API call to FreeSWITCH.'],['fun','conference_backend','freeswitch:bgapi/1','Make a backgrounded API call to FreeSWITCH.'],['fun','conference_backend','freeswitch:bgapi/1','Make a backgrounded API call to FreeSWITCH.'],['fun','conference_backend','freeswitch:close/1','Close the connection to Node.'],['fun','conference_backend','freeswitch:event/2','Request to receive any events in the list List.'],['fun','conference_backend','freeswitch:get_event_body/1','Return the body of the event or {error, notfound} '],['fun','conference_backend','freeswitch:get_event_header/2','Return the value for a specific header in an event'],['fun','conference_backend','freeswitch:get_event_name/1','Return the name of the event.'],['fun','conference_backend','freeswitch:getpid/1','Get the fake pid of the FreeSWITCH node at Node.'],['fun','conference_backend','freeswitch:handlecall/2','Request that FreeSWITCH send any events pertaining'],['fun','conference_backend','freeswitch:handlecall/3','Request that FreeSWITCH send any events pertaining'],['fun','conference_backend','freeswitch:nixevent/2','Stop receiving any events in the list Events from '],['fun','conference_backend','freeswitch:noevents/1','Stop receiving any events from Node.'],['fun','conference_backend','freeswitch:send/2','Send a raw term to FreeSWITCH.'],['fun','conference_backend','freeswitch:sendevent/3','Send an event to FreeSWITCH.'],['fun','conference_backend','freeswitch:sendevent_custom/3','Send a CUSTOM event to FreeSWITCH.'],['fun','conference_backend','freeswitch:sendmsg/3','Send a message to the call identified by UUID.'],['fun','conference_backend','freeswitch:start_event_handler/4','Spawn Module:Function as an event handler.'],['fun','conference_backend','freeswitch:start_fetch_handler/5','Spawn Module:Function as an XML config fetch handl'],['fun','conference_backend','freeswitch:start_log_handler/4','Spawn Module:Function as a log handler.'],['fun','conference_backend','outbound_call:call/5',[]],['fun','conference_backend','struct:delete/1',[]],['fun','conference_backend','struct:extend/1','Extend a json struct with one or more json struct '],['fun','conference_backend','struct:get_value/1',[]],['fun','conference_backend','struct:set_value/1',[]],['fun','conference_backend','struct:withdraw/1','withdraw acts in the exact opposite way of extend ']];