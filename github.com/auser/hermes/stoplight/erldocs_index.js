var index = [['app','hermes','hermes','[application]'],['mod','hermes','ambassador',[]],['mod','hermes','ambassador_app',[]],['mod','hermes','ambassador_sup',[]],['mod','hermes','assets',[]],['mod','hermes','athens',[]],['mod','hermes','athens_srv',[]],['mod','hermes','cluster',[]],['mod','hermes','commandInterface_thrift',[]],['mod','hermes','config',[]],['mod','hermes','erlrrd',[]],['mod','hermes','erlrrd_app',[]],['mod','hermes','erlrrd_sup',[]],['mod','hermes','hermes',[]],['mod','hermes','hermes_logger',[]],['mod','hermes','hermes_sup',[]],['mod','hermes','home',[]],['mod','hermes','loudmouth',[]],['mod','hermes','make_boot',[]],['mod','hermes','mapreduce',[]],['mod','hermes','mon_server',[]],['mod','hermes','mon_server_sup',[]],['mod','hermes','monitors',[]],['mod','hermes','nag',[]],['mod','hermes','nag_app',[]],['mod','hermes','nag_sup',[]],['mod','hermes','poolparty_types',[]],['mod','hermes','protobuffs_ambassador',[]],['mod','hermes','rest_app',[]],['mod','hermes','rest_server',[]],['mod','hermes','rest_server_sup',[]],['mod','hermes','testing',[]],['mod','hermes','thrift_ambassador',[]],['mod','hermes','utils',[]],['fun','hermes','ambassador:ask/1',[]],['fun','hermes','ambassador:ask/2',[]],['fun','hermes','ambassador:code_change/3',[]],['fun','hermes','ambassador:get/1',[]],['fun','hermes','ambassador:handle_call/3',[]],['fun','hermes','ambassador:handle_cast/2',[]],['fun','hermes','ambassador:handle_function/2',[]],['fun','hermes','ambassador:handle_info/2',[]],['fun','hermes','ambassador:init/1',[]],['fun','hermes','ambassador:start_link/0',[]],['fun','hermes','ambassador:stop/1',[]],['fun','hermes','ambassador:terminate/2',[]],['fun','hermes','ambassador_app:start/2','This function is called whenever an application  '],['fun','hermes','ambassador_app:stop/1','This function is called whenever an application  '],['fun','hermes','ambassador_sup:init/1','Whenever a supervisor is started using  superviso'],['fun','hermes','ambassador_sup:start_link/0','Starts the supervisor.'],['fun','hermes','ambassador_sup:stop/1',[]],['fun','hermes','assets:get/1',[]],['fun','hermes','athens:call_election/2',[]],['fun','hermes','athens:nodes/0',[]],['fun','hermes','athens_srv:call_election/2',[]],['fun','hermes','athens_srv:code_change/3',[]],['fun','hermes','athens_srv:handle_call/3',[]],['fun','hermes','athens_srv:handle_cast/2',[]],['fun','hermes','athens_srv:handle_info/2',[]],['fun','hermes','athens_srv:handle_join/3',[]],['fun','hermes','athens_srv:handle_leave/4',[]],['fun','hermes','athens_srv:handle_node_joined/3',[]],['fun','hermes','athens_srv:init/1',[]],['fun','hermes','athens_srv:nodes/0',[]],['fun','hermes','athens_srv:nodes/1',[]],['fun','hermes','athens_srv:start/0',[]],['fun','hermes','athens_srv:start_link/1',[]],['fun','hermes','athens_srv:start_named/2',[]],['fun','hermes','athens_srv:terminate/2',[]],['fun','hermes','cluster:delete/2',[]],['fun','hermes','cluster:get/1',[]],['fun','hermes','cluster:post/2',[]],['fun','hermes','cluster:put/2',[]],['fun','hermes','commandInterface_thrift:function_info/2',[]],['fun','hermes','commandInterface_thrift:struct_info/1',[]],['fun','hermes','erlrrd:c/1','Equivalent to combine(Args).'],['fun','hermes','erlrrd:cd/1','  ask the rrdtool unix process to change directori'],['fun','hermes','erlrrd:combine/1','"joins" and quotes the given arg list.'],['fun','hermes','erlrrd:create/1','Set up a new Round Robin Database (RRD).'],['fun','hermes','erlrrd:dump/1','   Dump the contents of an RRD in plain ASCII.'],['fun','hermes','erlrrd:fetch/1','  Get data for a certain time period from a RRD.'],['fun','hermes','erlrrd:first/1','Return the date of the first data sample in an RRA'],['fun','hermes','erlrrd:graph/1','  Create a graph from data stored in one or severa'],['fun','hermes','erlrrd:info/1','Get information about an RRD.'],['fun','hermes','erlrrd:last/1','   Return the date of the last data sample in an R'],['fun','hermes','erlrrd:lastupdate/1','   Return the most recent update to an RRD.'],['fun','hermes','erlrrd:ls/0',' lists all *.rrd files in rrdtool unix process  '],['fun','hermes','erlrrd:mkdir/1','  ask the rrdtool unix process to create a directo'],['fun','hermes','erlrrd:pwd/0',' return the rrdtool unix process        current '],['fun','hermes','erlrrd:resize/1','   Change the size of individual RRAs.'],['fun','hermes','erlrrd:restore/1','Restore an RRD in XML format to a binary RRD.'],['fun','hermes','erlrrd:start/0','Equivalent to erlrrd_app:start().'],['fun','hermes','erlrrd:start_link/0','Equivalent to start_link("rrdtool -").'],['fun','hermes','erlrrd:start_link/1','calls gen_server:start_link    RRDToolCmd is the '],['fun','hermes','erlrrd:stop/0','Equivalent to erlrrd_app:stop().'],['fun','hermes','erlrrd:tune/1','Alter setup of an RRD.'],['fun','hermes','erlrrd:update/1','Store new data values into an RRD.'],['fun','hermes','erlrrd:updatev/1','Operationally equivalent to update except for outp'],['fun','hermes','erlrrd:xport/1','  Export data retrieved from one or several RRDs.'],['fun','hermes','erlrrd_app:start/0',[]],['fun','hermes','erlrrd_app:start/2',[]],['fun','hermes','erlrrd_app:stop/0',[]],['fun','hermes','erlrrd_app:stop/1',[]],['fun','hermes','erlrrd_sup:init/1',[]],['fun','hermes','erlrrd_sup:start_link/0',[]],['fun','hermes','erlrrd_sup:start_link/1',[]],['fun','hermes','erlrrd_sup:stop/0',[]],['fun','hermes','hermes:start/0',[]],['fun','hermes','hermes:start/2',[]],['fun','hermes','hermes:start_phase/3',[]],['fun','hermes','hermes:stop/0',[]],['fun','hermes','hermes:stop/1',[]],['fun','hermes','hermes_logger:append/1',[]],['fun','hermes','hermes_logger:code_change/3',[]],['fun','hermes','hermes_logger:error/1',[]],['fun','hermes','hermes_logger:error/2',[]],['fun','hermes','hermes_logger:handle_call/3',[]],['fun','hermes','hermes_logger:handle_cast/2',[]],['fun','hermes','hermes_logger:handle_info/2',[]],['fun','hermes','hermes_logger:info/1',[]],['fun','hermes','hermes_logger:info/2',[]],['fun','hermes','hermes_logger:init/1',[]],['fun','hermes','hermes_logger:print/0',[]],['fun','hermes','hermes_logger:start_link/1',[]],['fun','hermes','hermes_logger:stop/1',[]],['fun','hermes','hermes_logger:terminate/2',[]],['fun','hermes','hermes_sup:init/1',[]],['fun','hermes','hermes_sup:start/2',[]],['fun','hermes','hermes_sup:stop/1',[]],['fun','hermes','home:delete/2',[]],['fun','hermes','home:get/1',[]],['fun','hermes','home:post/2',[]],['fun','hermes','home:put/2',[]],['fun','hermes','loudmouth:banner/2',[]],['fun','hermes','make_boot:write_scripts/1',[]],['fun','hermes','mapreduce:submit/2',[]],['fun','hermes','mapreduce:submit/3',[]],['fun','hermes','mon_server:cluster_average/0',[]],['fun','hermes','mon_server:cluster_average/1',[]],['fun','hermes','mon_server:cluster_average/2',[]],['fun','hermes','mon_server:code_change/3',[]],['fun','hermes','mon_server:get_all_averages/0',[]],['fun','hermes','mon_server:get_all_averages/1',[]],['fun','hermes','mon_server:get_all_averages/2',[]],['fun','hermes','mon_server:get_average/1',[]],['fun','hermes','mon_server:get_average_over/2',[]],['fun','hermes','mon_server:get_latest_average_for/1',[]],['fun','hermes','mon_server:handle_call/3',[]],['fun','hermes','mon_server:handle_cast/2',[]],['fun','hermes','mon_server:handle_info/2',[]],['fun','hermes','mon_server:handle_join/3',[]],['fun','hermes','mon_server:handle_leave/4',[]],['fun','hermes','mon_server:handle_node_joined/3',[]],['fun','hermes','mon_server:init/1',[]],['fun','hermes','mon_server:list_monitors/0',[]],['fun','hermes','mon_server:start_link/1',[]],['fun','hermes','mon_server:stop/0',[]],['fun','hermes','mon_server:terminate/2',[]],['fun','hermes','mon_server_sup:init/1',[]],['fun','hermes','mon_server_sup:start_link/1',[]],['fun','hermes','mon_server_sup:stop/1',[]],['fun','hermes','monitors:delete/2',[]],['fun','hermes','monitors:get/1',[]],['fun','hermes','monitors:post/2',[]],['fun','hermes','monitors:put/2',[]],['fun','hermes','nag:code_change/3',[]],['fun','hermes','nag:handle_call/3',[]],['fun','hermes','nag:handle_cast/2',[]],['fun','hermes','nag:handle_info/2',[]],['fun','hermes','nag:init/1',[]],['fun','hermes','nag:start_link/0',[]],['fun','hermes','nag:terminate/2',[]],['fun','hermes','nag_app:start/2',[]],['fun','hermes','nag_app:stop/1',[]],['fun','hermes','nag_sup:init/1',[]],['fun','hermes','nag_sup:start_link/1',[]],['fun','hermes','poolparty_types:struct_info/1',[]],['fun','hermes','protobuffs_ambassador:call/3',[]],['fun','hermes','protobuffs_ambassador:get_pid/0',[]],['fun','hermes','protobuffs_ambassador:start/1',[]],['fun','hermes','protobuffs_ambassador:stop/0',[]],['fun','hermes','rest_app:start/2',[]],['fun','hermes','rest_app:stop/1',[]],['fun','hermes','rest_server:code_change/3',[]],['fun','hermes','rest_server:handle_call/3',[]],['fun','hermes','rest_server:handle_cast/2',[]],['fun','hermes','rest_server:handle_info/2',[]],['fun','hermes','rest_server:init/1',[]],['fun','hermes','rest_server:print_banner/1',[]],['fun','hermes','rest_server:start_link/1',[]],['fun','hermes','rest_server:stop/1',[]],['fun','hermes','rest_server:terminate/2',[]],['fun','hermes','rest_server_sup:init/1',[]],['fun','hermes','rest_server_sup:start_link/1',[]],['fun','hermes','thrift_ambassador:ask/3',[]],['fun','hermes','thrift_ambassador:code_change/3',[]],['fun','hermes','thrift_ambassador:handle_call/3',[]],['fun','hermes','thrift_ambassador:handle_cast/2',[]],['fun','hermes','thrift_ambassador:handle_info/2',[]],['fun','hermes','thrift_ambassador:init/1',[]],['fun','hermes','thrift_ambassador:start_link/1',[]],['fun','hermes','thrift_ambassador:start_thrift_server/1',[]],['fun','hermes','thrift_ambassador:stop/0',[]],['fun','hermes','thrift_ambassador:terminate/2',[]]];