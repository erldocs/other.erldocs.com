var index = [['app','erldis','erldis','[application]'],['mod','erldis','erldis',[]],['mod','erldis','erldis_app',[]],['mod','erldis','erldis_binaries',[]],['mod','erldis','erldis_dict',[]],['mod','erldis','erldis_list',[]],['mod','erldis','erldis_pool_sup',[]],['mod','erldis','erldis_proto',[]],['mod','erldis','erldis_sets','sets like interface to redis.'],['mod','erldis','erldis_shard','This module is used to access a sharded Redis clus'],['mod','erldis','erldis_sup',[]],['mod','erldis','hash_ring','This module implements a hash ring.'],['fun','erldis','erldis_app:start/2',[]],['fun','erldis','erldis_app:stop/1',[]],['fun','erldis','erldis_binaries:encode_key/1',[]],['fun','erldis','erldis_binaries:encode_key_parts/1',[]],['fun','erldis','erldis_binaries:join/2',[]],['fun','erldis','erldis_binaries:to_binary/1',[]],['fun','erldis','erldis_dict:append/3',[]],['fun','erldis','erldis_dict:append_list/3',[]],['fun','erldis','erldis_dict:erase/2',[]],['fun','erldis','erldis_dict:fetch/2',[]],['fun','erldis','erldis_dict:fetch_keys/2',[]],['fun','erldis','erldis_dict:find/2',[]],['fun','erldis','erldis_dict:is_key/2',[]],['fun','erldis','erldis_dict:size/1',[]],['fun','erldis','erldis_dict:store/3',[]],['fun','erldis','erldis_dict:update/3',[]],['fun','erldis','erldis_dict:update/4',[]],['fun','erldis','erldis_dict:update_counter/2',[]],['fun','erldis','erldis_dict:update_counter/3',[]],['fun','erldis','erldis_list:delete/3',[]],['fun','erldis','erldis_list:drop/2',[]],['fun','erldis','erldis_list:drop_r/2',[]],['fun','erldis','erldis_list:foldl/4',[]],['fun','erldis','erldis_list:foldr/4',[]],['fun','erldis','erldis_list:foreach/3',[]],['fun','erldis','erldis_list:from_list/3',[]],['fun','erldis','erldis_list:get/2',[]],['fun','erldis','erldis_list:get/3',[]],['fun','erldis','erldis_list:get_r/2',[]],['fun','erldis','erldis_list:in/3',[]],['fun','erldis','erldis_list:in_r/3',[]],['fun','erldis','erldis_list:is_array/2',[]],['fun','erldis','erldis_list:is_empty/2',[]],['fun','erldis','erldis_list:is_list/2',[]],['fun','erldis','erldis_list:is_queue/2',[]],['fun','erldis','erldis_list:last/2',[]],['fun','erldis','erldis_list:len/2',[]],['fun','erldis','erldis_list:merge/4',[]],['fun','erldis','erldis_list:nth/3',[]],['fun','erldis','erldis_list:out/2',[]],['fun','erldis','erldis_list:out_foreach/3','Call F on each element in queue until its empty.'],['fun','erldis','erldis_list:out_r/2',[]],['fun','erldis','erldis_list:peek/2',[]],['fun','erldis','erldis_list:peek_r/2',[]],['fun','erldis','erldis_list:reverse/2',[]],['fun','erldis','erldis_list:set/4',[]],['fun','erldis','erldis_list:size/2',[]],['fun','erldis','erldis_list:sublist/3',[]],['fun','erldis','erldis_list:sublist/4',[]],['fun','erldis','erldis_list:to_list/2',[]],['fun','erldis','erldis_list:umerge/4',[]],['fun','erldis','erldis_pool_sup:add_pid/2','Adds a Redis connection {Host, Port} pair and Pid '],['fun','erldis','erldis_pool_sup:get_pids/1','Returns a list of Pids for the given {Host, Port} '],['fun','erldis','erldis_pool_sup:get_random_pid/1','Returns a random Pid in the pool for a given {Host'],['fun','erldis','erldis_pool_sup:init/1','Returns the supervisor specifications for the chil'],['fun','erldis','erldis_pool_sup:start_link/1','Starts a supervisor that manages pools of Redis co'],['fun','erldis','erldis_pool_sup:stop/0',[]],['fun','erldis','erldis_proto:multibulk_cmd/1',[]],['fun','erldis','erldis_proto:parse/2',[]],['fun','erldis','erldis_proto:parse_stat/1',[]],['fun','erldis','erldis_sets:add_element/3',[]],['fun','erldis','erldis_sets:del_element/3',[]],['fun','erldis','erldis_sets:delete/1',[]],['fun','erldis','erldis_sets:filter/3',[]],['fun','erldis','erldis_sets:fold/4',[]],['fun','erldis','erldis_sets:from_list/3',[]],['fun','erldis','erldis_sets:intersection/2',[]],['fun','erldis','erldis_sets:intersection/3',[]],['fun','erldis','erldis_sets:is_disjoint/3',[]],['fun','erldis','erldis_sets:is_element/3',[]],['fun','erldis','erldis_sets:is_set/2',[]],['fun','erldis','erldis_sets:is_subset/3',[]],['fun','erldis','erldis_sets:size/2',[]],['fun','erldis','erldis_sets:subtract/2',[]],['fun','erldis','erldis_sets:subtract/3',[]],['fun','erldis','erldis_sets:to_list/2',[]],['fun','erldis','erldis_sets:union/2',[]],['fun','erldis','erldis_shard:client/1','Returns a client for the shard that contains Key f'],['fun','erldis','erldis_shard:get_ring/0','Returns the current Ring.'],['fun','erldis','erldis_shard:get_slot/1','Returns the slot in the ring for the given Key.'],['fun','erldis','erldis_shard:start_link/1','Initializes a Redis sharded cluster with the given'],['fun','erldis','erldis_sup:client/0',[]],['fun','erldis','erldis_sup:init/1',[]],['fun','erldis','erldis_sup:start_link/0',[]],['fun','erldis','hash_ring:add_item/2','Adds an item into the ring.'],['fun','erldis','hash_ring:create_ring/2','Creates a hash ring that places Items in the ring '],['fun','erldis','hash_ring:get_item/2','Finds the item that contains the Key on the Ring.'],['fun','erldis','hash_ring:remove_item/2','Removes an item and its replicas from the ring.']];