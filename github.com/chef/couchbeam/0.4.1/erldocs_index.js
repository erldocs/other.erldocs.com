var index = [['app','couchbeam','couchbeam','[application]'],['mod','couchbeam','couchbeam',[]],['mod','couchbeam','couchbeam_deps','Ensure that the relatively-installed dependencies '],['mod','couchbeam','couchbeam_doc',[]],['mod','couchbeam','couchbeam_manager','Manager for couchbeam  This gen_server is respons'],['mod','couchbeam','couchbeam_mochinum','Useful numeric algorithms for floats that cover so'],['mod','couchbeam','couchbeam_resource',[]],['mod','couchbeam','couchbeam_server',[]],['mod','couchbeam','couchbeam_sup',[]],['mod','couchbeam','couchbeam_util',[]],['mod','couchbeam','couchbeam_uuids',[]],['mod','couchbeam','couchbeam_view',[]],['fun','couchbeam','couchbeam:json_decode/1','decode from json string.'],['fun','couchbeam','couchbeam:json_encode/1','Encode to json.'],['fun','couchbeam','couchbeam:start/0','Start applications which exmpp depends on then sta'],['fun','couchbeam','couchbeam:version/0','Return the version of the application.'],['fun','couchbeam','couchbeam_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','couchbeam','couchbeam_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','couchbeam','couchbeam_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','couchbeam','couchbeam_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','couchbeam','couchbeam_deps:get_base_dir/1','Return the application directory for Module.'],['fun','couchbeam','couchbeam_deps:local_path/1','Return an application-relative directory for this '],['fun','couchbeam','couchbeam_deps:local_path/1','Return an application-relative directory from Modu'],['fun','couchbeam','couchbeam_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','couchbeam','couchbeam_doc:add_attachment/1','add attachment  to a doc and encode it with Conten'],['fun','couchbeam','couchbeam_doc:add_attachment/1','add attachment  to a doc and encode it.'],['fun','couchbeam','couchbeam_doc:delete_inline_attachment/1','delete an attachment record in doc.'],['fun','couchbeam','couchbeam_doc:delete_value/1','Deletes all entries associated with Key in json ob'],['fun','couchbeam','couchbeam_doc:extend/1','extend a jsonobject by a property or list of prope'],['fun','couchbeam','couchbeam_doc:extend/1','extend a jsonobject by key, value.'],['fun','couchbeam','couchbeam_doc:get_id/1','get document id.'],['fun','couchbeam','couchbeam_doc:get_idrev/1','get  a tuple containing docucment id and revision.'],['fun','couchbeam','couchbeam_doc:get_rev/1','get document revision.'],['fun','couchbeam','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','couchbeam','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','couchbeam','couchbeam_doc:is_saved/1','If document have been saved (revision is defined) '],['fun','couchbeam','couchbeam_doc:set_value/1','set a value for a key in jsonobj.'],['fun','couchbeam','couchbeam_manager:code_change/3',[]],['fun','couchbeam','couchbeam_manager:connection_count/0',[]],['fun','couchbeam','couchbeam_manager:get_connection/1',[]],['fun','couchbeam','couchbeam_manager:get_db/1',[]],['fun','couchbeam','couchbeam_manager:handle_cast/2',[]],['fun','couchbeam','couchbeam_manager:handle_info/2',[]],['fun','couchbeam','couchbeam_manager:init/1',[]],['fun','couchbeam','couchbeam_manager:register_connection/2',[]],['fun','couchbeam','couchbeam_manager:register_db/3',[]],['fun','couchbeam','couchbeam_manager:terminate/2',[]],['fun','couchbeam','couchbeam_manager:unregister_connection/1',[]],['fun','couchbeam','couchbeam_manager:unregister_db/1',[]],['fun','couchbeam','couchbeam_mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','couchbeam','couchbeam_mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','couchbeam','couchbeam_mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','couchbeam','couchbeam_mochinum:int_pow/1',' Moderately efficient way to exponentiate integers'],['fun','couchbeam','couchbeam_mochinum:test/0',[]],['fun','couchbeam','couchbeam_resource:delete/5',[]],['fun','couchbeam','couchbeam_resource:encode_query/1',[]],['fun','couchbeam','couchbeam_resource:get/5',[]],['fun','couchbeam','couchbeam_resource:get_body_part/1','Reads a body part from an ongoing response when  '],['fun','couchbeam','couchbeam_resource:get_body_part/1','Reads a body part from an ongoing response when  '],['fun','couchbeam','couchbeam_resource:head/5',[]],['fun','couchbeam','couchbeam_resource:post/6',[]],['fun','couchbeam','couchbeam_resource:put/6',[]],['fun','couchbeam','couchbeam_server:all_dbs/1','fetch list of all dbs.'],['fun','couchbeam','couchbeam_server:close/1',[]],['fun','couchbeam','couchbeam_server:close_db/2',[]],['fun','couchbeam','couchbeam_server:code_change/3',[]],['fun','couchbeam','couchbeam_server:create_db/1','create a database with DbName.'],['fun','couchbeam','couchbeam_server:delete_db/1','delete a database with dbname.'],['fun','couchbeam','couchbeam_server:handle_call/3',[]],['fun','couchbeam','couchbeam_server:handle_cast/2',[]],['fun','couchbeam','couchbeam_server:handle_info/2',[]],['fun','couchbeam','couchbeam_server:info/1',[]],['fun','couchbeam','couchbeam_server:is_db/1','If database exist in the node returns true.'],['fun','couchbeam','couchbeam_server:open_db/2',[]],['fun','couchbeam','couchbeam_server:open_db/3',[]],['fun','couchbeam','couchbeam_server:open_or_create_db/2',[]],['fun','couchbeam','couchbeam_server:start_connection/0',[]],['fun','couchbeam','couchbeam_server:start_connection/1',[]],['fun','couchbeam','couchbeam_server:start_connection_link/0',[]],['fun','couchbeam','couchbeam_server:start_connection_link/1',[]],['fun','couchbeam','couchbeam_server:terminate/2',[]],['fun','couchbeam','couchbeam_sup:init/1',[]],['fun','couchbeam','couchbeam_sup:start_link/0',[]],['fun','couchbeam','couchbeam_util:encodeBase64/1',[]],['fun','couchbeam','couchbeam_util:generate_uuids/1',[]],['fun','couchbeam','couchbeam_util:guess_mime/1',' Guess the mime type of a file by the extension of'],['fun','couchbeam','couchbeam_util:join/1','Join a list of strings together with the given sep'],['fun','couchbeam','couchbeam_util:new_uuid/0',[]],['fun','couchbeam','couchbeam_util:quote_plus/1','URL safe encoding of the given term.'],['fun','couchbeam','couchbeam_util:revjoin/3',[]],['fun','couchbeam','couchbeam_util:split/1','split a binary.'],['fun','couchbeam','couchbeam_util:to_digit/1',[]],['fun','couchbeam','couchbeam_util:to_hex/1',[]],['fun','couchbeam','couchbeam_util:url_encode/1','URL-encodes a string based on RFC 1738.'],['fun','couchbeam','couchbeam_util:val/1',[]],['fun','couchbeam','couchbeam_uuids:code_change/3',[]],['fun','couchbeam','couchbeam_uuids:handle_call/3',[]],['fun','couchbeam','couchbeam_uuids:handle_cast/2',[]],['fun','couchbeam','couchbeam_uuids:handle_info/2',[]],['fun','couchbeam','couchbeam_uuids:next_uuid/1',[]],['fun','couchbeam','couchbeam_uuids:terminate/2',[]],['fun','couchbeam','couchbeam_uuids:uuid/1',[]],['fun','couchbeam','couchbeam_uuids:uuids/2',[]],['fun','couchbeam','couchbeam_view:close_view/1',[]],['fun','couchbeam','couchbeam_view:code_change/3',[]],['fun','couchbeam','couchbeam_view:count/1',[]],['fun','couchbeam','couchbeam_view:count/2',[]],['fun','couchbeam','couchbeam_view:fetch_view/1',[]],['fun','couchbeam','couchbeam_view:fetch_view/2',[]],['fun','couchbeam','couchbeam_view:first/1',[]],['fun','couchbeam','couchbeam_view:first/2',[]],['fun','couchbeam','couchbeam_view:handle_call/3',[]],['fun','couchbeam','couchbeam_view:handle_cast/2',[]],['fun','couchbeam','couchbeam_view:handle_info/2',[]],['fun','couchbeam','couchbeam_view:parse_view/1','Return a list of document ids for a given view.'],['fun','couchbeam','couchbeam_view:parse_view/2',[]],['fun','couchbeam','couchbeam_view:terminate/2',[]]];