var index = [['app','antonius','antonius','[application]'],['mod','antonius','cli_frame',[]],['mod','antonius','cli_game',[]],['mod','antonius','cli_rectangle',[]],['mod','antonius','cmd_dict',[]],['mod','antonius','cmd_do',[]],['mod','antonius','cmd_help',[]],['mod','antonius','cmd_history',[]],['mod','antonius','cmd_move',[]],['mod','antonius','cmd_play',[]],['mod','antonius','cmd_put',[]],['mod','antonius','cmd_quit',[]],['mod','antonius','cmd_set',[]],['mod','antonius','cmd_setup',[]],['mod','antonius','cmd_suggest',[]],['mod','antonius','cmd_undo',[]],['mod','antonius','core_abresult',[]],['mod','antonius','core_abrunner',[]],['mod','antonius','core_board',[]],['mod','antonius','core_boardmap',[]],['mod','antonius','core_colour',[]],['mod','antonius','core_gamestate',[]],['mod','antonius','core_logger',[]],['mod','antonius','core_material',[]],['mod','antonius','core_move',[]],['mod','antonius','core_nif','@todo Add description to core_nif.'],['mod','antonius','core_node',[]],['mod','antonius','core_piecetype',[]],['mod','antonius','core_square',[]],['mod','antonius','core_state',[]],['mod','antonius','core_statenode',[]],['mod','antonius','core_util',[]],['mod','antonius','param_parameter',[]],['mod','antonius','test_adapter',[]],['mod','antonius','test_SUITE',[]],['mod','antonius','xbi_command',[]],['mod','antonius','xbi_controller',[]],['mod','antonius','xbi_go',[]],['mod','antonius','xbi_listener',[]],['mod','antonius','xbi_new',[]],['mod','antonius','xbi_protover',[]],['mod','antonius','xbi_quit',[]],['mod','antonius','xbi_remove',[]],['mod','antonius','xbi_requests',[]],['mod','antonius','xbi_sd',[]],['mod','antonius','xbi_usermove',[]],['fun','antonius','cli_frame:addRectangle/1',[]],['fun','antonius','cli_frame:create/3',[]],['fun','antonius','cli_frame:display/2',[]],['fun','antonius','cli_frame:wrapException/1',[]],['fun','antonius','cli_game:main/1','Play a game.'],['fun','antonius','cli_game:play/1','Initialize, play a game, clean up.'],['fun','antonius','cli_game:preMain/0','Tentative, start a game with trace.'],['fun','antonius','cli_game:setupBoard/0',[]],['fun','antonius','cli_rectangle:compareTo/2',[]],['fun','antonius','cli_rectangle:create/1',[]],['fun','antonius','cmd_dict:getDescription/1',[]],['fun','antonius','cmd_dict:getFunction/2',[]],['fun','antonius','cmd_dict:getOneLiners/0',[]],['fun','antonius','cmd_dict:mergeCommand/6',[]],['fun','antonius','cmd_dict:setupCommands/0',[]],['fun','antonius','cmd_do:do/1','TODO.'],['fun','antonius','cmd_do:init/0',[]],['fun','antonius','cmd_help:help/1','Provide brief help on all commands,  or a descrip'],['fun','antonius','cmd_help:init/0',[]],['fun','antonius','cmd_history:history/1','TODO, should do the text processing in this module'],['fun','antonius','cmd_history:init/0',[]],['fun','antonius','cmd_move:init/0',[]],['fun','antonius','cmd_move:move/1','Make a move.'],['fun','antonius','cmd_move:moveFinalize/1',[]],['fun','antonius','cmd_play:init/0',[]],['fun','antonius','cmd_play:play/1',[]],['fun','antonius','cmd_play:setSuggestion/1','Store a suggestion.'],['fun','antonius','cmd_put:init/0',[]],['fun','antonius','cmd_put:place/1','For tests, place a piece.'],['fun','antonius','cmd_quit:init/0',[]],['fun','antonius','cmd_quit:quit/1','Terminate the ongoing game.'],['fun','antonius','cmd_set:init/0',[]],['fun','antonius','cmd_set:setdepth/1','Sets the recursion depth.'],['fun','antonius','cmd_set:setthreads/1','Sets the number of threads.'],['fun','antonius','cmd_setup:init/0',[]],['fun','antonius','cmd_setup:resetParameters/0',[]],['fun','antonius','cmd_setup:setup/1','Set up pieces for a new game.'],['fun','antonius','cmd_setup:setupempty/1','For tests, set up an empty game.'],['fun','antonius','cmd_setup:setupHelper/1',[]],['fun','antonius','cmd_suggest:init/0',[]],['fun','antonius','cmd_suggest:suggest/1','Suggest a move (for white to make).'],['fun','antonius','cmd_undo:init/0',[]],['fun','antonius','cmd_undo:undo/1','Undo the latest half-move.'],['fun','antonius','core_abresult:add/1','Awkward code in the last clause.'],['fun','antonius','core_abresult:bestMoves/2',[]],['fun','antonius','core_abresult:create/1',[]],['fun','antonius','core_abresult:createSingle/1',[]],['fun','antonius','core_abresult:done/1','This function should be called on an iterator  th'],['fun','antonius','core_abresult:getSummary/1',[]],['fun','antonius','core_abresult:hasNext/1','Returns true if the given iterator can deliver  a'],['fun','antonius','core_abresult:isEmpty/1',[]],['fun','antonius','core_abresult:iterator/1','Returns an iterator over the given list of  {Scor'],['fun','antonius','core_abresult:iteratorLoop/1','Process loop that implements iteration over an alp'],['fun','antonius','core_abresult:next/1','Returns another {Score, Node} tuple.'],['fun','antonius','core_abresult:selectNode/1','Select a node from the given alpha-beta result.'],['fun','antonius','core_abrunner:run/1',[]],['fun','antonius','core_board:getSquare/1','Lookup by board name.'],['fun','antonius','core_board:getSquare/1','...'],['fun','antonius','core_board:instance/0',[]],['fun','antonius','core_boardmap:createPiecesMap/1','Returns a board map created by modification of a g'],['fun','antonius','core_boardmap:createPiecesMap/1',[]],['fun','antonius','core_boardmap:get/1',[]],['fun','antonius','core_colour:colour/1',[]],['fun','antonius','core_colour:otherColour/1',[]],['fun','antonius','core_colour:shortName/1',[]],['fun','antonius','core_gamestate:addNode/1','Add a node when state is known.'],['fun','antonius','core_gamestate:addNode/1',[]],['fun','antonius','core_gamestate:checkGameOpen/0',[]],['fun','antonius','core_gamestate:clear/0',[]],['fun','antonius','core_gamestate:create/0',[]],['fun','antonius','core_gamestate:destroy/0',[]],['fun','antonius','core_gamestate:getAbResult/1',[]],['fun','antonius','core_gamestate:getAbResult/1',[]],['fun','antonius','core_gamestate:getCurrentNode/0',[]],['fun','antonius','core_gamestate:getCurrentNode/1',' TODO, is this really needed? Perhaps we kill the '],['fun','antonius','core_gamestate:getHistory/0',[]],['fun','antonius','core_gamestate:getPrecedingNode/0',[]],['fun','antonius','core_gamestate:getRepeatCount/1',[]],['fun','antonius','core_gamestate:getRepetitions/0',[]],['fun','antonius','core_gamestate:getSize/0',[]],['fun','antonius','core_gamestate:getState/0','Returns one of init, open, draw, white_win, black_'],['fun','antonius','core_gamestate:hasNodes/0','No callers yet.'],['fun','antonius','core_gamestate:isSetup/0',[]],['fun','antonius','core_gamestate:putAbResult/1','Store an alpha-beta result in the game state.'],['fun','antonius','core_gamestate:removeCurrentNode/0',[]],['fun','antonius','core_gamestate:setCurrentState/1','It is trusted that there is a current node.'],['fun','antonius','core_gamestate:summary/0',[]],['fun','antonius','core_gamestate:toString/1',[]],['fun','antonius','core_logger:log/2',[]],['fun','antonius','core_logger:prelude/2',[]],['fun','antonius','core_logger:start/1',[]],['fun','antonius','core_logger:stop/0',[]],['fun','antonius','core_material:create/1','Constructor.'],['fun','antonius','core_material:create/1','Lightweight constructor that sets pristine  to fa'],['fun','antonius','core_material:getKing/1','Returns the king, which is trusted to exist.'],['fun','antonius','core_material:getPosValue/1',[]],['fun','antonius','core_material:getSquares/1','Returns a list of square.'],['fun','antonius','core_material:lookup/2',[]],['fun','antonius','core_material:parse/1',[]],['fun','antonius','core_material:threats/1','Returns true if the given piece threats the given'],['fun','antonius','core_material:toString/1','Returns material corresponding to the given  stri'],['fun','antonius','core_move:create/1',[]],['fun','antonius','core_move:describe/2',[]],['fun','antonius','core_move:describeBrief/1','Create arguments to the "move" command, for use by'],['fun','antonius','core_move:toAlgebraic/1',[]],['fun','antonius','core_move:toString/1',[]],['fun','antonius','core_nif:createPiecesMap/4','This is the pure Erlang version of createPiecesMap'],['fun','antonius','core_nif:init/1','Load the C version of certain functions.'],['fun','antonius','core_node:abBlack/1',[]],['fun','antonius','core_node:abWhite/1',[]],['fun','antonius','core_node:alphaBetaRoot/1',[]],['fun','antonius','core_node:coverageValueHelper/1','The list-folding version does not cause any speed '],['fun','antonius','core_node:create/1',[]],['fun','antonius','core_node:create/1',[]],['fun','antonius','core_node:expand/1','Returns an ordered list of nodes.'],['fun','antonius','core_node:expandAndSelect/1',[]],['fun','antonius','core_node:expandAndSelect/1',[]],['fun','antonius','core_node:faultyValue/1',[]],['fun','antonius','core_node:getState/1',[]],['fun','antonius','core_node:insert/1','insertNode(Node, List), for use when collecting no'],['fun','antonius','core_node:insertPiece/1',[]],['fun','antonius','core_node:insertPiece/1','Inserts the indicated piece (it is created  non-p'],['fun','antonius','core_node:isChecked/1','Returns true if the player that is to move is also'],['fun','antonius','core_node:isCheckmated/1','Not time critical.'],['fun','antonius','core_node:isStalemate/1','Not time critical.'],['fun','antonius','core_node:key/1',[]],['fun','antonius','core_node:loss/1','Returns the piece that is present in the  given n'],['fun','antonius','core_node:makeMove/1',[]],['fun','antonius','core_node:toString/1',[]],['fun','antonius','core_node:toStringList/1','Return a stringlist that depicts the chessboard wi'],['fun','antonius','core_node:verifyLegal/1',[]],['fun','antonius','core_piecetype:pieceType/1',[]],['fun','antonius','core_piecetype:pieceType/1','Constructor.'],['fun','antonius','core_square:beam/2','Returns a list of linear square coordinates that '],['fun','antonius','core_square:bishopBeams/2',[]],['fun','antonius','core_square:dropEmptyLists/1',[]],['fun','antonius','core_square:isThreated/1','Returns true if the piece at the given square is '],['fun','antonius','core_square:kingMoves/2',[]],['fun','antonius','core_square:knightJumps/2',[]],['fun','antonius','core_square:linear/1',[]],['fun','antonius','core_square:rookBeams/2',[]],['fun','antonius','core_square:square/2','Returns a newly created square of file X  and ran'],['fun','antonius','core_square:toString/1',[]],['fun','antonius','core_square:unitVectors/0',[]],['fun','antonius','core_state:clear/0',[]],['fun','antonius','core_state:dump/0',[]],['fun','antonius','core_state:incrementAndGet/2',[]],['fun','antonius','core_state:init/1',[]],['fun','antonius','core_state:remove/1',[]],['fun','antonius','core_state:reset/1',[]],['fun','antonius','core_state:serverProcess/1',[]],['fun','antonius','core_state:sget/1',[]],['fun','antonius','core_state:sput/1',[]],['fun','antonius','core_state:start/0',[]],['fun','antonius','core_state:stop/0',[]],['fun','antonius','core_statenode:create/1',[]],['fun','antonius','core_statenode:create/2',[]],['fun','antonius','core_util:inconsistencyException/1',[]],['fun','antonius','core_util:inconsistencyException/1',[]],['fun','antonius','core_util:initVm/1','Perform once-per-VM initialization.'],['fun','antonius','core_util:strings_to_io_device/1','Returns an IO device to read from.'],['fun','antonius','core_util:userException/1',[]],['fun','antonius','core_util:userException/1',[]],['fun','antonius','param_parameter:getNumberOfThreads/0',[]],['fun','antonius','param_parameter:getRecursionDepth/0',[]],['fun','antonius','param_parameter:setNumberOfThreads/1',[]],['fun','antonius','param_parameter:setRecursionDepth/1',[]],['fun','antonius','test_adapter:run/1','Entry point for running tests from ct_run.'],['fun','antonius','test_SUITE:all/0',[]],['fun','antonius','test_SUITE:black_claims_repetition_1/1',[]],['fun','antonius','test_SUITE:black_claims_repetition_1g/1',[]],['fun','antonius','test_SUITE:black_claims_repetition_2/1',[]],['fun','antonius','test_SUITE:black_claims_repetition_2g/1',[]],['fun','antonius','test_SUITE:black_claims_repetition_9/1',[]],['fun','antonius','test_SUITE:black_does_immediate_checkmate/1',[]],['fun','antonius','test_SUITE:castling_long_negative_5/1',[]],['fun','antonius','test_SUITE:castling_long_positive/1',[]],['fun','antonius','test_SUITE:castling_long_positive_2/1',[]],['fun','antonius','test_SUITE:castling_possible_move_king/1',[]],['fun','antonius','test_SUITE:castling_possible_move_rook/1',[]],['fun','antonius','test_SUITE:castling_short_negative_1/1',[]],['fun','antonius','test_SUITE:castling_short_negative_2/1',[]],['fun','antonius','test_SUITE:castling_short_negative_3/1',[]],['fun','antonius','test_SUITE:castling_short_negative_4/1',[]],['fun','antonius','test_SUITE:castling_short_negative_5/1',[]],['fun','antonius','test_SUITE:castling_short_positive/1',[]],['fun','antonius','test_SUITE:castling_when_checked/1',[]],['fun','antonius','test_SUITE:depth_3_evaluation/1',[]],['fun','antonius','test_SUITE:en_passant_1/1',[]],['fun','antonius','test_SUITE:en_passant_2/1',[]],['fun','antonius','test_SUITE:en_passant_3/1',[]],['fun','antonius','test_SUITE:end_per_testcase/2',[]],['fun','antonius','test_SUITE:engine_plays_white/1',[]],['fun','antonius','test_SUITE:groups/0',[]],['fun','antonius','test_SUITE:immediate_checkmate_2/1',[]],['fun','antonius','test_SUITE:init_per_suite/1',[]],['fun','antonius','test_SUITE:init_per_testcase/2',[]],['fun','antonius','test_SUITE:promotion_1/1',[]],['fun','antonius','test_SUITE:promotion_2/1',[]],['fun','antonius','test_SUITE:promotion_3/1',[]],['fun','antonius','test_SUITE:ref10_test/1',[]],['fun','antonius','test_SUITE:ref10_timing_test/1',[]],['fun','antonius','test_SUITE:ref11_single_move_depth2_test/1',[]],['fun','antonius','test_SUITE:ref11_single_move_depth3_test/1',[]],['fun','antonius','test_SUITE:ref11_single_move_test/1',[]],['fun','antonius','test_SUITE:ref11_test/1',[]],['fun','antonius','test_SUITE:ref12_test/1',[]],['fun','antonius','test_SUITE:ref16_test/1',[]],['fun','antonius','test_SUITE:ref8_test/1',[]],['fun','antonius','test_SUITE:reference_test/1',[]],['fun','antonius','test_SUITE:simple_opening_game/1',[]],['fun','antonius','test_SUITE:simple_opening_game_4/1',[]],['fun','antonius','test_SUITE:stalemate_avoidance/1',[]],['fun','antonius','xbi_command:execute/3',[]],['fun','antonius','xbi_command:setup/0',[]],['fun','antonius','xbi_controller:allowLogging/0',[]],['fun','antonius','xbi_controller:log/1',[]],['fun','antonius','xbi_controller:log/2',[]],['fun','antonius','xbi_controller:start/1',[]],['fun','antonius','xbi_controller:stdout/1',[]],['fun','antonius','xbi_controller:stdout/1',[]],['fun','antonius','xbi_go:execute/1',[]],['fun','antonius','xbi_listener:start/1',[]],['fun','antonius','xbi_new:execute/1',[]],['fun','antonius','xbi_protover:execute/1',[]],['fun','antonius','xbi_quit:execute/1','TODO, should this command execute the console comm'],['fun','antonius','xbi_remove:execute/1',[]],['fun','antonius','xbi_requests:start/1',[]],['fun','antonius','xbi_sd:execute/1',[]],['fun','antonius','xbi_usermove:engineMove/0',[]],['fun','antonius','xbi_usermove:execute/1',[]]];