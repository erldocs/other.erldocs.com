var index = [['app','couchbeam','couchbeam','[application]'],['mod','couchbeam','couchbeam',[]],['mod','couchbeam','couchbeam_app',[]],['mod','couchbeam','couchbeam_attachments','This module contains utilities to manage attachmen'],['mod','couchbeam','couchbeam_deps',[]],['mod','couchbeam','couchbeam_doc',[]],['mod','couchbeam','couchbeam_httpc',[]],['mod','couchbeam','couchbeam_json_stream',[]],['mod','couchbeam','couchbeam_mime','Gives a good MIME type guess based on file extensi'],['mod','couchbeam','couchbeam_sup',[]],['mod','couchbeam','couchbeam_util',[]],['mod','couchbeam','couchbeam_view',[]],['mod','couchbeam','gen_changes','gen_changes CouchDB continuous changes consumer be'],['fun','couchbeam','couchbeam:all_dbs/1','get list of databases on a CouchDB node.'],['fun','couchbeam','couchbeam:all_docs/1','get all documents from a CouchDB database.'],['fun','couchbeam','couchbeam:all_docs/1','get all documents from a CouchDB database.'],['fun','couchbeam','couchbeam:changes/1','get all changes.'],['fun','couchbeam','couchbeam:changes/1','get all changes.'],['fun','couchbeam','couchbeam:changes_wait/1','wait for continuous changes to a Pid.'],['fun','couchbeam','couchbeam:changes_wait/2','wait for continuous changes.'],['fun','couchbeam','couchbeam:changes_wait_once/1','wait for longpoll changes.'],['fun','couchbeam','couchbeam:changes_wait_once/2','wait for longpoll changes.'],['fun','couchbeam','couchbeam:code_change/3',[]],['fun','couchbeam','couchbeam:compact/1','Like compact/1 but this compacts the view index fr'],['fun','couchbeam','couchbeam:compact/1','Compaction compresses the database file by removin'],['fun','couchbeam','couchbeam:create_db/1','Create a database and a client for connectiong to '],['fun','couchbeam','couchbeam:create_db/2','Create a database and a client for connectiong to '],['fun','couchbeam','couchbeam:create_db/3','Create a database and a client for connectiong to '],['fun','couchbeam','couchbeam:db_exists/1','test if db with dbname exists on the CouchDB node.'],['fun','couchbeam','couchbeam:db_info/1','get database info.'],['fun','couchbeam','couchbeam:db_request/4',[]],['fun','couchbeam','couchbeam:db_request/5',[]],['fun','couchbeam','couchbeam:db_request/6',[]],['fun','couchbeam','couchbeam:db_url/1',[]],['fun','couchbeam','couchbeam:delete_attachment/3','delete a document attachment.'],['fun','couchbeam','couchbeam:delete_attachment/4','delete a document attachment.'],['fun','couchbeam','couchbeam:delete_db/1','delete database.'],['fun','couchbeam','couchbeam:delete_db/1','delete database.'],['fun','couchbeam','couchbeam:delete_doc/2','delete a document.'],['fun','couchbeam','couchbeam:delete_doc/3','delete a document  if you want to make sure the d'],['fun','couchbeam','couchbeam:delete_docs/1','delete a list of documents  if you want to make s'],['fun','couchbeam','couchbeam:delete_docs/2','delete a list of documents.'],['fun','couchbeam','couchbeam:doc_exists/1','test if doc with uuid exists in the given db.'],['fun','couchbeam','couchbeam:doc_url/2',[]],['fun','couchbeam','couchbeam:ensure_full_commit/1','commit all docs in memory.'],['fun','couchbeam','couchbeam:ensure_full_commit/1','commit all docs in memory.'],['fun','couchbeam','couchbeam:fetch_attachment/1','fetch a document attachment.'],['fun','couchbeam','couchbeam:fetch_attachment/3','fetch a document attachment.'],['fun','couchbeam','couchbeam:fetch_attachment/4','fetch a document attachment.'],['fun','couchbeam','couchbeam:get_uuid/1','Get one uuid from the server.'],['fun','couchbeam','couchbeam:get_uuids/1','Get a list of uuids from the server.'],['fun','couchbeam','couchbeam:handle_call/3',[]],['fun','couchbeam','couchbeam:handle_cast/2',[]],['fun','couchbeam','couchbeam:handle_info/2',[]],['fun','couchbeam','couchbeam:lookup_doc_rev/2',[]],['fun','couchbeam','couchbeam:lookup_doc_rev/3',[]],['fun','couchbeam','couchbeam:make_url/3',[]],['fun','couchbeam','couchbeam:open_db/1','Create a client for connection to a database.'],['fun','couchbeam','couchbeam:open_db/2','Create a client for connection to a database.'],['fun','couchbeam','couchbeam:open_doc/1','open a document  Params is a list of query argume'],['fun','couchbeam','couchbeam:open_doc/2','open a document.'],['fun','couchbeam','couchbeam:open_or_create_db/1','Create a client for connecting to a database and c'],['fun','couchbeam','couchbeam:open_or_create_db/2','Create a client for connecting to a database and c'],['fun','couchbeam','couchbeam:open_or_create_db/3','Create a client for connecting to a database and c'],['fun','couchbeam','couchbeam:put_attachment/1','put an attachment.'],['fun','couchbeam','couchbeam:put_attachment/4','put an attachment.'],['fun','couchbeam','couchbeam:replicate/1','Handle replication.'],['fun','couchbeam','couchbeam:replicate/1','Handle replication.'],['fun','couchbeam','couchbeam:replicate/4','handle Replication.'],['fun','couchbeam','couchbeam:save_doc/1','save a document  A document is a Json object like'],['fun','couchbeam','couchbeam:save_doc/2','save a document.'],['fun','couchbeam','couchbeam:save_docs/1','save a list of documents.'],['fun','couchbeam','couchbeam:save_docs/2','save a list of documents.'],['fun','couchbeam','couchbeam:server_connection/0','Create a server for connectiong to a CouchDB node.'],['fun','couchbeam','couchbeam:server_connection/1','Create a server for connectiong to a CouchDB node.'],['fun','couchbeam','couchbeam:server_connection/2','Create a server for connectiong to a CouchDB node.'],['fun','couchbeam','couchbeam:server_info/1','Get Information from the server.'],['fun','couchbeam','couchbeam:server_url/2','Assemble the server URL for the given client.'],['fun','couchbeam','couchbeam:start/0','Start the couchbeam process.'],['fun','couchbeam','couchbeam:start_link/0','Starts the couchbeam process linked to the calling'],['fun','couchbeam','couchbeam:stop/0','Stop the couchbeam process.'],['fun','couchbeam','couchbeam:stream_fetch_attachment/1','stream fetch attachment to a Pid.'],['fun','couchbeam','couchbeam:stream_fetch_attachment/4','stream fetch attachment to a Pid.'],['fun','couchbeam','couchbeam:stream_fetch_attachment/5','stream fetch attachment to a Pid.'],['fun','couchbeam','couchbeam:terminate/2',[]],['fun','couchbeam','couchbeam:uuids_url/1',[]],['fun','couchbeam','couchbeam:version/0','Return the version of the application.'],['fun','couchbeam','couchbeam:view/1','get view results from database.'],['fun','couchbeam','couchbeam:view/2',' get view results from database.'],['fun','couchbeam','couchbeam_app:start/2',[]],['fun','couchbeam','couchbeam_app:stop/1',[]],['fun','couchbeam','couchbeam_attachments:add_inline/1','add attachment  to a doc and encode it with Conten'],['fun','couchbeam','couchbeam_attachments:add_inline/1','add attachment  to a doc and encode it.'],['fun','couchbeam','couchbeam_attachments:attachment_acceptor/3','initiate attachment fetching.'],['fun','couchbeam','couchbeam_attachments:delete_inline/1','delete an attachment record in doc.'],['fun','couchbeam','couchbeam_attachments:wait_for_attachment/2','collect all attachments chunks.'],['fun','couchbeam','couchbeam_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','couchbeam','couchbeam_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','couchbeam','couchbeam_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','couchbeam','couchbeam_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','couchbeam','couchbeam_deps:get_base_dir/1','Return the application directory for Module.'],['fun','couchbeam','couchbeam_deps:local_path/1','Return an application-relative directory for this '],['fun','couchbeam','couchbeam_deps:local_path/1','Return an application-relative directory from Modu'],['fun','couchbeam','couchbeam_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','couchbeam','couchbeam_doc:delete_value/1','Deletes all entries associated with Key in json ob'],['fun','couchbeam','couchbeam_doc:extend/1','extend a jsonobject by a property or list of prope'],['fun','couchbeam','couchbeam_doc:extend/1','extend a jsonobject by key, value.'],['fun','couchbeam','couchbeam_doc:get_id/1','get document id.'],['fun','couchbeam','couchbeam_doc:get_idrev/1','get  a tuple containing docucment id and revision.'],['fun','couchbeam','couchbeam_doc:get_rev/1','get document revision.'],['fun','couchbeam','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','couchbeam','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','couchbeam','couchbeam_doc:is_saved/1','If document have been saved (revision is defined) '],['fun','couchbeam','couchbeam_doc:set_value/1','set a value for a key in jsonobj.'],['fun','couchbeam','couchbeam_httpc:request/4','send an ibrowse request.'],['fun','couchbeam','couchbeam_httpc:request/5',[]],['fun','couchbeam','couchbeam_httpc:request/6',[]],['fun','couchbeam','couchbeam_httpc:request_stream/4','stream an ibrowse request.'],['fun','couchbeam','couchbeam_httpc:request_stream/5',[]],['fun','couchbeam','couchbeam_httpc:request_stream/6',[]],['fun','couchbeam','couchbeam_json_stream:collect_object/2',[]],['fun','couchbeam','couchbeam_json_stream:events/2',[]],['fun','couchbeam','couchbeam_json_stream:to_ejson/1',[]],['fun','couchbeam','couchbeam_mime:from_extension/1','Given a filename extension (e.g.'],['fun','couchbeam','couchbeam_sup:init/1',[]],['fun','couchbeam','couchbeam_sup:start_link/0',[]],['fun','couchbeam','couchbeam_util:deprecated/3',[]],['fun','couchbeam','couchbeam_util:encode_att_name/1',[]],['fun','couchbeam','couchbeam_util:encode_docid/1',[]],['fun','couchbeam','couchbeam_util:encode_query/1','Encode needed value of Query proplists in json.'],['fun','couchbeam','couchbeam_util:encode_query_value/2','Encode value in JSON if needed depending on the ke'],['fun','couchbeam','couchbeam_util:get_value/1',[]],['fun','couchbeam','couchbeam_util:get_value/1','emulate proplists:get_value/2,3 but use faster lis'],['fun','couchbeam','couchbeam_util:guess_mime/1',' Guess the mime type of a file by the extension of'],['fun','couchbeam','couchbeam_util:oauth_header/3',[]],['fun','couchbeam','couchbeam_util:parse_options/1','make view options a list.'],['fun','couchbeam','couchbeam_util:parse_options/2',[]],['fun','couchbeam','couchbeam_util:parse_qs/1','Parse a query string or application/x-www-form-url'],['fun','couchbeam','couchbeam_util:propmerge/3','merge 2 proplists.'],['fun','couchbeam','couchbeam_util:propmerge1/2','Update a proplist with values of the second.'],['fun','couchbeam','couchbeam_util:quote_plus/1','URL safe encoding of the given term.'],['fun','couchbeam','couchbeam_util:to_atom/1',[]],['fun','couchbeam','couchbeam_util:to_binary/1',[]],['fun','couchbeam','couchbeam_util:to_integer/1',[]],['fun','couchbeam','couchbeam_util:to_list/1',[]],['fun','couchbeam','couchbeam_util:urlencode/2','URL encode the property list.'],['fun','couchbeam','couchbeam_util:urlsplit/1','Return a 5-tuple, does not expand % escapes.'],['fun','couchbeam','couchbeam_view:count/1','get number of results in the view.'],['fun','couchbeam','couchbeam_view:fetch/1','get all results in a view.'],['fun','couchbeam','couchbeam_view:first/1','get first row in results of the view.'],['fun','couchbeam','couchbeam_view:fold/2','Calls Fun on successive keys and values of View Re'],['fun','couchbeam','couchbeam_view:foreach/2','Calls Fun(Elem) for each element Row in view resul'],['fun','couchbeam','gen_changes:behaviour_info/1',[]],['fun','couchbeam','gen_changes:call/2',[]],['fun','couchbeam','gen_changes:call/3',[]],['fun','couchbeam','gen_changes:cast/2',[]],['fun','couchbeam','gen_changes:code_change/3',[]],['fun','couchbeam','gen_changes:get_seq/1',[]],['fun','couchbeam','gen_changes:handle_call/3',[]],['fun','couchbeam','gen_changes:handle_cast/2',[]],['fun','couchbeam','gen_changes:handle_info/2',[]],['fun','couchbeam','gen_changes:init/1',[]],['fun','couchbeam','gen_changes:start_link/2','create a gen_changes process as part of a supervis'],['fun','couchbeam','gen_changes:stop/1',[]],['fun','couchbeam','gen_changes:terminate/2',[]]];