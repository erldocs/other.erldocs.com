var index = [['app','couchbeam','couchbeam','[application]'],['mod','couchbeam','couchbeam',[]],['mod','couchbeam','couchbeam_client',[]],['mod','couchbeam','couchbeam_mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','couchbeam','couchbeam_mochinum','Useful numeric algorithms for floats that cover so'],['mod','couchbeam','couchbeam_sup',[]],['mod','couchbeam','couchbeam_util',[]],['fun','couchbeam','couchbeam:all_dbs/1','fetch list of all dbs.'],['fun','couchbeam','couchbeam:all_docs/1','This method has the same behavior as a view.'],['fun','couchbeam','couchbeam:all_docs_by_seq/1','This method has the same behavior as a view.'],['fun','couchbeam','couchbeam:code_change/3',[]],['fun','couchbeam','couchbeam:create_db/1','create a database with DbName.'],['fun','couchbeam','couchbeam:db_info/1','fetch information of Database.'],['fun','couchbeam','couchbeam:delete_attachment/1','delete attachment.'],['fun','couchbeam','couchbeam:delete_db/1','delete a database with dbname.'],['fun','couchbeam','couchbeam:delete_doc/1','delete a document.'],['fun','couchbeam','couchbeam:do_reply/1','make transformation on final http response.'],['fun','couchbeam','couchbeam:extend/1','extend a jsonobject by a property or list of prope'],['fun','couchbeam','couchbeam:extend/1','extend a jsonobject by key, value.'],['fun','couchbeam','couchbeam:fetch_attachment/1','fetch attachment.'],['fun','couchbeam','couchbeam:fetch_attachment/1','fetch attachment.'],['fun','couchbeam','couchbeam:get_value/1','get value from a json obje  function from erlang_'],['fun','couchbeam','couchbeam:handle_call/3',[]],['fun','couchbeam','couchbeam:handle_cast/2',[]],['fun','couchbeam','couchbeam:handle_info/2',[]],['fun','couchbeam','couchbeam:init/1',[]],['fun','couchbeam','couchbeam:is_db/1','If database exist in the node returns true.'],['fun','couchbeam','couchbeam:json_decode/1','decode from json string.'],['fun','couchbeam','couchbeam:json_encode/1','Encode to json.'],['fun','couchbeam','couchbeam:make_request/1','function used to create and send request.'],['fun','couchbeam','couchbeam:make_request/5',[]],['fun','couchbeam','couchbeam:make_request/6',[]],['fun','couchbeam','couchbeam:make_request/7',[]],['fun','couchbeam','couchbeam:next_uuid/0',[]],['fun','couchbeam','couchbeam:next_uuid/1',[]],['fun','couchbeam','couchbeam:open_connection/1','When you use couchbeam as an application (OTP mode'],['fun','couchbeam','couchbeam:open_doc/1','open a doc with DocId for specific revision.'],['fun','couchbeam','couchbeam:open_doc/1','open a doc with DocID.'],['fun','couchbeam','couchbeam:parse_view/1','Return a list of document ids for a given view.'],['fun','couchbeam','couchbeam:put_attachment/1','put attachment attachment with ContentType fixed.'],['fun','couchbeam','couchbeam:put_attachment/1','put attachment attachment, It will try to guess mi'],['fun','couchbeam','couchbeam:query_view/1','query a view and return results depending on param'],['fun','couchbeam','couchbeam:query_view/1','query a view and return results depending on param'],['fun','couchbeam','couchbeam:query_view/1','query a view and return all results.'],['fun','couchbeam','couchbeam:save_doc/1','save a do with DocId.'],['fun','couchbeam','couchbeam:save_doc/1','save a doc.'],['fun','couchbeam','couchbeam:save_docs/1','bulk update with options, currently support only a'],['fun','couchbeam','couchbeam:save_docs/1','bulk update.'],['fun','couchbeam','couchbeam:server_info/1',[]],['fun','couchbeam','couchbeam:start/0',[]],['fun','couchbeam','couchbeam:start/2',[]],['fun','couchbeam','couchbeam:stop/0',[]],['fun','couchbeam','couchbeam:stop/1',[]],['fun','couchbeam','couchbeam:sup_start_link/0',[]],['fun','couchbeam','couchbeam:terminate/2',[]],['fun','couchbeam','couchbeam:uuids/0',[]],['fun','couchbeam','couchbeam:uuids/1',[]],['fun','couchbeam','couchbeam:uuids/2',[]],['fun','couchbeam','couchbeam_client:body_fun/2',[]],['fun','couchbeam','couchbeam_client:code_change/3',[]],['fun','couchbeam','couchbeam_client:handle_call/3',[]],['fun','couchbeam','couchbeam_client:handle_cast/2',[]],['fun','couchbeam','couchbeam_client:handle_info/2',[]],['fun','couchbeam','couchbeam_client:init/1',[]],['fun','couchbeam','couchbeam_client:send_request/6',[]],['fun','couchbeam','couchbeam_client:send_request/7',[]],['fun','couchbeam','couchbeam_client:start/1',[]],['fun','couchbeam','couchbeam_client:start_link/1',[]],['fun','couchbeam','couchbeam_client:terminate/2',[]],['fun','couchbeam','couchbeam_mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','couchbeam','couchbeam_mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','couchbeam','couchbeam_mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','couchbeam','couchbeam_mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','couchbeam','couchbeam_mochijson2:test/0',[]],['fun','couchbeam','couchbeam_mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','couchbeam','couchbeam_mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','couchbeam','couchbeam_mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','couchbeam','couchbeam_mochinum:int_pow/1',' Moderately efficient way to exponentiate integers'],['fun','couchbeam','couchbeam_mochinum:test/0',[]],['fun','couchbeam','couchbeam_sup:init/1',[]],['fun','couchbeam','couchbeam_sup:start_link/0',[]],['fun','couchbeam','couchbeam_sup:start_nodes/0',[]],['fun','couchbeam','couchbeam_sup:stop/0',[]],['fun','couchbeam','couchbeam_util:generate_uuids/1',[]],['fun','couchbeam','couchbeam_util:guess_mime/1',' Guess the mime type of a file by the extension of'],['fun','couchbeam','couchbeam_util:join/1','Join a list of strings together with the given sep'],['fun','couchbeam','couchbeam_util:new_uuid/0',[]],['fun','couchbeam','couchbeam_util:quote_plus/1','URL safe encoding of the given term.'],['fun','couchbeam','couchbeam_util:revjoin/3',[]],['fun','couchbeam','couchbeam_util:split/1','split a binary.'],['fun','couchbeam','couchbeam_util:to_digit/1',[]],['fun','couchbeam','couchbeam_util:to_hex/1',[]],['fun','couchbeam','couchbeam_util:val/1',[]]];