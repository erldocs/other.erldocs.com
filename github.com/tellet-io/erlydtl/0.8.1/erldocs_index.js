var index = [['app','erlydtl','erlydtl','[application]'],['mod','erlydtl','erlydtl','   Public interface for ErlyDTL.'],['mod','erlydtl','erlydtl_contrib_humanize',[]],['mod','erlydtl','erlydtl_deps','   ErlyDTL helper module.'],['mod','erlydtl','erlydtl_filters','   Template filters.'],['mod','erlydtl','erlydtl_i18n',[]],['mod','erlydtl','erlydtl_runtime',[]],['mod','erlydtl','erlydtl_scanner','   erlydtl scanner.'],['mod','erlydtl','erlydtl_unparser',[]],['fun','erlydtl','erlydtl:compile/2',[]],['fun','erlydtl','erlydtl:compile/2',[]],['fun','erlydtl','erlydtl:compile_dir/1',[]],['fun','erlydtl','erlydtl:compile_dir/1',[]],['fun','erlydtl','erlydtl_contrib_humanize:intcomma/1',[]],['fun','erlydtl','erlydtl_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','erlydtl','erlydtl_deps:get_base_dir/1','Return the application directory for Module.'],['fun','erlydtl','erlydtl_filters:add/2','Adds to values.'],['fun','erlydtl','erlydtl_filters:addDefaultURI/1',[]],['fun','erlydtl','erlydtl_filters:addslashes/1','Adds slashes before quotes.'],['fun','erlydtl','erlydtl_filters:capfirst/1','Capitalizes the first character of the value.'],['fun','erlydtl','erlydtl_filters:cast_to_float/1',[]],['fun','erlydtl','erlydtl_filters:cast_to_integer/1',[]],['fun','erlydtl','erlydtl_filters:center/2','Centers the value in a field of a given width.'],['fun','erlydtl','erlydtl_filters:cut/2','Removes all values of arg from the given string.'],['fun','erlydtl','erlydtl_filters:date/1','Formats a date according to the default format.'],['fun','erlydtl','erlydtl_filters:date/2','Formats a date according to the given format.'],['fun','erlydtl','erlydtl_filters:default/2','If value evaluates to false, use given default.'],['fun','erlydtl','erlydtl_filters:default_if_none/2','If (and only if) value is undefined, use given def'],['fun','erlydtl','erlydtl_filters:dictsort/2','Takes a list of dictionaries or proplists and retu'],['fun','erlydtl','erlydtl_filters:dictsortreversed/2','Same as dictsort, but the list is reversed.'],['fun','erlydtl','erlydtl_filters:divisibleby/2','Returns true if the value is divisible by the argu'],['fun','erlydtl','erlydtl_filters:escapejs/1','Escapes characters for use in JavaScript strings.'],['fun','erlydtl','erlydtl_filters:filesizeformat/1','Format the value like a human-readable file size.'],['fun','erlydtl','erlydtl_filters:first/1','Returns the first item in a list.'],['fun','erlydtl','erlydtl_filters:fix_ampersands/1','Replaces ampersands with & entities.'],['fun','erlydtl','erlydtl_filters:floatformat/1','When used without an argument, rounds a floating-p'],['fun','erlydtl','erlydtl_filters:floatformat/2',[]],['fun','erlydtl','erlydtl_filters:force_escape/1','Applies HTML escaping to a string.'],['fun','erlydtl','erlydtl_filters:format_integer/1',[]],['fun','erlydtl','erlydtl_filters:format_number/1',[]],['fun','erlydtl','erlydtl_filters:get_digit/2','Given a whole number, returns the requested digit,'],['fun','erlydtl','erlydtl_filters:iriencode/1',[]],['fun','erlydtl','erlydtl_filters:join/2','Joins a list with a given separator.'],['fun','erlydtl','erlydtl_filters:last/1','Returns the last item in a list.'],['fun','erlydtl','erlydtl_filters:length/1','Returns the length of the value.'],['fun','erlydtl','erlydtl_filters:length_is/2','Returns True iff the values length is the argumen'],['fun','erlydtl','erlydtl_filters:linebreaks/1','Replaces line breaks in plain text with appropriat'],['fun','erlydtl','erlydtl_filters:linebreaksbr/1','Converts all newlines to HTML line breaks.'],['fun','erlydtl','erlydtl_filters:linenumbers/1','Displays text with line numbers.'],['fun','erlydtl','erlydtl_filters:ljust/2','Left-aligns the value in a field of a given width.'],['fun','erlydtl','erlydtl_filters:lower/1','Converts a string into all lowercase.'],['fun','erlydtl','erlydtl_filters:make_list/1','Returns the value turned into a list.'],['fun','erlydtl','erlydtl_filters:phone2numeric/1','Converts a phone number (possibly containing lette'],['fun','erlydtl','erlydtl_filters:pluralize/1',[]],['fun','erlydtl','erlydtl_filters:pluralize/2','Returns a plural suffix if the value is not 1.'],['fun','erlydtl','erlydtl_filters:pprint/1','"pretty print" arbitrary data structures.'],['fun','erlydtl','erlydtl_filters:random/1','Returns a random item from the given list.'],['fun','erlydtl','erlydtl_filters:random_num/1',[]],['fun','erlydtl','erlydtl_filters:random_range/1',[]],['fun','erlydtl','erlydtl_filters:removetags/2',[]],['fun','erlydtl','erlydtl_filters:rjust/2','Right-aligns the value in a field of a given width'],['fun','erlydtl','erlydtl_filters:round/2',[]],['fun','erlydtl','erlydtl_filters:slice/2','Returns a slice of the list.'],['fun','erlydtl','erlydtl_filters:slugify/1','Converts to lowercase, removes non-word characters'],['fun','erlydtl','erlydtl_filters:stringformat/2','Returns a formatted string.'],['fun','erlydtl','erlydtl_filters:stringformat_io/7','  A conversion specifier contains two or more cha'],['fun','erlydtl','erlydtl_filters:striptags/1','Strips all [X]HTML tags.'],['fun','erlydtl','erlydtl_filters:time/1','Formats a time according to the given format.'],['fun','erlydtl','erlydtl_filters:time/2',[]],['fun','erlydtl','erlydtl_filters:timesince/1',[]],['fun','erlydtl','erlydtl_filters:timesince/2',[]],['fun','erlydtl','erlydtl_filters:timeuntil/1',[]],['fun','erlydtl','erlydtl_filters:timeuntil/2',[]],['fun','erlydtl','erlydtl_filters:title/1','Converts a string into titlecase.'],['fun','erlydtl','erlydtl_filters:truncatechars/2','Truncates a string after a certain number of chara'],['fun','erlydtl','erlydtl_filters:truncatewords/2','Truncates a string after a certain number of words'],['fun','erlydtl','erlydtl_filters:truncatewords_html/2','Similar to truncatewords, except that it is aware '],['fun','erlydtl','erlydtl_filters:unjoin/2',[]],['fun','erlydtl','erlydtl_filters:unordered_list/1','Recursively takes a self-nested list and returns a'],['fun','erlydtl','erlydtl_filters:upper/1','Converts a string into all uppercase.'],['fun','erlydtl','erlydtl_filters:urlencode/1','Escapes a value for use in a URL.'],['fun','erlydtl','erlydtl_filters:urlencode/2',[]],['fun','erlydtl','erlydtl_filters:urlize/1','Converts URLs in text into clickable links.'],['fun','erlydtl','erlydtl_filters:urlize/2',[]],['fun','erlydtl','erlydtl_filters:urlizetrunc/2','Converts URLs into clickable links just like urliz'],['fun','erlydtl','erlydtl_filters:wordcount/1','Returns the number of words.'],['fun','erlydtl','erlydtl_filters:wordwrap/2','Wraps words at specified line length, uses &lt;BR/'],['fun','erlydtl','erlydtl_filters:yesno/2','Given a string mapping values for true, false and '],['fun','erlydtl','erlydtl_i18n:translate/2',[]],['fun','erlydtl','erlydtl_scanner:resume/1',[]],['fun','erlydtl','erlydtl_scanner:scan/1',[]],['fun','erlydtl','erlydtl_scanner:scan/4',[]],['fun','erlydtl','erlydtl_unparser:unparse/1',[]]];