var index = [['app','jtl','jtl','[application]'],['mod','jtl','jtl',[]],['mod','jtl','jtl_cli',[]],['mod','jtl','jtl_reloader','Erlang module for automatically reloading modified'],['fun','jtl','jtl:render/2',[]],['fun','jtl','jtl_cli:exec/1',[]],['fun','jtl','jtl_reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','jtl','jtl_reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','jtl','jtl_reloader:handle_call/3','gen_server callback.'],['fun','jtl','jtl_reloader:handle_cast/2','gen_server callback.'],['fun','jtl','jtl_reloader:handle_info/2','gen_server callback.'],['fun','jtl','jtl_reloader:init/1','gen_server init, opens the server in an initial st'],['fun','jtl','jtl_reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','jtl','jtl_reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','jtl','jtl_reloader:start/0','Start the reloader.'],['fun','jtl','jtl_reloader:start_link/0','Start the reloader.'],['fun','jtl','jtl_reloader:stop/0','Stop the reloader.'],['fun','jtl','jtl_reloader:terminate/2','gen_server termination callback.']];