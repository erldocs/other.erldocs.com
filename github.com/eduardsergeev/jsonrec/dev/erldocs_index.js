var index = [['app','jsonrec','jsonrec','[application]'],['mod','jsonrec','json_parsers','   JSON parsers.'],['mod','jsonrec','jsonrec','   Common function for jsonrec code_generators.'],['mod','jsonrec','jsonrec_code','   Common functionality of jsonrec_encode and jso'],['mod','jsonrec','jsonrec_decode','   JSON "decode" code generator.'],['mod','jsonrec','jsonrec_encode','   JSON "encode" code generator.'],['mod','jsonrec','parsers','   Monadic parser combinator library.'],['fun','jsonrec','json_parsers:any_json/0',[]],['fun','jsonrec','json_parsers:any_json_p/1',[]],['fun','jsonrec','json_parsers:array/1',[]],['fun','jsonrec','json_parsers:boolean/0',[]],['fun','jsonrec','json_parsers:boolean_p/1',[]],['fun','jsonrec','json_parsers:float/0',[]],['fun','jsonrec','json_parsers:float_p/1',[]],['fun','jsonrec','json_parsers:integer/0',[]],['fun','jsonrec','json_parsers:integer_p/1',[]],['fun','jsonrec','json_parsers:null/0',[]],['fun','jsonrec','json_parsers:null_p/1',[]],['fun','jsonrec','json_parsers:nullable/1',[]],['fun','jsonrec','json_parsers:object/3',[]],['fun','jsonrec','json_parsers:skip_json/0',[]],['fun','jsonrec','json_parsers:skip_json_p/1',[]],['fun','jsonrec','json_parsers:skip_object_field_p/1',[]],['fun','jsonrec','json_parsers:string/0',[]],['fun','jsonrec','json_parsers:string_p/1',[]],['fun','jsonrec','json_parsers:whitespace/0',[]],['fun','jsonrec','json_parsers:ws_p/1',[]],['fun','jsonrec','jsonrec:atom_to_camel/1','  Converts erlang_atom into camelStyle string.'],['fun','jsonrec','jsonrec:atom_to_pascal/1','  Converts erlang_atom into PascalStyle string.'],['fun','jsonrec','jsonrec_code:fetch_nameconv/1',[]],['fun','jsonrec','jsonrec_code:format_error/1',[]],['fun','jsonrec','jsonrec_code:handle_coder/1',[]],['fun','jsonrec','jsonrec_code:handle_nameconv/1',[]],['fun','jsonrec','jsonrec_code:handle_surrogate/1',[]],['fun','jsonrec','jsonrec_decode:decode_gen/4','  Generates JSON "decode" function body for JSON '],['fun','jsonrec','jsonrec_decode:decode_gen_parser/4','  Generates JSON parser using type annotation.'],['fun','jsonrec','jsonrec_decode:format_error/1',[]],['fun','jsonrec','jsonrec_encode:atom_to_json/1',[]],['fun','jsonrec','jsonrec_encode:binary_to_json/1',[]],['fun','jsonrec','jsonrec_encode:boolean_to_json/1',[]],['fun','jsonrec','jsonrec_encode:encode_gen/4','  Generates JSON "encode" function body for JSON '],['fun','jsonrec','jsonrec_encode:encode_gen_encoder/4','  Generates JSON encoder using type annotation.'],['fun','jsonrec','jsonrec_encode:float_to_json/1',[]],['fun','jsonrec','jsonrec_encode:format_error/1',[]],['fun','jsonrec','jsonrec_encode:integer_to_json/1',[]],['fun','jsonrec','jsonrec_encode:string_to_json/1',[]],['fun','jsonrec','parsers:bind/1',[]],['fun','jsonrec','parsers:count/1',[]],['fun','jsonrec','parsers:fail/1',[]],['fun','jsonrec','parsers:get_bin/0',[]],['fun','jsonrec','parsers:guard/1',[]],['fun','jsonrec','parsers:left/1',[]],['fun','jsonrec','parsers:lift/1',[]],['fun','jsonrec','parsers:many/1',[]],['fun','jsonrec','parsers:many_acc/1',[]],['fun','jsonrec','parsers:match/1',[]],['fun','jsonrec','parsers:matches/1',[]],['fun','jsonrec','parsers:matches/1',[]],['fun','jsonrec','parsers:mplus/1',[]],['fun','jsonrec','parsers:option/1',[]],['fun','jsonrec','parsers:return/1',[]],['fun','jsonrec','parsers:right/1',[]],['fun','jsonrec','parsers:sep_by_till/1',[]],['fun','jsonrec','parsers:sep_by_till1/1',[]],['fun','jsonrec','parsers:sep_by_till_acc/1',[]],['fun','jsonrec','parsers:sep_by_till_acc1/1',[]],['fun','jsonrec','parsers:sep_by_till_fold/5',[]],['fun','jsonrec','parsers:sep_by_till_fold1/5',[]],['fun','jsonrec','parsers:sequence/1',[]],['fun','jsonrec','parsers:skip_many/1',[]],['fun','jsonrec','parsers:skip_many1/1',[]],['fun','jsonrec','parsers:to_parser/1',[]]];