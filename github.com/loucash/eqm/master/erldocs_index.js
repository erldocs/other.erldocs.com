var index = [['app','eqm','eqm','[application]'],['mod','eqm','eqm',[]],['mod','eqm','eqm_pub','A Publisher is a provider of a potentially unbound'],['mod','eqm','eqm_sub','A Subscriber is a component that accepts a sequenc'],['mod','eqm','eqm_sub_sup',[]],['mod','eqm','eqm_sup',[]],['mod','eqm','eqm_topsup',[]],['fun','eqm','eqm:publisher_info/1','Retrieve publisher info.'],['fun','eqm','eqm:start/0','Starts an application.'],['fun','eqm','eqm:start/2',[]],['fun','eqm','eqm:start_publisher/1','Starts publisher in its own supervision tree.'],['fun','eqm','eqm:start_subscriber/1','Starts subscriber which subscribes to publisher.'],['fun','eqm','eqm:start_subscriber/1','Starts subscriber which subscribes to publisher.'],['fun','eqm','eqm:stop/0','Stops an application.'],['fun','eqm','eqm:stop/1',[]],['fun','eqm','eqm:stop_publisher/1','Stops publisher.'],['fun','eqm','eqm:stop_subscriber/1','Stops subscriber.'],['fun','eqm','eqm_pub:cancel/1','Cancel subscription.'],['fun','eqm','eqm_pub:capacity/1','Get capacity of Publisher.'],['fun','eqm','eqm_pub:demands/1',[]],['fun','eqm','eqm_pub:get_info/1','Given Publisher name, retrieve Publisher handler.'],['fun','eqm','eqm_pub:name/1',[]],['fun','eqm','eqm_pub:pid/1',[]],['fun','eqm','eqm_pub:post/1',[]],['fun','eqm','eqm_pub:post/1','Post new message.'],['fun','eqm','eqm_pub:request/1','Request demand for N messages.'],['fun','eqm','eqm_pub:start_link/3',[]],['fun','eqm','eqm_pub:sub_sup/1',[]],['fun','eqm','eqm_pub:subscribe/1',[]],['fun','eqm','eqm_sub:active/1','Forces the buffer into an active state where it wi'],['fun','eqm','eqm_sub:cancel/1','Cancel subscription, returns all messages from buf'],['fun','eqm','eqm_sub:cancelled/1','Publisher calls this function to confirm that subs'],['fun','eqm','eqm_sub:info/1','Returns info about buffer, size and number of mess'],['fun','eqm','eqm_sub:notify/1','Forces the buffer into its notify state, where it '],['fun','eqm','eqm_sub:notify_full/1','Forces the buffer into its notify_full state, wher'],['fun','eqm','eqm_sub:pid/1',[]],['fun','eqm','eqm_sub:post/1','Publisher calls this function to send new message.'],['fun','eqm','eqm_sub:ref/1',[]],['fun','eqm','eqm_sub:resize/1','Allows to take a given buffer, and make it larger '],['fun','eqm','eqm_sub:start_link/4','Starts new subscriber process which subscribes at '],['fun','eqm','eqm_sub:stop/1','Stops subscriber and drops messages from buffer.'],['fun','eqm','eqm_sub:subscription/1','Publisher calls this function after successful sub'],['fun','eqm','eqm_sub_sup:init/1',[]],['fun','eqm','eqm_sub_sup:start_link/0',[]],['fun','eqm','eqm_sub_sup:start_subscriber/1',[]],['fun','eqm','eqm_sup:init/1',[]],['fun','eqm','eqm_sup:start_link/1',[]],['fun','eqm','eqm_sup:start_sub_sup/1',[]],['fun','eqm','eqm_topsup:init/1',[]],['fun','eqm','eqm_topsup:start_dispatch/1',[]],['fun','eqm','eqm_topsup:start_link/0',[]],['fun','eqm','eqm_topsup:stop_dispatch/1',[]]];