var index = [['app','glg','glg','[application]'],['mod','glg','gtl','  The main module that contains all the API to th'],['mod','glg','gtl_app',[]],['mod','glg','gtl_saver',[]],['mod','glg','gtl_util',[]],['mod','glg','quota_server',[]],['fun','glg','gtl:bump_ttl/0',' When a process publishes an amq-message, it migh'],['fun','glg','gtl:code_change/3',[]],['fun','glg','gtl:deregister_client/0','remove from worker any info about GTL.'],['fun','glg','gtl:erase_clerk_info/0','erase info from worker about current logger.'],['fun','glg','gtl:get_clerk_info/0','get info from about current logger.'],['fun','glg','gtl:get_log/0','get log from current logger (if any).'],['fun','glg','gtl:handle_call/3',[]],['fun','glg','gtl:handle_cast/2',[]],['fun','glg','gtl:handle_info/2',[]],['fun','glg','gtl:init/1',[]],['fun','glg','gtl:is_process_alive/1',[]],['fun','glg','gtl:log/1','Remember a particular term.'],['fun','glg','gtl:mark/0',' By default, no transaction logs are ever recorde'],['fun','glg','gtl:mark/1',[]],['fun','glg','gtl:mark_if_slow/2','mark transaction if a the call to function F takes'],['fun','glg','gtl:mark_if_slow/3',[]],['fun','glg','gtl:maybe_log/1','same as log, but executed only if a logger has a'],['fun','glg','gtl:maybe_mark/0','same as mark, but executed only if a logger has '],['fun','glg','gtl:maybe_mark/1',[]],['fun','glg','gtl:quota_status/0','Get the current status of quota server.'],['fun','glg','gtl:set_clerk_info/1','save info into the worker about logger.'],['fun','glg','gtl:set_parent_clerk_info/1',[]],['fun','glg','gtl:set_ttl/1',' ask a gtl process to stay alive for a longer (sh'],['fun','glg','gtl:spawn/1','erlang:spawn replacer with GTL support.'],['fun','glg','gtl:spawn_opt/2','erlang:spawn_opt replacer with GTL support.'],['fun','glg','gtl:status/0','status about current logger (if any).'],['fun','glg','gtl:terminate/2',[]],['fun','glg','gtl_app:start/0',[]],['fun','glg','gtl_app:start/2',[]],['fun','glg','gtl_app:stop/1',[]],['fun','glg','gtl_saver:code_change/3',[]],['fun','glg','gtl_saver:handle_call/3',[]],['fun','glg','gtl_saver:handle_cast/2',[]],['fun','glg','gtl_saver:handle_info/2',[]],['fun','glg','gtl_saver:init/1',[]],['fun','glg','gtl_saver:save/1',[]],['fun','glg','gtl_saver:start_link/0',[]],['fun','glg','gtl_saver:terminate/2',[]],['fun','glg','gtl_util:now2micro/1',[]],['fun','glg','gtl_util:now2string/1',[]],['fun','glg','gtl_util:time_to_string/2',[]],['fun','glg','quota_server:alloc/1',[]],['fun','glg','quota_server:code_change/3',[]],['fun','glg','quota_server:free/1',[]],['fun','glg','quota_server:handle_call/3',[]],['fun','glg','quota_server:handle_cast/2',[]],['fun','glg','quota_server:handle_info/2',[]],['fun','glg','quota_server:init/1',[]],['fun','glg','quota_server:name/1',[]],['fun','glg','quota_server:quota_left/1',[]],['fun','glg','quota_server:resume/1',[]],['fun','glg','quota_server:set_limit/1',[]],['fun','glg','quota_server:start_link/1',[]],['fun','glg','quota_server:status/1',[]],['fun','glg','quota_server:stop/1',[]],['fun','glg','quota_server:terminate/2',[]]];