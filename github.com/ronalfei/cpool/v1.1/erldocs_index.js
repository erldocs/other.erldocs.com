var index = [['app','cpool','cpool','[application]'],['mod','cpool','cpool',[]],['mod','cpool','cpool_app',[]],['mod','cpool','cpool_mc_client',[]],['mod','cpool','cpool_pooler',[]],['mod','cpool','cpool_sup',[]],['mod','cpool','reloader','Erlang module for automatically reloading modified'],['mod','cpool','server_protocol',[]],['fun','cpool','cpool_app:start/2',[]],['fun','cpool','cpool_app:stop/1',[]],['fun','cpool','cpool_pooler:code_change/3',[]],['fun','cpool','cpool_pooler:handle_call/3',[]],['fun','cpool','cpool_pooler:handle_cast/2',[]],['fun','cpool','cpool_pooler:handle_info/2',[]],['fun','cpool','cpool_pooler:init/1',[]],['fun','cpool','cpool_pooler:terminate/2',[]],['fun','cpool','cpool_sup:init/1','supervisor callback.'],['fun','cpool','cpool_sup:start_link/0','API for starting the supervisor.'],['fun','cpool','reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','cpool','reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','cpool','reloader:handle_call/3','gen_server callback.'],['fun','cpool','reloader:handle_cast/2','gen_server callback.'],['fun','cpool','reloader:handle_info/2','gen_server callback.'],['fun','cpool','reloader:init/1','gen_server init, opens the server in an initial st'],['fun','cpool','reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','cpool','reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','cpool','reloader:start/0','Start the reloader.'],['fun','cpool','reloader:start_link/0','Start the reloader.'],['fun','cpool','reloader:stop/0','Stop the reloader.'],['fun','cpool','reloader:terminate/2','gen_server termination callback.'],['fun','cpool','server_protocol:init/4',[]],['fun','cpool','server_protocol:start_link/4',[]]];