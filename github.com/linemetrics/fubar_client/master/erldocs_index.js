var index = [['app','fubar_client','fubar_client','[application]'],['mod','fubar_client','fubar',[]],['mod','fubar_client','fubar_alarm',[]],['mod','fubar_client','fubar_app',[]],['mod','fubar_client','fubar_control',[]],['mod','fubar_client','fubar_log',[]],['mod','fubar_client','fubar_sup',[]],['mod','fubar_client','mqtt',[]],['mod','fubar_client','mqtt_client_sup',[]],['mod','fubar_client','mqtt_probe',[]],['mod','fubar_client','mqtt_protocol',[]],['mod','fubar_client','mqtt_server',[]],['mod','fubar_client','mqtt_session',[]],['mod','fubar_client','reloader','Erlang module for automatically reloading modified'],['mod','fubar_client','vm_memory_monitor',[]],['fun','fubar_client','fubar:apply_all_module_attributes_of/1','Get all the attributes of a name in current runtim'],['fun','fubar_client','fubar:create/1','Create a fubar.'],['fun','fubar_client','fubar:get/1','Get a field or fields in a fubar.'],['fun','fubar_client','fubar:set/1','Set fields in a fubar.'],['fun','fubar_client','fubar:settings/1','Set settings to the application metadata.'],['fun','fubar_client','fubar:settings/1','Get settings from the application metadata.'],['fun','fubar_client','fubar:start/0','Start application.'],['fun','fubar_client','fubar:state/0','Get application state.'],['fun','fubar_client','fubar:stop/0','Stop application.'],['fun','fubar_client','fubar:timestamp/1','Get timestamp of a field or fields in a fubar.'],['fun','fubar_client','fubar_alarm:boot/0',[]],['fun','fubar_client','fubar_alarm:boot/1',[]],['fun','fubar_client','fubar_alarm:code_change/3',[]],['fun','fubar_client','fubar_alarm:handle_call/2',[]],['fun','fubar_client','fubar_alarm:handle_event/2',[]],['fun','fubar_client','fubar_alarm:handle_info/2',[]],['fun','fubar_client','fubar_alarm:init/1',[]],['fun','fubar_client','fubar_alarm:is_alarmed/0',[]],['fun','fubar_client','fubar_alarm:on_node_down/1',[]],['fun','fubar_client','fubar_alarm:on_node_up/1',[]],['fun','fubar_client','fubar_alarm:register/1',[]],['fun','fubar_client','fubar_alarm:register/2',[]],['fun','fubar_client','fubar_alarm:remote_conserve_memory/2',[]],['fun','fubar_client','fubar_alarm:terminate/2',[]],['fun','fubar_client','fubar_app:boot/0','Master mode bootstrap logic.'],['fun','fubar_client','fubar_app:join/1','Slave mode bootstrap logic.'],['fun','fubar_client','fubar_app:leave/0','Leave cluster.'],['fun','fubar_client','fubar_app:start/2',[]],['fun','fubar_client','fubar_app:stop/1',[]],['fun','fubar_client','fubar_control:call/1',[]],['fun','fubar_client','fubar_log:access/1','Access log records client connect/disconnect event'],['fun','fubar_client','fubar_log:close/1','Close a log class.'],['fun','fubar_client','fubar_log:code_change/3',[]],['fun','fubar_client','fubar_log:debug/1','Debug log records various debugging checkpoints.'],['fun','fubar_client','fubar_log:dump/0','Dump all log classes to text files.'],['fun','fubar_client','fubar_log:dump/2','Dump a log class to a text file.'],['fun','fubar_client','fubar_log:error/1','Error log records abnormal and critical events.'],['fun','fubar_client','fubar_log:handle_call/3',[]],['fun','fubar_client','fubar_log:handle_cast/2',[]],['fun','fubar_client','fubar_log:handle_info/2',[]],['fun','fubar_client','fubar_log:info/1','Info log records normal events.'],['fun','fubar_client','fubar_log:init/1',[]],['fun','fubar_client','fubar_log:interval/1','Set log redirect interval.'],['fun','fubar_client','fubar_log:log/1','Generic logging.'],['fun','fubar_client','fubar_log:open/1','Open a log class.'],['fun','fubar_client','fubar_log:out/1','Redirect an open log.'],['fun','fubar_client','fubar_log:out/1','Redirect all open logs.'],['fun','fubar_client','fubar_log:packet/1','Packet log records binary packets to/from clients.'],['fun','fubar_client','fubar_log:protocol/1','Protocol log records messages.'],['fun','fubar_client','fubar_log:resource/1','Resource log records session/topic create/destroy '],['fun','fubar_client','fubar_log:start_link/0','Start a log manager.'],['fun','fubar_client','fubar_log:state/0','Get the log manager state.'],['fun','fubar_client','fubar_log:terminate/2',[]],['fun','fubar_client','fubar_log:trace/1','Trace log records a message with routing info and '],['fun','fubar_client','fubar_log:warning/1','Warning log records abnormal but not critical even'],['fun','fubar_client','fubar_sup:init/1',[]],['fun','fubar_client','fubar_sup:start_link/0','Start the supervisor.'],['fun','fubar_client','mqtt:connack/1',[]],['fun','fubar_client','mqtt:connect/1',[]],['fun','fubar_client','mqtt:degrade/1',[]],['fun','fubar_client','mqtt:disconnect/1',[]],['fun','fubar_client','mqtt:is_same/1',[]],['fun','fubar_client','mqtt:message_id/1',[]],['fun','fubar_client','mqtt:pingreq/1',[]],['fun','fubar_client','mqtt:pingresp/1',[]],['fun','fubar_client','mqtt:puback/1',[]],['fun','fubar_client','mqtt:pubcomp/1',[]],['fun','fubar_client','mqtt:publish/1',[]],['fun','fubar_client','mqtt:pubrec/1',[]],['fun','fubar_client','mqtt:pubrel/1',[]],['fun','fubar_client','mqtt:set_dup/1',[]],['fun','fubar_client','mqtt:suback/1',[]],['fun','fubar_client','mqtt:subscribe/1',[]],['fun','fubar_client','mqtt:unsuback/1',[]],['fun','fubar_client','mqtt:unsubscribe/1',[]],['fun','fubar_client','mqtt_client_sup:all/0','Get all the clients under supervision.'],['fun','fubar_client','mqtt_client_sup:init/1',[]],['fun','fubar_client','mqtt_client_sup:restart_child/1',[]],['fun','fubar_client','mqtt_client_sup:restart_child/1',[]],['fun','fubar_client','mqtt_client_sup:running/0','Get running clients under supervision.'],['fun','fubar_client','mqtt_client_sup:start_child/1',[]],['fun','fubar_client','mqtt_client_sup:start_child/1','Start an mqtt client under supervision.'],['fun','fubar_client','mqtt_client_sup:start_link/0','Start the supervisor.'],['fun','fubar_client','mqtt_client_sup:stop_child/1','Stop an mqtt client under supervision.'],['fun','fubar_client','mqtt_client_sup:stopped/0','Get running clients under supervision.'],['fun','fubar_client','mqtt_probe:loop/4',[]],['fun','fubar_client','mqtt_probe:start/4',[]],['fun','fubar_client','mqtt_probe:stop/1',[]],['fun','fubar_client','mqtt_protocol:code_change/3',[]],['fun','fubar_client','mqtt_protocol:handle_call/3',[]],['fun','fubar_client','mqtt_protocol:handle_cast/2',[]],['fun','fubar_client','mqtt_protocol:handle_info/2',[]],['fun','fubar_client','mqtt_protocol:init/1',[]],['fun','fubar_client','mqtt_protocol:setopts/1','Set socket options.'],['fun','fubar_client','mqtt_protocol:start/1','Start an MQTT client process.'],['fun','fubar_client','mqtt_protocol:start_link/1','Start an MQTT server process that receives and par'],['fun','fubar_client','mqtt_protocol:stop/1','Stop the process.'],['fun','fubar_client','mqtt_protocol:terminate/2',[]],['fun','fubar_client','mqtt_server:handle_event/1','Handle internal events from, supposedly, the sessi'],['fun','fubar_client','mqtt_server:handle_message/1','Handle MQTT messages.'],['fun','fubar_client','mqtt_server:init/1','Initialize the server process.'],['fun','fubar_client','mqtt_server:terminate/1','Finalize the server process.'],['fun','fubar_client','mqtt_session:bind/1','Bind a client to existing session or create a new '],['fun','fubar_client','mqtt_session:clean/1','Clean all the subscriptions.'],['fun','fubar_client','mqtt_session:code_change/3',[]],['fun','fubar_client','mqtt_session:handle_alert/2',[]],['fun','fubar_client','mqtt_session:handle_call/3',[]],['fun','fubar_client','mqtt_session:handle_cast/2',[]],['fun','fubar_client','mqtt_session:handle_info/2',[]],['fun','fubar_client','mqtt_session:init/1',[]],['fun','fubar_client','mqtt_session:max_age/1','Set max age of the session.'],['fun','fubar_client','mqtt_session:max_age/1','Get max age of the session.'],['fun','fubar_client','mqtt_session:setopts/1','Set socket options to override defaults.'],['fun','fubar_client','mqtt_session:start/1','Start an unbound session.'],['fun','fubar_client','mqtt_session:state/1','Get session state.'],['fun','fubar_client','mqtt_session:stop/1','Stop a session.'],['fun','fubar_client','mqtt_session:terminate/2',[]],['fun','fubar_client','mqtt_session:trace/1','Start or stop tracing messages from this session.'],['fun','fubar_client','mqtt_session:transaction_loop/4',[]],['fun','fubar_client','reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','fubar_client','reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','fubar_client','reloader:handle_call/3','gen_server callback.'],['fun','fubar_client','reloader:handle_cast/2','gen_server callback.'],['fun','fubar_client','reloader:handle_info/2','gen_server callback.'],['fun','fubar_client','reloader:init/1','gen_server init, opens the server in an initial st'],['fun','fubar_client','reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','fubar_client','reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','fubar_client','reloader:start/0','Start the reloader.'],['fun','fubar_client','reloader:start_link/0','Start the reloader.'],['fun','fubar_client','reloader:stop/0','Stop the reloader.'],['fun','fubar_client','reloader:terminate/2','gen_server termination callback.'],['fun','fubar_client','vm_memory_monitor:code_change/3',[]],['fun','fubar_client','vm_memory_monitor:get_check_interval/0',[]],['fun','fubar_client','vm_memory_monitor:get_memory_limit/0',[]],['fun','fubar_client','vm_memory_monitor:get_total_memory/0',[]],['fun','fubar_client','vm_memory_monitor:get_vm_limit/0',[]],['fun','fubar_client','vm_memory_monitor:get_vm_memory_high_watermark/0',[]],['fun','fubar_client','vm_memory_monitor:get_vm_memory_low_watermark/0',[]],['fun','fubar_client','vm_memory_monitor:handle_call/3',[]],['fun','fubar_client','vm_memory_monitor:handle_cast/2',[]],['fun','fubar_client','vm_memory_monitor:handle_info/2',[]],['fun','fubar_client','vm_memory_monitor:init/1',[]],['fun','fubar_client','vm_memory_monitor:set_check_interval/1',[]],['fun','fubar_client','vm_memory_monitor:set_vm_memory_high_watermark/1',[]],['fun','fubar_client','vm_memory_monitor:set_vm_memory_low_watermark/1',[]],['fun','fubar_client','vm_memory_monitor:start_link/0',[]],['fun','fubar_client','vm_memory_monitor:terminate/2',[]],['fun','fubar_client','vm_memory_monitor:update/0',[]]];