var index = [['app','erl_lib','erl_lib','[application]'],['mod','erl_lib','gen_server2',[]],['mod','erl_lib','lm_mon',[]],['mod','erl_lib','log',[]],['mod','erl_lib','mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','erl_lib','mochinum','Useful numeric algorithms for floats that cover so'],['mod','erl_lib','reloader','Erlang module for automatically reloading modified'],['mod','erl_lib','struct','Utilities for working with mochijson2 struct.'],['mod','erl_lib','util',[]],['fun','erl_lib','gen_server2:abcast/2',[]],['fun','erl_lib','gen_server2:abcast/3',[]],['fun','erl_lib','gen_server2:behaviour_info/1',[]],['fun','erl_lib','gen_server2:call/2',[]],['fun','erl_lib','gen_server2:call/3',[]],['fun','erl_lib','gen_server2:cast/2',[]],['fun','erl_lib','gen_server2:enter_loop/3',[]],['fun','erl_lib','gen_server2:enter_loop/4',[]],['fun','erl_lib','gen_server2:enter_loop/5',[]],['fun','erl_lib','gen_server2:format_status/2',[]],['fun','erl_lib','gen_server2:init_it/6',[]],['fun','erl_lib','gen_server2:multi_call/2',[]],['fun','erl_lib','gen_server2:multi_call/3',[]],['fun','erl_lib','gen_server2:multi_call/4',[]],['fun','erl_lib','gen_server2:pcall/3',[]],['fun','erl_lib','gen_server2:pcall/4',[]],['fun','erl_lib','gen_server2:pcast/3',[]],['fun','erl_lib','gen_server2:print_event/3',[]],['fun','erl_lib','gen_server2:reply/2',[]],['fun','erl_lib','gen_server2:start/3',[]],['fun','erl_lib','gen_server2:start/4',[]],['fun','erl_lib','gen_server2:start_link/3',[]],['fun','erl_lib','gen_server2:start_link/4',[]],['fun','erl_lib','gen_server2:system_code_change/4',[]],['fun','erl_lib','gen_server2:system_continue/3',[]],['fun','erl_lib','gen_server2:system_terminate/4',[]],['fun','erl_lib','gen_server2:wake_hib/7',[]],['fun','erl_lib','lm_mon:start_link/0','  Starts the server.'],['fun','erl_lib','lm_mon:start_link/1',[]],['fun','erl_lib','lm_mon:stat/3',[]],['fun','erl_lib','lm_mon:stat/4',[]],['fun','erl_lib','lm_mon:test/0',[]],['fun','erl_lib','log:put/2',[]],['fun','erl_lib','log:put/3',[]],['fun','erl_lib','mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','erl_lib','mochijson2:decode/1','Decode the given iolist to Erlang terms using the '],['fun','erl_lib','mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','erl_lib','mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','erl_lib','mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','erl_lib','mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','erl_lib','mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','erl_lib','mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','erl_lib','mochinum:int_pow/1',' Moderately efficient way to exponentiate integers'],['fun','erl_lib','reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','erl_lib','reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','erl_lib','reloader:handle_call/3','gen_server callback.'],['fun','erl_lib','reloader:handle_cast/2','gen_server callback.'],['fun','erl_lib','reloader:handle_info/2','gen_server callback.'],['fun','erl_lib','reloader:init/1','gen_server init, opens the server in an initial st'],['fun','erl_lib','reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','erl_lib','reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','erl_lib','reloader:start/0','Start the reloader.'],['fun','erl_lib','reloader:start_link/0','Start the reloader.'],['fun','erl_lib','reloader:stop/0','Stop the reloader.'],['fun','erl_lib','reloader:terminate/2','gen_server termination callback.'],['fun','erl_lib','struct:delete/1',[]],['fun','erl_lib','struct:extend/1','Extend a json struct with one or more json struct '],['fun','erl_lib','struct:get_value/1',[]],['fun','erl_lib','struct:get_value/3',[]],['fun','erl_lib','struct:set_value/1',[]],['fun','erl_lib','struct:withdraw/1','withdraw acts in the exact opposite way of extend ']];