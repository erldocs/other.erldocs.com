var index = [['app','beamjs','beamjs','[application]'],['mod','beamjs','beamjs_app',[]],['mod','beamjs','beamjs_js_formatter',[]],['mod','beamjs','beamjs_repl_console',[]],['mod','beamjs','beamjs_repl_sup',[]],['mod','beamjs','beamjs_sup',[]],['mod','beamjs','reloader','Erlang module for automatically reloading modified'],['fun','beamjs','beamjs_app:start/2',[]],['fun','beamjs','beamjs_app:stop/1',[]],['fun','beamjs','beamjs_js_formatter:format/2',[]],['fun','beamjs','beamjs_js_formatter:format_exception/2',[]],['fun','beamjs','beamjs_repl_console:print/2',[]],['fun','beamjs','beamjs_repl_console:read/1',[]],['fun','beamjs','beamjs_repl_sup:init/1',[]],['fun','beamjs','beamjs_repl_sup:start_link/0',[]],['fun','beamjs','beamjs_sup:init/1',[]],['fun','beamjs','beamjs_sup:start_link/0',[]],['fun','beamjs','reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','beamjs','reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','beamjs','reloader:handle_call/3','gen_server callback.'],['fun','beamjs','reloader:handle_cast/2','gen_server callback.'],['fun','beamjs','reloader:handle_info/2','gen_server callback.'],['fun','beamjs','reloader:init/1','gen_server init, opens the server in an initial st'],['fun','beamjs','reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','beamjs','reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','beamjs','reloader:start/0','Start the reloader.'],['fun','beamjs','reloader:start_link/0','Start the reloader.'],['fun','beamjs','reloader:stop/0','Stop the reloader.'],['fun','beamjs','reloader:terminate/2','gen_server termination callback.']];