var index = [['app','couchdbcp','couchdbcp','[application]'],['mod','couchdbcp','couchdbcp','CouchDBCP.'],['mod','couchdbcp','couchdbcp_app','Callbacks for the CouchDBCP application.'],['mod','couchdbcp','couchdbcp_deps','Ensure that the relatively-installed dependencies '],['mod','couchdbcp','couchdbcp_sup','Supervisor for the CouchDBCP application.'],['mod','couchdbcp','couchdbcp_web','CouchDBCP web server module.'],['fun','couchdbcp','couchdbcp:check_read_quorum/1','Find a quorum for read requests.'],['fun','couchdbcp','couchdbcp:cookie_store/0','Stores the peers cookies, so we can authenticate '],['fun','couchdbcp','couchdbcp:get_app_env/1','The official way to get the values set in couchdbc'],['fun','couchdbcp','couchdbcp:get_app_env/1','The official way to get the values set in couchdbc'],['fun','couchdbcp','couchdbcp:header_cache/0','Caches document metadata, i.e.'],['fun','couchdbcp','couchdbcp:notify_replication_success_to_peers/1',[]],['fun','couchdbcp','couchdbcp:peer_notifier/1','Periodically tries to notify a peer (Proxy) about '],['fun','couchdbcp','couchdbcp:replication_status_store/0','Stores databases that are replicated.'],['fun','couchdbcp','couchdbcp:start/0','Start the couchdbcp server.'],['fun','couchdbcp','couchdbcp:start/1','Start couchdbcp.'],['fun','couchdbcp','couchdbcp:stop/0','Stop the couchdbcp application and the calling pro'],['fun','couchdbcp','couchdbcp:write/1','Writes to all cluster nodes that are alive.'],['fun','couchdbcp','couchdbcp_app:read_config/0','Read the couchdbcp erlenv configuration file and s'],['fun','couchdbcp','couchdbcp_app:read_config/1','Read the couchdbcp erlenv configuration file with '],['fun','couchdbcp','couchdbcp_app:start/2','application start callback for couchdbcp.'],['fun','couchdbcp','couchdbcp_app:stop/1','application stop callback for couchdbcp.'],['fun','couchdbcp','couchdbcp_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','couchdbcp','couchdbcp_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','couchdbcp','couchdbcp_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','couchdbcp','couchdbcp_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','couchdbcp','couchdbcp_deps:get_base_dir/1','Return the application directory for Module.'],['fun','couchdbcp','couchdbcp_deps:local_path/1','Return an application-relative directory for this '],['fun','couchdbcp','couchdbcp_deps:local_path/1','Return an application-relative directory from Modu'],['fun','couchdbcp','couchdbcp_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','couchdbcp','couchdbcp_sup:init/1','supervisor callback.'],['fun','couchdbcp','couchdbcp_sup:start_link/0','API for starting the supervisor.'],['fun','couchdbcp','couchdbcp_sup:upgrade/0','Add processes if necessary.'],['fun','couchdbcp','couchdbcp_web:get_db_and_doc_name/1','Returns database and document name, or an empty li'],['fun','couchdbcp','couchdbcp_web:loop/2',[]],['fun','couchdbcp','couchdbcp_web:make_header_list/1','Makes a header_list() from headers() and replaces '],['fun','couchdbcp','couchdbcp_web:make_url/1',[]],['fun','couchdbcp','couchdbcp_web:start/1',[]],['fun','couchdbcp','couchdbcp_web:stop/0',[]]];