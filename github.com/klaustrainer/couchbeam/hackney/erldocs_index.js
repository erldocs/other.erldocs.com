var index = [['app','couchbeam','couchbeam','[application]'],['mod','couchbeam','couchbeam_app',[]],['mod','couchbeam','couchbeam_attachments','This module contains utilities to manage attachmen'],['mod','couchbeam','couchbeam_changes',[]],['mod','couchbeam','couchbeam_deps',[]],['mod','couchbeam','couchbeam_doc',[]],['mod','couchbeam','couchbeam_ejson',[]],['mod','couchbeam','couchbeam_httpc',[]],['mod','couchbeam','couchbeam_json_stream',[]],['mod','couchbeam','couchbeam_sup',[]],['mod','couchbeam','couchbeam_util',[]],['mod','couchbeam','couchbeam_uuids',[]],['mod','couchbeam','couchbeam_view',[]],['mod','couchbeam','gen_changes','gen_changes CouchDB continuous changes consumer be'],['fun','couchbeam','couchbeam_app:start/2',[]],['fun','couchbeam','couchbeam_app:stop/1',[]],['fun','couchbeam','couchbeam_attachments:add_inline/1','add attachment  to a doc and encode it with Conten'],['fun','couchbeam','couchbeam_attachments:add_inline/1','add attachment  to a doc and encode it.'],['fun','couchbeam','couchbeam_attachments:attachment_acceptor/3','initiate attachment fetching.'],['fun','couchbeam','couchbeam_attachments:delete_inline/1','delete an attachment record in doc.'],['fun','couchbeam','couchbeam_attachments:wait_for_attachment/2','collect all attachments chunks.'],['fun','couchbeam','couchbeam_changes:changes_loop/1',[]],['fun','couchbeam','couchbeam_changes:fetch/1','Collect Changes.'],['fun','couchbeam','couchbeam_changes:fetch/1','Equivalent to fetch(Db, []).'],['fun','couchbeam','couchbeam_changes:parse_changes_options/1','parse changes options and return a changes_args re'],['fun','couchbeam','couchbeam_changes:stream/1','Stream changes to a pid.'],['fun','couchbeam','couchbeam_changes:stream/1','Equivalent to stream(Db, Client, []).'],['fun','couchbeam','couchbeam_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','couchbeam','couchbeam_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','couchbeam','couchbeam_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','couchbeam','couchbeam_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','couchbeam','couchbeam_deps:get_base_dir/1','Return the application directory for Module.'],['fun','couchbeam','couchbeam_deps:local_path/1','Return an application-relative directory for this '],['fun','couchbeam','couchbeam_deps:local_path/1','Return an application-relative directory from Modu'],['fun','couchbeam','couchbeam_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','couchbeam','couchbeam_doc:delete_value/1','Deletes all entries associated with Key in json ob'],['fun','couchbeam','couchbeam_doc:extend/1','extend a jsonobject by a property or list of prope'],['fun','couchbeam','couchbeam_doc:extend/1','extend a jsonobject by key, value.'],['fun','couchbeam','couchbeam_doc:get_id/1','get document id.'],['fun','couchbeam','couchbeam_doc:get_idrev/1','get  a tuple containing docucment id and revision.'],['fun','couchbeam','couchbeam_doc:get_rev/1','get document revision.'],['fun','couchbeam','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','couchbeam','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','couchbeam','couchbeam_doc:is_saved/1','If document have been saved (revision is defined) '],['fun','couchbeam','couchbeam_doc:set_value/1','set a value for a key in jsonobj.'],['fun','couchbeam','couchbeam_ejson:decode/1','decode a binary to an EJSON term.'],['fun','couchbeam','couchbeam_ejson:encode/1','encode an erlang term to JSON.'],['fun','couchbeam','couchbeam_httpc:redirect_url/2',[]],['fun','couchbeam','couchbeam_httpc:request/4','send an ibrowse request.'],['fun','couchbeam','couchbeam_httpc:request/5',[]],['fun','couchbeam','couchbeam_httpc:request/6',[]],['fun','couchbeam','couchbeam_httpc:request_stream/3','stream an ibrowse request.'],['fun','couchbeam','couchbeam_httpc:request_stream/4',[]],['fun','couchbeam','couchbeam_json_stream:collect_object/2',[]],['fun','couchbeam','couchbeam_json_stream:events/2',[]],['fun','couchbeam','couchbeam_json_stream:to_ejson/1',[]],['fun','couchbeam','couchbeam_sup:init/1',[]],['fun','couchbeam','couchbeam_sup:start_link/0',[]],['fun','couchbeam','couchbeam_util:deprecated/3',[]],['fun','couchbeam','couchbeam_util:encode_att_name/1',[]],['fun','couchbeam','couchbeam_util:encode_docid/1',[]],['fun','couchbeam','couchbeam_util:encode_query/1','Encode needed value of Query proplists in json.'],['fun','couchbeam','couchbeam_util:encode_query_value/2','Encode value in JSON if needed depending on the ke'],['fun','couchbeam','couchbeam_util:get_app_env/2',[]],['fun','couchbeam','couchbeam_util:get_value/1',[]],['fun','couchbeam','couchbeam_util:get_value/1','emulate proplists:get_value/2,3 but use faster lis'],['fun','couchbeam','couchbeam_util:oauth_header/3',[]],['fun','couchbeam','couchbeam_util:parse_options/1','make view options a list.'],['fun','couchbeam','couchbeam_util:parse_options/2',[]],['fun','couchbeam','couchbeam_util:propmerge/3','merge 2 proplists.'],['fun','couchbeam','couchbeam_util:propmerge1/2','Update a proplist with values of the second.'],['fun','couchbeam','couchbeam_util:shutdown_sync/1',[]],['fun','couchbeam','couchbeam_util:start_app_deps/1','Start depedent applications of App.'],['fun','couchbeam','couchbeam_util:to_atom/1',[]],['fun','couchbeam','couchbeam_util:to_binary/1',[]],['fun','couchbeam','couchbeam_util:to_integer/1',[]],['fun','couchbeam','couchbeam_util:to_list/1',[]],['fun','couchbeam','couchbeam_uuids:code_change/3',[]],['fun','couchbeam','couchbeam_uuids:get_uuids/1','Get a list of uuids from the server.'],['fun','couchbeam','couchbeam_uuids:handle_call/3',[]],['fun','couchbeam','couchbeam_uuids:handle_cast/2',[]],['fun','couchbeam','couchbeam_uuids:handle_info/2',[]],['fun','couchbeam','couchbeam_uuids:start_link/0','Starts the couchbeam process linked to the calling'],['fun','couchbeam','couchbeam_uuids:terminate/2',[]],['fun','couchbeam','couchbeam_view:all/1','fetch all docs.'],['fun','couchbeam','couchbeam_view:all/1','fetch all docs.'],['fun','couchbeam','couchbeam_view:count/1','count number of doc in a view (or all docs).'],['fun','couchbeam','couchbeam_view:count/1','Equivalent to count(Db, ViewName, []).'],['fun','couchbeam','couchbeam_view:count/1','Equivalent to count(Db, all_docs, []).'],['fun','couchbeam','couchbeam_view:fetch/1','Collect view results.'],['fun','couchbeam','couchbeam_view:fetch/1','Equivalent to fetch(Db, ViewName, []).'],['fun','couchbeam','couchbeam_view:fetch/1','Equivalent to fetch(Db, all_docs, []).'],['fun','couchbeam','couchbeam_view:first/1','get first result of a view.'],['fun','couchbeam','couchbeam_view:first/1','Equivalent to first(Db, ViewName, []).'],['fun','couchbeam','couchbeam_view:first/1','Equivalent to first(Db, all_docs, []).'],['fun','couchbeam','couchbeam_view:fold/1','call Function(Row, AccIn) on succesive row, starti'],['fun','couchbeam','couchbeam_view:fold/1','Equivalent to fold(Function, Acc, Db, ViewName, []'],['fun','couchbeam','couchbeam_view:foreach/1','call Function(Row) on succesive row.'],['fun','couchbeam','couchbeam_view:foreach/1','Equivalent to foreach(Function, Db, ViewName, []).'],['fun','couchbeam','couchbeam_view:parse_view_options/1','parse view options.'],['fun','couchbeam','couchbeam_view:stream/1','stream view results to a pid.'],['fun','couchbeam','couchbeam_view:stream/1','Equivalent to stream(Db, ViewName, Client, []).'],['fun','couchbeam','couchbeam_view:stream/1','Equivalent to stream(Db, all_docs, Client, []).'],['fun','couchbeam','couchbeam_view:view_loop/2',[]],['fun','couchbeam','gen_changes:behaviour_info/1',[]],['fun','couchbeam','gen_changes:call/2',[]],['fun','couchbeam','gen_changes:call/3',[]],['fun','couchbeam','gen_changes:cast/2',[]],['fun','couchbeam','gen_changes:code_change/3',[]],['fun','couchbeam','gen_changes:get_seq/1',[]],['fun','couchbeam','gen_changes:handle_call/3',[]],['fun','couchbeam','gen_changes:handle_cast/2',[]],['fun','couchbeam','gen_changes:handle_info/2',[]],['fun','couchbeam','gen_changes:init/1',[]],['fun','couchbeam','gen_changes:start_link/2','create a gen_changes process as part of a supervis'],['fun','couchbeam','gen_changes:stop/1',[]],['fun','couchbeam','gen_changes:terminate/2',[]]];