var index = [['app','stax-gproc','stax-gproc','[application]'],['mod','stax-gproc','gproc','Extended process registry  This module implements'],['mod','stax-gproc','gproc_app',[]],['mod','stax-gproc','gproc_dist','Extended process registry.'],['mod','stax-gproc','gproc_info',[]],['mod','stax-gproc','gproc_init',[]],['mod','stax-gproc','gproc_lib','Extended process registry.'],['mod','stax-gproc','gproc_sup',[]],['fun','stax-gproc','gproc:add_global_aggr_counter/1','Registers a global (unique) aggregated counter.'],['fun','stax-gproc','gproc:add_global_counter/2','Registers a global (non-unique) counter.'],['fun','stax-gproc','gproc:add_global_name/1','Registers a global (unique) name.'],['fun','stax-gproc','gproc:add_global_property/2','Registers a global (non-unique) property.'],['fun','stax-gproc','gproc:add_local_aggr_counter/1','Registers a local (unique) aggregated counter.'],['fun','stax-gproc','gproc:add_local_counter/2','Registers a local (non-unique) counter.'],['fun','stax-gproc','gproc:add_local_name/1','Registers a local (unique) name.'],['fun','stax-gproc','gproc:add_local_property/2','Registers a local (non-unique) property.'],['fun','stax-gproc','gproc:add_shared_local_counter/2','Registers a local shared (unique) counter.'],['fun','stax-gproc','gproc:audit_process/1',[]],['fun','stax-gproc','gproc:await/1','Wait for a local name to be registered.'],['fun','stax-gproc','gproc:await/1','Equivalent to await(Key, infinity).'],['fun','stax-gproc','gproc:cancel_wait/2',[]],['fun','stax-gproc','gproc:default/1',[]],['fun','stax-gproc','gproc:first/1','Behaves as ets:first(Tab) for a given type of regi'],['fun','stax-gproc','gproc:get_env/1','Read an environment value, potentially cached as a'],['fun','stax-gproc','gproc:get_env/1','Equivalent to get_env(Scope, App, Key, [app_env]).'],['fun','stax-gproc','gproc:get_set_env/1','Fetch and cache an environment value, if not alrea'],['fun','stax-gproc','gproc:get_set_env/1','Equivalent to get_set_env(Scope, App, Key, [app_en'],['fun','stax-gproc','gproc:get_value/1','Reads the value stored with a key registered to th'],['fun','stax-gproc','gproc:get_value/2','Reads the value stored with a key registered to th'],['fun','stax-gproc','gproc:give_away/1','Atomically transfers the key From to the process i'],['fun','stax-gproc','gproc:goodbye/0','Unregister all items of the calling process and in'],['fun','stax-gproc','gproc:i/0','Similar to the built-in shell command i() but inse'],['fun','stax-gproc','gproc:info/1','Similar to process_info(Pid, Item), but with addit'],['fun','stax-gproc','gproc:info/1','Similar to process_info(Pid) but with additional g'],['fun','stax-gproc','gproc:last/1','Behaves as ets:last(Tab) for a given type of regis'],['fun','stax-gproc','gproc:lookup_global_aggr_counter/1','Lookup a global (unique) aggregated counter and re'],['fun','stax-gproc','gproc:lookup_global_counters/1','Look up all global (non-unique) instances of a giv'],['fun','stax-gproc','gproc:lookup_global_name/1','Lookup a global unique name.'],['fun','stax-gproc','gproc:lookup_global_properties/1','Look up all global (non-unique) instances of a giv'],['fun','stax-gproc','gproc:lookup_local_aggr_counter/1','Lookup a local (unique) aggregated counter and ret'],['fun','stax-gproc','gproc:lookup_local_counters/1','Look up all local (non-unique) instances of a give'],['fun','stax-gproc','gproc:lookup_local_name/1','Lookup a local unique name.'],['fun','stax-gproc','gproc:lookup_local_properties/1','Look up all local (non-unique) instances of a give'],['fun','stax-gproc','gproc:lookup_pid/1','Lookup the Pid stored with a key.'],['fun','stax-gproc','gproc:lookup_pids/1','Returns a list of pids with the published key Key.'],['fun','stax-gproc','gproc:lookup_value/1','Lookup the value stored with a key.'],['fun','stax-gproc','gproc:lookup_values/1','Retrieve the {Pid,Value} pairs corresponding to Ke'],['fun','stax-gproc','gproc:mreg/1','Register multiple {Key,Value} pairs of a given typ'],['fun','stax-gproc','gproc:munreg/1','Unregister multiple Key items of a given type and '],['fun','stax-gproc','gproc:nb_wait/1','Wait for a local name to be registered.'],['fun','stax-gproc','gproc:next/1','Behaves as ets:next(Tab,Key) for a given type of r'],['fun','stax-gproc','gproc:prev/1','Behaves as ets:prev(Tab,Key) for a given type of r'],['fun','stax-gproc','gproc:reg/1','Register a name or property for the current proces'],['fun','stax-gproc','gproc:reg/1','Equivalent to reg(Key, default(Key)).'],['fun','stax-gproc','gproc:reg_shared/1','Register a resource, but dont tie it to a particu'],['fun','stax-gproc','gproc:reg_shared/1','Register a resource, but dont tie it to a particu'],['fun','stax-gproc','gproc:reset_counter/1','Reads and resets a counter in a "thread-safe" way.'],['fun','stax-gproc','gproc:select/1','Like select/2 but returns Limit objects at a time.'],['fun','stax-gproc','gproc:select/1','Perform a select operation on the process registry'],['fun','stax-gproc','gproc:select/1','  see http://www.erlang.org/doc/man/ets.html#sele'],['fun','stax-gproc','gproc:select_count/1','Perform a select_count operation on the process re'],['fun','stax-gproc','gproc:select_count/1','Equivalent to select_count(all, Pat).'],['fun','stax-gproc','gproc:send/1','Sends a message to the process, or processes, corr'],['fun','stax-gproc','gproc:set_env/1','Updates the cached value as well as underlying env'],['fun','stax-gproc','gproc:set_value/1','Sets the value of the registeration entry given by'],['fun','stax-gproc','gproc:start_link/0','Starts the gproc server.'],['fun','stax-gproc','gproc:table/0','Equivalent to table({all, all}).'],['fun','stax-gproc','gproc:table/1','QLC table generator for the gproc registry.'],['fun','stax-gproc','gproc:table/1','Equivalent to table(Context, []).'],['fun','stax-gproc','gproc:unreg/1','Unregister a name or property.'],['fun','stax-gproc','gproc:unreg_shared/1','Unregister a shared resource.'],['fun','stax-gproc','gproc:unregister_name/1','Equivalent to unreg / 1.'],['fun','stax-gproc','gproc:update_counter/1','Updates the counter registered as Key for the curr'],['fun','stax-gproc','gproc:update_shared_counter/2',[]],['fun','stax-gproc','gproc:where/1','Returns the pid registered as Key.'],['fun','stax-gproc','gproc:whereis_name/1','Equivalent to where / 1.'],['fun','stax-gproc','gproc_app:start/0',[]],['fun','stax-gproc','gproc_app:start/2',[]],['fun','stax-gproc','gproc_app:stop/1',[]],['fun','stax-gproc','gproc_dist:code_change/4',[]],['fun','stax-gproc','gproc_dist:elected/2',[]],['fun','stax-gproc','gproc_dist:elected/3',[]],['fun','stax-gproc','gproc_dist:from_leader/3',[]],['fun','stax-gproc','gproc_dist:get_leader/0','Returns the node of the current gproc leader.'],['fun','stax-gproc','gproc_dist:give_away/2',[]],['fun','stax-gproc','gproc_dist:handle_call/4',[]],['fun','stax-gproc','gproc_dist:handle_cast/3',[]],['fun','stax-gproc','gproc_dist:handle_DOWN/3',[]],['fun','stax-gproc','gproc_dist:handle_info/2',[]],['fun','stax-gproc','gproc_dist:handle_leader_call/4',[]],['fun','stax-gproc','gproc_dist:handle_leader_cast/3',[]],['fun','stax-gproc','gproc_dist:init/1',[]],['fun','stax-gproc','gproc_dist:leader_call/1',[]],['fun','stax-gproc','gproc_dist:leader_cast/1',[]],['fun','stax-gproc','gproc_dist:mreg/2',[]],['fun','stax-gproc','gproc_dist:munreg/2',[]],['fun','stax-gproc','gproc_dist:reg/1',[]],['fun','stax-gproc','gproc_dist:reg/2','      Class = n  - unique name            | p  -'],['fun','stax-gproc','gproc_dist:reg_shared/2',[]],['fun','stax-gproc','gproc_dist:reset_counter/1',[]],['fun','stax-gproc','gproc_dist:set_value/2',[]],['fun','stax-gproc','gproc_dist:start_link/0',[]],['fun','stax-gproc','gproc_dist:start_link/1',[]],['fun','stax-gproc','gproc_dist:surrendered/3',[]],['fun','stax-gproc','gproc_dist:sync/0','Synchronize with the gproc leader.'],['fun','stax-gproc','gproc_dist:terminate/2',[]],['fun','stax-gproc','gproc_dist:unreg/1',[]],['fun','stax-gproc','gproc_dist:unreg_shared/1',[]],['fun','stax-gproc','gproc_dist:update_counter/2',[]],['fun','stax-gproc','gproc_dist:update_shared_counter/2',[]],['fun','stax-gproc','gproc_info:i/0',[]],['fun','stax-gproc','gproc_init:hard_reset/0',[]],['fun','stax-gproc','gproc_init:soft_reset/0',[]],['fun','stax-gproc','gproc_lib:await/3',[]],['fun','stax-gproc','gproc_lib:do_set_counter_value/3',[]],['fun','stax-gproc','gproc_lib:do_set_value/3',[]],['fun','stax-gproc','gproc_lib:ensure_monitor/2',[]],['fun','stax-gproc','gproc_lib:insert_many/1',[]],['fun','stax-gproc','gproc_lib:insert_reg/1',[]],['fun','stax-gproc','gproc_lib:remove_many/4',[]],['fun','stax-gproc','gproc_lib:remove_reg/2',[]],['fun','stax-gproc','gproc_lib:update_aggr_counter/3',[]],['fun','stax-gproc','gproc_lib:update_counter/3',[]],['fun','stax-gproc','gproc_lib:valid_opts/2',[]],['fun','stax-gproc','gproc_sup:init/1','The main GPROC supervisor.'],['fun','stax-gproc','gproc_sup:start_link/1',[]]];