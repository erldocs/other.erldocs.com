var index = [['app','erlkit','erlkit','[application]'],['mod','erlkit','json','Yet another JSON (RFC 4627) library for Erlang.'],['mod','erlkit','num','Useful numeric algorithms for floats that cover so'],['mod','erlkit','path',[]],['mod','erlkit','reloader','Erlang module for automatically reloading modified'],['mod','erlkit','timedb',[]],['mod','erlkit','util',[]],['fun','erlkit','json:decode/1','Decode the given iolist to Erlang terms.'],['fun','erlkit','json:decode/1','Decode the given iolist to Erlang terms using the '],['fun','erlkit','json:decoder/1','Create a decoder/1 with the given options.'],['fun','erlkit','json:encode/1','Encode the given as JSON to an iolist.'],['fun','erlkit','json:encoder/1','Create an encoder/1 with the given options.'],['fun','erlkit','num:digits/1',' Returns a string that accurately represents the g'],['fun','erlkit','num:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','erlkit','num:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','erlkit','num:int_pow/1',' Moderately efficient way to exponentiate integers'],['fun','erlkit','path:foldl/3',[]],['fun','erlkit','path:foldl/4',[]],['fun','erlkit','path:foldr/3',[]],['fun','erlkit','path:foldr/4',[]],['fun','erlkit','path:head/1',[]],['fun','erlkit','path:head/2',[]],['fun','erlkit','path:head/3',[]],['fun','erlkit','path:last/1',[]],['fun','erlkit','path:last/2',[]],['fun','erlkit','path:last/3',[]],['fun','erlkit','reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','erlkit','reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','erlkit','reloader:handle_call/3','gen_server callback.'],['fun','erlkit','reloader:handle_cast/2','gen_server callback.'],['fun','erlkit','reloader:handle_info/2','gen_server callback.'],['fun','erlkit','reloader:init/1','gen_server init, opens the server in an initial st'],['fun','erlkit','reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','erlkit','reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','erlkit','reloader:start/0','Start the reloader.'],['fun','erlkit','reloader:start_link/0','Start the reloader.'],['fun','erlkit','reloader:stop/0','Stop the reloader.'],['fun','erlkit','reloader:terminate/2','gen_server termination callback.'],['fun','erlkit','timedb:between/2',[]],['fun','erlkit','timedb:datetime/1',[]],['fun','erlkit','timedb:first/2',[]],['fun','erlkit','timedb:log/3',[]],['fun','erlkit','timedb:nafter/3',[]],['fun','erlkit','timedb:nbefore/3',[]],['fun','erlkit','timedb:newest/1',[]],['fun','erlkit','timedb:nextday/1',[]],['fun','erlkit','timedb:oldest/1',[]],['fun','erlkit','timedb:open/1',[]],['fun','erlkit','timedb:passtime/2',[]],['fun','erlkit','timedb:path/2',[]],['fun','erlkit','timedb:prevday/1',[]],['fun','erlkit','timedb:timestamp/1',[]],['fun','erlkit','util:ago/1',[]],['fun','erlkit','util:ago/2',[]],['fun','erlkit','util:hex/1',[]],['fun','erlkit','util:hexdigit/1',[]],['fun','erlkit','util:int/1',[]],['fun','erlkit','util:month/1',[]],['fun','erlkit','util:quote_plus/1',[]],['fun','erlkit','util:revjoin/3',[]],['fun','erlkit','util:seconds/1',[]],['fun','erlkit','util:unhexdigit/1',[]],['fun','erlkit','util:urlencode/1',[]],['fun','erlkit','util:write/2',[]],['fun','erlkit','util:write/3',[]]];