var index = [['app','relx','relx','[application]'],['mod','relx','rlx_app_discovery','This provider uses the lib_dir setting of the stat'],['mod','relx','rlx_cmd_args','Trivial utility file to help handle common tasks.'],['mod','relx','rlx_depsolver_culprit','    This app does the culprit search for a failed'],['mod','relx','rlx_dscv_util','This provider uses the lib_dir setting of the stat'],['mod','relx','rlx_goal',[]],['mod','relx','rlx_goal_utils','    Utilities to help with parsing of target spec'],['mod','relx','rlx_provider','    A module that supports providing state manipu'],['mod','relx','rlx_prv_archive','Given a complete built release this provider assem'],['mod','relx','rlx_prv_assembler','Given a complete built release this provider assem'],['mod','relx','rlx_prv_config','    A module that provides config parsing and sup'],['mod','relx','rlx_prv_discover','This provider uses the lib_dir setting of the stat'],['mod','relx','rlx_prv_overlay','Given a complete built release this provider assem'],['mod','relx','rlx_prv_release','This provider uses the lib_dir setting of the stat'],['mod','relx','rlx_prv_relup','Given a complete built release this provider assem'],['mod','relx','rlx_rel_discovery','This provider uses the lib_dir setting of the stat'],['mod','relx','rlx_state','Provides state management services for the relx to'],['mod','relx','rlx_topo','    This is a pretty simple topological sort for '],['mod','relx','rlx_util','Trivial utility file to help handle common tasks.'],['fun','relx','rlx_app_discovery:do/1','recursively dig down into the library directories '],['fun','relx','rlx_app_discovery:format_error/1',[]],['fun','relx','rlx_cmd_args:args2state/1',[]],['fun','relx','rlx_cmd_args:format_error/1',[]],['fun','relx','rlx_depsolver_culprit:format_constraint/1',[]],['fun','relx','rlx_depsolver_culprit:format_culprits/1',[]],['fun','relx','rlx_depsolver_culprit:format_error/1',[]],['fun','relx','rlx_depsolver_culprit:format_roots/1',[]],['fun','relx','rlx_depsolver_culprit:format_version/1',[]],['fun','relx','rlx_depsolver_culprit:search/1','start running the solver, with each run reduce the'],['fun','relx','rlx_dscv_util:do/1','recursively dig down into the library directories '],['fun','relx','rlx_dscv_util:format_error/1',[]],['fun','relx','rlx_goal:file/1',[]],['fun','relx','rlx_goal:parse/1',[]],['fun','relx','rlx_goal_utils:to_op/1',[]],['fun','relx','rlx_goal_utils:to_vsn/1',[]],['fun','relx','rlx_provider:do/1','Manipulate the state of the system, that new state'],['fun','relx','rlx_provider:format/1','print the provider module name.'],['fun','relx','rlx_provider:format_error/1','format an error produced from a provider.'],['fun','relx','rlx_provider:format_error/1','format an error produced from a provider.'],['fun','relx','rlx_provider:get_provider/1',[]],['fun','relx','rlx_provider:get_target_providers/2',[]],['fun','relx','rlx_provider:impl/1','get the name of the module that implements the pro'],['fun','relx','rlx_provider:new/1','create a new provider object from the specified mo'],['fun','relx','rlx_prv_archive:do/1',[]],['fun','relx','rlx_prv_archive:format_error/1',[]],['fun','relx','rlx_prv_archive:init/1',[]],['fun','relx','rlx_prv_assembler:do/1','recursively dig down into the library directories '],['fun','relx','rlx_prv_assembler:format_error/1',[]],['fun','relx','rlx_prv_assembler:init/1',[]],['fun','relx','rlx_prv_config:do/1','parse all the configs currently specified in the s'],['fun','relx','rlx_prv_config:format_error/1',[]],['fun','relx','rlx_prv_config:init/1','Required by the system, but not used in this provi'],['fun','relx','rlx_prv_discover:do/1','recursively dig down into the library directories '],['fun','relx','rlx_prv_discover:format_error/1','this is here to comply with the signature.'],['fun','relx','rlx_prv_discover:init/1',[]],['fun','relx','rlx_prv_overlay:do/1','recursively dig down into the library directories '],['fun','relx','rlx_prv_overlay:format_error/1',[]],['fun','relx','rlx_prv_overlay:init/1',[]],['fun','relx','rlx_prv_release:do/1','recursively dig down into the library directories '],['fun','relx','rlx_prv_release:format_error/1',[]],['fun','relx','rlx_prv_release:init/1',[]],['fun','relx','rlx_prv_relup:do/1',[]],['fun','relx','rlx_prv_relup:format_error/1',[]],['fun','relx','rlx_prv_relup:init/1',[]],['fun','relx','rlx_rel_discovery:do/1','recursively dig down into the library directories '],['fun','relx','rlx_rel_discovery:format_error/1',[]],['fun','relx','rlx_state:actions/1','the actions targeted for this system.'],['fun','relx','rlx_state:add_configured_release/1',[]],['fun','relx','rlx_state:add_lib_dirs/1',[]],['fun','relx','rlx_state:add_provider/1',[]],['fun','relx','rlx_state:add_realized_release/1',[]],['fun','relx','rlx_state:available_apps/1',[]],['fun','relx','rlx_state:available_apps/1',[]],['fun','relx','rlx_state:base_output_dir/1',[]],['fun','relx','rlx_state:base_output_dir/1',[]],['fun','relx','rlx_state:caller/1',[]],['fun','relx','rlx_state:caller/1',[]],['fun','relx','rlx_state:cli_args/1',[]],['fun','relx','rlx_state:cli_args/1',[]],['fun','relx','rlx_state:config_file/1',[]],['fun','relx','rlx_state:config_file/1',[]],['fun','relx','rlx_state:configured_releases/1',[]],['fun','relx','rlx_state:default_configured_release/1',[]],['fun','relx','rlx_state:default_configured_release/1',[]],['fun','relx','rlx_state:dev_mode/1',[]],['fun','relx','rlx_state:dev_mode/1',[]],['fun','relx','rlx_state:format/1',[]],['fun','relx','rlx_state:format/1',[]],['fun','relx','rlx_state:get/1',[]],['fun','relx','rlx_state:get/1',[]],['fun','relx','rlx_state:get_configured_release/1',[]],['fun','relx','rlx_state:get_realized_release/1',[]],['fun','relx','rlx_state:goals/1',[]],['fun','relx','rlx_state:goals/1',[]],['fun','relx','rlx_state:include_src/1',[]],['fun','relx','rlx_state:include_src/1',[]],['fun','relx','rlx_state:lib_dirs/1',[]],['fun','relx','rlx_state:log/1','get the current log state for the system.'],['fun','relx','rlx_state:new/1',[]],['fun','relx','rlx_state:new/1',[]],['fun','relx','rlx_state:output_dir/1',[]],['fun','relx','rlx_state:overrides/1','the application overrides for the system.'],['fun','relx','rlx_state:overrides/1','the application overrides for the system.'],['fun','relx','rlx_state:providers/1',[]],['fun','relx','rlx_state:providers/1',[]],['fun','relx','rlx_state:put/1',[]],['fun','relx','rlx_state:realized_releases/1',[]],['fun','relx','rlx_state:realized_releases/1',[]],['fun','relx','rlx_state:root_dir/1',[]],['fun','relx','rlx_state:root_dir/1',[]],['fun','relx','rlx_state:skip_apps/1','the application overrides for the system.'],['fun','relx','rlx_state:skip_apps/1',[]],['fun','relx','rlx_state:sys_config/1',[]],['fun','relx','rlx_state:sys_config/1',[]],['fun','relx','rlx_state:update_realized_release/1',[]],['fun','relx','rlx_state:upfrom/1',[]],['fun','relx','rlx_state:upfrom/1',[]],['fun','relx','rlx_state:vm_args/1',[]],['fun','relx','rlx_state:vm_args/1',[]],['fun','relx','rlx_topo:format_error/1','nicely format the error from the sort.'],['fun','relx','rlx_topo:sort/1','Do a topological sort on the list of pairs.'],['fun','relx','rlx_topo:sort_apps/1','This only does a topo sort on the list of applicat'],['fun','relx','rlx_util:error_reason/1','get the reason for a particular relx error.'],['fun','relx','rlx_util:get_code_paths/1','Generates the correct set of code paths for the sy'],['fun','relx','rlx_util:indent/1','ident to the level specified.'],['fun','relx','rlx_util:is_error/1','check to see if the value is a relx error.'],['fun','relx','rlx_util:make_script/1',[]],['fun','relx','rlx_util:mkdir_p/1','Makes a directory including parent dirs if they ar'],['fun','relx','rlx_util:optional_to_string/1','convert optional argument to empty string if undef'],['fun','relx','rlx_util:release_output_dir/1',[]],['fun','relx','rlx_util:to_atom/1',[]],['fun','relx','rlx_util:to_binary/1',[]],['fun','relx','rlx_util:to_string/1',[]],['fun','relx','rlx_util:wildcard_paths/1','expand wildcards and names in the given paths.']];