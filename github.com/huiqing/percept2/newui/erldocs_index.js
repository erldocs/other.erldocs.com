var index = [['app','percept2','percept2','[application]'],['mod','percept2','egd','egd - erlang graphical drawer.'],['mod','percept2','egd_font','egd_font.'],['mod','percept2','egd_png','egd.'],['mod','percept2','egd_primitives','egd_primitives.'],['mod','percept2','egd_render','egd_render.'],['mod','percept2','gen_plt_script',[]],['mod','percept2','percept2','Percept2 - An Enhanced version of the Erlang Concu'],['mod','percept2','percept2_analyzer','Utility functions to operate on percept data.'],['mod','percept2','percept2_ast_server',[]],['mod','percept2','percept2_callgraph',[]],['mod','percept2','percept2_data_gen','Interface for CGI request on graphs used by percep'],['mod','percept2','percept2_db','Percept database.'],['mod','percept2','percept2_dot',[]],['mod','percept2','percept2_epp_dodger','epp_dodger - bypasses the Erlang preprocessor.'],['mod','percept2','percept2_graph','Interface for CGI request on graphs used by percep'],['mod','percept2','percept2_html',[]],['mod','percept2','percept2_image',[]],['mod','percept2','percept2_io',[]],['mod','percept2','percept2_multi_node_trace',[]],['mod','percept2','percept2_profile','Percept Collector.'],['mod','percept2','percept2_scan',[]],['mod','percept2','percept2_syntax','Abstract Erlang syntax trees.'],['mod','percept2','percept2_utils',[]],['fun','percept2','egd:color/1','Creates a color reference.'],['fun','percept2','egd:create/1','Creates an image area and returns its reference.'],['fun','percept2','egd:destroy/1','Destroys the image.'],['fun','percept2','egd:filledEllipse/1','Creates a filled ellipse object.'],['fun','percept2','egd:filledRectangle/1','Creates a filled rectangle object.'],['fun','percept2','egd:line/1','Creates a line object from P1 to P2 in the image.'],['fun','percept2','egd:rectangle/1','Creates a rectangle object.'],['fun','percept2','egd:render/1','Renders a binary from the primitives specified by '],['fun','percept2','egd:render/1','Equivalent to render(Image, Type, [{render_engine,'],['fun','percept2','egd:render/1','Equivalent to render(Image, png, [{render_engine, '],['fun','percept2','egd:save/1','Saves the binary to file.'],['fun','percept2','egd:text/1','Creates a text object.'],['fun','percept2','egd_font:glyph/2',[]],['fun','percept2','egd_font:load/1',[]],['fun','percept2','egd_font:size/1',[]],['fun','percept2','egd_png:binary/3',[]],['fun','percept2','egd_primitives:arc/4',[]],['fun','percept2','egd_primitives:arc/5',[]],['fun','percept2','egd_primitives:arc_to_edges/3',[]],['fun','percept2','egd_primitives:color/1',[]],['fun','percept2','egd_primitives:convex_hull/1',[]],['fun','percept2','egd_primitives:create/2',[]],['fun','percept2','egd_primitives:edges/1',[]],['fun','percept2','egd_primitives:filledEllipse/4',[]],['fun','percept2','egd_primitives:filledRectangle/4',[]],['fun','percept2','egd_primitives:filledTriangle/5',[]],['fun','percept2','egd_primitives:info/1',[]],['fun','percept2','egd_primitives:line/4',[]],['fun','percept2','egd_primitives:line/5',[]],['fun','percept2','egd_primitives:object_info/1',[]],['fun','percept2','egd_primitives:pixel/3',[]],['fun','percept2','egd_primitives:polygon/3',[]],['fun','percept2','egd_primitives:rectangle/4',[]],['fun','percept2','egd_primitives:rgb_float2byte/1',[]],['fun','percept2','egd_primitives:text/5',[]],['fun','percept2','egd_render:binary/1',[]],['fun','percept2','egd_render:binary/2',[]],['fun','percept2','egd_render:eps/1',[]],['fun','percept2','gen_plt_script:gen_plt_script/6',[]],['fun','percept2','percept2:analyze/1','Parallel analysis of trace files.'],['fun','percept2','percept2:analyze/1','Parallel analysis of trace files.'],['fun','percept2','percept2:profile/1','The profiling starts with executing the entry func'],['fun','percept2','percept2:profile/1','Starts the profiling while an application of inter'],['fun','percept2','percept2:start_webserver/0','Starts webserver.'],['fun','percept2','percept2:start_webserver/1','Starts webserver with a given port number.'],['fun','percept2','percept2:stop_db/0','Stops the percept2 database.'],['fun','percept2','percept2:stop_profile/0','Stops the profiling.'],['fun','percept2','percept2:stop_webserver/0','Stops webserver.'],['fun','percept2','percept2:stop_webserver/1','Stops webserver of the given port.'],['fun','percept2','percept2_analyzer:activities2count/2','Calculate the resulting active processes and ports'],['fun','percept2','percept2_analyzer:activities2count/3',[]],['fun','percept2','percept2_analyzer:activities2count2/2',[]],['fun','percept2','percept2_analyzer:mean/1','Calculates the mean and the standard deviation of '],['fun','percept2','percept2_analyzer:minmax_activities/2','Calculates the minimum and maximum of runnable act'],['fun','percept2','percept2_analyzer:waiting_activities/1','Calculates the time, both average and total, that '],['fun','percept2','percept2_db:consolidate_db/0',[]],['fun','percept2','percept2_db:gen_compressed_process_tree/0',[]],['fun','percept2','percept2_db:gen_process_tree/0',[]],['fun','percept2','percept2_db:insert/1','Inserts a trace or profile message to the database'],['fun','percept2','percept2_db:is_database_loaded/0',[]],['fun','percept2','percept2_db:is_dummy_pid/1',[]],['fun','percept2','percept2_db:pid2value/1',[]],['fun','percept2','percept2_db:select/1','Synchronous call.'],['fun','percept2','percept2_db:start/1','starts the percept database.'],['fun','percept2','percept2_db:stop/0','stops the percept2_db database.'],['fun','percept2','percept2_db:stop/1','Stops a percept database.'],['fun','percept2','percept2_db:stop_sync/1',[]],['fun','percept2','percept2_db:trace_call/2',[]],['fun','percept2','percept2_db:trace_closed/2',[]],['fun','percept2','percept2_db:trace_end_of_trace/2',[]],['fun','percept2','percept2_db:trace_exit/2',[]],['fun','percept2','percept2_db:trace_getting_linked/2',[]],['fun','percept2','percept2_db:trace_getting_unlinked/2',[]],['fun','percept2','percept2_db:trace_in/2',[]],['fun','percept2','percept2_db:trace_in_exiting/2',[]],['fun','percept2','percept2_db:trace_link/2',[]],['fun','percept2','percept2_db:trace_open/2',[]],['fun','percept2','percept2_db:trace_out/2',[]],['fun','percept2','percept2_db:trace_out_exited/2',[]],['fun','percept2','percept2_db:trace_out_exiting/2',[]],['fun','percept2','percept2_db:trace_receive/2',[]],['fun','percept2','percept2_db:trace_register/2',[]],['fun','percept2','percept2_db:trace_return_to/2',[]],['fun','percept2','percept2_db:trace_send/2',[]],['fun','percept2','percept2_db:trace_send_to_non_existing_process/2',[]],['fun','percept2','percept2_db:trace_spawn/2',[]],['fun','percept2','percept2_db:trace_unlink/2',[]],['fun','percept2','percept2_db:trace_unregister/2',[]],['fun','percept2','percept2_dot:gen_callgraph_img/1',[]],['fun','percept2','percept2_dot:gen_callgraph_slice_img/4',[]],['fun','percept2','percept2_dot:gen_process_tree_img/1',[]],['fun','percept2','percept2_dot:gen_process_tree_img_1/2',[]],['fun','percept2','percept2_epp_dodger:fix_pos_in_form/2',[]],['fun','percept2','percept2_epp_dodger:normal_parser/2',[]],['fun','percept2','percept2_epp_dodger:parse_file/2','Reads and parses a file.'],['fun','percept2','percept2_epp_dodger:parse_tokens/1',[]],['fun','percept2','percept2_epp_dodger:rewrite_list/1',[]],['fun','percept2','percept2_epp_dodger:scan_form/2',[]],['fun','percept2','percept2_epp_dodger:scan_macros/2',[]],['fun','percept2','percept2_graph:activity/3','An ESI callback implementation used by the httpd s'],['fun','percept2','percept2_graph:calltime_percentage/3',[]],['fun','percept2','percept2_graph:graph/3','An ESI callback implementation used by the httpd s'],['fun','percept2','percept2_graph:inter_node_message_graph/3',[]],['fun','percept2','percept2_graph:memory_graph/3',[]],['fun','percept2','percept2_graph:percentage/3',[]],['fun','percept2','percept2_graph:ports_graph/3',[]],['fun','percept2','percept2_graph:proc_lifetime/3',[]],['fun','percept2','percept2_graph:procs_graph/3',[]],['fun','percept2','percept2_graph:query_fun_time/3',[]],['fun','percept2','percept2_graph:scheduler_graph/3',[]],['fun','percept2','percept2_html:active_funcs_page/1',[]],['fun','percept2','percept2_html:callgraph_slice_visualisation_page/1',[]],['fun','percept2','percept2_html:callgraph_visualisation_page/1',[]],['fun','percept2','percept2_html:codelocation_page/1',[]],['fun','percept2','percept2_html:concurrency_page/1',[]],['fun','percept2','percept2_html:databases_page/1',[]],['fun','percept2','percept2_html:func_callgraph_content/3',[]],['fun','percept2','percept2_html:function_info_page/1',[]],['fun','percept2','percept2_html:get_option_value/1',[]],['fun','percept2','percept2_html:inter_node_message_graph_page/3',[]],['fun','percept2','percept2_html:inter_node_message_page/3',[]],['fun','percept2','percept2_html:load_database_page/1',[]],['fun','percept2','percept2_html:overview_page/1',[]],['fun','percept2','percept2_html:ports_page/1',[]],['fun','percept2','percept2_html:process_info_page/1',[]],['fun','percept2','percept2_html:process_tree_page/1',[]],['fun','percept2','percept2_html:process_tree_visualisation_page/1',[]],['fun','percept2','percept2_html:seconds2ts/1','Calculates a timestamp given a duration in seconds'],['fun','percept2','percept2_html:summary_report_page/1',[]],['fun','percept2','percept2_html:visualise_sampling_data_page/1',[]],['fun','percept2','percept2_image:activities/3',[]],['fun','percept2','percept2_image:activities/4',[]],['fun','percept2','percept2_image:calltime_percentage/4',[]],['fun','percept2','percept2_image:graph/4',[]],['fun','percept2','percept2_image:graph/5',[]],['fun','percept2','percept2_image:inter_node_message_image/5',[]],['fun','percept2','percept2_image:percentage/3',[]],['fun','percept2','percept2_image:proc_lifetime/5',[]],['fun','percept2','percept2_image:query_fun_time/4',[]],['fun','percept2','percept2_io:format/1',[]],['fun','percept2','percept2_io:format/2',[]],['fun','percept2','percept2_io:format/3',[]],['fun','percept2','percept2_io:scan_erl_form/5',[]],['fun','percept2','percept2_profile:start/1','Starts profiling at the entrypoint specified by th'],['fun','percept2','percept2_profile:start/1',[]],['fun','percept2','percept2_profile:stop/0','Stops profiling.'],['fun','percept2','percept2_scan:format_error/1',[]],['fun','percept2','percept2_scan:reserved_word/1',[]],['fun','percept2','percept2_scan:string/1',[]],['fun','percept2','percept2_scan:string/2',[]],['fun','percept2','percept2_scan:string/4',[]],['fun','percept2','percept2_scan:tokens/3',[]],['fun','percept2','percept2_syntax:abstract/1','Returns the syntax tree corresponding to an Erlang'],['fun','percept2','percept2_syntax:add_ann/1','Appends the term Annotation to the list of user  '],['fun','percept2','percept2_syntax:add_postcomments/1','Appends Comments to the post-comments of  Node.'],['fun','percept2','percept2_syntax:add_precomments/1','Appends Comments to the pre-comments of  Node.'],['fun','percept2','percept2_syntax:application/1','Creates an abstract function application expressio'],['fun','percept2','percept2_syntax:application/2','Creates an abstract function application expressio'],['fun','percept2','percept2_syntax:application_arguments/1','Returns the list of argument subtrees of an  appl'],['fun','percept2','percept2_syntax:application_operator/1','Returns the operator subtree of an application  n'],['fun','percept2','percept2_syntax:arity_qualifier/1','Creates an abstract arity qualifier.'],['fun','percept2','percept2_syntax:arity_qualifier_argument/1','Returns the argument (the arity) subtree of an  a'],['fun','percept2','percept2_syntax:arity_qualifier_body/1','Returns the body subtree of an arity_qualifier  n'],['fun','percept2','percept2_syntax:atom/1','Creates an abstract atom literal.'],['fun','percept2','percept2_syntax:atom_literal/1','Returns the literal string represented by an atom '],['fun','percept2','percept2_syntax:atom_name/1','Returns the printname of an atom node.'],['fun','percept2','percept2_syntax:atom_value/1','Returns the value represented by an atom node.'],['fun','percept2','percept2_syntax:attribute/1','Creates an abstract program attribute.'],['fun','percept2','percept2_syntax:attribute/1','Equivalent to attribute(Name, none).'],['fun','percept2','percept2_syntax:attribute_arguments/1','Returns the list of argument subtrees of an  attr'],['fun','percept2','percept2_syntax:attribute_name/1','Returns the name subtree of an attribute node.'],['fun','percept2','percept2_syntax:binary/1','Creates an abstract binary-object template.'],['fun','percept2','percept2_syntax:binary_comp/1','Creates an abstract binary comprehension.'],['fun','percept2','percept2_syntax:binary_comp_body/1','Returns the list of body subtrees of a binary_comp'],['fun','percept2','percept2_syntax:binary_comp_template/1','Returns the template subtree of a binary_comp node'],['fun','percept2','percept2_syntax:binary_field/1','Creates an abstract binary template field.'],['fun','percept2','percept2_syntax:binary_field/1','Creates an abstract binary template field.'],['fun','percept2','percept2_syntax:binary_field/1','Equivalent to binary_field(Body, []).'],['fun','percept2','percept2_syntax:binary_field_body/1','Returns the body subtree of a binary_field.'],['fun','percept2','percept2_syntax:binary_field_size/1','Returns the size specifier subtree of a  binary_f'],['fun','percept2','percept2_syntax:binary_field_types/1','Returns the list of type-specifier subtrees of a '],['fun','percept2','percept2_syntax:binary_fields/1','Returns the list of field subtrees of a binary  n'],['fun','percept2','percept2_syntax:binary_generator/1','Creates an abstract binary_generator.'],['fun','percept2','percept2_syntax:binary_generator_body/1','Returns the body subtree of a generator node.'],['fun','percept2','percept2_syntax:binary_generator_pattern/1','Returns the pattern subtree of a generator node.'],['fun','percept2','percept2_syntax:block_expr/1','Creates an abstract block expression.'],['fun','percept2','percept2_syntax:block_expr_body/1','Returns the list of body subtrees of a block_expr'],['fun','percept2','percept2_syntax:case_expr/1','Creates an abstract case-expression.'],['fun','percept2','percept2_syntax:case_expr_argument/1','Returns the argument subtree of a case_expr node.'],['fun','percept2','percept2_syntax:case_expr_clauses/1','Returns the list of clause subtrees of a case_expr'],['fun','percept2','percept2_syntax:catch_expr/1','Creates an abstract catch-expression.'],['fun','percept2','percept2_syntax:catch_expr_body/1','Returns the body subtree of a catch_expr node.'],['fun','percept2','percept2_syntax:char/1','Creates an abstract character literal.'],['fun','percept2','percept2_syntax:char_literal/1','Returns the literal string represented by a char '],['fun','percept2','percept2_syntax:char_value/1','Returns the value represented by a char node.'],['fun','percept2','percept2_syntax:class_qualifier/1','Creates an abstract class qualifier.'],['fun','percept2','percept2_syntax:class_qualifier_argument/1','Returns the argument (the class) subtree of a  cl'],['fun','percept2','percept2_syntax:class_qualifier_body/1','Returns the body subtree of a class_qualifier node'],['fun','percept2','percept2_syntax:clause/1','Creates an abstract clause.'],['fun','percept2','percept2_syntax:clause/2','Equivalent to clause([], Guard, Body).'],['fun','percept2','percept2_syntax:clause_body/1','Return the list of body subtrees of a clause  nod'],['fun','percept2','percept2_syntax:clause_guard/1','Returns the guard subtree of a clause node, if  a'],['fun','percept2','percept2_syntax:clause_patterns/1','Returns the list of pattern subtrees of a clause '],['fun','percept2','percept2_syntax:comment/1','Equivalent to comment(none, Strings).'],['fun','percept2','percept2_syntax:comment/2','Creates an abstract comment with the given padding'],['fun','percept2','percept2_syntax:comment_padding/1','Returns the amount of padding before the comment, '],['fun','percept2','percept2_syntax:comment_text/1','Returns the lines of text of the abstract comment.'],['fun','percept2','percept2_syntax:compact_list/1','Yields the most compact form for an abstract list '],['fun','percept2','percept2_syntax:concrete/1','Returns the Erlang term represented by a syntax tr'],['fun','percept2','percept2_syntax:cond_expr/1','Creates an abstract cond-expression.'],['fun','percept2','percept2_syntax:cond_expr_clauses/1','Returns the list of clause subtrees of a cond_expr'],['fun','percept2','percept2_syntax:conjunction/1','Creates an abstract conjunction.'],['fun','percept2','percept2_syntax:conjunction_body/1','Returns the list of body subtrees of a  conjuncti'],['fun','percept2','percept2_syntax:cons/1','"Optimising" list skeleton cons operation.'],['fun','percept2','percept2_syntax:copy_ann/1','Copies the list of user annotations from Source to'],['fun','percept2','percept2_syntax:copy_attrs/1','Copies the attributes from Source to  Target.'],['fun','percept2','percept2_syntax:copy_comments/1','Copies the pre- and postcomments from Source to  '],['fun','percept2','percept2_syntax:copy_pos/1','Copies the position information from Source to  T'],['fun','percept2','percept2_syntax:data/1','For special purposes only.'],['fun','percept2','percept2_syntax:default_literals_vars/2',[]],['fun','percept2','percept2_syntax:disjunction/1','Creates an abstract disjunction.'],['fun','percept2','percept2_syntax:disjunction_body/1','Returns the list of body subtrees of a  disjuncti'],['fun','percept2','percept2_syntax:empty_node/0',[]],['fun','percept2','percept2_syntax:eof_marker/0','Creates an abstract end-of-file marker.'],['fun','percept2','percept2_syntax:error_marker/1','Creates an abstract error marker.'],['fun','percept2','percept2_syntax:error_marker_info/1','Returns the ErrorInfo structure of an error_marker'],['fun','percept2','percept2_syntax:fake_parentheses/1',[]],['fun','percept2','percept2_syntax:fake_parentheses_body/1',[]],['fun','percept2','percept2_syntax:flatten_form_list/1','Flattens sublists of a form_list node.'],['fun','percept2','percept2_syntax:float/1','Creates an abstract floating-point literal.'],['fun','percept2','percept2_syntax:float_literal/1','Returns the numeral string represented by a float'],['fun','percept2','percept2_syntax:float_value/1','Returns the value represented by a float node.'],['fun','percept2','percept2_syntax:form_list/1','Creates an abstract sequence of "source code forms'],['fun','percept2','percept2_syntax:form_list_elements/1','Returns the list of subnodes of a form_list node.'],['fun','percept2','percept2_syntax:fun_expr/1','Creates an abstract fun-expression.'],['fun','percept2','percept2_syntax:fun_expr_arity/1','Returns the arity of a fun_expr node.'],['fun','percept2','percept2_syntax:fun_expr_clauses/1','Returns the list of clause subtrees of a fun_expr'],['fun','percept2','percept2_syntax:function/1','Creates an abstract function definition.'],['fun','percept2','percept2_syntax:function_arity/1','Returns the arity of a function node.'],['fun','percept2','percept2_syntax:function_clause/1',[]],['fun','percept2','percept2_syntax:function_clause/2',[]],['fun','percept2','percept2_syntax:function_clause_name/1',[]],['fun','percept2','percept2_syntax:function_clauses/1','Returns the list of clause subtrees of a function'],['fun','percept2','percept2_syntax:function_name/1','Returns the name subtree of a function node.'],['fun','percept2','percept2_syntax:generator/1','Creates an abstract generator.'],['fun','percept2','percept2_syntax:generator_body/1','Returns the body subtree of a generator node.'],['fun','percept2','percept2_syntax:generator_pattern/1','Returns the pattern subtree of a generator node.'],['fun','percept2','percept2_syntax:get_ann/1','Returns the list of user annotations associated wi'],['fun','percept2','percept2_syntax:get_attrs/1','Returns a representation of the attributes associa'],['fun','percept2','percept2_syntax:get_pos/1','Returns the position information associated with '],['fun','percept2','percept2_syntax:get_postcomments/1','Returns the associated post-comments of a node.'],['fun','percept2','percept2_syntax:get_precomments/1','Returns the associated pre-comments of a node.'],['fun','percept2','percept2_syntax:has_comments/1','Yields false if the node has no associated  comme'],['fun','percept2','percept2_syntax:if_expr/1','Creates an abstract if-expression.'],['fun','percept2','percept2_syntax:if_expr_clauses/1','Returns the list of clause subtrees of an if_expr'],['fun','percept2','percept2_syntax:implicit_fun/1','Creates an abstract "implicit fun" expression.'],['fun','percept2','percept2_syntax:implicit_fun/1','Creates an abstract "implicit fun" expression.'],['fun','percept2','percept2_syntax:implicit_fun_name/1','Returns the name subtree of an implicit_fun node.'],['fun','percept2','percept2_syntax:infix_expr/1','Creates an abstract infix operator expression.'],['fun','percept2','percept2_syntax:infix_expr_left/1','Returns the left argument subtree of an  infix_ex'],['fun','percept2','percept2_syntax:infix_expr_operator/1','Returns the operator subtree of an infix_expr  no'],['fun','percept2','percept2_syntax:infix_expr_right/1','Returns the right argument subtree of an  infix_e'],['fun','percept2','percept2_syntax:integer/1','Creates an abstract integer literal.'],['fun','percept2','percept2_syntax:integer_literal/1','Returns the numeral string represented by an  int'],['fun','percept2','percept2_syntax:integer_value/1','Returns the value represented by an integer node.'],['fun','percept2','percept2_syntax:is_atom/1','Returns true if Node has type  atom and represent'],['fun','percept2','percept2_syntax:is_char/1','Returns true if Node has type  char and represent'],['fun','percept2','percept2_syntax:is_form/1','Returns true if Node is a syntax tree  representi'],['fun','percept2','percept2_syntax:is_integer/1','Returns true if Node has type  integer and repres'],['fun','percept2','percept2_syntax:is_leaf/1','Returns true if Node is a leaf node,  otherwise f'],['fun','percept2','percept2_syntax:is_list_skeleton/1','Returns true if Node has type  list or nil, other'],['fun','percept2','percept2_syntax:is_literal/1','Returns true if Node represents a  literal term, '],['fun','percept2','percept2_syntax:is_proper_list/1','Returns true if Node represents a  proper list, a'],['fun','percept2','percept2_syntax:is_string/1','Returns true if Node has type  string and represe'],['fun','percept2','percept2_syntax:is_tree/1','For special purposes only.'],['fun','percept2','percept2_syntax:is_wrapper/1','Returns true if the argument is a wrapper  struct'],['fun','percept2','percept2_syntax:join_comments/1','Appends the comments of Source to the current  co'],['fun','percept2','percept2_syntax:list/1','Equivalent to list(List, none).'],['fun','percept2','percept2_syntax:list/2','Constructs an abstract list skeleton.'],['fun','percept2','percept2_syntax:list_comp/1','Creates an abstract list comprehension.'],['fun','percept2','percept2_syntax:list_comp_body/1','Returns the list of body subtrees of a list_comp '],['fun','percept2','percept2_syntax:list_comp_template/1','Returns the template subtree of a list_comp node.'],['fun','percept2','percept2_syntax:list_elements/1','Returns the list of element subtrees of a list ske'],['fun','percept2','percept2_syntax:list_head/1','Returns the head element subtree of a list node.'],['fun','percept2','percept2_syntax:list_length/1','Returns the number of element subtrees of a list s'],['fun','percept2','percept2_syntax:list_prefix/1','Returns the prefix element subtrees of a list node'],['fun','percept2','percept2_syntax:list_suffix/1','Returns the suffix subtree of a list node, if one'],['fun','percept2','percept2_syntax:list_tail/1','Returns the tail of a list node.'],['fun','percept2','percept2_syntax:macro/1','Creates an abstract macro application.'],['fun','percept2','percept2_syntax:macro/1','Equivalent to macro(Name, none).'],['fun','percept2','percept2_syntax:macro_arguments/1','Returns the list of argument subtrees of a macro '],['fun','percept2','percept2_syntax:macro_name/1','Returns the name subtree of a macro node.'],['fun','percept2','percept2_syntax:make_tree/1','Creates a syntax tree with the given type and subt'],['fun','percept2','percept2_syntax:match_expr/1','Creates an abstract match-expression.'],['fun','percept2','percept2_syntax:match_expr_body/1','Returns the body subtree of a match_expr node.'],['fun','percept2','percept2_syntax:match_expr_pattern/1','Returns the pattern subtree of a match_expr node.'],['fun','percept2','percept2_syntax:meta/1','Creates a meta-representation of a syntax tree.'],['fun','percept2','percept2_syntax:module_qualifier/1','Creates an abstract module qualifier.'],['fun','percept2','percept2_syntax:module_qualifier_argument/1','Returns the argument (the module) subtree of a  m'],['fun','percept2','percept2_syntax:module_qualifier_body/1','Returns the body subtree of a module_qualifier  n'],['fun','percept2','percept2_syntax:nil/0','Creates an abstract empty list.'],['fun','percept2','percept2_syntax:normalize_list/1','Expands an abstract list skeleton to its most expl'],['fun','percept2','percept2_syntax:operator/1','Creates an abstract operator.'],['fun','percept2','percept2_syntax:operator_literal/1','Returns the literal string represented by an  ope'],['fun','percept2','percept2_syntax:operator_name/1','Returns the name of an operator node.'],['fun','percept2','percept2_syntax:parentheses/1','Creates an abstract parenthesised expression.'],['fun','percept2','percept2_syntax:parentheses_body/1','Returns the body subtree of a parentheses node.'],['fun','percept2','percept2_syntax:prefix_expr/1','Creates an abstract prefix operator expression.'],['fun','percept2','percept2_syntax:prefix_expr_argument/1','Returns the argument subtree of a prefix_expr  no'],['fun','percept2','percept2_syntax:prefix_expr_operator/1','Returns the operator subtree of a prefix_expr  no'],['fun','percept2','percept2_syntax:qualified_name/1','Creates an abstract qualified name.'],['fun','percept2','percept2_syntax:qualified_name_segments/1','Returns the list of name segments of a  qualified'],['fun','percept2','percept2_syntax:query_expr/1','Creates an abstract Mnemosyne query expression.'],['fun','percept2','percept2_syntax:query_expr_body/1','Returns the body subtree of a query_expr node.'],['fun','percept2','percept2_syntax:receive_expr/1','Creates an abstract receive-expression.'],['fun','percept2','percept2_syntax:receive_expr/1','Equivalent to receive_expr(Clauses, none, []).'],['fun','percept2','percept2_syntax:receive_expr_action/1','Returns the list of action body subtrees of a  re'],['fun','percept2','percept2_syntax:receive_expr_clauses/1','Returns the list of clause subtrees of a  receive'],['fun','percept2','percept2_syntax:receive_expr_timeout/1','Returns the timeout subtree of a receive_expr node'],['fun','percept2','percept2_syntax:record_access/1','Creates an abstract record field access expression'],['fun','percept2','percept2_syntax:record_access/2','Equivalent to record_access(Argument, none, Field)'],['fun','percept2','percept2_syntax:record_access_argument/1','Returns the argument subtree of a record_access  '],['fun','percept2','percept2_syntax:record_access_field/1','Returns the field subtree of a record_access  nod'],['fun','percept2','percept2_syntax:record_access_type/1','Returns the type subtree of a record_access node,'],['fun','percept2','percept2_syntax:record_expr/2','Creates an abstract record expression.'],['fun','percept2','percept2_syntax:record_expr/2','Equivalent to record_expr(none, Type, Fields).'],['fun','percept2','percept2_syntax:record_expr_argument/1','Returns the argument subtree of a record_expr node'],['fun','percept2','percept2_syntax:record_expr_fields/1','Returns the list of field subtrees of a  record_e'],['fun','percept2','percept2_syntax:record_expr_type/1','Returns the type subtree of a record_expr node.'],['fun','percept2','percept2_syntax:record_field/1','Creates an abstract record field specification.'],['fun','percept2','percept2_syntax:record_field/1','Equivalent to record_field(Name, none).'],['fun','percept2','percept2_syntax:record_field_name/1','Returns the name subtree of a record_field node.'],['fun','percept2','percept2_syntax:record_field_value/1','Returns the value subtree of a record_field node,'],['fun','percept2','percept2_syntax:record_index_expr/1','Creates an abstract record field index expression.'],['fun','percept2','percept2_syntax:record_index_expr_field/1','Returns the field subtree of a record_index_expr '],['fun','percept2','percept2_syntax:record_index_expr_type/1','Returns the type subtree of a record_index_expr  '],['fun','percept2','percept2_syntax:remove_comments/1','Clears the associated comments of Node.'],['fun','percept2','percept2_syntax:revert/1','Returns an erl_parse-compatible representation of '],['fun','percept2','percept2_syntax:revert_clause_disjunction/1',[]],['fun','percept2','percept2_syntax:revert_forms/1','Reverts a sequence of Erlang source code forms.'],['fun','percept2','percept2_syntax:rule/1','Creates an abstract Mnemosyne rule.'],['fun','percept2','percept2_syntax:rule_arity/1','Returns the arity of a rule node.'],['fun','percept2','percept2_syntax:rule_clauses/1','Returns the list of clause subtrees of a rule node'],['fun','percept2','percept2_syntax:rule_name/1','Returns the name subtree of a rule node.'],['fun','percept2','percept2_syntax:set_ann/1','Sets the list of user annotations of Node to  Ann'],['fun','percept2','percept2_syntax:set_attrs/1','Sets the attributes of Node to  Attributes.'],['fun','percept2','percept2_syntax:set_name/2',[]],['fun','percept2','percept2_syntax:set_pos/1','Sets the position information of Node to  Pos.'],['fun','percept2','percept2_syntax:set_postcomments/1','Sets the post-comments of Node to  Comments.'],['fun','percept2','percept2_syntax:set_precomments/1','Sets the pre-comments of Node to  Comments.'],['fun','percept2','percept2_syntax:size_qualifier/1','Creates an abstract size qualifier.'],['fun','percept2','percept2_syntax:size_qualifier_argument/1','Returns the argument subtree (the size) of a  siz'],['fun','percept2','percept2_syntax:size_qualifier_body/1','Returns the body subtree of a size_qualifier  nod'],['fun','percept2','percept2_syntax:string/1','Creates an abstract string literal.'],['fun','percept2','percept2_syntax:string_literal/1','Returns the literal string represented by a string'],['fun','percept2','percept2_syntax:string_value/1','Returns the value represented by a string node.'],['fun','percept2','percept2_syntax:subtrees/1','Returns the grouped list of all subtrees of a synt'],['fun','percept2','percept2_syntax:text/1','Creates an abstract piece of source code text.'],['fun','percept2','percept2_syntax:text_string/1','Returns the character sequence represented by a  '],['fun','percept2','percept2_syntax:tree/1','For special purposes only.'],['fun','percept2','percept2_syntax:tree/1','Equivalent to tree(Type, []).'],['fun','percept2','percept2_syntax:try_after_expr/1','Equivalent to try_expr(Body, [], [], After).'],['fun','percept2','percept2_syntax:try_expr/1','Creates an abstract try-expression.'],['fun','percept2','percept2_syntax:try_expr/1','Equivalent to try_expr(Body, Clauses, Handlers, []'],['fun','percept2','percept2_syntax:try_expr/1','Equivalent to try_expr(Body, [], Handlers).'],['fun','percept2','percept2_syntax:try_expr_after/1','Returns the list of "after" subtrees of a try_expr'],['fun','percept2','percept2_syntax:try_expr_body/1','Returns the list of body subtrees of a try_expr  '],['fun','percept2','percept2_syntax:try_expr_clauses/1','Returns the list of case-clause subtrees of a  tr'],['fun','percept2','percept2_syntax:try_expr_handlers/1','Returns the list of handler-clause subtrees of a '],['fun','percept2','percept2_syntax:tuple/1','Creates an abstract tuple.'],['fun','percept2','percept2_syntax:tuple_elements/1','Returns the list of element subtrees of a tuple  '],['fun','percept2','percept2_syntax:tuple_size/1','Returns the number of elements of a tuple node.'],['fun','percept2','percept2_syntax:type/1','Returns the type tag of Node.'],['fun','percept2','percept2_syntax:typed_record_field/1',[]],['fun','percept2','percept2_syntax:typed_record_field_name/1',[]],['fun','percept2','percept2_syntax:typed_record_field_value/1',[]],['fun','percept2','percept2_syntax:typed_record_type/1',[]],['fun','percept2','percept2_syntax:underscore/0','Creates an abstract universal pattern ("_").'],['fun','percept2','percept2_syntax:update_tree/1','Creates a syntax tree with the same type and attri'],['fun','percept2','percept2_syntax:variable/1','Creates an abstract variable with the given name.'],['fun','percept2','percept2_syntax:variable_literal/1','Returns the name of a variable node as a string.'],['fun','percept2','percept2_syntax:variable_name/1','Returns the name of a variable node as an atom.'],['fun','percept2','percept2_syntax:warning_marker/1','Creates an abstract warning marker.'],['fun','percept2','percept2_syntax:warning_marker_info/1','Returns the ErrorInfo structure of a warning_marke'],['fun','percept2','percept2_utils:pforeach/2',[]],['fun','percept2','percept2_utils:pmap/2',[]]];