var index = [['app','parse_trans','parse_trans','[application]'],['mod','parse_trans','ct_expand','Compile-time expansion utility.'],['mod','parse_trans','exprecs','Parse transform for generating record access funct'],['mod','parse_trans','parse_trans','Generic parse transform library for Erlang.'],['mod','parse_trans','parse_trans_codegen','Parse transform for code generation pseduo functio'],['mod','parse_trans','parse_trans_mod',[]],['mod','parse_trans','parse_trans_pp','Generic parse transform library for Erlang.'],['fun','parse_trans','ct_expand:extract_fun/3',[]],['fun','parse_trans','ct_expand:lfun_rewrite/2',[]],['fun','parse_trans','ct_expand:parse_transform/1',[]],['fun','parse_trans','exprecs:parse_transform/1',[]],['fun','parse_trans','parse_trans:context/2','   Accessor function for the Context record.'],['fun','parse_trans','parse_trans:depth_first/1',[]],['fun','parse_trans','parse_trans:do_depth_first/1',[]],['fun','parse_trans','parse_trans:do_insert_forms/2',[]],['fun','parse_trans','parse_trans:do_inspect/1',[]],['fun','parse_trans','parse_trans:do_transform/1',[]],['fun','parse_trans','parse_trans:error/3','.'],['fun','parse_trans','parse_trans:export_function/3',[]],['fun','parse_trans','parse_trans:format_error/1',[]],['fun','parse_trans','parse_trans:format_exception/2','Equivalent to format_exception(Class, Reason, 4).'],['fun','parse_trans','parse_trans:format_exception/3','Produces a few lines of user-friendly formatting o'],['fun','parse_trans','parse_trans:function_exists/1','  Checks whether the given function is defined in'],['fun','parse_trans','parse_trans:get_attribute/2','   Returns the value of the first occurence of at'],['fun','parse_trans','parse_trans:get_attribute/3',[]],['fun','parse_trans','parse_trans:get_file/1','   Returns the name of the file being compiled.'],['fun','parse_trans','parse_trans:get_module/1','   Returns the name of the module being compiled.'],['fun','parse_trans','parse_trans:get_orig_syntax_tree/1','.'],['fun','parse_trans','parse_trans:get_pos/1','  Tries to retrieve the line number from an erl_s'],['fun','parse_trans','parse_trans:initial_context/2','   Initializes a context record.'],['fun','parse_trans','parse_trans:inspect/4','   Equvalent to do_inspect(Fun,Acc,Forms,initial_'],['fun','parse_trans','parse_trans:optionally_pretty_print/1',[]],['fun','parse_trans','parse_trans:plain_transform/2','  Performs a transform of Forms using the fun Fun'],['fun','parse_trans','parse_trans:pp_beam/1','  Reads debug_info from the beam file Beam and pr'],['fun','parse_trans','parse_trans:pp_beam/1','  Reads debug_info from the beam file Beam and re'],['fun','parse_trans','parse_trans:pp_src/2','Pretty-prints the erlang source code corresponding'],['fun','parse_trans','parse_trans:replace_function/4',[]],['fun','parse_trans','parse_trans:replace_function/5',[]],['fun','parse_trans','parse_trans:return/2','Checks the transformed result for errors and warni'],['fun','parse_trans','parse_trans:revert/1','Reverts back from Syntax Tools format to Erlang fo'],['fun','parse_trans','parse_trans:revert_form/1','Reverts a single form back from Syntax Tools forma'],['fun','parse_trans','parse_trans:top/1',[]],['fun','parse_trans','parse_trans:transform/4','   Makes one pass.'],['fun','parse_trans','parse_trans_codegen:format_error/1',[]],['fun','parse_trans','parse_trans_codegen:parse_transform/2','  Searches for calls to pseudo functions in the m'],['fun','parse_trans','parse_trans_mod:abstract_code/1',[]],['fun','parse_trans','parse_trans_mod:beam_file/1',[]],['fun','parse_trans','parse_trans_mod:compile_and_load_forms/1',[]],['fun','parse_trans','parse_trans_mod:compile_and_load_forms/1',[]],['fun','parse_trans','parse_trans_mod:compile_options/1',[]],['fun','parse_trans','parse_trans_mod:rename_module/1',[]],['fun','parse_trans','parse_trans_mod:transform_module/3',[]],['fun','parse_trans','parse_trans_pp:main/1',[]],['fun','parse_trans','parse_trans_pp:pp_beam/1','  Reads debug_info from the beam file Beam and pr'],['fun','parse_trans','parse_trans_pp:pp_beam/1','  Reads debug_info from the beam file Beam and re'],['fun','parse_trans','parse_trans_pp:pp_src/2','Pretty-prints the erlang source code corresponding']];