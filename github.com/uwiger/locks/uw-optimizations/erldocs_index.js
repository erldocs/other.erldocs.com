var index = [['app','locks','locks','[application]'],['mod','locks','locks','Official API for the locks system.'],['mod','locks','locks_app',[]],['mod','locks','locks_cycles',[]],['mod','locks','locks_leader','Leader election behavior.'],['mod','locks','locks_server',[]],['mod','locks','locks_sup',[]],['mod','locks','locks_watcher',[]],['fun','locks','locks:await_all_locks/1','Await the results of all requested locks.'],['fun','locks','locks:begin_transaction/0','Equivalent to begin_transaction([], []).'],['fun','locks','locks:begin_transaction/1','Starts a transaction agent.'],['fun','locks','locks:begin_transaction/1','Equivalent to begin_transaction(Objects, []).'],['fun','locks','locks:change_flag/3',[]],['fun','locks','locks:end_transaction/1','Terminates the transaction agent, releasing all lo'],['fun','locks','locks:lock/1','Acquire a lock on object.'],['fun','locks','locks:lock/1','Equivalent to lock(Agent, OID, Mode, Nodes, all).'],['fun','locks','locks:lock/1','Equivalent to lock(Agent, OID, Mode, [node()], all'],['fun','locks','locks:lock/1','Equivalent to lock(Agent, OID, write, [node()], al'],['fun','locks','locks:lock_nowait/1','Equivalent to lock_nowait(Agent, OID, Mode, Nodes,'],['fun','locks','locks:lock_nowait/1','Equivalent to lock_nowait(Agent, OID, Mode, [node('],['fun','locks','locks:lock_nowait/1','Equivalent to lock_nowait(Agent, OID, write, [node'],['fun','locks','locks:lock_objects/1','Asynchronously locks several objects at once.'],['fun','locks','locks:spawn_agent/0',[]],['fun','locks','locks:spawn_agent/1',[]],['fun','locks','locks:unwatch/1','Remove a subscription created by watch/2.'],['fun','locks','locks:watch/1','Subscribe to lock state changes.'],['fun','locks','locks:watchers/1','List the process IDs of watchers of OID on the cur'],['fun','locks','locks_app:start/2',[]],['fun','locks','locks_app:stop/1',[]],['fun','locks','locks_cycles:components/2',[]],['fun','locks','locks_cycles:ex/1',[]],['fun','locks','locks_leader:ask_candidates/1','Send a synchronous request to all candidates.'],['fun','locks','locks_leader:broadcast/1','Broadcast Msg to all candidates and workers.'],['fun','locks','locks_leader:broadcast_to_candidates/1','Broadcast Msg to all (synced) candidates.'],['fun','locks','locks_leader:call/1','Make a timeout-guarded gen_server-like call to the'],['fun','locks','locks_leader:call/1','Make a gen_server-like call to the leader candidat'],['fun','locks','locks_leader:candidates/1','Return the current list of candidates.'],['fun','locks','locks_leader:cast/1','Make a gen_server-like cast to the leader candidat'],['fun','locks','locks_leader:info/1',[]],['fun','locks','locks_leader:info/2',[]],['fun','locks','locks_leader:leader/1','Return the leader pid, or undefined if there is no'],['fun','locks','locks_leader:leader_call/1','Make a synchronous call to the leader.'],['fun','locks','locks_leader:leader_cast/1','Make an asynchronous cast to the leader.'],['fun','locks','locks_leader:leader_node/1','Return the node of the current leader.'],['fun','locks','locks_leader:leader_reply/2',[]],['fun','locks','locks_leader:new_candidates/1','Return the current list of candidates that have no'],['fun','locks','locks_leader:reply/1','Corresponds to gen_server:reply/2.'],['fun','locks','locks_leader:start_link/1','Starts a locally registered worker or candidate.'],['fun','locks','locks_leader:start_link/1','Starts an anonymous worker or candidate.'],['fun','locks','locks_leader:start_link/1','Starts an anonymous locks_leader candidate using M'],['fun','locks','locks_leader:workers/1','Return the current list of workers.'],['fun','locks','locks_server:agents/1',[]],['fun','locks','locks_server:clients/1',[]],['fun','locks','locks_server:code_change/3',[]],['fun','locks','locks_server:handle_call/3',[]],['fun','locks','locks_server:handle_cast/2',[]],['fun','locks','locks_server:handle_info/2',[]],['fun','locks','locks_server:init/1',[]],['fun','locks','locks_server:lock/2',[]],['fun','locks','locks_server:lock/3',[]],['fun','locks','locks_server:lock/4',[]],['fun','locks','locks_server:remove_agent/1',[]],['fun','locks','locks_server:remove_agent/2',[]],['fun','locks','locks_server:start_link/0',[]],['fun','locks','locks_server:surrender/2',[]],['fun','locks','locks_server:surrender/3',[]],['fun','locks','locks_server:terminate/2',[]],['fun','locks','locks_server:unwatch/2',[]],['fun','locks','locks_server:watch/2',[]],['fun','locks','locks_server:watchers/1',[]],['fun','locks','locks_sup:init/1',[]],['fun','locks','locks_sup:start_link/0',[]],['fun','locks','locks_watcher:locks_watcher/1',[]],['fun','locks','locks_watcher:parse_transform/2',[]]];