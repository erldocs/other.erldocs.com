 :: Extracting meta information
$ infinity  `git ls-remote --heads --tags 'https://github.com/echoteam/echo_async'  2>&1`
>>> [repo] 1 branches, 2 tags
WTF {ok,{{"HTTP/1.1",200,"OK"},
         [{"cache-control","max-age=300"},
          {"connection","keep-alive"},
          {"date","Sun, 11 Oct 2015 17:44:28 GMT"},
          {"via","1.1 varnish"},
          {"accept-ranges","bytes"},
          {"etag","\"63de8e253637949b00e896121e714578c0343707\""},
          {"vary","Authorization,Accept-Encoding"},
          {"content-length","593"},
          {"content-type","text/plain; charset=utf-8"},
          {"expires","Sun, 11 Oct 2015 17:49:28 GMT"},
          {"content-security-policy","default-src 'none'"},
          {"x-xss-protection","1; mode=block"},
          {"x-frame-options","deny"},
          {"x-content-type-options","nosniff"},
          {"strict-transport-security","max-age=31536000"},
          {"x-served-by","cache-fra1238-FRA"},
          {"x-cache","MISS"},
          {"x-cache-hits","0"},
          {"access-control-allow-origin","*"},
          {"source-age","0"}],
         "{name,\"echo_async\"}.\n{target_path,\"github.com/echoteam/echo_async\"}.\n{url,\"https://github.com/echoteam/echo_async\"}.\n{vsn_format,2}.\n{vsn_pass,101}.\n{time_begin,{{2015,9,21},{15,35,2}}}.\n{method,git}.\n{count_tags,2}.\n{count_branches,1}.\n{revisions,[{rev,branch,\"master\",\"b1339f8cfe0f50e92e2d6846ff963ce11b0fbcb2\",\n                 false,[],[]},\n            {rev,tag,\"v1.0.0\",\"83ed40065bc795fab1a03977beffa044345dbfe7\",\n                 false,[],[]},\n            {rev,tag,\"v1.0.1\",\"c3633dd75a9107af8e89509d0e3f61d6e2d3851b\",\n                 false,[],[]}]}.\n{time_end,{{2015,9,21},{15,35,3}}}.\n"}}
 :: Writing meta to "/home/pete/wefwefwef/docs/other/449b8c774cf8b5588ac542b9c4599a0bb308d72a/meta.txt"
 :: Skipping tag "v1.0.0"
 :: Skipping tag "v1.0.1"
 :: Skipping branch "master"
 :: Finishing up
$ 5000  `rm -r '/home/pete/wefwefwef/docs/other/449b8c774cf8b5588ac542b9c4599a0bb308d72a/echo_async'  2>&1`
