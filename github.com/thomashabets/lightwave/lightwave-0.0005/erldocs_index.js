var index = [['app','lightwave','lightwave','[application]'],['mod','lightwave','bot_ping','Proof of concept bot.'],['mod','lightwave','bot_wave','Wave info bot.'],['mod','lightwave','lightwave','TEMPLATE.'],['mod','lightwave','lightwave_app','Callbacks for the lightwave application.'],['mod','lightwave','lightwave_deps','Ensure that the relatively-installed dependencies '],['mod','lightwave','lightwave_sup','Supervisor for the lightwave application.'],['mod','lightwave','lightwave_web','Web server for lightwave.'],['mod','lightwave','wave','Wave process code.'],['mod','lightwave','wavefinder',[]],['mod','lightwave','waveutil',[]],['fun','lightwave','bot_ping:loop/1',[]],['fun','lightwave','bot_ping:start/0',[]],['fun','lightwave','bot_ping:start/1',[]],['fun','lightwave','bot_wave:loop/1',[]],['fun','lightwave','bot_wave:start/0',[]],['fun','lightwave','bot_wave:start/1',[]],['fun','lightwave','lightwave:start/0','Start the lightwave server.'],['fun','lightwave','lightwave:stop/0','Stop the lightwave server.'],['fun','lightwave','lightwave_app:start/2','application start callback for lightwave.'],['fun','lightwave','lightwave_app:stop/1','application stop callback for lightwave.'],['fun','lightwave','lightwave_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','lightwave','lightwave_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','lightwave','lightwave_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','lightwave','lightwave_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','lightwave','lightwave_deps:get_base_dir/1','Return the application directory for Module.'],['fun','lightwave','lightwave_deps:local_path/1','Return an application-relative directory for this '],['fun','lightwave','lightwave_deps:local_path/1','Return an application-relative directory from Modu'],['fun','lightwave','lightwave_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','lightwave','lightwave_sup:init/1','supervisor callback.'],['fun','lightwave','lightwave_sup:start_link/0','API for starting the supervisor.'],['fun','lightwave','lightwave_sup:upgrade/0','Add processes if necessary.'],['fun','lightwave','lightwave_web:loop/2',[]],['fun','lightwave','lightwave_web:start/1',[]],['fun','lightwave','lightwave_web:stop/0',[]],['fun','lightwave','wave:findWave/1','wave finder.'],['fun','lightwave','wave:load/2','Load wave data.'],['fun','lightwave','wave:loop/4','main loop of wave.'],['fun','lightwave','wave:loopStart/0','Init wave.'],['fun','lightwave','wave:names/1','Get a list of all names in the wave.'],['fun','lightwave','wave:post/3','Post message to wave.'],['fun','lightwave','wave:save/2','Save wave data.'],['fun','lightwave','wave:subscribe/1','Subscribe to wave messages.'],['fun','lightwave','wave:unsubscribe/1','Unsubscribe from wave.'],['fun','lightwave','wavefinder:code_change/3',[]],['fun','lightwave','wavefinder:forget/1',[]],['fun','lightwave','wavefinder:get/1',[]],['fun','lightwave','wavefinder:handle_call/3',[]],['fun','lightwave','wavefinder:handle_cast/2',[]],['fun','lightwave','wavefinder:handle_info/2',[]],['fun','lightwave','wavefinder:init/1',[]],['fun','lightwave','wavefinder:register/2',[]],['fun','lightwave','wavefinder:start/0',[]],['fun','lightwave','wavefinder:terminate/2',[]],['fun','lightwave','waveutil:nowString/0',[]],['fun','lightwave','waveutil:stringJoin/1',[]],['fun','lightwave','waveutil:stringJoin/2',[]]];