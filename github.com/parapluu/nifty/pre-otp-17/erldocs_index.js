var index = [['app','nifty','nifty','[application]'],['mod','nifty','nifty',[]],['mod','nifty','nifty_clangparse',[]],['mod','nifty','nifty_compiler',[]],['mod','nifty','nifty_filters',[]],['mod','nifty','nifty_rebar',[]],['mod','nifty','nifty_tags',[]],['mod','nifty','nifty_typetable',[]],['mod','nifty','nifty_utils',[]],['fun','nifty','nifty:as_type/1','Casts a pointer to a Type of a Module; returns an '],['fun','nifty','nifty:compile/1','Generates a NIF module out of a C header file and '],['fun','nifty','nifty:cstr_to_list/1','Converts a nifty pointer to a 0 terminated C strin'],['fun','nifty','nifty:dereference/1','Dereference a nifty pointer.'],['fun','nifty','nifty:free/1','Frees the memory associated with a nifty pointer.'],['fun','nifty','nifty:get_config/0','Returns the platform specific configuration of nif'],['fun','nifty','nifty:get_env/0','Returns erlangs NIF environment.'],['fun','nifty','nifty:get_types/0','Returns niftys base types as a dict.'],['fun','nifty','nifty:list_to_cstr/1','Converts an erlang string into a 0 terminated C st'],['fun','nifty','nifty:mem_alloc/1','Allocates X1 bytes and returns a pointer to it.'],['fun','nifty','nifty:mem_read/1','Reads X2 bytes from the pointer X1 and returns it '],['fun','nifty','nifty:mem_write/1','Writes the Data to memory and returns a nifty poin'],['fun','nifty','nifty:mem_write/1','Writes the Data to the memory area pointed to by P'],['fun','nifty','nifty:pointer/0','Returns a pointer to a memory area that is the siz'],['fun','nifty','nifty:pointer/1','Returns a pointer to the specified Type.'],['fun','nifty','nifty:pointer_of/1','Returns a pointer to the Value with the type Type'],['fun','nifty','nifty:pointer_of/1','Returns a pointer to the given pointer.'],['fun','nifty','nifty_clangparse:build_vars/1','Takes a list of token as produced by parse/1 and r'],['fun','nifty','nifty_clangparse:parse/1','Takes clang compiler arguments, and returns a list'],['fun','nifty','nifty_compiler:compile/1','Generates a NIF module out of a C header file and '],['fun','nifty','nifty_compiler:render/1','Renders an InterfaceFile into a Erlang module cont'],['fun','nifty','nifty_filters:absname/1',[]],['fun','nifty','nifty_filters:dereference_type/1',[]],['fun','nifty','nifty_filters:discard_const/1',[]],['fun','nifty','nifty_filters:discard_restrict/1',[]],['fun','nifty','nifty_filters:fetch/1',[]],['fun','nifty','nifty_filters:fetch_keys/1',[]],['fun','nifty','nifty_filters:getNth/1',[]],['fun','nifty','nifty_filters:has_key/1',[]],['fun','nifty','nifty_filters:is_argument/1',[]],['fun','nifty','nifty_filters:is_array/1',[]],['fun','nifty','nifty_filters:is_field/1',[]],['fun','nifty','nifty_filters:is_input/1',[]],['fun','nifty','nifty_filters:is_output/1',[]],['fun','nifty','nifty_filters:is_return/1',[]],['fun','nifty','nifty_filters:loopcounter/1',[]],['fun','nifty','nifty_filters:norm_type/1',[]],['fun','nifty','nifty_filters:raw_include/1',[]],['fun','nifty','nifty_filters:raw_path/1',[]],['fun','nifty','nifty_filters:resolved/1',[]],['fun','nifty','nifty_filters:reversed/1',[]],['fun','nifty','nifty_rebar:get_jobs/1',[]],['fun','nifty','nifty_rebar:help/0',[]],['fun','nifty','nifty_rebar:init_config/1',[]],['fun','nifty','nifty_rebar:main/1',[]],['fun','nifty','nifty_rebar:parse_args/1',[]],['fun','nifty','nifty_rebar:run/1',[]],['fun','nifty','nifty_rebar:save_options/1',[]],['fun','nifty','nifty_rebar:version/0',[]],['fun','nifty','nifty_tags:debug/1',[]],['fun','nifty','nifty_tags:struct_dereference/2',[]],['fun','nifty','nifty_tags:struct_name/2',[]],['fun','nifty','nifty_tags:struct_reference/2',[]],['fun','nifty','nifty_typetable:build/1','builds a typetable and symbol table out of type in'],['fun','nifty','nifty_typetable:check_types/1','removes all non-resolvable types from the typetabl'],['fun','nifty','nifty_typetable:resolve_type/1','takes a type and a typetable and returns the resol'],['fun','nifty','nifty_utils:expand/1','Returns Path with all environment variables  expa']];