var index = [['app','erlzk','erlzk','[application]'],['mod','erlzk','erlzk','Convenience API to connect / disconnect to and to '],['mod','erlzk','erlzk_app',[]],['mod','erlzk','erlzk_codec',[]],['mod','erlzk','erlzk_conn',[]],['mod','erlzk','erlzk_conn_sup',[]],['mod','erlzk','erlzk_sup',[]],['fun','erlzk','erlzk:add_auth/1','Add the specified scheme and auth information to t'],['fun','erlzk','erlzk:close/1','Disconnect to ZooKeeper.'],['fun','erlzk','erlzk:connect/1','Connect to ZooKeeper.'],['fun','erlzk','erlzk:connect/1','Connect to ZooKeeper.'],['fun','erlzk','erlzk:connect/2','Connect to ZooKeeper.'],['fun','erlzk','erlzk:create/1','Create a node with the given path, return the actu'],['fun','erlzk','erlzk:create/1','Create a node with the given path, return the actu'],['fun','erlzk','erlzk:create/1','Create a node with the given path, return the actu'],['fun','erlzk','erlzk:create/1','Create a node with the given path, return the actu'],['fun','erlzk','erlzk:create2/1','Create a node with the given path, return the actu'],['fun','erlzk','erlzk:create2/1','Create a node with the given path, return the actu'],['fun','erlzk','erlzk:create2/1','Create a node with the given path, return the actu'],['fun','erlzk','erlzk:create2/1','Create a node with the given path, return the actu'],['fun','erlzk','erlzk:delete/1','Delete the node with the given path.'],['fun','erlzk','erlzk:delete/1','Delete the node with the given path.'],['fun','erlzk','erlzk:exists/1','Checks the existence of the node of the given path'],['fun','erlzk','erlzk:exists/1','Checks the existence of the node of the given path'],['fun','erlzk','erlzk:generate_digest/1','Generate Username:base64 encoded SHA1 Password dig'],['fun','erlzk','erlzk:get_acl/1','Get the ACL of the node of the given path, return '],['fun','erlzk','erlzk:get_children/1','Return the list of the children of the node of the'],['fun','erlzk','erlzk:get_children/1','Return the list of the children of the node of the'],['fun','erlzk','erlzk:get_children2/1','Return the list of the children and the stat of th'],['fun','erlzk','erlzk:get_children2/1','Return the list of the children and the stat of th'],['fun','erlzk','erlzk:get_data/1','Return the data and the stat of the node of the gi'],['fun','erlzk','erlzk:get_data/1','Return the data and the stat of the node of the gi'],['fun','erlzk','erlzk:multi/1','Executes multiple ZooKeeper operations or none of '],['fun','erlzk','erlzk:op/1','Construtes a single operation in a multi-operation'],['fun','erlzk','erlzk:set_acl/1','Set the ACL of the node of the given path, return '],['fun','erlzk','erlzk:set_acl/1','Set the ACL of the node of the given path, return '],['fun','erlzk','erlzk:set_data/1','Set the data for the node of the given path, retur'],['fun','erlzk','erlzk:set_data/1','Set the data for the node of the given path, retur'],['fun','erlzk','erlzk:start/0','Start the application.'],['fun','erlzk','erlzk:stop/0','Stop the application.'],['fun','erlzk','erlzk:sync/1','Flushes channel between process and leader.'],['fun','erlzk','erlzk_app:ensure_deps_started/0',[]],['fun','erlzk','erlzk_app:start/2',[]],['fun','erlzk','erlzk_app:stop/1',[]],['fun','erlzk','erlzk_codec:pack/2',[]],['fun','erlzk','erlzk_codec:pack/3',[]],['fun','erlzk','erlzk_codec:pack/4',[]],['fun','erlzk','erlzk_codec:unpack/1',[]],['fun','erlzk','erlzk_codec:unpack/2',[]],['fun','erlzk','erlzk_codec:unpack/3',[]],['fun','erlzk','erlzk_conn:add_auth/3',[]],['fun','erlzk','erlzk_conn:code_change/3',[]],['fun','erlzk','erlzk_conn:create/5',[]],['fun','erlzk','erlzk_conn:create2/5',[]],['fun','erlzk','erlzk_conn:delete/3',[]],['fun','erlzk','erlzk_conn:exists/3',[]],['fun','erlzk','erlzk_conn:exists/4',[]],['fun','erlzk','erlzk_conn:get_acl/2',[]],['fun','erlzk','erlzk_conn:get_children/3',[]],['fun','erlzk','erlzk_conn:get_children/4',[]],['fun','erlzk','erlzk_conn:get_children2/3',[]],['fun','erlzk','erlzk_conn:get_children2/4',[]],['fun','erlzk','erlzk_conn:get_data/3',[]],['fun','erlzk','erlzk_conn:get_data/4',[]],['fun','erlzk','erlzk_conn:handle_call/3',[]],['fun','erlzk','erlzk_conn:handle_cast/2',[]],['fun','erlzk','erlzk_conn:handle_info/2',[]],['fun','erlzk','erlzk_conn:init/1',[]],['fun','erlzk','erlzk_conn:multi/2',[]],['fun','erlzk','erlzk_conn:set_acl/4',[]],['fun','erlzk','erlzk_conn:set_data/4',[]],['fun','erlzk','erlzk_conn:start/3',[]],['fun','erlzk','erlzk_conn:start/4',[]],['fun','erlzk','erlzk_conn:start_link/3',[]],['fun','erlzk','erlzk_conn:start_link/4',[]],['fun','erlzk','erlzk_conn:stop/1',[]],['fun','erlzk','erlzk_conn:sync/2',[]],['fun','erlzk','erlzk_conn:terminate/2',[]],['fun','erlzk','erlzk_conn_sup:init/1',[]],['fun','erlzk','erlzk_conn_sup:start_conn/1',[]],['fun','erlzk','erlzk_conn_sup:start_link/0',[]],['fun','erlzk','erlzk_sup:init/1',[]],['fun','erlzk','erlzk_sup:start_link/0',[]]];