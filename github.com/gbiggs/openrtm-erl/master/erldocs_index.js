var index = [['app','openrtm-erl','openrtm-erl','[application]'],['mod','openrtm-erl','buffer_svr','Server providing access to a buffer.'],['mod','openrtm-erl','config_set_tests','Unit tests for config_set.erl.'],['mod','openrtm-erl','config_svr','Configuration server.'],['mod','openrtm-erl','config_svr_tests','Configuration file server tests.'],['mod','openrtm-erl','config_tests','Unit tests for config.erl.'],['mod','openrtm-erl','conn_sup','Supervisor for a single connection.'],['mod','openrtm-erl','conns_sup','Supervisor for all connections on a port.'],['mod','openrtm-erl','dataflow_rtc_tests','Unit tests for dataflow_rtc.erl.'],['mod','openrtm-erl','defaults','Hard-coded default values for the configuration fi'],['mod','openrtm-erl','ecs_sup','Supervisor for all execution contexts owned by an '],['mod','openrtm-erl','event_fmt','Functions for formatting events to be logged.'],['mod','openrtm-erl','file_logger','Log event handler that publishes to a file.'],['mod','openrtm-erl','log_mgr','Log manager responsible for launching and managing'],['mod','openrtm-erl','mgr','Main manager worker.'],['mod','openrtm-erl','mgr_sup','Top-level supervisor for the RTC Manager.'],['mod','openrtm-erl','mock_rtc_behv','Mock RTC behaviour module for tests.'],['mod','openrtm-erl','mock_rtc_behv_ports','Mock RTC behaviour module with ports for tests.'],['mod','openrtm-erl','mod_svr_tests','Loadable module server tests.'],['mod','openrtm-erl','null_connection','A null connection between two ports.'],['mod','openrtm-erl','openrtm_erl','Top-level modules for the OpenRTM-aist-erlang appl'],['mod','openrtm-erl','OpenRTM_OutPortCdr_impl',[]],['mod','openrtm-erl','port_mgr','Manager server for the ports of an RTC.'],['mod','openrtm-erl','port_sup','Supervisor for a single port.'],['mod','openrtm-erl','ports_sup','Supervisor for all ports owned by an RTC.'],['mod','openrtm-erl','push_new','Push/new connection (outport side).'],['mod','openrtm-erl','put_listener','Listener for push connections.'],['mod','openrtm-erl','rtc_cfg_svr_tests','Unit tests for rtc_cfg_svr.erl.'],['mod','openrtm-erl','rtc_sup','Supervisor for a single RT Component in a manager.'],['mod','openrtm-erl','rtcs_sup','Supervisor for all RT Components in a manager.'],['mod','openrtm-erl','terminal_logger','Log event handler that publishes to the terminal.'],['fun','openrtm-erl','buffer_svr:code_change/3','Handle code changes.'],['fun','openrtm-erl','buffer_svr:count/1','Count the number of items in the buffer.'],['fun','openrtm-erl','buffer_svr:handle_call/3','Handle call messages.'],['fun','openrtm-erl','buffer_svr:handle_cast/2','Handle cast messages.'],['fun','openrtm-erl','buffer_svr:handle_info/2','Handle info messages.'],['fun','openrtm-erl','buffer_svr:init/2','Initialise the server.'],['fun','openrtm-erl','buffer_svr:read/1','Read the top value from the buffer.'],['fun','openrtm-erl','buffer_svr:start_link/2','Start the server.'],['fun','openrtm-erl','buffer_svr:stop_server/1','Stop the server.'],['fun','openrtm-erl','buffer_svr:terminate/2','Termination function.'],['fun','openrtm-erl','buffer_svr:write/2','Write a value to the buffer.'],['fun','openrtm-erl','config_svr:code_change/3','Handle code changes.'],['fun','openrtm-erl','config_svr:get_value/1','Get a value from the server.'],['fun','openrtm-erl','config_svr:handle_call/3','Handle call messages.'],['fun','openrtm-erl','config_svr:handle_cast/2','Handle cast messages.'],['fun','openrtm-erl','config_svr:handle_info/2','Handle info messages.'],['fun','openrtm-erl','config_svr:init/2','Initialise the configuration file server.'],['fun','openrtm-erl','config_svr:start_link/2','Start the configuration server.'],['fun','openrtm-erl','config_svr:stop/0','Stop the configuration server.'],['fun','openrtm-erl','config_svr:terminate/2','Termination function.'],['fun','openrtm-erl','conn_sup:init/2','Supervisor initialisation callback.'],['fun','openrtm-erl','conn_sup:start_link/2','Start a connection supervisor.'],['fun','openrtm-erl','conns_sup:init/1','Supervisor initialisation callback.'],['fun','openrtm-erl','conns_sup:start_link/0','Start the supervisor.'],['fun','openrtm-erl','defaults:defaults/0','Provides the default configuration parameters.'],['fun','openrtm-erl','ecs_sup:init/1','Supervisor initialisation callback.'],['fun','openrtm-erl','ecs_sup:start_link/0','Start the supervisor.'],['fun','openrtm-erl','event_fmt:format/5','Formats an event for printing.'],['fun','openrtm-erl','event_fmt:lvl_in_threshold/2','Checks if a given log level is within the given th'],['fun','openrtm-erl','file_logger:code_change/3','Handle code changes.'],['fun','openrtm-erl','file_logger:handle_call/2','Handle call messages.'],['fun','openrtm-erl','file_logger:handle_event/2','Handle an event to be logged.'],['fun','openrtm-erl','file_logger:handle_info/2','Handle info messages.'],['fun','openrtm-erl','file_logger:init/1','Logger initialisation function.'],['fun','openrtm-erl','file_logger:terminate/2','Logger shutdown function.'],['fun','openrtm-erl','log_mgr:add_file_output/2','Activate an event handler that publishes to a file'],['fun','openrtm-erl','log_mgr:add_term_output/1','Activate the event handler that publishes to the t'],['fun','openrtm-erl','log_mgr:del_file_output/1','Deactivate an event handler that publishes to a fi'],['fun','openrtm-erl','log_mgr:del_term_output/0','Deactivate the event handler that publishes to the'],['fun','openrtm-erl','log_mgr:list_handlers/0','Get the list of active event handlers.'],['fun','openrtm-erl','log_mgr:log/5','Log an event to the currently-active event handler'],['fun','openrtm-erl','log_mgr:log/6','Log an event to the currently-active event handler'],['fun','openrtm-erl','log_mgr:start_link/0','Start the log manager.'],['fun','openrtm-erl','log_mgr:start_link_with_outputs/0','Start the log manager, query the config server for'],['fun','openrtm-erl','log_mgr:start_link_with_termout/0','Start the log manager, and add a terminal output.'],['fun','openrtm-erl','log_mgr:stop/0','Stop the log manager, stopping all event handlers.'],['fun','openrtm-erl','mgr:code_change/3','Handle code changes.'],['fun','openrtm-erl','mgr:handle_call/3','Handle call messages.'],['fun','openrtm-erl','mgr:handle_cast/2','Handle cast messages.'],['fun','openrtm-erl','mgr:handle_info/2','Handle info messages.'],['fun','openrtm-erl','mgr:init/1','Initialise the manager.'],['fun','openrtm-erl','mgr:start_link/0','Start the manager.'],['fun','openrtm-erl','mgr:stop/0','Stop the manager.'],['fun','openrtm-erl','mgr:terminate/2','Termination function.'],['fun','openrtm-erl','mgr_sup:init/1','Supervisor initialisation callback.'],['fun','openrtm-erl','mock_rtc_behv:cbs/0','Get and reset the current callback history.'],['fun','openrtm-erl','mock_rtc_behv:code_change/3','Handle code changes.'],['fun','openrtm-erl','mock_rtc_behv:handle_call/3','Handle call messages.'],['fun','openrtm-erl','mock_rtc_behv:handle_cast/2','Handle cast messages.'],['fun','openrtm-erl','mock_rtc_behv:handle_info/2','Handle info messages.'],['fun','openrtm-erl','mock_rtc_behv:init/1','Initialise the server.'],['fun','openrtm-erl','mock_rtc_behv:on_aborting/4','RTC behaviour callback: on_aborting.'],['fun','openrtm-erl','mock_rtc_behv:on_activated/4','RTC behaviour callback: on_activated.'],['fun','openrtm-erl','mock_rtc_behv:on_deactivated/4','RTC behaviour callback: on_deactivated.'],['fun','openrtm-erl','mock_rtc_behv:on_error/4','RTC behaviour callback: on_error.'],['fun','openrtm-erl','mock_rtc_behv:on_execute/4','DataFlowComponentAction callback: on_execute.'],['fun','openrtm-erl','mock_rtc_behv:on_finalize/3','RTC behaviour callback: on_finalize.'],['fun','openrtm-erl','mock_rtc_behv:on_initialize/2','RTC behaviour callback: on_initialize.'],['fun','openrtm-erl','mock_rtc_behv:on_rate_changed/4','DataFlowComponentAction callback: on_rate_changed.'],['fun','openrtm-erl','mock_rtc_behv:on_reset/4','RTC behaviour callback: on_reset.'],['fun','openrtm-erl','mock_rtc_behv:on_shutdown/4','RTC behaviour callback: on_shutdown.'],['fun','openrtm-erl','mock_rtc_behv:on_startup/4','RTC behaviour callback: on_startup.'],['fun','openrtm-erl','mock_rtc_behv:on_state_update/4','DataFlowComponentAction callback: on_state_update.'],['fun','openrtm-erl','mock_rtc_behv:start_link/0','Start the server.'],['fun','openrtm-erl','mock_rtc_behv:stop_server/0','Stop the server.'],['fun','openrtm-erl','mock_rtc_behv:terminate/2','Termination function.'],['fun','openrtm-erl','mock_rtc_behv_ports:cbs/0','Get and reset the current callback history.'],['fun','openrtm-erl','mock_rtc_behv_ports:code_change/3','Handle code changes.'],['fun','openrtm-erl','mock_rtc_behv_ports:handle_call/3','Handle call messages.'],['fun','openrtm-erl','mock_rtc_behv_ports:handle_cast/2','Handle cast messages.'],['fun','openrtm-erl','mock_rtc_behv_ports:handle_info/2','Handle info messages.'],['fun','openrtm-erl','mock_rtc_behv_ports:init/1','Initialise the server.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_aborting/4','RTC behaviour callback: on_aborting.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_activated/4','RTC behaviour callback: on_activated.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_deactivated/4','RTC behaviour callback: on_deactivated.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_error/4','RTC behaviour callback: on_error.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_execute/4','DataFlowComponentAction callback: on_execute.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_finalize/3','RTC behaviour callback: on_finalize.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_initialize/2','RTC behaviour callback: on_initialize.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_rate_changed/4','DataFlowComponentAction callback: on_rate_changed.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_reset/4','RTC behaviour callback: on_reset.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_shutdown/4','RTC behaviour callback: on_shutdown.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_startup/4','RTC behaviour callback: on_startup.'],['fun','openrtm-erl','mock_rtc_behv_ports:on_state_update/4','DataFlowComponentAction callback: on_state_update.'],['fun','openrtm-erl','mock_rtc_behv_ports:start_link/0','Start the server.'],['fun','openrtm-erl','mock_rtc_behv_ports:stop_server/0','Stop the server.'],['fun','openrtm-erl','mock_rtc_behv_ports:terminate/2','Termination function.'],['fun','openrtm-erl','null_connection:code_change/3','Handle code changes.'],['fun','openrtm-erl','null_connection:handle_call/3','Handle call messages.'],['fun','openrtm-erl','null_connection:handle_cast/2','Handle cast messages.'],['fun','openrtm-erl','null_connection:handle_info/2','Handle info messages.'],['fun','openrtm-erl','null_connection:init/1','Initialise the server.'],['fun','openrtm-erl','null_connection:start_link/1','Start the server.'],['fun','openrtm-erl','null_connection:stop_server/1','Stop the server.'],['fun','openrtm-erl','null_connection:terminate/2','Termination function.'],['fun','openrtm-erl','openrtm_erl:shutdown/0','Call to shut down the RTC Manager application.'],['fun','openrtm-erl','openrtm_erl:start/2','Application start callback: starts the RTC Manager'],['fun','openrtm-erl','OpenRTM_OutPortCdr_impl:code_change/3',[]],['fun','openrtm-erl','OpenRTM_OutPortCdr_impl:get/2',[]],['fun','openrtm-erl','OpenRTM_OutPortCdr_impl:handle_info/2',[]],['fun','openrtm-erl','OpenRTM_OutPortCdr_impl:init/1',[]],['fun','openrtm-erl','OpenRTM_OutPortCdr_impl:terminate/2',[]],['fun','openrtm-erl','port_mgr:add_port/6','Add a new port.'],['fun','openrtm-erl','port_mgr:code_change/3','Handle code changes.'],['fun','openrtm-erl','port_mgr:get_port/2','Get the PID of a ports worker process.'],['fun','openrtm-erl','port_mgr:get_port_names/1','Get a list of the names of managed ports.'],['fun','openrtm-erl','port_mgr:get_ports/1','Get a list of the port PIDs.'],['fun','openrtm-erl','port_mgr:handle_call/3','Handle call messages.'],['fun','openrtm-erl','port_mgr:handle_cast/2','Handle cast messages.'],['fun','openrtm-erl','port_mgr:handle_info/2','Handle info messages.'],['fun','openrtm-erl','port_mgr:init/1','Initialise the server.'],['fun','openrtm-erl','port_mgr:port_profs/1','Get the profiles of the ports.'],['fun','openrtm-erl','port_mgr:rem_port/2','Remove a port.'],['fun','openrtm-erl','port_mgr:set_ports_sup/2','Set the PID of the supervisor used to supervise po'],['fun','openrtm-erl','port_mgr:start_link/0','Start the server.'],['fun','openrtm-erl','port_mgr:stop_server/1','Stop the server.'],['fun','openrtm-erl','port_mgr:terminate/2','Termination function.'],['fun','openrtm-erl','port_sup:init/2','Supervisor initialisation callback.'],['fun','openrtm-erl','port_sup:start_link/2','Start a port supervisor.'],['fun','openrtm-erl','ports_sup:init/1','Supervisor initialisation callback.'],['fun','openrtm-erl','ports_sup:start_link/0','Start the supervisor.'],['fun','openrtm-erl','push_new:code_change/3','Handle code changes.'],['fun','openrtm-erl','push_new:handle_call/3','Handle call messages.'],['fun','openrtm-erl','push_new:handle_cast/2','Handle cast messages.'],['fun','openrtm-erl','push_new:handle_info/2','Handle info messages.'],['fun','openrtm-erl','push_new:init/1','Initialise the server.'],['fun','openrtm-erl','push_new:start_link/1','Start the server.'],['fun','openrtm-erl','push_new:stop_server/1','Stop the server.'],['fun','openrtm-erl','push_new:terminate/2','Termination function.'],['fun','openrtm-erl','put_listener:code_change/3','Handle code changes.'],['fun','openrtm-erl','put_listener:handle_call/3','Handle call messages.'],['fun','openrtm-erl','put_listener:handle_cast/2','Handle cast messages.'],['fun','openrtm-erl','put_listener:handle_info/2','Handle info messages.'],['fun','openrtm-erl','put_listener:init/1','Initialise the server.'],['fun','openrtm-erl','put_listener:start_link/1','Start the server.'],['fun','openrtm-erl','put_listener:stop_server/1','Stop the server.'],['fun','openrtm-erl','put_listener:terminate/2','Termination function.'],['fun','openrtm-erl','rtc_sup:init/3','Supervisor initialisation callback.'],['fun','openrtm-erl','rtc_sup:start_link/3','Start an RTC supervisor.'],['fun','openrtm-erl','rtcs_sup:init/1','Supervisor initialisation callback.'],['fun','openrtm-erl','rtcs_sup:start_link/0','Start the RTCs supervisor.'],['fun','openrtm-erl','terminal_logger:code_change/3','Handle code changes.'],['fun','openrtm-erl','terminal_logger:handle_call/2','Handle call messages.'],['fun','openrtm-erl','terminal_logger:handle_event/2','Handle an event to be logged.'],['fun','openrtm-erl','terminal_logger:handle_info/2','Handle info messages.'],['fun','openrtm-erl','terminal_logger:init/1','Logger initialisation function.'],['fun','openrtm-erl','terminal_logger:terminate/2','Logger shutdown function.']];