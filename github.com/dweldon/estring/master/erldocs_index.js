var index = [['app','estring','estring','[application]'],['mod','estring','estring','estring is a string manipulation library.'],['fun','estring','estring:begins_with/1','Returns true if String begins with SubString,  an'],['fun','estring','estring:contains/1','Returns true if String contains SubString, and fal'],['fun','estring','estring:edit_distance/1','Returns the damerau-levenshtein edit distance betw'],['fun','estring','estring:edit_distance/1','Returns the damerau-levenshtein edit distance betw'],['fun','estring','estring:ends_with/1','Returns true if String ends with SubString, and fa'],['fun','estring','estring:format/1','Shortcut for lists:flatten(io_lib:format(Format, D'],['fun','estring','estring:is_integer/1','Returns true if String is a string representation '],['fun','estring','estring:random/1','Returns a random alphanumeric string of length N.'],['fun','estring','estring:rot13/1','Applies the rot13 substitution cipher to String.'],['fun','estring','estring:similarity/1','Returns a score between 0 and 1, representing how '],['fun','estring','estring:similarity/1','Returns a score between 0 and 1, representing how '],['fun','estring','estring:similarity/1','Returns a score between 0 and 1, representing how '],['fun','estring','estring:squeeze/1','Returns a string where runs of Char are replaced w'],['fun','estring','estring:squeeze/1','Shortcut for estring:squeeze(String, " ").'],['fun','estring','estring:strip/1','Returns a string where leading and trailing whites'],['fun','estring','estring:strip_split/1','Shortcut for  re:split(estring:strip(String), Sep']];