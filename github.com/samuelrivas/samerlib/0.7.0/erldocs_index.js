var index = [['app','samerlib','samerlib','[application]'],['mod','samerlib','crash_file','Crashfied version of standard file module.'],['mod','samerlib','crashfy','Functions to turn tagged values into clean types a'],['mod','samerlib','sel_application','Some useful functions to handle applications.'],['mod','samerlib','sel_dummy_server','A gen server that returns ok to everything.'],['mod','samerlib','sel_dummy_supervisor','A supervisor with no children and no extra logic.'],['mod','samerlib','sel_file','convenience functions to handle files.'],['mod','samerlib','sel_gen_server','crashfied calls to gen_server.'],['mod','samerlib','sel_int','Integer arithmetic operations.'],['mod','samerlib','sel_lists','Functions to handle lists.'],['mod','samerlib','sel_process','Generic functions to handle processes.'],['mod','samerlib','sel_string','functions to handle strings and formatting common '],['mod','samerlib','sel_test','useful functions to write sensible tests.'],['mod','samerlib','yalog','Yet another logger.'],['fun','samerlib','crash_file:consult/1',[]],['fun','samerlib','crashfy:untuple/1','Turns a tagged value intro an actual value or a th'],['fun','samerlib','sel_application:start_app/1','Starts an application and all its dependencies.'],['fun','samerlib','sel_application:stop_apps/1','Stops all the applications in Apps in reverse orde'],['fun','samerlib','sel_dummy_server:start_link/0','start an anonymous server.'],['fun','samerlib','sel_dummy_server:start_link/1','start named server.'],['fun','samerlib','sel_dummy_server:stop/1','terminates the server.'],['fun','samerlib','sel_dummy_supervisor:init/1',[]],['fun','samerlib','sel_dummy_supervisor:start_link/1','start a supervisor registered as Name'],['fun','samerlib','sel_file:delete_recursive/1','removes a directory and all its contents.'],['fun','samerlib','sel_file:make_dir/1','a crashfied version of file:make_dir/1.'],['fun','samerlib','sel_file:write_file/1','a crashfied version of file:write_file/1.'],['fun','samerlib','sel_gen_server:call/2','a crashfied version of gen_server:call/2.'],['fun','samerlib','sel_gen_server:call/3','a crashfied version of gen_server:call/3.'],['fun','samerlib','sel_gen_server:cast/2','a crashfied version of gen_server:cast/2.'],['fun','samerlib','sel_int:extended_euclid/1','Returns {X, Y} such that X*A + Y*B == gcd(A, B)'],['fun','samerlib','sel_int:gcd/1','Returns the greatest common divisor of A and B'],['fun','samerlib','sel_int:int_div/1','Returns {Q, R} such that A == Q*B + R'],['fun','samerlib','sel_int:mod_abs/1','Returns the modulus absolute value.'],['fun','samerlib','sel_int:mod_inv/1','Returns the inverse of N modulus Mod'],['fun','samerlib','sel_int:sqrt/1','Returns the closest integers to the square root of'],['fun','samerlib','sel_lists:cut_and_zip/2','Like lists:zip/2, but works with lists of differen'],['fun','samerlib','sel_lists:drop/1','Return a copy of L list with the first N elements '],['fun','samerlib','sel_lists:drop_last/1','Return a copy of L with the last N elements remove'],['fun','samerlib','sel_lists:keysearch/1','Return the first tuple in the list with Key as fir'],['fun','samerlib','sel_lists:reduce/2','Fold L with F using the first element as starting '],['fun','samerlib','sel_lists:take/1','Return the first N elements of L'],['fun','samerlib','sel_lists:take_last/1','Return the last N elements of L'],['fun','samerlib','sel_process:wait_exit/1','Like wait_exit/1 but with a timeout.'],['fun','samerlib','sel_process:wait_exit/1','Wait until Pid exits and return its exit reason.'],['fun','samerlib','sel_string:format/1','Like io_lib:format/2, but flattening the result.'],['fun','samerlib','sel_string:format_byte/1','Create a string with the hexadecimal representatio'],['fun','samerlib','sel_string:format_byte/1','Equivalent to format_byte(Byte, upper).'],['fun','samerlib','sel_string:format_hex/1','Output the hexadecimal formatting of a binary.'],['fun','samerlib','sel_string:format_hex/1','Equivalent to format_hex(B, upper).'],['fun','samerlib','sel_string:parse_hex/1','Read a binary from its hexadecimal representation.'],['fun','samerlib','sel_test:props_to_eunit/1','Return an Eunit test that checks all properties in'],['fun','samerlib','sel_test:props_to_eunit/1','Equivalent to props_to_eunit(Module, 10).'],['fun','samerlib','sel_test:test_in_dir/1','Same as test_in_dir/1, but cleaning up only if Cle'],['fun','samerlib','sel_test:test_in_dir/1','Create clean directories to run tests that require'],['fun','samerlib','yalog:debug/1',[]],['fun','samerlib','yalog:debug/1',[]],['fun','samerlib','yalog:error/1',[]],['fun','samerlib','yalog:error/1',[]],['fun','samerlib','yalog:info/1',[]],['fun','samerlib','yalog:info/1',[]],['fun','samerlib','yalog:test/0',[]],['fun','samerlib','yalog:warning/1',[]],['fun','samerlib','yalog:warning/1',[]]];