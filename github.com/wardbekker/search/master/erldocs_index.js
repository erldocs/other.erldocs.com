var index = [['app','search','search','[application]'],['mod','search','eporter',[]],['mod','search','eporter_conditions',[]],['mod','search','plists','plists is a drop-in replacement for module lists,'],['mod','search','reloader','Erlang module for automatically reloading modified'],['mod','search','search_app',[]],['mod','search','search_daat',[]],['mod','search','search_handler',[]],['mod','search','search_import',[]],['mod','search','search_index',[]],['mod','search','search_query',[]],['mod','search','search_sup',[]],['fun','search','eporter:stem/1',[]],['fun','search','eporter:stem_file/2',[]],['fun','search','eporter_conditions:ends_with/2',[]],['fun','search','eporter_conditions:ends_with_cvc/1',[]],['fun','search','eporter_conditions:ends_with_double_cons/1',[]],['fun','search','eporter_conditions:has_vowel/1',[]],['fun','search','eporter_conditions:measure/1',[]],['fun','search','plists:all/2','Same semantics as in module lists.'],['fun','search','plists:all/3','Same semantics as in module lists.'],['fun','search','plists:any/2','Same semantics as in module lists.'],['fun','search','plists:any/3','Same semantics as in module lists.'],['fun','search','plists:filter/2','Same semantics as in module lists.'],['fun','search','plists:filter/3','Same semantics as in module lists.'],['fun','search','plists:fold/3','Like below, but assumes 1 as the Malt.'],['fun','search','plists:fold/4','Like below, but uses the Fun as the Fuse by defaul'],['fun','search','plists:fold/5','fold is more complex when made parallel.'],['fun','search','plists:foreach/2','Similiar to foreach in module lists except it ma'],['fun','search','plists:foreach/3','Similiar to foreach in module lists except it ma'],['fun','search','plists:map/2','Same semantics as in module lists.'],['fun','search','plists:map/3','Same semantics as in module lists.'],['fun','search','plists:mapreduce/2','Like below, assumes default MapMalt of 1.'],['fun','search','plists:mapreduce/3',[]],['fun','search','plists:mapreduce/5','This is a very basic mapreduce.'],['fun','search','plists:partition/2','Same semantics as in module lists.'],['fun','search','plists:partition/3','Same semantics as in module lists.'],['fun','search','plists:runmany/3','Like below, but assumes a Malt of 1, meaning each'],['fun','search','plists:runmany/4','All of the other functions are implemented with ru'],['fun','search','plists:sort/1','Same semantics as in module lists.'],['fun','search','plists:sort/2','Same semantics as in module lists.'],['fun','search','plists:sort/3','This version lets you specify your own malt for so'],['fun','search','plists:usort/1','Same semantics as in module lists.'],['fun','search','plists:usort/2','Same semantics as in module lists.'],['fun','search','plists:usort/3','This version lets you specify your own malt for us'],['fun','search','reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','search','reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','search','reloader:handle_call/3','gen_server callback.'],['fun','search','reloader:handle_cast/2','gen_server callback.'],['fun','search','reloader:handle_info/2','gen_server callback.'],['fun','search','reloader:init/1','gen_server init, opens the server in an initial st'],['fun','search','reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','search','reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','search','reloader:start/0','Start the reloader.'],['fun','search','reloader:start_link/0','Start the reloader.'],['fun','search','reloader:stop/0','Stop the reloader.'],['fun','search','reloader:terminate/2','gen_server termination callback.'],['fun','search','search_app:start/0',[]],['fun','search','search_app:start/2',[]],['fun','search','search_app:stop/1',[]],['fun','search','search_daat:get_top/1',[]],['fun','search','search_handler:handle/2',[]],['fun','search','search_handler:init/3',[]],['fun','search','search_handler:terminate/3',[]],['fun','search','search_import:stack_exchange_import/0',[]],['fun','search','search_index:delete_document_field_values/1',[]],['fun','search','search_index:delete_term_document_field_frequencies/1',[]],['fun','search','search_index:dump_tables/0',[]],['fun','search','search_index:get_document_field_value/1',[]],['fun','search','search_index:get_postings/1',[]],['fun','search','search_index:get_term_document_field_frequencies/1',[]],['fun','search','search_index:get_unique_terms/0',[]],['fun','search','search_index:install/0',[]],['fun','search','search_index:persist_document_field_value/1',[]],['fun','search','search_index:persist_postings/1',[]],['fun','search','search_index:persist_term_document_field_frequency/1',[]],['fun','search','search_index:total_number_of_documents/0',[]],['fun','search','search_query:profile/0',[]],['fun','search','search_query:query/1',[]],['fun','search','search_sup:init/1',[]],['fun','search','search_sup:start_link/0',[]]];