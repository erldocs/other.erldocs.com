var index = [['app','scalaris_old','scalaris_old','[application]'],['mod','scalaris_old','admin','Aministrative helper functions (mostly for debuggi'],['mod','scalaris_old','admin_first','   determine if first vm in this deployment.'],['mod','scalaris_old','api_autoscale','Simple auto-scaling service API.'],['mod','scalaris_old','api_dht','API for access to the non replicated DHT items.'],['mod','scalaris_old','api_dht_raw','API for raw access to DHT based on (already) hashe'],['mod','scalaris_old','api_monitor','API for monitoring individual nodes and the whole '],['mod','scalaris_old','api_pubsub','Publish/Subscribe API functions.'],['mod','scalaris_old','api_rdht','API for inconsistent access to the replicated DHT '],['mod','scalaris_old','api_tx','API for transactional access to replicated DHT ite'],['mod','scalaris_old','api_txc','API for compressed transactional access to replica'],['mod','scalaris_old','api_vm','   Administrative functions available for external'],['mod','scalaris_old','autoscale','Auto-scaling service.'],['mod','scalaris_old','autoscale_server','Server for collecting autoscale plot data from aut'],['mod','scalaris_old','bench','This is a small server for running benchmarks.'],['mod','scalaris_old','bench_fun','   i++ benchmark.'],['mod','scalaris_old','bench_load','Load generator.'],['mod','scalaris_old','bench_server','This is a small server for running benchmarks.'],['mod','scalaris_old','bulkowner','   Bulk owner operations (for now only broadcastin'],['mod','scalaris_old','cloud_beh','Behaviour for various operations in a cloud enviro'],['mod','scalaris_old','cloud_local','CLOUD LOCAL starts or stops local erlang vms based'],['mod','scalaris_old','cloud_ssh','Cloud SSH starts or stops erlang vms on ssh hosts '],['mod','scalaris_old','comm','   Message Sending.'],['mod','scalaris_old','config','   Config file parser for scalaris.'],['mod','scalaris_old','cyclon','Cyclon overlay network.'],['mod','scalaris_old','cyclon_cache','Cyclon node cache implementation using a list.'],['mod','scalaris_old','db_beh','   database behaviour.'],['mod','scalaris_old','db_entry','Abstract datatype of a single DB entry.'],['mod','scalaris_old','db_ets','   In-process database using ets.'],['mod','scalaris_old','db_toke','In-process Database using toke.'],['mod','scalaris_old','db_verify_use','Database based on db_ets that verifies the correct'],['mod','scalaris_old','dc_centroids','   Centroids data structure for dc_clustering.'],['mod','scalaris_old','dc_clustering','   Re-register with boot nodes.'],['mod','scalaris_old','dht_node','   dht_node main file.'],['mod','scalaris_old','dht_node_join','   dht_node join procedure.'],['mod','scalaris_old','dht_node_lookup','   dht_node lookup algorithm (interacts with the d'],['mod','scalaris_old','dht_node_monitor','   dht_node helper process for monitoring.'],['mod','scalaris_old','dht_node_move','   dht_node move procedure          Note: assumes'],['mod','scalaris_old','dht_node_reregister','   Re-register with boot nodes.'],['mod','scalaris_old','dht_node_state','State of a dht_node.'],['mod','scalaris_old','dn_cache','   Dead node Cache.'],['mod','scalaris_old','fd','   Failure detector based on Guerraoui.'],['mod','scalaris_old','fd_hbs','   Heartbeat server (HBS) for fd.erl.'],['mod','scalaris_old','fix_queue','   Queue implementation with a fixed maximum lengt'],['mod','scalaris_old','ganglia','Ganglia monitoring interface.'],['mod','scalaris_old','gen_component','Generic component framework.'],['mod','scalaris_old','gossip','   Framework for estimating aggregated global prop'],['mod','scalaris_old','gossip2','   Behaviour modul for gossip_beh.erl.'],['mod','scalaris_old','gossip_beh','   Gossiping behaviour.'],['mod','scalaris_old','gossip_load','   Gossiping behaviour.'],['mod','scalaris_old','gossip_state','Methods for working with the gossip state.'],['mod','scalaris_old','histogram','   Basic Histogram.'],['mod','scalaris_old','intervals','Interval data structure and handling functions.'],['mod','scalaris_old','lb_common','   TODO: Add description to lb_common.'],['mod','scalaris_old','lb_op','   Balance operation structure.'],['mod','scalaris_old','lb_psv_beh','   Passive load balancing algorithm behavior.'],['mod','scalaris_old','lb_psv_gossip','   Passive load balancing using gossip to sample O'],['mod','scalaris_old','lb_psv_simple','   Simple passive load balancing sampling k nodes '],['mod','scalaris_old','lb_psv_split','   Simple passive load balancing sampling k nodes '],['mod','scalaris_old','log','log service.'],['mod','scalaris_old','log4erl_ctpal_appender','Log4erl appender using log:pal/1 instead if io:for'],['mod','scalaris_old','math_pos','   Implements mathematical operations on numbers i'],['mod','scalaris_old','mathlib','Math utility functions.'],['mod','scalaris_old','mgmt_server','The management server maintains a list of scalaris'],['mod','scalaris_old','monitor','   Monitors data from different processes, e.g.'],['mod','scalaris_old','monitor_perf','   Periodically executes a small benchmark to moni'],['mod','scalaris_old','msg_delay','Cheap message delay.'],['mod','scalaris_old','msg_queue','   Implements helper functions for queuing message'],['mod','scalaris_old','node','   node data structure + functions.'],['mod','scalaris_old','node_details','   Node summary for statistics.'],['mod','scalaris_old','nodelist','   Provides lists of nodes that are sorted by the '],['mod','scalaris_old','pdb','DB for a process internal state (lika a gen_compon'],['mod','scalaris_old','pdb_beh','Behaviour for pdb (see pdb.erl and pdb_ets.erl).'],['mod','scalaris_old','pdb_ets','DB for a process internal state (lika a gen_compon'],['mod','scalaris_old','pid_groups','Process groups.'],['mod','scalaris_old','prime','   prime number module           implemented meth'],['mod','scalaris_old','pubsub_publish','Publish function.'],['mod','scalaris_old','quorum','Service functions for handling quorums.'],['mod','scalaris_old','randoms','Helper functions to create random numbers.'],['mod','scalaris_old','rm_beh','Ring maintenance behaviour.'],['mod','scalaris_old','rm_chord','   Chord-like ring maintenance.'],['mod','scalaris_old','rm_loop','   Shared process for the ring maintenance impleme'],['mod','scalaris_old','rm_tman','   T-Man ring maintenance.'],['mod','scalaris_old','rrd','   Round-Robin-Database (RRD) clone.'],['mod','scalaris_old','rt_beh','routing table behaviour.'],['mod','scalaris_old','rt_chord','Routing Table.'],['mod','scalaris_old','rt_frtchord','A flexible routing table algorithm as presented in'],['mod','scalaris_old','rt_gfrtchord','A flexible routing table algorithm with node group'],['mod','scalaris_old','rt_loop','   routing table process.'],['mod','scalaris_old','rt_simple','Simple implementation of a routing table with line'],['mod','scalaris_old','scalaris','Starting and stopping the scalaris app.'],['mod','scalaris_old','service_per_vm','Handling all scalaris nodes inside an erlang VM.'],['mod','scalaris_old','slide_beh','   Behaviour for rm-dependant slide functionality.'],['mod','scalaris_old','slide_chord','   Slide protocol used for Chord ring maintenance '],['mod','scalaris_old','slide_leases','   Slide protocol used for lease-based ring mainte'],['mod','scalaris_old','slide_op','   Slide operation structure for node moves, joins'],['mod','scalaris_old','snapshot','Generic snapshot-related functions (utils).'],['mod','scalaris_old','snapshot_leader','gen_component for (potential) leader of the snapsh'],['mod','scalaris_old','snapshot_leader_state','Local state information needed for the leader of t'],['mod','scalaris_old','snapshot_state','Local state information needed for the S3 snapshot'],['mod','scalaris_old','statistics','Statistics Module for mgmt server.'],['mod','scalaris_old','sup_comm_layer','   Supervisor for the comm layer processes.'],['mod','scalaris_old','sup_dht_node','   Supervisor for each DHT node that is responsibl'],['mod','scalaris_old','sup_dht_node_core','   Supervisor for each DHT node that is responsibl'],['mod','scalaris_old','sup_dht_node_core_tx','   Supervisor for each DHT node that is responsibl'],['mod','scalaris_old','sup_paxos','Supervisor to instantiate paxos processes (propose'],['mod','scalaris_old','sup_scalaris','Supervisor for a mgmt server or/and "ordinary" nod'],['mod','scalaris_old','sup_yaws',[]],['mod','scalaris_old','top','   Text mode top for an Erlang VM.'],['mod','scalaris_old','trace_mpath','Trace what a message triggers in the system by tra'],['mod','scalaris_old','tracer','Simple Profiler for Scalaris.'],['mod','scalaris_old','trigger','   Generic trigger for (parameterized) modules.'],['mod','scalaris_old','trigger_beh','trigger behaviour.'],['mod','scalaris_old','trigger_dynamic','   Dynamic trigger for (parameterized) modules.'],['mod','scalaris_old','trigger_periodic','   Periodic trigger for (parameterized) modules.'],['mod','scalaris_old','uid','   Provides unique process-local and global IDs.'],['mod','scalaris_old','util','   Utility Functions.'],['mod','scalaris_old','vivaldi','Vivaldi is a network coordinate system.'],['mod','scalaris_old','vivaldi_latency','Vivaldi helper module for measuring latency betwee'],['mod','scalaris_old','webhelpers','web helpers module for mgmt server to generated th'],['fun','scalaris_old','admin:add_node/1',[]],['fun','scalaris_old','admin:add_node_at_id/1','add new Scalaris nodes on the local node.'],['fun','scalaris_old','admin:add_nodes/1',[]],['fun','scalaris_old','admin:check_ring/0','Contact mgmt server and check that each nodes suc'],['fun','scalaris_old','admin:check_ring_deep/0','Contact mgmt server and check that each nodes suc'],['fun','scalaris_old','admin:check_routing_tables/1',[]],['fun','scalaris_old','admin:dd_check_ring/0',[]],['fun','scalaris_old','admin:dd_check_ring/1',[]],['fun','scalaris_old','admin:del_node/1','Delete a single node.'],['fun','scalaris_old','admin:del_nodes/1','Deletes Scalaris nodes from the current VM.'],['fun','scalaris_old','admin:del_nodes_by_name/1',[]],['fun','scalaris_old','admin:diff_dump/1',[]],['fun','scalaris_old','admin:get_dht_node_specs/0',[]],['fun','scalaris_old','admin:get_dump/0','returns communications information.'],['fun','scalaris_old','admin:get_dump_bw/0','returns communications information.'],['fun','scalaris_old','admin:nodes/0','contact mgmt server and list the known ip addresse'],['fun','scalaris_old','admin:number_of_nodes/0',[]],['fun','scalaris_old','admin:print_ages/0',[]],['fun','scalaris_old','admin:start/0',[]],['fun','scalaris_old','admin:start_link/0',[]],['fun','scalaris_old','admin_first:is_first_vm/0',[]],['fun','scalaris_old','api_autoscale:activate_alarms/0','Set all alarms to active.'],['fun','scalaris_old','api_autoscale:check_config/0','Checks whether config parameters exist and are val'],['fun','scalaris_old','api_autoscale:deactivate_alarms/0','Set all alarms to inactive.'],['fun','scalaris_old','api_autoscale:lock_scale_req/0',[]],['fun','scalaris_old','api_autoscale:pull_scale_req/0','Pull current scale request from autoscale leader.'],['fun','scalaris_old','api_autoscale:reset_plot_data/0',[]],['fun','scalaris_old','api_autoscale:toggle_alarm/1','Toggle state of alarm Name from active to inactive'],['fun','scalaris_old','api_autoscale:unlock_scale_req/0',[]],['fun','scalaris_old','api_autoscale:write_plot_data/0',[]],['fun','scalaris_old','api_dht:hash_key/1',[]],['fun','scalaris_old','api_dht_raw:get_replica_keys/1',[]],['fun','scalaris_old','api_dht_raw:range_read/1','Read a range of key-value pairs between the given '],['fun','scalaris_old','api_dht_raw:unreliable_get_key/1',[]],['fun','scalaris_old','api_dht_raw:unreliable_get_key/1',[]],['fun','scalaris_old','api_dht_raw:unreliable_lookup/1',[]],['fun','scalaris_old','api_monitor:get_node_info/0','Gets some information about the current Erlang nod'],['fun','scalaris_old','api_monitor:get_node_performance/0',[]],['fun','scalaris_old','api_monitor:get_service_info/0',[]],['fun','scalaris_old','api_monitor:get_service_performance/0',[]],['fun','scalaris_old','api_pubsub:get_subscribers/1','Queries the subscribers of a query.'],['fun','scalaris_old','api_pubsub:publish/1','Publishes an event under a given topic.'],['fun','scalaris_old','api_pubsub:subscribe/1','Subscribes a URL for a topic.'],['fun','scalaris_old','api_pubsub:unsubscribe/1','Unsubscribes a URL from a topic.'],['fun','scalaris_old','api_rdht:delete/1','try to delete the given key and return a list of r'],['fun','scalaris_old','api_rdht:delete/1',[]],['fun','scalaris_old','api_rdht:get_replica_keys/1',[]],['fun','scalaris_old','api_tx:add_del_on_list/1',[]],['fun','scalaris_old','api_tx:add_del_on_list/1',[]],['fun','scalaris_old','api_tx:add_on_nr/1',[]],['fun','scalaris_old','api_tx:add_on_nr/1',[]],['fun','scalaris_old','api_tx:commit/1',[]],['fun','scalaris_old','api_tx:get_system_snapshot/0',[]],['fun','scalaris_old','api_tx:new_tlog/0',[]],['fun','scalaris_old','api_tx:read/1',[]],['fun','scalaris_old','api_tx:read/1',[]],['fun','scalaris_old','api_tx:req_list/1','Perform several requests inside a transaction and '],['fun','scalaris_old','api_tx:req_list/1',[]],['fun','scalaris_old','api_tx:req_list_commit_each/1',[]],['fun','scalaris_old','api_tx:test_and_set/1',[]],['fun','scalaris_old','api_tx:test_and_set/1',[]],['fun','scalaris_old','api_tx:write/1',[]],['fun','scalaris_old','api_tx:write/1',[]],['fun','scalaris_old','api_txc:add_del_on_list/1',[]],['fun','scalaris_old','api_txc:add_del_on_list/1',[]],['fun','scalaris_old','api_txc:add_on_nr/1',[]],['fun','scalaris_old','api_txc:add_on_nr/1',[]],['fun','scalaris_old','api_txc:commit/1',[]],['fun','scalaris_old','api_txc:get_system_snapshot/0',[]],['fun','scalaris_old','api_txc:new_tlog/0',[]],['fun','scalaris_old','api_txc:read/1',[]],['fun','scalaris_old','api_txc:read/1',[]],['fun','scalaris_old','api_txc:req_list/1','Perform several requests inside a transaction and '],['fun','scalaris_old','api_txc:req_list/1',[]],['fun','scalaris_old','api_txc:req_list_commit_each/1',[]],['fun','scalaris_old','api_txc:test_and_set/1',[]],['fun','scalaris_old','api_txc:test_and_set/1',[]],['fun','scalaris_old','api_txc:write/1',[]],['fun','scalaris_old','api_txc:write/1',[]],['fun','scalaris_old','api_vm:add_nodes/1','Adds Number Scalaris nodes to this VM.'],['fun','scalaris_old','api_vm:get_info/0','Gets some information about the VM and Scalaris.'],['fun','scalaris_old','api_vm:get_nodes/0','Gets the names of all Scalaris nodes inside this V'],['fun','scalaris_old','api_vm:get_other_vms/1','Gets connection info for a random subset of known '],['fun','scalaris_old','api_vm:get_version/0','Gets the version of Scalaris.'],['fun','scalaris_old','api_vm:kill_node/1','Kills a given node.'],['fun','scalaris_old','api_vm:kill_nodes/1','Kills multiple nodes.'],['fun','scalaris_old','api_vm:kill_nodes_by_name/1',[]],['fun','scalaris_old','api_vm:kill_vm/0','Kills this VM.'],['fun','scalaris_old','api_vm:number_of_nodes/0','Gets the number of Scalaris nodes inside this VM.'],['fun','scalaris_old','api_vm:shutdown_node/1','Sends a graceful leave request to a given node.'],['fun','scalaris_old','api_vm:shutdown_nodes/1','Sends a graceful leave request to multiple nodes.'],['fun','scalaris_old','api_vm:shutdown_nodes_by_name/1',[]],['fun','scalaris_old','api_vm:shutdown_vm/0','Graceful shutdown of this VM.'],['fun','scalaris_old','autoscale:check_config/0','Checks whether config parameters exist and are val'],['fun','scalaris_old','autoscale:init/1',[]],['fun','scalaris_old','autoscale:on/1','Set new leader state at startup and ring changes.'],['fun','scalaris_old','autoscale:send_my_range_req/1','Request my_range from dht_node (called by rm_loop '],['fun','scalaris_old','autoscale:start_link/1',[]],['fun','scalaris_old','autoscale_server:check_config/0','Checks whether config parameters for autoscale_ser'],['fun','scalaris_old','autoscale_server:init/1',[]],['fun','scalaris_old','autoscale_server:log/1',[]],['fun','scalaris_old','autoscale_server:on/1',[]],['fun','scalaris_old','autoscale_server:start_link/1',[]],['fun','scalaris_old','bench:increment/1','run an increment benchmark on all nodes (with a us'],['fun','scalaris_old','bench:increment/1','run an increment benchmark (i++) on all nodes.'],['fun','scalaris_old','bench:increment_o/1','run an increment benchmark on all nodes (with a us'],['fun','scalaris_old','bench:increment_o/1','run an increment benchmark (i++) on all nodes with'],['fun','scalaris_old','bench:increment_with_histo/1','run an increment benchmark (i++) on all nodes.'],['fun','scalaris_old','bench:increment_with_histo_o/1','run an increment benchmark (i++) on all nodes with'],['fun','scalaris_old','bench:load_start/1',[]],['fun','scalaris_old','bench:load_stop/0',[]],['fun','scalaris_old','bench:quorum_read/1','run an read benchmark on all nodes.'],['fun','scalaris_old','bench:quorum_read_o/1','run an read benchmark on all nodes with custom opt'],['fun','scalaris_old','bench:read_read/1','run an read benchmark on all nodes.'],['fun','scalaris_old','bench:read_read_o/1','run an read benchmark on all nodes with custom opt'],['fun','scalaris_old','bench_fun:increment/1',[]],['fun','scalaris_old','bench_fun:increment_with_histo/1',[]],['fun','scalaris_old','bench_fun:increment_with_key/1',[]],['fun','scalaris_old','bench_fun:quorum_read/1',[]],['fun','scalaris_old','bench_fun:read_read/1',[]],['fun','scalaris_old','bench_load:start/1',[]],['fun','scalaris_old','bench_server:init/1',[]],['fun','scalaris_old','bench_server:on/1',[]],['fun','scalaris_old','bench_server:run_threads/1','spawns threads and collect statistics.'],['fun','scalaris_old','bench_server:start_link/0','spawns a bench_server.'],['fun','scalaris_old','bulkowner:issue_bulk_owner/1','Start a bulk owner operation to send the message t'],['fun','scalaris_old','bulkowner:issue_send_reply/1',[]],['fun','scalaris_old','bulkowner:on/1',[]],['fun','scalaris_old','bulkowner:send_reply/1',[]],['fun','scalaris_old','bulkowner:send_reply_failed/1',[]],['fun','scalaris_old','cloud_beh:behaviour_info/1',[]],['fun','scalaris_old','cloud_local:add_vms/1',[]],['fun','scalaris_old','cloud_local:get_number_of_vms/0',[]],['fun','scalaris_old','cloud_local:init/0',[]],['fun','scalaris_old','cloud_local:remove_vms/1',[]],['fun','scalaris_old','cloud_ssh:add_vms/1',[]],['fun','scalaris_old','cloud_ssh:get_number_of_vms/0',[]],['fun','scalaris_old','cloud_ssh:init/0',[]],['fun','scalaris_old','cloud_ssh:killall_vms/0',[]],['fun','scalaris_old','cloud_ssh:remove_vms/1',[]],['fun','scalaris_old','comm:get/1','Create the PID a process with name Name would have'],['fun','scalaris_old','comm:get_ip/1','Gets the IP address of the given (global) mypid().'],['fun','scalaris_old','comm:get_msg_tag/1','Gets the tag of a message (the first element of it'],['fun','scalaris_old','comm:get_port/1','Gets the port of the given (global) mypid().'],['fun','scalaris_old','comm:init_and_wait_for_valid_pid/0','Initializes the comm layer by sending a message to'],['fun','scalaris_old','comm:is_local/1','Check whether a global mypid() can be converted to'],['fun','scalaris_old','comm:is_valid/1','Check whether the given pid is well formed.'],['fun','scalaris_old','comm:make_global/1','Convert a local erlang pid to a global pid of type'],['fun','scalaris_old','comm:make_local/1','Convert a global mypid() of the current node to a '],['fun','scalaris_old','comm:reply_as/1','Encapsulates the given pid (local or global) with '],['fun','scalaris_old','comm:send/1','Send a message to an arbitrary process with the gi'],['fun','scalaris_old','comm:send/1','Sends a message to a process given by its pid.'],['fun','scalaris_old','comm:send_local/1','Sends a message to a local process given by its lo'],['fun','scalaris_old','comm:send_local_after/1','Sends a message to a local process given by its lo'],['fun','scalaris_old','comm:this/0','Returns the global pid of the current process.'],['fun','scalaris_old','comm:unpack_cookie/1',[]],['fun','scalaris_old','config:cfg_exists/1',[]],['fun','scalaris_old','config:cfg_is_atom/1',[]],['fun','scalaris_old','config:cfg_is_bool/1',[]],['fun','scalaris_old','config:cfg_is_float/1',[]],['fun','scalaris_old','config:cfg_is_greater_than/1',[]],['fun','scalaris_old','config:cfg_is_greater_than_equal/1',[]],['fun','scalaris_old','config:cfg_is_in/1',[]],['fun','scalaris_old','config:cfg_is_in_range/1',[]],['fun','scalaris_old','config:cfg_is_integer/1',[]],['fun','scalaris_old','config:cfg_is_ip/1',[]],['fun','scalaris_old','config:cfg_is_ip/1',[]],['fun','scalaris_old','config:cfg_is_less_than/1',[]],['fun','scalaris_old','config:cfg_is_less_than_equal/1',[]],['fun','scalaris_old','config:cfg_is_list/1',[]],['fun','scalaris_old','config:cfg_is_list/1',[]],['fun','scalaris_old','config:cfg_is_module/1',[]],['fun','scalaris_old','config:cfg_is_mypid/1',[]],['fun','scalaris_old','config:cfg_is_port/1',[]],['fun','scalaris_old','config:cfg_is_string/1',[]],['fun','scalaris_old','config:cfg_is_tuple/1',[]],['fun','scalaris_old','config:cfg_is_tuple/1',[]],['fun','scalaris_old','config:cfg_test_and_error/1','Tests the config parameter stored under atom Key w'],['fun','scalaris_old','config:check_config/0','Checks whether config parameters of all processes '],['fun','scalaris_old','config:loop/0',[]],['fun','scalaris_old','config:read/1','Reads a config parameter.'],['fun','scalaris_old','config:start_link/1','Starts the config process.'],['fun','scalaris_old','config:start_link/1','Starts the config process and determines the confi'],['fun','scalaris_old','config:system_code_change/1',[]],['fun','scalaris_old','config:system_continue/1',[]],['fun','scalaris_old','config:system_terminate/1',[]],['fun','scalaris_old','config:write/1','Writes a config parameter.'],['fun','scalaris_old','cyclon:activate/0','Activates the cyclon process.'],['fun','scalaris_old','cyclon:check_config/0','Checks whether config parameters of the cyclon pro'],['fun','scalaris_old','cyclon:deactivate/0','Deactivates the cyclon process.'],['fun','scalaris_old','cyclon:get_shuffle_interval/0','Gets the cyclon interval set in scalaris.cfg.'],['fun','scalaris_old','cyclon:get_subset_rand/1','Sends a (local) message to the cyclon process of t'],['fun','scalaris_old','cyclon:get_subset_rand_next_interval/1','Same as get_subset_rand_next_interval/1 but sends '],['fun','scalaris_old','cyclon:get_subset_rand_next_interval/1','Sends a delayed (local) message to the cyclon proc'],['fun','scalaris_old','cyclon:init/1','Initialises the module with an empty state.'],['fun','scalaris_old','cyclon:on_active/1','Message handler when the process is activated.'],['fun','scalaris_old','cyclon:on_inactive/1','Message handler during start up phase (will change'],['fun','scalaris_old','cyclon:rm_send_changes/1','Sends changes to a subscribed cyclon process when '],['fun','scalaris_old','cyclon:start_link/1','Starts the cyclon process, registers it with the p'],['fun','scalaris_old','cyclon_cache:add_node/1','Adds the given node to the cache or updates its ag'],['fun','scalaris_old','cyclon_cache:debug_format_by_age/1','Returns a list of keys (ages) and string values (n'],['fun','scalaris_old','cyclon_cache:get_ages/1','Returns the ages of all nodes in the cache.'],['fun','scalaris_old','cyclon_cache:get_nodes/1','Returns all nodes in the cache (without their ages'],['fun','scalaris_old','cyclon_cache:get_random_nodes/1','Returns a random subset of N nodes from the cache.'],['fun','scalaris_old','cyclon_cache:get_random_subset/1','Returns a random subset of N elements from the cac'],['fun','scalaris_old','cyclon_cache:inc_age/1','Increases the age of every element in the cache by'],['fun','scalaris_old','cyclon_cache:merge/1','Merges MyCache at node MyNode with the ReceivedCac'],['fun','scalaris_old','cyclon_cache:new/0','Creates a new and empty node cache.'],['fun','scalaris_old','cyclon_cache:new/1','Creates a new node cache with the given two nodes '],['fun','scalaris_old','cyclon_cache:pop_oldest_node/1','Finds the oldest element (randomized if multiple o'],['fun','scalaris_old','cyclon_cache:pop_random_node/1','Removes a random element from the (non-empty!) cac'],['fun','scalaris_old','cyclon_cache:remove_node/1','Removes any element with the given Node from the C'],['fun','scalaris_old','cyclon_cache:size/1','Counts the number of Cache entries.'],['fun','scalaris_old','cyclon_cache:trim/1','Trims the cache to size TargetSize (if necessary) '],['fun','scalaris_old','db_beh:behaviour_info/1',[]],['fun','scalaris_old','db_entry:dec_readlock/1',[]],['fun','scalaris_old','db_entry:dec_version/1',[]],['fun','scalaris_old','db_entry:get_key/1',[]],['fun','scalaris_old','db_entry:get_readlock/1',[]],['fun','scalaris_old','db_entry:get_value/1',[]],['fun','scalaris_old','db_entry:get_version/1',[]],['fun','scalaris_old','db_entry:get_writelock/1',[]],['fun','scalaris_old','db_entry:inc_readlock/1',[]],['fun','scalaris_old','db_entry:inc_version/1',[]],['fun','scalaris_old','db_entry:is_empty/1','Returns whether the item is an empty_val item with'],['fun','scalaris_old','db_entry:is_locked/1',[]],['fun','scalaris_old','db_entry:is_null/1','Returns whether the item is an empty_val item with'],['fun','scalaris_old','db_entry:new/1',[]],['fun','scalaris_old','db_entry:new/1',[]],['fun','scalaris_old','db_entry:reset_locks/1',[]],['fun','scalaris_old','db_entry:set_value/1',[]],['fun','scalaris_old','db_entry:set_writelock/1',[]],['fun','scalaris_old','db_entry:unset_writelock/1',[]],['fun','scalaris_old','db_entry:update_lockcount/1','Helper for lock bookkeeping.'],['fun','scalaris_old','db_ets:add_data/1',[]],['fun','scalaris_old','db_ets:check_db/1',[]],['fun','scalaris_old','db_ets:close/1',[]],['fun','scalaris_old','db_ets:close/1',[]],['fun','scalaris_old','db_ets:copy_value_to_snapshot_table/1',[]],['fun','scalaris_old','db_ets:decrease_snapshot_lockcount/1',[]],['fun','scalaris_old','db_ets:delete/1',[]],['fun','scalaris_old','db_ets:delete_entries/1',[]],['fun','scalaris_old','db_ets:delete_entry/1',[]],['fun','scalaris_old','db_ets:delete_snapshot/1',[]],['fun','scalaris_old','db_ets:delete_snapshot_entry/1',[]],['fun','scalaris_old','db_ets:delete_snapshot_entry_at_key/1',[]],['fun','scalaris_old','db_ets:get_changes/1',[]],['fun','scalaris_old','db_ets:get_changes/1',[]],['fun','scalaris_old','db_ets:get_chunk/1',[]],['fun','scalaris_old','db_ets:get_chunk/1',[]],['fun','scalaris_old','db_ets:get_data/1',[]],['fun','scalaris_old','db_ets:get_entries/1',[]],['fun','scalaris_old','db_ets:get_entries/1',[]],['fun','scalaris_old','db_ets:get_entry/1',[]],['fun','scalaris_old','db_ets:get_entry2/1',[]],['fun','scalaris_old','db_ets:get_live_lc/1',[]],['fun','scalaris_old','db_ets:get_load/1',[]],['fun','scalaris_old','db_ets:get_load/1',[]],['fun','scalaris_old','db_ets:get_name/1',[]],['fun','scalaris_old','db_ets:get_snap_lc/1',[]],['fun','scalaris_old','db_ets:get_snapshot_data/1',[]],['fun','scalaris_old','db_ets:get_snapshot_entry/1',[]],['fun','scalaris_old','db_ets:get_split_key/1',[]],['fun','scalaris_old','db_ets:get_subscription/1',[]],['fun','scalaris_old','db_ets:init_snapshot/1',[]],['fun','scalaris_old','db_ets:join_snapshot_data/1',[]],['fun','scalaris_old','db_ets:new/0',[]],['fun','scalaris_old','db_ets:open/1',[]],['fun','scalaris_old','db_ets:read/1',[]],['fun','scalaris_old','db_ets:record_changes/1',[]],['fun','scalaris_old','db_ets:remove_subscription/1',[]],['fun','scalaris_old','db_ets:set_entry/1',[]],['fun','scalaris_old','db_ets:set_snapshot_entry/1',[]],['fun','scalaris_old','db_ets:set_subscription/1',[]],['fun','scalaris_old','db_ets:snapshot_is_lockfree/1',[]],['fun','scalaris_old','db_ets:snapshot_is_running/1',[]],['fun','scalaris_old','db_ets:split_data/1',[]],['fun','scalaris_old','db_ets:stop_record_changes/1',[]],['fun','scalaris_old','db_ets:stop_record_changes/1',[]],['fun','scalaris_old','db_ets:update_entries/1',[]],['fun','scalaris_old','db_ets:update_entry/1',[]],['fun','scalaris_old','db_ets:write/1',[]],['fun','scalaris_old','db_toke:add_data/1',[]],['fun','scalaris_old','db_toke:check_db/1',[]],['fun','scalaris_old','db_toke:close/1',[]],['fun','scalaris_old','db_toke:close/1',[]],['fun','scalaris_old','db_toke:copy_value_to_snapshot_table/1',[]],['fun','scalaris_old','db_toke:decrease_snapshot_lockcount/1',[]],['fun','scalaris_old','db_toke:delete/1',[]],['fun','scalaris_old','db_toke:delete_entries/1',[]],['fun','scalaris_old','db_toke:delete_entry/1',[]],['fun','scalaris_old','db_toke:delete_snapshot/1',[]],['fun','scalaris_old','db_toke:delete_snapshot_entry/1',[]],['fun','scalaris_old','db_toke:delete_snapshot_entry_at_key/1',[]],['fun','scalaris_old','db_toke:get_changes/1',[]],['fun','scalaris_old','db_toke:get_changes/1',[]],['fun','scalaris_old','db_toke:get_chunk/1',[]],['fun','scalaris_old','db_toke:get_chunk/1',[]],['fun','scalaris_old','db_toke:get_data/1',[]],['fun','scalaris_old','db_toke:get_entries/1',[]],['fun','scalaris_old','db_toke:get_entries/1',[]],['fun','scalaris_old','db_toke:get_entry/1',[]],['fun','scalaris_old','db_toke:get_entry2/1',[]],['fun','scalaris_old','db_toke:get_live_lc/1',[]],['fun','scalaris_old','db_toke:get_load/1',[]],['fun','scalaris_old','db_toke:get_load/1',[]],['fun','scalaris_old','db_toke:get_name/1',[]],['fun','scalaris_old','db_toke:get_snap_lc/1',[]],['fun','scalaris_old','db_toke:get_snapshot_data/1',[]],['fun','scalaris_old','db_toke:get_snapshot_entry/1',[]],['fun','scalaris_old','db_toke:get_split_key/1',[]],['fun','scalaris_old','db_toke:get_subscription/1',[]],['fun','scalaris_old','db_toke:init_snapshot/1',[]],['fun','scalaris_old','db_toke:join_snapshot_data/1',[]],['fun','scalaris_old','db_toke:new/0',[]],['fun','scalaris_old','db_toke:open/1',[]],['fun','scalaris_old','db_toke:read/1',[]],['fun','scalaris_old','db_toke:record_changes/1',[]],['fun','scalaris_old','db_toke:remove_subscription/1',[]],['fun','scalaris_old','db_toke:set_entry/1',[]],['fun','scalaris_old','db_toke:set_snapshot_entry/1',[]],['fun','scalaris_old','db_toke:set_subscription/1',[]],['fun','scalaris_old','db_toke:snapshot_is_lockfree/1',[]],['fun','scalaris_old','db_toke:snapshot_is_running/1',[]],['fun','scalaris_old','db_toke:split_data/1',[]],['fun','scalaris_old','db_toke:stop_record_changes/1',[]],['fun','scalaris_old','db_toke:stop_record_changes/1',[]],['fun','scalaris_old','db_toke:update_entries/1',[]],['fun','scalaris_old','db_toke:update_entry/1',[]],['fun','scalaris_old','db_toke:write/1',[]],['fun','scalaris_old','db_verify_use:add_data/1',[]],['fun','scalaris_old','db_verify_use:check_db/1',[]],['fun','scalaris_old','db_verify_use:close/1',[]],['fun','scalaris_old','db_verify_use:close/1',[]],['fun','scalaris_old','db_verify_use:copy_value_to_snapshot_table/1',[]],['fun','scalaris_old','db_verify_use:decrease_snapshot_lockcount/1',[]],['fun','scalaris_old','db_verify_use:delete/1',[]],['fun','scalaris_old','db_verify_use:delete_entries/1',[]],['fun','scalaris_old','db_verify_use:delete_entry/1',[]],['fun','scalaris_old','db_verify_use:delete_snapshot/1',[]],['fun','scalaris_old','db_verify_use:delete_snapshot_entry/1',[]],['fun','scalaris_old','db_verify_use:delete_snapshot_entry_at_key/1',[]],['fun','scalaris_old','db_verify_use:get_changes/1',[]],['fun','scalaris_old','db_verify_use:get_changes/1',[]],['fun','scalaris_old','db_verify_use:get_chunk/1',[]],['fun','scalaris_old','db_verify_use:get_chunk/1',[]],['fun','scalaris_old','db_verify_use:get_data/1',[]],['fun','scalaris_old','db_verify_use:get_entries/1',[]],['fun','scalaris_old','db_verify_use:get_entries/1',[]],['fun','scalaris_old','db_verify_use:get_entry/1',[]],['fun','scalaris_old','db_verify_use:get_entry2/1',[]],['fun','scalaris_old','db_verify_use:get_live_lc/1',[]],['fun','scalaris_old','db_verify_use:get_load/1',[]],['fun','scalaris_old','db_verify_use:get_load/1',[]],['fun','scalaris_old','db_verify_use:get_name/1',[]],['fun','scalaris_old','db_verify_use:get_snap_lc/1',[]],['fun','scalaris_old','db_verify_use:get_snapshot_data/1',[]],['fun','scalaris_old','db_verify_use:get_snapshot_entry/1',[]],['fun','scalaris_old','db_verify_use:get_split_key/1',[]],['fun','scalaris_old','db_verify_use:get_subscription/1',[]],['fun','scalaris_old','db_verify_use:init_snapshot/1',[]],['fun','scalaris_old','db_verify_use:join_snapshot_data/1',[]],['fun','scalaris_old','db_verify_use:new/0',[]],['fun','scalaris_old','db_verify_use:open/1',[]],['fun','scalaris_old','db_verify_use:read/1',[]],['fun','scalaris_old','db_verify_use:record_changes/1',[]],['fun','scalaris_old','db_verify_use:remove_subscription/1',[]],['fun','scalaris_old','db_verify_use:set_entry/1',[]],['fun','scalaris_old','db_verify_use:set_snapshot_entry/1',[]],['fun','scalaris_old','db_verify_use:set_subscription/1',[]],['fun','scalaris_old','db_verify_use:snapshot_is_lockfree/1',[]],['fun','scalaris_old','db_verify_use:snapshot_is_running/1',[]],['fun','scalaris_old','db_verify_use:split_data/1',[]],['fun','scalaris_old','db_verify_use:stop_record_changes/1',[]],['fun','scalaris_old','db_verify_use:stop_record_changes/1',[]],['fun','scalaris_old','db_verify_use:update_entries/1',[]],['fun','scalaris_old','db_verify_use:update_entry/1',[]],['fun','scalaris_old','db_verify_use:write/1',[]],['fun','scalaris_old','dc_centroids:distance/1','Get the distance between two centroids.'],['fun','scalaris_old','dc_centroids:empty_centroids_list/0','Helper to return an empty list of centroids.'],['fun','scalaris_old','dc_centroids:get_coordinate/1','Get centroids coordinate.'],['fun','scalaris_old','dc_centroids:get_coordinate_and_relative_size/1','Get a centroids coordinate and relative size as a'],['fun','scalaris_old','dc_centroids:get_relative_size/1','Get centroids relative size.'],['fun','scalaris_old','dc_centroids:new/1','Create a new centroid.'],['fun','scalaris_old','dc_centroids:set_relative_size/1','Set the relative size of a centroid.'],['fun','scalaris_old','dc_clustering:activate/0','Sends an initialization message to the nodes dc_c'],['fun','scalaris_old','dc_clustering:check_config/0','Checks whether config parameters exist and are val'],['fun','scalaris_old','dc_clustering:deactivate/0','Deactivates the cyclon process.'],['fun','scalaris_old','dc_clustering:init/1','Initialises the module with an empty state.'],['fun','scalaris_old','dc_clustering:on_active/1','Message handler when the module is fully initializ'],['fun','scalaris_old','dc_clustering:on_inactive/1','Message handler during start up phase (will change'],['fun','scalaris_old','dc_clustering:start_link/1','Starts the dc_clustering process, registers it wit'],['fun','scalaris_old','dht_node:init/1','joins this node in the ring and calls the main loo'],['fun','scalaris_old','dht_node:is_alive/1',[]],['fun','scalaris_old','dht_node:is_alive_fully_joined/1',[]],['fun','scalaris_old','dht_node:is_alive_no_slide/1',[]],['fun','scalaris_old','dht_node:is_first/1','Checks whether this VM is marked as first, e.g.'],['fun','scalaris_old','dht_node:on/1','message handler.'],['fun','scalaris_old','dht_node:start_link/1','spawns a scalaris node, called by the scalaris sup'],['fun','scalaris_old','dht_node_join:check_config/0','Checks whether config parameters of the dht_node p'],['fun','scalaris_old','dht_node_join:join_as_first/1',[]],['fun','scalaris_old','dht_node_join:join_as_other/1',[]],['fun','scalaris_old','dht_node_join:process_join_msg/1','Process requests from a joining node at a existing'],['fun','scalaris_old','dht_node_join:process_join_state/1','Process a DHT nodes join messages during the join'],['fun','scalaris_old','dht_node_join:reject_join_response/1',[]],['fun','scalaris_old','dht_node_lookup:lookup_aux/1','Find the node responsible for Key and send him the'],['fun','scalaris_old','dht_node_lookup:lookup_aux_failed/1',[]],['fun','scalaris_old','dht_node_lookup:lookup_fin/1','Find the node responsible for Key and send him the'],['fun','scalaris_old','dht_node_lookup:lookup_fin_failed/1',[]],['fun','scalaris_old','dht_node_monitor:init/1','initialisation.'],['fun','scalaris_old','dht_node_monitor:on/1','message handler.'],['fun','scalaris_old','dht_node_monitor:start_link/1','spawns a dht_node_monitor, called by the scalaris '],['fun','scalaris_old','dht_node_move:can_slide_pred/1','Returns whether a slide with the predecessor is po'],['fun','scalaris_old','dht_node_move:can_slide_succ/1','Returns whether a slide with the successor is poss'],['fun','scalaris_old','dht_node_move:check_config/0','Checks whether config parameters regarding dht_nod'],['fun','scalaris_old','dht_node_move:check_setup_slide_not_found/1','Checks whether a new slide operation with the node'],['fun','scalaris_old','dht_node_move:crashed_node/1',[]],['fun','scalaris_old','dht_node_move:exec_setup_slide_not_found/1','Creates a new slide operation with the nodes succ'],['fun','scalaris_old','dht_node_move:get_max_transport_entries/0','Gets the max number of DB entries per data move op'],['fun','scalaris_old','dht_node_move:make_jump/1','Creates a slide with the nodes predecessor.'],['fun','scalaris_old','dht_node_move:make_slide/1','Creates a slide with the nodes successor or prede'],['fun','scalaris_old','dht_node_move:make_slide_leave/1','Creates a slide that will move all data to the suc'],['fun','scalaris_old','dht_node_move:process_move_msg/1','Processes move messages for the dht_node and imple'],['fun','scalaris_old','dht_node_move:send/1','Sends a move message using the dht_node as the she'],['fun','scalaris_old','dht_node_move:send_no_slide/1','Sends a move message using the dht_node as the she'],['fun','scalaris_old','dht_node_move:use_incremental_slides/0','Checks whether incremental slides are to be used '],['fun','scalaris_old','dht_node_reregister:activate/0','Activates the re-register process.'],['fun','scalaris_old','dht_node_reregister:deactivate/0','Deactivates the re-register process.'],['fun','scalaris_old','dht_node_reregister:get_base_interval/0','Gets the interval to trigger re-registering the no'],['fun','scalaris_old','dht_node_reregister:init/1','Initialises the module with an uninitialized state'],['fun','scalaris_old','dht_node_reregister:on_active/1',[]],['fun','scalaris_old','dht_node_reregister:on_inactive/1',[]],['fun','scalaris_old','dht_node_reregister:start_link/1','Starts a re-register process, registers it with th'],['fun','scalaris_old','dht_node_state:add_bulkowner_reply_msg/1',[]],['fun','scalaris_old','dht_node_state:add_db_range/1',[]],['fun','scalaris_old','dht_node_state:details/1','Gets the following details about the current node:'],['fun','scalaris_old','dht_node_state:details/1','Gets the requested details about the current node.'],['fun','scalaris_old','dht_node_state:dump/1',[]],['fun','scalaris_old','dht_node_state:get/1','Gets the given property from the dht_node state.'],['fun','scalaris_old','dht_node_state:get_bulkowner_reply_timer/1',[]],['fun','scalaris_old','dht_node_state:get_prbr_state/1',[]],['fun','scalaris_old','dht_node_state:get_slide/1','Tries to find a slide operation with the given Mov'],['fun','scalaris_old','dht_node_state:get_split_key/1','Returns a key so that there are no more than Targe'],['fun','scalaris_old','dht_node_state:has_left/1','Checks whether the current node has already left t'],['fun','scalaris_old','dht_node_state:is_db_responsible/1','Checks whether the node is responsible for the giv'],['fun','scalaris_old','dht_node_state:is_responsible/1','Checks whether the given key is in the nodes rang'],['fun','scalaris_old','dht_node_state:new/1',[]],['fun','scalaris_old','dht_node_state:rm_db_range/1',[]],['fun','scalaris_old','dht_node_state:set_bulkowner_reply_timer/1',[]],['fun','scalaris_old','dht_node_state:set_db/1',[]],['fun','scalaris_old','dht_node_state:set_lease_list/1',[]],['fun','scalaris_old','dht_node_state:set_prbr_state/1',[]],['fun','scalaris_old','dht_node_state:set_rm/1',[]],['fun','scalaris_old','dht_node_state:set_rt/1',[]],['fun','scalaris_old','dht_node_state:set_slide/1',[]],['fun','scalaris_old','dht_node_state:set_snapshot_state/1',[]],['fun','scalaris_old','dht_node_state:set_tx_tp_db/1',[]],['fun','scalaris_old','dht_node_state:slide_add_data/1','Adds data from slide_get_data_start_record/2 to th'],['fun','scalaris_old','dht_node_state:slide_add_delta/1','Adds delta infos from slide_take_delta_stop_record'],['fun','scalaris_old','dht_node_state:slide_get_data_start_record/1','Gets all entries to transfer (slide) in the given '],['fun','scalaris_old','dht_node_state:slide_stop_record/1','Stops recording changes in the given interval.'],['fun','scalaris_old','dht_node_state:slide_take_delta_stop_record/1','Gets all DB changes in the given interval, stops r'],['fun','scalaris_old','dht_node_state:take_bulkowner_reply_msgs/1',[]],['fun','scalaris_old','dn_cache:add_zombie_candidate/1',[]],['fun','scalaris_old','dn_cache:get_base_interval/0','Gets the zombie detector interval set in scalaris.'],['fun','scalaris_old','dn_cache:init/1','Initialises the module with an empty state.'],['fun','scalaris_old','dn_cache:on/1','the Token takes care, that there is only one timer'],['fun','scalaris_old','dn_cache:start_link/1','Starts a Dead Node Cache process, registers it wit'],['fun','scalaris_old','dn_cache:subscribe/0',[]],['fun','scalaris_old','dn_cache:unsubscribe/0',[]],['fun','scalaris_old','fd:init/1','Initialises the module with an empty state.'],['fun','scalaris_old','fd:start_link/1','Starts the failure detector server.'],['fun','scalaris_old','fd:subscribe/1','Generates a failure detector for the calling proce'],['fun','scalaris_old','fd:subscribe/1','Generates a failure detector for the calling proce'],['fun','scalaris_old','fd:subscribe_refcount/1','Generates a failure detector for the calling proce'],['fun','scalaris_old','fd:unsubscribe/1','Deletes the failure detector for the given pid and'],['fun','scalaris_old','fd:unsubscribe/1','Deletes the failure detector for the given pid.'],['fun','scalaris_old','fd:unsubscribe_refcount/1','Deletes the failure detector for the given pid and'],['fun','scalaris_old','fd:update_subscriptions/1','Unsubscribes from the pids in OldPids but not in N'],['fun','scalaris_old','fd_hbs:check_config/0','Checks existence and validity of config parameters'],['fun','scalaris_old','fd_hbs:init/1',[]],['fun','scalaris_old','fd_hbs:on/1',[]],['fun','scalaris_old','fd_hbs:start_link/1','spawns a fd_hbs instance.'],['fun','scalaris_old','fix_queue:add/1','Adds an element to the given queue.'],['fun','scalaris_old','fix_queue:add_unique_head/2','Adds an element to the given queue.'],['fun','scalaris_old','fix_queue:length/1',[]],['fun','scalaris_old','fix_queue:map/1','Maps a function to all elements of the given queue'],['fun','scalaris_old','fix_queue:max_length/1',[]],['fun','scalaris_old','fix_queue:new/1','Creates a new fixed-size queue.'],['fun','scalaris_old','fix_queue:queue/1',[]],['fun','scalaris_old','fix_queue:remove/2',[]],['fun','scalaris_old','ganglia:start/0',[]],['fun','scalaris_old','ganglia:start_link/0',[]],['fun','scalaris_old','gen_component:behaviour_info/1',[]],['fun','scalaris_old','gen_component:bp_barrier/1','delay further breakpoint requests until a breakpoi'],['fun','scalaris_old','gen_component:bp_cont/1',[]],['fun','scalaris_old','gen_component:bp_del/1',[]],['fun','scalaris_old','gen_component:bp_del_async/1',[]],['fun','scalaris_old','gen_component:bp_set/1',[]],['fun','scalaris_old','gen_component:bp_set_cond/1','Module:Function(Message, State, Params) will be ev'],['fun','scalaris_old','gen_component:bp_set_cond_async/1',[]],['fun','scalaris_old','gen_component:bp_step/1',[]],['fun','scalaris_old','gen_component:change_handler/1','change the handler for handling messages.'],['fun','scalaris_old','gen_component:get_component_state/1',[]],['fun','scalaris_old','gen_component:get_component_state/1',[]],['fun','scalaris_old','gen_component:get_state/1',[]],['fun','scalaris_old','gen_component:get_state/1',[]],['fun','scalaris_old','gen_component:is_gen_component/1',[]],['fun','scalaris_old','gen_component:kill/1',[]],['fun','scalaris_old','gen_component:post_op/1','perform a post op, i.e.'],['fun','scalaris_old','gen_component:runnable/1',[]],['fun','scalaris_old','gen_component:sleep/1',[]],['fun','scalaris_old','gen_component:start/1',[]],['fun','scalaris_old','gen_component:start/1',[]],['fun','scalaris_old','gen_component:start_link/1',[]],['fun','scalaris_old','gossip2:activate/1',[]],['fun','scalaris_old','gossip2:init/1',[]],['fun','scalaris_old','gossip2:on_active/2',[]],['fun','scalaris_old','gossip2:on_inactive/2',[]],['fun','scalaris_old','gossip2:rm_my_range_changed/1','Checks whether the nodes range has changed, i.e.'],['fun','scalaris_old','gossip2:rm_send_new_range/1','Notifies the nodes gossip process of a changed ra'],['fun','scalaris_old','gossip2:start_link/1',[]],['fun','scalaris_old','gossip:activate/1','Activates the gossip process.'],['fun','scalaris_old','gossip:check_config/0','Checks whether config parameters of the gossip pro'],['fun','scalaris_old','gossip:deactivate/0','Deactivates the gossip process.'],['fun','scalaris_old','gossip:get_base_interval/0','Gets the gossip interval set in scalaris.cfg.'],['fun','scalaris_old','gossip:init/1','Initialises the module with an empty state.'],['fun','scalaris_old','gossip:on_active/1','Message handler when the process is activated.'],['fun','scalaris_old','gossip:on_inactive/1','Message handler during start up phase (will change'],['fun','scalaris_old','gossip:rm_my_range_changed/1','Checks whether the nodes range has changed, i.e.'],['fun','scalaris_old','gossip:rm_send_new_range/1','Notifies the nodes gossip process of a changed ra'],['fun','scalaris_old','gossip:start_link/1','Starts the gossip process, registers it with the p'],['fun','scalaris_old','gossip_beh:behaviour_info/1',[]],['fun','scalaris_old','gossip_load:get_trigger_interval/0',[]],['fun','scalaris_old','gossip_load:get_values_all/1',[]],['fun','scalaris_old','gossip_load:get_values_best/1','atm, returns unknown if no previous exists (todo c'],['fun','scalaris_old','gossip_load:handle_msg/2',[]],['fun','scalaris_old','gossip_load:init/0',[]],['fun','scalaris_old','gossip_load:integrate_data/2',[]],['fun','scalaris_old','gossip_load:load_info_get/2',[]],['fun','scalaris_old','gossip_load:max_cycles_per_round/0',[]],['fun','scalaris_old','gossip_load:min_cycles_per_round/0',[]],['fun','scalaris_old','gossip_load:notify_change/3',[]],['fun','scalaris_old','gossip_load:round_has_converged/1',[]],['fun','scalaris_old','gossip_load:select_data/1',[]],['fun','scalaris_old','gossip_load:select_node/1',[]],['fun','scalaris_old','gossip_load:select_reply_data/3',[]],['fun','scalaris_old','gossip_load:web_debug_info/1',[]],['fun','scalaris_old','gossip_state:calc_size_kr/1','Extracts and calculates the size_kr field from the'],['fun','scalaris_old','gossip_state:calc_size_ldr/1','Extracts and calculates the size field from the in'],['fun','scalaris_old','gossip_state:calc_stddev/1','Extracts and calculates the standard deviation fro'],['fun','scalaris_old','gossip_state:conv_state_to_extval/1','Converts the internal value record to the external'],['fun','scalaris_old','gossip_state:get/1','Gets information from a values, values_internal or'],['fun','scalaris_old','gossip_state:inc_converge_avg_count/1','Increases how many information exchanges have been'],['fun','scalaris_old','gossip_state:inc_msg_exch/1','Increases how many information exchanges have been'],['fun','scalaris_old','gossip_state:inc_triggered/1','Increases how often the trigger called the module '],['fun','scalaris_old','gossip_state:new_internal/0','creates a new record holding values for (internal)'],['fun','scalaris_old','gossip_state:new_internal/1','creates a new record holding values for (internal)'],['fun','scalaris_old','gossip_state:new_state/0','creates a new record holding the (internal) state '],['fun','scalaris_old','gossip_state:new_state/1','creates a new record holding the (internal) state '],['fun','scalaris_old','gossip_state:reset_converge_avg_count/1','Resets how many information exchanges have been pe'],['fun','scalaris_old','gossip_state:reset_msg_exch/1','Resets how many information exchanges have been pe'],['fun','scalaris_old','gossip_state:reset_triggered/1','Resets how often the trigger called the module to '],['fun','scalaris_old','gossip_state:set/1','Sets information in a values_internal record.'],['fun','scalaris_old','gossip_state:set_initialized/1',[]],['fun','scalaris_old','gossip_state:set_values/1',[]],['fun','scalaris_old','histogram:add/1',[]],['fun','scalaris_old','histogram:add/1',[]],['fun','scalaris_old','histogram:create/1',[]],['fun','scalaris_old','histogram:find_smallest_interval/1','Finds the smallest interval between two consecutiv'],['fun','scalaris_old','histogram:get_data/1',[]],['fun','scalaris_old','histogram:insert/1',[]],['fun','scalaris_old','histogram:merge/1','Merges the given two histograms by adding every da'],['fun','scalaris_old','histogram:merge_interval/1','Merges two consecutive values if the second of the'],['fun','scalaris_old','histogram:resize/1',[]],['fun','scalaris_old','intervals:all/0','Creates an interval covering the whole key space.'],['fun','scalaris_old','intervals:empty/0','Creates an empty interval.'],['fun','scalaris_old','intervals:from_elements/1','Creates an interval from a list of elements.'],['fun','scalaris_old','intervals:get_bounds/1','Gets the outer bounds of a given non-empty interva'],['fun','scalaris_old','intervals:get_elements/1','Gets all elements inside the interval and returnes'],['fun','scalaris_old','intervals:in/1','X \in I.'],['fun','scalaris_old','intervals:intersection/1','Creates the intersection of two intervals.'],['fun','scalaris_old','intervals:is_adjacent/1','Checks whether two intervals are adjacent, i.e.'],['fun','scalaris_old','intervals:is_all/1','Checks whether the given interval is covering ever'],['fun','scalaris_old','intervals:is_continuous/1','Checks whether the given interval is a continuous '],['fun','scalaris_old','intervals:is_empty/1','Checks whether the given interval is empty.'],['fun','scalaris_old','intervals:is_left_of/1','X and Y are adjacent and Y follows X.'],['fun','scalaris_old','intervals:is_right_of/1','X and Y are adjacent and X follows Y.'],['fun','scalaris_old','intervals:is_subset/1','Returns true if A is a subset of B, i.e.'],['fun','scalaris_old','intervals:is_well_formed/1','Checks whether the given interval is normalized, i'],['fun','scalaris_old','intervals:is_well_formed_simple/1','Checks whether a given simple interval is normaliz'],['fun','scalaris_old','intervals:minus/1','Subtracts the second from the first interval.'],['fun','scalaris_old','intervals:new/1','Creates a new interval depending on the given brac'],['fun','scalaris_old','intervals:new/1','Creates an interval covering a single element.'],['fun','scalaris_old','intervals:split/1','Splits a continuous interval in X roughly equally-'],['fun','scalaris_old','intervals:split_feeder/1',[]],['fun','scalaris_old','intervals:tester_create_continuous_interval/1',[]],['fun','scalaris_old','intervals:tester_create_interval/1','Brings a list of intervals into normal form, i.e.'],['fun','scalaris_old','intervals:tester_create_simple_interval/1','Brings a simple interval into normal form, i.e.'],['fun','scalaris_old','intervals:union/1','Creates the union of two intervals.'],['fun','scalaris_old','lb_common:bestStddev/1',[]],['fun','scalaris_old','lb_common:bestStddev/1',[]],['fun','scalaris_old','lb_common:calculateStddev/1',[]],['fun','scalaris_old','lb_common:split_by_key/1','Returns the given SplitKey and the load that would'],['fun','scalaris_old','lb_common:split_by_load/1','Returns the SplitKey that takes (at most) TargetLo'],['fun','scalaris_old','lb_common:split_my_range/1','Returns the SplitKey that splits the current node'],['fun','scalaris_old','lb_op:get/1','Gets the selected property from the load balancing'],['fun','scalaris_old','lb_op:is_jump/1','Determines whether the operation is a jump.'],['fun','scalaris_old','lb_op:is_no_op/1','Determines whether the operation is a no_op, i.e.'],['fun','scalaris_old','lb_op:is_slide/1','Determines whether the operation is a slide.'],['fun','scalaris_old','lb_op:jump_op/1','Creates a new jump operation with the given nodes '],['fun','scalaris_old','lb_op:no_op/0','Creates a no_op operation.'],['fun','scalaris_old','lb_op:slide_op/1','Creates a new slide operation with the given nodes'],['fun','scalaris_old','lb_psv_beh:behaviour_info/1',[]],['fun','scalaris_old','lb_psv_gossip:check_config/0','Checks whether config parameters of the passive lo'],['fun','scalaris_old','lb_psv_gossip:create_join/1','Creates a join operation if a node would join at m'],['fun','scalaris_old','lb_psv_gossip:get_number_of_samples/1','Gets the number of IDs to sample during join.'],['fun','scalaris_old','lb_psv_gossip:get_number_of_samples_remote/1','Sends the number of IDs to sample during join to t'],['fun','scalaris_old','lb_psv_gossip:process_join_msg/1',[]],['fun','scalaris_old','lb_psv_gossip:sort_candidates/1','Sorts all provided operations so that the one with'],['fun','scalaris_old','lb_psv_simple:check_config/0','Checks whether config parameters of the passive lo'],['fun','scalaris_old','lb_psv_simple:create_join/1','Creates a join operation if a node would join at m'],['fun','scalaris_old','lb_psv_simple:get_number_of_samples/1','Gets the number of IDs to sample during join.'],['fun','scalaris_old','lb_psv_simple:get_number_of_samples_remote/1','Sends the number of IDs to sample during join to t'],['fun','scalaris_old','lb_psv_simple:process_join_msg/1',[]],['fun','scalaris_old','lb_psv_simple:sort_candidates/1','Sorts all provided operations so that the one with'],['fun','scalaris_old','lb_psv_split:check_config/0','Checks whether config parameters of the passive lo'],['fun','scalaris_old','lb_psv_split:create_join/1','Creates a join operation if a node would join at m'],['fun','scalaris_old','lb_psv_split:get_number_of_samples/1','Gets the number of IDs to sample during join.'],['fun','scalaris_old','lb_psv_split:get_number_of_samples_remote/1','Sends the number of IDs to sample during join to t'],['fun','scalaris_old','lb_psv_split:my_sort_fun/1','Sort function for two operations and their Sum2Cha'],['fun','scalaris_old','lb_psv_split:process_join_msg/1',[]],['fun','scalaris_old','lb_psv_split:sort_candidates/1','Sorts all provided operations so that the one with'],['fun','scalaris_old','log4erl_ctpal_appender:code_change/1',[]],['fun','scalaris_old','log4erl_ctpal_appender:handle_call/2',[]],['fun','scalaris_old','log4erl_ctpal_appender:handle_event/2',[]],['fun','scalaris_old','log4erl_ctpal_appender:handle_info/1',[]],['fun','scalaris_old','log4erl_ctpal_appender:init/2',[]],['fun','scalaris_old','log4erl_ctpal_appender:terminate/1',[]],['fun','scalaris_old','log:check_config/0','Checks whether config parameters of the log4erl pr'],['fun','scalaris_old','log:log/1',[]],['fun','scalaris_old','log:log/1',[]],['fun','scalaris_old','log:log/1',[]],['fun','scalaris_old','log:log/1',[]],['fun','scalaris_old','log:pal/1',[]],['fun','scalaris_old','log:pal/1',[]],['fun','scalaris_old','log:set_log_level/1',[]],['fun','scalaris_old','log:start_link/0','Starts the log4erl process, removes the error_logg'],['fun','scalaris_old','math_pos:divide/1','A / Divisor (with rounding to nearest integer not '],['fun','scalaris_old','math_pos:make_same_length/1','Bring two lists to the same length by appending or'],['fun','scalaris_old','math_pos:make_same_length/1','Bring two lists to the same length by appending or'],['fun','scalaris_old','math_pos:minus/1','A - B.'],['fun','scalaris_old','math_pos:multiply/1','A * Factor, if Factor is a non-negative integer sm'],['fun','scalaris_old','math_pos:plus/1','A + B.'],['fun','scalaris_old','math_pos:remove_zeros/1','Remove leading or trailing 0s.'],['fun','scalaris_old','mathlib:aggloClustering/1','Get closest centroids and merge them if their dist'],['fun','scalaris_old','mathlib:binomial_coeff/1','Calculates the binomial coefficient of n over k fo'],['fun','scalaris_old','mathlib:binomial_coeff_feeder/2',[]],['fun','scalaris_old','mathlib:closestPoints/1','Find indices of closest centroids.'],['fun','scalaris_old','mathlib:euclideanDistance/1','Euclidean distance between two vectors.'],['fun','scalaris_old','mathlib:euclideanDistance/1','Euclidean distance between origin and V.'],['fun','scalaris_old','mathlib:factorial/1','calculates N!'],['fun','scalaris_old','mathlib:factorial_feeder/1',[]],['fun','scalaris_old','mathlib:median/1','Median of an unsorted non-empty list of numbers, i'],['fun','scalaris_old','mathlib:nearestCentroid/1','Get the nearest centroid to U from the list Centro'],['fun','scalaris_old','mathlib:u/1','Unit vector u(v) = v/||v||.'],['fun','scalaris_old','mathlib:vecAdd/1','Add two vectors X,Y, i.e.'],['fun','scalaris_old','mathlib:vecMult/1','Multiply vector V with a scalar S.'],['fun','scalaris_old','mathlib:vecSub/1','Substract two vectors X,Y, i.e.'],['fun','scalaris_old','mathlib:vecWeightedAvg/1',[]],['fun','scalaris_old','mathlib:zeros/1','Create a list with N zeros.'],['fun','scalaris_old','mathlib:zeros_feeder/1',[]],['fun','scalaris_old','mgmt_server:connect/0',[]],['fun','scalaris_old','mgmt_server:init/1',[]],['fun','scalaris_old','mgmt_server:node_list/0','trigger a message with all nodes known to the mgmt'],['fun','scalaris_old','mgmt_server:node_list/1',[]],['fun','scalaris_old','mgmt_server:number_of_nodes/0','trigger a message with the number of nodes known t'],['fun','scalaris_old','mgmt_server:on/1',[]],['fun','scalaris_old','mgmt_server:start_link/1','starts the server; called by the mgmt supervisor.'],['fun','scalaris_old','monitor:check_config/0','Checks whether config parameters of the monitor pr'],['fun','scalaris_old','monitor:check_report/1',[]],['fun','scalaris_old','monitor:client_monitor_set_value/1','Sets the value at Key inside the monitor process o'],['fun','scalaris_old','monitor:get_rrd_keys/0','Get the available RRD keys.'],['fun','scalaris_old','monitor:get_rrd_keys/1',[]],['fun','scalaris_old','monitor:get_rrds/1','Retrieve individual RRDs from monitor.'],['fun','scalaris_old','monitor:init/1','Initialises the module with an empty state.'],['fun','scalaris_old','monitor:monitor_set_value/1','Sets the value at Key inside the monitor process o'],['fun','scalaris_old','monitor:on/1','Message handler when the rm_loop module is fully i'],['fun','scalaris_old','monitor:proc_check_all_timeslot/0','Advances the stored timeslots of the value at Key '],['fun','scalaris_old','monitor:proc_check_timeslot/1','Advances the stored timeslots of the value at Key '],['fun','scalaris_old','monitor:proc_exists_value/1','Checks whether a value exists at Key.'],['fun','scalaris_old','monitor:proc_get_value/1','Gets the value stored at Key.'],['fun','scalaris_old','monitor:proc_set_value/1','Sets the value at Key inside the current process.'],['fun','scalaris_old','monitor:start_link/1','Starts the monitor process, registers it with the '],['fun','scalaris_old','monitor_perf:check_config/0','Checks whether config parameters of the rm_tman pr'],['fun','scalaris_old','monitor_perf:init/1','Initialises the module with an empty state.'],['fun','scalaris_old','monitor_perf:on/1','Message handler when the rm_loop module is fully i'],['fun','scalaris_old','monitor_perf:start_link/1','Starts the monitor process, registers it with the '],['fun','scalaris_old','msg_delay:init/1',[]],['fun','scalaris_old','msg_delay:on/1',[]],['fun','scalaris_old','msg_delay:send_local/1',[]],['fun','scalaris_old','msg_delay:send_local_as_client/1',[]],['fun','scalaris_old','msg_delay:start_link/1',[]],['fun','scalaris_old','msg_queue:add/1','Adds a message to a given queue.'],['fun','scalaris_old','msg_queue:is_empty/1','Checks whether the message queue is empty.'],['fun','scalaris_old','msg_queue:new/0','Creates a new message queue.'],['fun','scalaris_old','msg_queue:send/1','Sends queued messages to the process calling the m'],['fun','scalaris_old','node:id/1','Gets the nodes ID.'],['fun','scalaris_old','node:id_version/1','Gets the version of the nodes ID.'],['fun','scalaris_old','node:is_me/1','Checks whether the given node is the same as the n'],['fun','scalaris_old','node:is_newer/1','Determines whether Node1 is a newer instance of No'],['fun','scalaris_old','node:is_valid/1','Checks whether the given parameter is a valid node'],['fun','scalaris_old','node:mk_interval_between_ids/1','Creates an interval that covers all keys a node wi'],['fun','scalaris_old','node:mk_interval_between_nodes/1','Creates an interval that covers all keys a node is'],['fun','scalaris_old','node:new/1','Creates a new node.'],['fun','scalaris_old','node:newer/1','Determines the newer instance of two representatio'],['fun','scalaris_old','node:null/0','Creates an invalid node.'],['fun','scalaris_old','node:pidX/1','Gets the pid of the node.'],['fun','scalaris_old','node:same_process/1','Checks whether two nodes are the same, i.e.'],['fun','scalaris_old','node:update_id/1','Updates the nodes id and increases the ids versi'],['fun','scalaris_old','node:yawsPort/1',[]],['fun','scalaris_old','node_details:contains/1','Checks whether the given data is available in a no'],['fun','scalaris_old','node_details:get/1','Gets the value of the given data in a node details'],['fun','scalaris_old','node_details:new/0','Creates an empty node details object.'],['fun','scalaris_old','node_details:new/1','Creates a new node details object with the given d'],['fun','scalaris_old','node_details:set/1','Adds the given data to the node list object.'],['fun','scalaris_old','nodelist:add_node/1','Adds a node to a neighborhood structure and trunca'],['fun','scalaris_old','nodelist:add_nodes/1','Adds nodes from the given node list to the given n'],['fun','scalaris_old','nodelist:filter/1','Keeps any node for which FilterFun returns true in'],['fun','scalaris_old','nodelist:filter/1','Keeps any node for which FilterFun returns true in'],['fun','scalaris_old','nodelist:filter_min_length/1','Keeps any node for which FilterFun returns true in'],['fun','scalaris_old','nodelist:has_real_pred/1','Returns whether the neighborhood contains a real p'],['fun','scalaris_old','nodelist:has_real_succ/1','Returns whether the neighborhood contains a real p'],['fun','scalaris_old','nodelist:largest_smaller_than/1','Returns the node among all know neighbors (includi'],['fun','scalaris_old','nodelist:largest_smaller_than/1','Returns the node among all know neighbors (includi'],['fun','scalaris_old','nodelist:lfilter/1','Keeps any node for which FilterFun returns true in'],['fun','scalaris_old','nodelist:lfilter/1','Keeps any node for which FilterFun returns true in'],['fun','scalaris_old','nodelist:lfilter_min_length/1','Keeps any node for which FilterFun returns true in'],['fun','scalaris_old','nodelist:lremove/1','Removes the given node (or node with the given Pid'],['fun','scalaris_old','nodelist:lremove/1','Removes the given node (or node with the given Pid'],['fun','scalaris_old','nodelist:lremove_outdated/1','Removes any node with outdated ID information from'],['fun','scalaris_old','nodelist:lremove_outdated/1','Removes any node with outdated ID information from'],['fun','scalaris_old','nodelist:lupdate_ids/1','Updates the node IDs of the nodes in both lists wi'],['fun','scalaris_old','nodelist:merge/1','Merges nodes of Neighbors2 into Neighbors1 and tru'],['fun','scalaris_old','nodelist:mk_neighborhood/1','Creates a neighborhood structure for the given nod'],['fun','scalaris_old','nodelist:mk_neighborhood/1','Creates a neighborhood structure for the given nod'],['fun','scalaris_old','nodelist:mk_nodelist/1','Creates a sorted nodelist starting at the given no'],['fun','scalaris_old','nodelist:new_neighborhood/1','Creates a new neighborhood structure for the given'],['fun','scalaris_old','nodelist:new_neighborhood/1','Creates a new neighborhood structure for the given'],['fun','scalaris_old','nodelist:new_neighborhood/1','Creates a new neighborhood structure for the given'],['fun','scalaris_old','nodelist:node/1','Returns the neighborhoods node.'],['fun','scalaris_old','nodelist:node_range/1','Returns the nodes range.'],['fun','scalaris_old','nodelist:nodeid/1','Returns the ID of the neighborhoods node (provide'],['fun','scalaris_old','nodelist:pred/1','Returns a neighborhoods or a node listss predece'],['fun','scalaris_old','nodelist:preds/1','Returns the neighborhoods predecessor list.'],['fun','scalaris_old','nodelist:remove/1','Removes the given node (or node with the given Pid'],['fun','scalaris_old','nodelist:remove/1','Removes the given node (or node with the given Pid'],['fun','scalaris_old','nodelist:succ/1','Returns the neighborhoods or a node listss succe'],['fun','scalaris_old','nodelist:succ_ord_id/1','Defines a less than or equal order starting from'],['fun','scalaris_old','nodelist:succ_ord_id/1','Defines that K1 is less than or equal to K2 if the'],['fun','scalaris_old','nodelist:succ_ord_node/1','Defines a less than or equal order starting from'],['fun','scalaris_old','nodelist:succ_ord_node/1','Defines that N1 is less than or equal to N2 if the'],['fun','scalaris_old','nodelist:succ_range/1','Returns the successors range.'],['fun','scalaris_old','nodelist:succs/1','Returns the neighborhoods successor list.'],['fun','scalaris_old','nodelist:to_list/1','Converts a neighborhood to a sorted list of nodes '],['fun','scalaris_old','nodelist:trunc/1','Truncates the given neighborhoods predecessor and'],['fun','scalaris_old','nodelist:trunc_preds/1','Truncates the given neighborhoods predecessor lis'],['fun','scalaris_old','nodelist:trunc_succs/1','Truncates the given neighborhoods successor list '],['fun','scalaris_old','nodelist:update_ids/1','Updates the node IDs of the nodes in the neighborh'],['fun','scalaris_old','nodelist:update_node/1','Updates the base node of the neighborhood if its I'],['fun','scalaris_old','pdb:delete/1',[]],['fun','scalaris_old','pdb:get/1',[]],['fun','scalaris_old','pdb:new/1',[]],['fun','scalaris_old','pdb:set/1',[]],['fun','scalaris_old','pdb:tab2list/1',[]],['fun','scalaris_old','pdb:take/1',[]],['fun','scalaris_old','pdb_beh:behaviour_info/1',[]],['fun','scalaris_old','pdb_ets:delete/1',[]],['fun','scalaris_old','pdb_ets:get/1',[]],['fun','scalaris_old','pdb_ets:new/1',[]],['fun','scalaris_old','pdb_ets:set/1',[]],['fun','scalaris_old','pdb_ets:tab2list/1',[]],['fun','scalaris_old','pdb_ets:take/1',[]],['fun','scalaris_old','pid_groups:add/1','Third party register: add a pid with a given pidna'],['fun','scalaris_old','pid_groups:find_a/1',[]],['fun','scalaris_old','pid_groups:find_all/1',[]],['fun','scalaris_old','pid_groups:get_my/1','Gets the Pid of the current process group member '],['fun','scalaris_old','pid_groups:get_web_debug_info/1','get info about a process.'],['fun','scalaris_old','pid_groups:group_and_name_of/1','lookup group and pid name of a process via its pid'],['fun','scalaris_old','pid_groups:group_of/1',[]],['fun','scalaris_old','pid_groups:group_with/1','find a process group with a given process name ins'],['fun','scalaris_old','pid_groups:groups/0',[]],['fun','scalaris_old','pid_groups:groups_as_json/0',[]],['fun','scalaris_old','pid_groups:groups_with/1','find all process groups with a given process name '],['fun','scalaris_old','pid_groups:hide/1','hide a group of processes temporarily (for paused '],['fun','scalaris_old','pid_groups:join/1','Current process joins the group GrpName, but has n'],['fun','scalaris_old','pid_groups:join_as/1','Current process joins the group GrpName with proce'],['fun','scalaris_old','pid_groups:members/1',[]],['fun','scalaris_old','pid_groups:members_by_name/1',[]],['fun','scalaris_old','pid_groups:members_by_name_as_json/1','find processes in a group (for web interface).'],['fun','scalaris_old','pid_groups:my_groupname/0',[]],['fun','scalaris_old','pid_groups:my_members/0',[]],['fun','scalaris_old','pid_groups:my_pidname/0',[]],['fun','scalaris_old','pid_groups:my_tab2list/0',[]],['fun','scalaris_old','pid_groups:new/0','create a new group with a random name.'],['fun','scalaris_old','pid_groups:new/1','create a new group with a given prefix.'],['fun','scalaris_old','pid_groups:pid_of/1','lookup a pid via its group name and pid name.'],['fun','scalaris_old','pid_groups:pid_to_name/1','Resolve a local pid to its name.'],['fun','scalaris_old','pid_groups:pids_to_names/1','Resolve (local and remote) pids to names.'],['fun','scalaris_old','pid_groups:processes/0',[]],['fun','scalaris_old','pid_groups:start_link/0','Starts the server.'],['fun','scalaris_old','pid_groups:tab2list/0',[]],['fun','scalaris_old','pid_groups:unhide/1',[]],['fun','scalaris_old','prime:get/1','returns all primes less than or equal to N.'],['fun','scalaris_old','prime:get_feeder/1',[]],['fun','scalaris_old','prime:get_nearest/1','returns first prime larger than N.'],['fun','scalaris_old','prime:get_nearest_feeder/1',[]],['fun','scalaris_old','prime:is_prime/1',[]],['fun','scalaris_old','prime:is_prime_feeder/1',[]],['fun','scalaris_old','prime:prime_cache/0','list of all primes less than 5003 from      http:'],['fun','scalaris_old','prime:tester_create_prime_list/1',[]],['fun','scalaris_old','prime:tester_create_rev_prime_list/1',[]],['fun','scalaris_old','prime:tester_is_prime_list/1',[]],['fun','scalaris_old','pubsub_publish:publish/1','publishs an event to a given url.'],['fun','scalaris_old','pubsub_publish:publish_internal/1',[]],['fun','scalaris_old','quorum:majority_for_accept/1','Gives the majority required for a quorum to accept'],['fun','scalaris_old','quorum:majority_for_deny/1','Gives the majority required for a quorum to deny.'],['fun','scalaris_old','randoms:getRandomInt/0','Generates a random integer in the range 1 =&lt; Id'],['fun','scalaris_old','randoms:getRandomString/0','Generates a random string in the range 1 =&lt; Id '],['fun','scalaris_old','randoms:rand_uniform/1','Generates a random number N between Lo &lt;= N &lt'],['fun','scalaris_old','randoms:start/0','Starts the crypto modules server.'],['fun','scalaris_old','randoms:stop/0','Stops the crypto modules server.'],['fun','scalaris_old','rm_beh:behaviour_info/1',[]],['fun','scalaris_old','rm_chord:check_config/0','Checks whether config parameters of the rm_chord p'],['fun','scalaris_old','rm_chord:crashed_node/1',[]],['fun','scalaris_old','rm_chord:get_neighbors/1',[]],['fun','scalaris_old','rm_chord:get_web_debug_info/1',[]],['fun','scalaris_old','rm_chord:init/1','Initialises the state when rm_loop receives an ini'],['fun','scalaris_old','rm_chord:leave/1',[]],['fun','scalaris_old','rm_chord:new_pred/1',[]],['fun','scalaris_old','rm_chord:new_succ/1',[]],['fun','scalaris_old','rm_chord:on/1','Message handler when the module is fully initializ'],['fun','scalaris_old','rm_chord:remove_pred/1',[]],['fun','scalaris_old','rm_chord:remove_succ/1',[]],['fun','scalaris_old','rm_chord:unittest_create_state/1',[]],['fun','scalaris_old','rm_chord:update_node/1',[]],['fun','scalaris_old','rm_chord:zombie_node/1',[]],['fun','scalaris_old','rm_loop:crashed_node/1',[]],['fun','scalaris_old','rm_loop:get_neighbors/1','Returns the current neighborhood structure.'],['fun','scalaris_old','rm_loop:get_web_debug_info/1',[]],['fun','scalaris_old','rm_loop:has_left/1','Returns whether the current node has already left '],['fun','scalaris_old','rm_loop:init/1','Initializes the rm_loop state.'],['fun','scalaris_old','rm_loop:is_responsible/1','Convenience method checking whether the current no'],['fun','scalaris_old','rm_loop:leave/0','Notifies the successor and predecessor that the cu'],['fun','scalaris_old','rm_loop:notify_new_pred/1','Sends a message to the remote nodes dht_node proc'],['fun','scalaris_old','rm_loop:notify_new_succ/1','Sends a message to the remote nodes dht_node proc'],['fun','scalaris_old','rm_loop:notify_slide_finished/1','Sends a message to the local nodes dht_node proce'],['fun','scalaris_old','rm_loop:on/1','Message handler when the rm_loop module is fully i'],['fun','scalaris_old','rm_loop:subscribe/1','Registers the given function to be called when the'],['fun','scalaris_old','rm_loop:subscribe_dneighbor_change_filter/1','Filter function for subscriptions that returns tru'],['fun','scalaris_old','rm_loop:subscribe_dneighbor_change_slide_filter/1','Filter function for subscriptions that returns tru'],['fun','scalaris_old','rm_loop:unittest_create_state/1','Creates a state() object for a unit test.'],['fun','scalaris_old','rm_loop:unsubscribe/1','Un-registers the given process with the given tag '],['fun','scalaris_old','rm_loop:update_id/1','Updates a dht nodes id and sends the ring mainten'],['fun','scalaris_old','rm_loop:zombie_node/1',[]],['fun','scalaris_old','rm_tman:check_config/0','Checks whether config parameters of the rm_tman pr'],['fun','scalaris_old','rm_tman:crashed_node/1',[]],['fun','scalaris_old','rm_tman:get_base_interval/0',[]],['fun','scalaris_old','rm_tman:get_max_interval/0',[]],['fun','scalaris_old','rm_tman:get_min_interval/0',[]],['fun','scalaris_old','rm_tman:get_neighbors/1',[]],['fun','scalaris_old','rm_tman:get_web_debug_info/1',[]],['fun','scalaris_old','rm_tman:init/1','Initialises the state when rm_loop receives an ini'],['fun','scalaris_old','rm_tman:leave/1',[]],['fun','scalaris_old','rm_tman:new_pred/1',[]],['fun','scalaris_old','rm_tman:new_succ/1',[]],['fun','scalaris_old','rm_tman:on/1','Message handler when the module is fully initializ'],['fun','scalaris_old','rm_tman:remove_pred/1',[]],['fun','scalaris_old','rm_tman:remove_succ/1',[]],['fun','scalaris_old','rm_tman:unittest_create_state/1',[]],['fun','scalaris_old','rm_tman:update_node/1',[]],['fun','scalaris_old','rm_tman:zombie_node/1',[]],['fun','scalaris_old','rrd:add/1','Note: gauge, counter and timing types accept only '],['fun','scalaris_old','rrd:add_nonexisting_timeslots/1','Adds to DB all non-existing time slots from OtherD'],['fun','scalaris_old','rrd:add_now/1','Note: gauge, counter and timing types accept only '],['fun','scalaris_old','rrd:add_with/1',[]],['fun','scalaris_old','rrd:check_config/0','Checks whether config parameters of the rrd module'],['fun','scalaris_old','rrd:check_timeslot/1','Advances the stored timeslots (if necessary) to th'],['fun','scalaris_old','rrd:check_timeslot_now/1','Advances the stored timeslots (if necessary) to th'],['fun','scalaris_old','rrd:create/1','StepSize in milliseconds.'],['fun','scalaris_old','rrd:create/1','Creates a new rrd() record.'],['fun','scalaris_old','rrd:dump/1',[]],['fun','scalaris_old','rrd:dump_with/1',[]],['fun','scalaris_old','rrd:dump_with/1',[]],['fun','scalaris_old','rrd:get_current_time/1',[]],['fun','scalaris_old','rrd:get_slot_length/1',[]],['fun','scalaris_old','rrd:get_slot_start/1','Gets the start of the given slot.'],['fun','scalaris_old','rrd:get_type/1',[]],['fun','scalaris_old','rrd:get_value/1','Gets the value at the given time or undefined if'],['fun','scalaris_old','rrd:get_value_by_offset/1','If SlotOffset is 0, gets the current value, otherw'],['fun','scalaris_old','rrd:merge/1','Merges any value of DB2 which is in the current or'],['fun','scalaris_old','rrd:reduce_timeslots/1','Reduces the number of time slots.'],['fun','scalaris_old','rrd:timing_with_hist_merge_fun/1',[]],['fun','scalaris_old','rt_beh:behaviour_info/1',[]],['fun','scalaris_old','rt_chord:check/1','Notifies the dht_node if the (external) routing ta'],['fun','scalaris_old','rt_chord:check/1','Notifies the dht_node and failure detector if the '],['fun','scalaris_old','rt_chord:check_config/0','Checks whether config parameters of the rt_chord p'],['fun','scalaris_old','rt_chord:client_key_to_binary/1',[]],['fun','scalaris_old','rt_chord:dump/1','Dumps the RT state for output in the web interface'],['fun','scalaris_old','rt_chord:empty_ext/1',[]],['fun','scalaris_old','rt_chord:export_rt_to_dht_node/1',[]],['fun','scalaris_old','rt_chord:filter_dead_node/1','Removes dead nodes from the routing table.'],['fun','scalaris_old','rt_chord:get_key_segment/1',[]],['fun','scalaris_old','rt_chord:get_random_node_id/0','Generates a random node id, i.e.'],['fun','scalaris_old','rt_chord:get_range/1','Gets the number of keys in the interval (Begin, En'],['fun','scalaris_old','rt_chord:get_replica_keys/1','Returns the replicas of the given key.'],['fun','scalaris_old','rt_chord:get_size/1','Returns the size of the routing table.'],['fun','scalaris_old','rt_chord:get_split_key/1','Gets the key that splits the interval (Begin, End]'],['fun','scalaris_old','rt_chord:handle_custom_message/1','Chord reacts on rt_get_node_response messages in'],['fun','scalaris_old','rt_chord:hash_key/1','Hashes the key to the identifier space.'],['fun','scalaris_old','rt_chord:init/1','Initialize the routing table.'],['fun','scalaris_old','rt_chord:init_stabilize/1','Starts the stabilization routine.'],['fun','scalaris_old','rt_chord:n/0','Returns the size of the address space.'],['fun','scalaris_old','rt_chord:next_hop/1','Returns the next hop to contact for a lookup.'],['fun','scalaris_old','rt_chord:to_list/1','Converts the (external) representation of the rout'],['fun','scalaris_old','rt_chord:to_pid_list/1','Returns the pids of the routing table entries.'],['fun','scalaris_old','rt_chord:unwrap_message/1','Unwrap lookup messages.'],['fun','scalaris_old','rt_chord:update/1','Updates the routing table due to a changed node ID'],['fun','scalaris_old','rt_chord:wrap_message/1','Wrap lookup messages.'],['fun','scalaris_old','rt_frtchord:allowed_nodes/1',[]],['fun','scalaris_old','rt_frtchord:check/1',[]],['fun','scalaris_old','rt_frtchord:check/1',[]],['fun','scalaris_old','rt_frtchord:check_config/0',[]],['fun','scalaris_old','rt_frtchord:check_rt_integrity/1',[]],['fun','scalaris_old','rt_frtchord:check_well_connectedness/1',[]],['fun','scalaris_old','rt_frtchord:client_key_to_binary/1',[]],['fun','scalaris_old','rt_frtchord:dump/1',[]],['fun','scalaris_old','rt_frtchord:dump_to_csv/1',[]],['fun','scalaris_old','rt_frtchord:empty_ext/1',[]],['fun','scalaris_old','rt_frtchord:export_rt_to_dht_node/1',[]],['fun','scalaris_old','rt_frtchord:filter_dead_node/1',[]],['fun','scalaris_old','rt_frtchord:frt_check_config/0','Checks whether config parameters of the rt_frtchor'],['fun','scalaris_old','rt_frtchord:get_custom_info/1',[]],['fun','scalaris_old','rt_frtchord:get_key_segment/1',[]],['fun','scalaris_old','rt_frtchord:get_num_active_learning_lookups/1',[]],['fun','scalaris_old','rt_frtchord:get_random_key_from_generator/1',[]],['fun','scalaris_old','rt_frtchord:get_random_node_id/0',[]],['fun','scalaris_old','rt_frtchord:get_range/1',[]],['fun','scalaris_old','rt_frtchord:get_replica_keys/1',[]],['fun','scalaris_old','rt_frtchord:get_size/1',[]],['fun','scalaris_old','rt_frtchord:get_source_id/1',[]],['fun','scalaris_old','rt_frtchord:get_source_node/1',[]],['fun','scalaris_old','rt_frtchord:get_split_key/1',[]],['fun','scalaris_old','rt_frtchord:handle_custom_message/1',[]],['fun','scalaris_old','rt_frtchord:hash_key/1',[]],['fun','scalaris_old','rt_frtchord:inc_num_active_learning_lookups/1',[]],['fun','scalaris_old','rt_frtchord:init/1',[]],['fun','scalaris_old','rt_frtchord:init_stabilize/1',[]],['fun','scalaris_old','rt_frtchord:n/0',[]],['fun','scalaris_old','rt_frtchord:next_hop/1',[]],['fun','scalaris_old','rt_frtchord:rt_entry_distance/1',[]],['fun','scalaris_old','rt_frtchord:rt_entry_id/1',[]],['fun','scalaris_old','rt_frtchord:rt_entry_info/1',[]],['fun','scalaris_old','rt_frtchord:set_custom_info/1',[]],['fun','scalaris_old','rt_frtchord:set_num_active_learning_lookups/1',[]],['fun','scalaris_old','rt_frtchord:to_list/1',[]],['fun','scalaris_old','rt_frtchord:to_pid_list/1',[]],['fun','scalaris_old','rt_frtchord:unwrap_message/1',[]],['fun','scalaris_old','rt_frtchord:update/1',[]],['fun','scalaris_old','rt_frtchord:wrap_message/1',[]],['fun','scalaris_old','rt_gfrtchord:allowed_nodes/1',[]],['fun','scalaris_old','rt_gfrtchord:check/1',[]],['fun','scalaris_old','rt_gfrtchord:check/1',[]],['fun','scalaris_old','rt_gfrtchord:check_config/0',[]],['fun','scalaris_old','rt_gfrtchord:check_rt_integrity/1',[]],['fun','scalaris_old','rt_gfrtchord:check_well_connectedness/1',[]],['fun','scalaris_old','rt_gfrtchord:client_key_to_binary/1',[]],['fun','scalaris_old','rt_gfrtchord:dump/1',[]],['fun','scalaris_old','rt_gfrtchord:dump_to_csv/1',[]],['fun','scalaris_old','rt_gfrtchord:empty_ext/1',[]],['fun','scalaris_old','rt_gfrtchord:export_rt_to_dht_node/1',[]],['fun','scalaris_old','rt_gfrtchord:filter_dead_node/1',[]],['fun','scalaris_old','rt_gfrtchord:frt_check_config/0','Checks whether config parameters of the rt_gfrtcho'],['fun','scalaris_old','rt_gfrtchord:get_custom_info/1',[]],['fun','scalaris_old','rt_gfrtchord:get_key_segment/1',[]],['fun','scalaris_old','rt_gfrtchord:get_num_active_learning_lookups/1',[]],['fun','scalaris_old','rt_gfrtchord:get_random_key_from_generator/1',[]],['fun','scalaris_old','rt_gfrtchord:get_random_node_id/0',[]],['fun','scalaris_old','rt_gfrtchord:get_range/1',[]],['fun','scalaris_old','rt_gfrtchord:get_replica_keys/1',[]],['fun','scalaris_old','rt_gfrtchord:get_size/1',[]],['fun','scalaris_old','rt_gfrtchord:get_source_id/1',[]],['fun','scalaris_old','rt_gfrtchord:get_source_node/1',[]],['fun','scalaris_old','rt_gfrtchord:get_split_key/1',[]],['fun','scalaris_old','rt_gfrtchord:handle_custom_message/1',[]],['fun','scalaris_old','rt_gfrtchord:hash_key/1',[]],['fun','scalaris_old','rt_gfrtchord:inc_num_active_learning_lookups/1',[]],['fun','scalaris_old','rt_gfrtchord:init/1',[]],['fun','scalaris_old','rt_gfrtchord:init_stabilize/1',[]],['fun','scalaris_old','rt_gfrtchord:n/0',[]],['fun','scalaris_old','rt_gfrtchord:next_hop/1',[]],['fun','scalaris_old','rt_gfrtchord:rt_entry_distance/1',[]],['fun','scalaris_old','rt_gfrtchord:rt_entry_id/1',[]],['fun','scalaris_old','rt_gfrtchord:rt_entry_info/1',[]],['fun','scalaris_old','rt_gfrtchord:set_custom_info/1',[]],['fun','scalaris_old','rt_gfrtchord:set_num_active_learning_lookups/1',[]],['fun','scalaris_old','rt_gfrtchord:to_list/1',[]],['fun','scalaris_old','rt_gfrtchord:to_pid_list/1',[]],['fun','scalaris_old','rt_gfrtchord:unwrap_message/1',[]],['fun','scalaris_old','rt_gfrtchord:update/1',[]],['fun','scalaris_old','rt_gfrtchord:wrap_message/1',[]],['fun','scalaris_old','rt_loop:activate/1','Activates the routing table process.'],['fun','scalaris_old','rt_loop:check_config/0','Checks whether config parameters of the rt_loop pr'],['fun','scalaris_old','rt_loop:deactivate/0','Deactivates the re-register process.'],['fun','scalaris_old','rt_loop:get_base_interval/0',[]],['fun','scalaris_old','rt_loop:get_neighb/1',[]],['fun','scalaris_old','rt_loop:get_rt/1',[]],['fun','scalaris_old','rt_loop:init/1','Initialises the module with an empty state.'],['fun','scalaris_old','rt_loop:on_active/1','Message handler when the module is fully initializ'],['fun','scalaris_old','rt_loop:on_inactive/1','Message handler during start up phase (will change'],['fun','scalaris_old','rt_loop:rm_send_update/1','Notifies the nodes routing table of a changed nod'],['fun','scalaris_old','rt_loop:set_rt/1',[]],['fun','scalaris_old','rt_loop:start_link/1','Starts the routing tabe maintenance process, regis'],['fun','scalaris_old','rt_simple:check/1','Notifies the dht_node if the (external) routing ta'],['fun','scalaris_old','rt_simple:check/1','Notifies the dht_node and failure detector if the '],['fun','scalaris_old','rt_simple:check_config/0','Checks whether config parameters of the rt_simple '],['fun','scalaris_old','rt_simple:client_key_to_binary/1',[]],['fun','scalaris_old','rt_simple:dump/1','Dumps the RT state for output in the web interface'],['fun','scalaris_old','rt_simple:empty_ext/1',[]],['fun','scalaris_old','rt_simple:export_rt_to_dht_node/1','Converts the internal RT to the external RT used b'],['fun','scalaris_old','rt_simple:filter_dead_node/1','Removes dead nodes from the routing table (rely on'],['fun','scalaris_old','rt_simple:get_key_segment/1',[]],['fun','scalaris_old','rt_simple:get_random_node_id/0','Generates a random node id, i.e.'],['fun','scalaris_old','rt_simple:get_range/1','Gets the number of keys in the interval (Begin, En'],['fun','scalaris_old','rt_simple:get_replica_keys/1','Returns the replicas of the given key.'],['fun','scalaris_old','rt_simple:get_size/1','Returns the size of the routing table.'],['fun','scalaris_old','rt_simple:get_split_key/1','Gets the key that splits the interval (Begin, End]'],['fun','scalaris_old','rt_simple:handle_custom_message/1','There are no custom messages here.'],['fun','scalaris_old','rt_simple:hash_key/1','Hashes the key to the identifier space.'],['fun','scalaris_old','rt_simple:init/1',[]],['fun','scalaris_old','rt_simple:init_stabilize/1','Triggered by a new stabilization round, renews the'],['fun','scalaris_old','rt_simple:n/0','Returns the size of the address space.'],['fun','scalaris_old','rt_simple:next_hop/1','Returns the next hop to contact for a lookup.'],['fun','scalaris_old','rt_simple:to_list/1','Converts the (external) representation of the rout'],['fun','scalaris_old','rt_simple:to_pid_list/1','Returns the pids of the routing table entries.'],['fun','scalaris_old','rt_simple:unwrap_message/1','Unwrap lookup messages.'],['fun','scalaris_old','rt_simple:update/1','Updates the routing table due to a changed node ID'],['fun','scalaris_old','rt_simple:wrap_message/1','Wrap lookup messages.'],['fun','scalaris_old','scalaris:cli/0',[]],['fun','scalaris_old','scalaris:process/1',[]],['fun','scalaris_old','scalaris:start/0',[]],['fun','scalaris_old','scalaris:start/2',[]],['fun','scalaris_old','scalaris:stop/0',[]],['fun','scalaris_old','scalaris:stop/1',[]],['fun','scalaris_old','service_per_vm:dump_node_states/0','ask all local nodes for their state.'],['fun','scalaris_old','service_per_vm:get_round_trip/1',[]],['fun','scalaris_old','service_per_vm:init/1',[]],['fun','scalaris_old','service_per_vm:kill_nodes/1',[]],['fun','scalaris_old','service_per_vm:on/1',[]],['fun','scalaris_old','service_per_vm:start_link/1',[]],['fun','scalaris_old','slide_beh:behaviour_info/1',[]],['fun','scalaris_old','slide_chord:finish_delta1/1','Removes the dht_nodes message forward for the sli'],['fun','scalaris_old','slide_chord:finish_delta2/1','Cleans up after finish_delta1/4 once the RM is up-'],['fun','scalaris_old','slide_chord:finish_delta_ack1/1','No-op with chord RT.'],['fun','scalaris_old','slide_chord:finish_delta_ack2/1','No-op with chord RT.'],['fun','scalaris_old','slide_chord:prepare_join_send/1',[]],['fun','scalaris_old','slide_chord:prepare_rcv_data/1',[]],['fun','scalaris_old','slide_chord:prepare_send_data1/1','Prepares sending data for the given (existing!) sl'],['fun','scalaris_old','slide_chord:prepare_send_data2/1','Cleans up after prepare_send_data1/3 once the RM i'],['fun','scalaris_old','slide_chord:prepare_send_delta1/1','Accepts data_ack received during the given (existi'],['fun','scalaris_old','slide_chord:prepare_send_delta2/1','Cleans up after prepare_send_delta1/3 once the RM '],['fun','scalaris_old','slide_chord:update_rcv_data1/1','Accepts data received during the given (existing!)'],['fun','scalaris_old','slide_chord:update_rcv_data2/1','Cleans up after update_rcv_data1/3 once the RM is '],['fun','scalaris_old','slide_leases:finish_delta1/1',[]],['fun','scalaris_old','slide_leases:finish_delta2/1',[]],['fun','scalaris_old','slide_leases:finish_delta_ack1/1',[]],['fun','scalaris_old','slide_leases:finish_delta_ack2/1',[]],['fun','scalaris_old','slide_leases:prepare_join_send/1',[]],['fun','scalaris_old','slide_leases:prepare_rcv_data/1',[]],['fun','scalaris_old','slide_leases:prepare_send_data1/1',[]],['fun','scalaris_old','slide_leases:prepare_send_data2/1',[]],['fun','scalaris_old','slide_leases:prepare_send_delta1/1',[]],['fun','scalaris_old','slide_leases:prepare_send_delta2/1',[]],['fun','scalaris_old','slide_leases:tester_create_dht_node_state/0','create dht_node state for tester.'],['fun','scalaris_old','slide_leases:update_rcv_data1/1',[]],['fun','scalaris_old','slide_leases:update_rcv_data2/1',[]],['fun','scalaris_old','slide_op:cancel_timer/1','Resets the timer of the given SlideOp, consumes an'],['fun','scalaris_old','slide_op:get_id/1','Returns the id of a receiving or sending slide ope'],['fun','scalaris_old','slide_op:get_interval/1','Returns the interval of data to receive or send.'],['fun','scalaris_old','slide_op:get_msg_fwd/1',[]],['fun','scalaris_old','slide_op:get_next_op/1',[]],['fun','scalaris_old','slide_op:get_node/1','Returns the node to exchange data with.'],['fun','scalaris_old','slide_op:get_other_max_entries/1',[]],['fun','scalaris_old','slide_op:get_phase/1','Returns the current phase of the slide operation.'],['fun','scalaris_old','slide_op:get_predORsucc/1','Returns whether the given slide operation works wi'],['fun','scalaris_old','slide_op:get_sendORreceive/1','Returns whether the given slide operation sends or'],['fun','scalaris_old','slide_op:get_source_pid/1','Gets the pid of the (local) process that requested'],['fun','scalaris_old','slide_op:get_tag/1','Returns the tag of a slide operation.'],['fun','scalaris_old','slide_op:get_target_id/1','Returns the target id a node participating in a re'],['fun','scalaris_old','slide_op:get_timeouts/1','Returns the number of timeouts received by a timer'],['fun','scalaris_old','slide_op:get_timer/1','Returns the timer of the slide operation or {null,'],['fun','scalaris_old','slide_op:get_type/1','Returns the given slide operations (full) type.'],['fun','scalaris_old','slide_op:inc_timeouts/1','Increases the number of timeouts received by a tim'],['fun','scalaris_old','slide_op:is_incremental/1','Returns whether the given slide op is part of an i'],['fun','scalaris_old','slide_op:is_join/1','Returns whether the given slide op or type is a jo'],['fun','scalaris_old','slide_op:is_join/1','Returns whether the given slide op or type is a jo'],['fun','scalaris_old','slide_op:is_jump/1','Returns whether the given slide op or type is a ju'],['fun','scalaris_old','slide_op:is_jump/1','Returns whether the given slide op or type is a ju'],['fun','scalaris_old','slide_op:is_leave/1','Returns whether the given slide op or type is a le'],['fun','scalaris_old','slide_op:is_leave/1','Returns whether the given slide op or type is a le'],['fun','scalaris_old','slide_op:is_setup_at_other/1','Returns wether the current slide op has already be'],['fun','scalaris_old','slide_op:new_receiving_slide_join/1','Sets up a new slide operation for a joining node ('],['fun','scalaris_old','slide_op:new_sending_slide_join/1','Sets up a new slide operation for a node which sen'],['fun','scalaris_old','slide_op:new_sending_slide_jump/1','Sets up a new slide operation for a node which is '],['fun','scalaris_old','slide_op:new_sending_slide_jump/1','Sets up a new slide operation for a node which is '],['fun','scalaris_old','slide_op:new_sending_slide_leave/1','Sets up a new slide operation for a node which is '],['fun','scalaris_old','slide_op:new_sending_slide_leave/1','Sets up a new slide operation for a node which is '],['fun','scalaris_old','slide_op:new_slide/1','Sets up a slide operation of the given type.'],['fun','scalaris_old','slide_op:new_slide_i/1','Sets up an incremental slide operation of the give'],['fun','scalaris_old','slide_op:other_type_to_my_type/1','Converts the given slide type to the type the othe'],['fun','scalaris_old','slide_op:remove_msg_fwd/1',[]],['fun','scalaris_old','slide_op:reset_timeouts/1','Resets the number of timeouts to 0.'],['fun','scalaris_old','slide_op:set_msg_fwd/1',[]],['fun','scalaris_old','slide_op:set_next_op/1',[]],['fun','scalaris_old','slide_op:set_other_max_entries/1',[]],['fun','scalaris_old','slide_op:set_phase/1','Sets the slide operations current phase.'],['fun','scalaris_old','slide_op:set_setup_at_other/1','Sets that the current slide op has already been se'],['fun','scalaris_old','slide_op:set_timer/1','Sets a timer that will send the given Message in T'],['fun','scalaris_old','slide_op:update_target_id/1','Updates the slide op with a new TargetId and NextO'],['fun','scalaris_old','snapshot:on_do_snapshot/1',[]],['fun','scalaris_old','snapshot:on_local_snapshot_is_done/1',[]],['fun','scalaris_old','snapshot:snapshot_is_done/1',[]],['fun','scalaris_old','snapshot_leader:init/1',[]],['fun','scalaris_old','snapshot_leader:on/1',[]],['fun','scalaris_old','snapshot_leader:start_link/0',[]],['fun','scalaris_old','snapshot_leader_state:add_error_interval/1',[]],['fun','scalaris_old','snapshot_leader_state:add_interval/1',[]],['fun','scalaris_old','snapshot_leader_state:add_snapshot/1',[]],['fun','scalaris_old','snapshot_leader_state:get_client/1',[]],['fun','scalaris_old','snapshot_leader_state:get_error_interval/1',[]],['fun','scalaris_old','snapshot_leader_state:get_global_snapshot/1',[]],['fun','scalaris_old','snapshot_leader_state:get_number/1',[]],['fun','scalaris_old','snapshot_leader_state:interval_union_is_all/1',[]],['fun','scalaris_old','snapshot_leader_state:is_in_progress/1',[]],['fun','scalaris_old','snapshot_leader_state:new/0',[]],['fun','scalaris_old','snapshot_leader_state:new/1',[]],['fun','scalaris_old','snapshot_leader_state:set_number/1',[]],['fun','scalaris_old','snapshot_leader_state:start_progress/1',[]],['fun','scalaris_old','snapshot_leader_state:stop_progress/1',[]],['fun','scalaris_old','snapshot_state:add_leader/1',[]],['fun','scalaris_old','snapshot_state:get_leaders/1',[]],['fun','scalaris_old','snapshot_state:get_number/1',[]],['fun','scalaris_old','snapshot_state:is_in_progress/1',[]],['fun','scalaris_old','snapshot_state:new/0',[]],['fun','scalaris_old','snapshot_state:new/1',[]],['fun','scalaris_old','snapshot_state:set_number/1',[]],['fun','scalaris_old','snapshot_state:start_progress/1',[]],['fun','scalaris_old','snapshot_state:stop_progress/1',[]],['fun','scalaris_old','statistics:get_average_load/1',[]],['fun','scalaris_old','statistics:get_average_rt_size/1',[]],['fun','scalaris_old','statistics:get_load_std_deviation/1',[]],['fun','scalaris_old','statistics:get_max_memory_usage/1',[]],['fun','scalaris_old','statistics:get_memory_usage/1',[]],['fun','scalaris_old','statistics:get_ring_details/0','Returns a sorted list of all known nodes.'],['fun','scalaris_old','statistics:get_ring_details_neighbors/1','Returns a sorted list of all known nodes in the ne'],['fun','scalaris_old','statistics:get_rt_size_std_deviation/1',[]],['fun','scalaris_old','statistics:get_total_load/1',[]],['fun','scalaris_old','statistics:getGaugeMonitorStats/1','Gets monitor stats from gauge values in an easy '],['fun','scalaris_old','statistics:getTimingMonitorStats/1','Gets monitor stats from timing and timing_with_'],['fun','scalaris_old','sup_comm_layer:childs/1',[]],['fun','scalaris_old','sup_comm_layer:init/1',[]],['fun','scalaris_old','sup_comm_layer:start_link/0',[]],['fun','scalaris_old','sup_comm_layer:supspec/1',[]],['fun','scalaris_old','sup_dht_node:childs/1',[]],['fun','scalaris_old','sup_dht_node:init/1',[]],['fun','scalaris_old','sup_dht_node:start_link/1',[]],['fun','scalaris_old','sup_dht_node:supspec/1',[]],['fun','scalaris_old','sup_dht_node_core:check_config/0','Checks whether config parameters for the sup_dht_n'],['fun','scalaris_old','sup_dht_node_core:childs/1',[]],['fun','scalaris_old','sup_dht_node_core:init/1',[]],['fun','scalaris_old','sup_dht_node_core:start_link/1',[]],['fun','scalaris_old','sup_dht_node_core:supspec/1',[]],['fun','scalaris_old','sup_dht_node_core_tx:childs/1',[]],['fun','scalaris_old','sup_dht_node_core_tx:init/1',[]],['fun','scalaris_old','sup_dht_node_core_tx:start_link/1',[]],['fun','scalaris_old','sup_dht_node_core_tx:supspec/1',[]],['fun','scalaris_old','sup_paxos:childs/1',[]],['fun','scalaris_old','sup_paxos:init/1',[]],['fun','scalaris_old','sup_paxos:start_link/1',[]],['fun','scalaris_old','sup_paxos:supspec/1',[]],['fun','scalaris_old','sup_scalaris:check_config/0','Checks whether config parameters of the cyclon pro'],['fun','scalaris_old','sup_scalaris:childs/1',[]],['fun','scalaris_old','sup_scalaris:init/1',[]],['fun','scalaris_old','sup_scalaris:start_link/0',[]],['fun','scalaris_old','sup_scalaris:start_link/1',[]],['fun','scalaris_old','sup_scalaris:supspec/1',[]],['fun','scalaris_old','sup_yaws:check_config/0','Checks whether config parameters of the cyclon pro'],['fun','scalaris_old','sup_yaws:init/1',[]],['fun','scalaris_old','sup_yaws:start_link/0',[]],['fun','scalaris_old','top:init/1',[]],['fun','scalaris_old','top:on/1',[]],['fun','scalaris_old','top:start_link/1',[]],['fun','scalaris_old','top:top/0',[]],['fun','scalaris_old','top:trace_fwd/2',[]],['fun','scalaris_old','trace_mpath:cleanup/0',[]],['fun','scalaris_old','trace_mpath:cleanup/1',[]],['fun','scalaris_old','trace_mpath:epidemic_reply_msg/1',[]],['fun','scalaris_old','trace_mpath:get_trace/0',[]],['fun','scalaris_old','trace_mpath:get_trace/1',[]],['fun','scalaris_old','trace_mpath:get_trace_raw/1',[]],['fun','scalaris_old','trace_mpath:init/1',[]],['fun','scalaris_old','trace_mpath:log_info/1',[]],['fun','scalaris_old','trace_mpath:log_info/1',[]],['fun','scalaris_old','trace_mpath:log_recv/1',[]],['fun','scalaris_old','trace_mpath:log_send/1',[]],['fun','scalaris_old','trace_mpath:on/1',[]],['fun','scalaris_old','trace_mpath:send_histogram/1',[]],['fun','scalaris_old','trace_mpath:start/0',[]],['fun','scalaris_old','trace_mpath:start/1',[]],['fun','scalaris_old','trace_mpath:start/1',[]],['fun','scalaris_old','trace_mpath:start_link/1',[]],['fun','scalaris_old','trace_mpath:stop/0',[]],['fun','scalaris_old','trace_mpath:time_delta/1',[]],['fun','scalaris_old','trace_mpath:to_texfile/1',[]],['fun','scalaris_old','tracer:dump/0',[]],['fun','scalaris_old','tracer:dump_perf/0',[]],['fun','scalaris_old','tracer:start/0',[]],['fun','scalaris_old','tracer:start_perf/0',[]],['fun','scalaris_old','tracer:tracer/1',[]],['fun','scalaris_old','tracer:tracer_perf/1',[]],['fun','scalaris_old','trigger:init/1','Initializes the trigger with the given interval fu'],['fun','scalaris_old','trigger:init/1','Initializes the trigger with the given interval fu'],['fun','scalaris_old','trigger:init/1','Initializes the given trigger with the given base '],['fun','scalaris_old','trigger:init/1','Initializes the given trigger with the given base '],['fun','scalaris_old','trigger:next/1','Sets the trigger to send its message after the giv'],['fun','scalaris_old','trigger:next/1','Sets the trigger to send its message after BaseInt'],['fun','scalaris_old','trigger:now/1','Sets the trigger to send its message immediately, '],['fun','scalaris_old','trigger:stop/1','Stops the trigger until next or now are called aga'],['fun','scalaris_old','trigger_beh:behaviour_info/1',[]],['fun','scalaris_old','trigger_dynamic:init/1','Initializes the trigger with the given interval fu'],['fun','scalaris_old','trigger_dynamic:next/1','Sets the trigger to send its message after some de'],['fun','scalaris_old','trigger_dynamic:now/1','Sets the trigger to send its message immediately, '],['fun','scalaris_old','trigger_dynamic:stop/1','Stops the trigger until next or now are called aga'],['fun','scalaris_old','trigger_periodic:init/1','Initializes the trigger with the given interval fu'],['fun','scalaris_old','trigger_periodic:next/1','Sets the trigger to send its message after BaseInt'],['fun','scalaris_old','trigger_periodic:now/1','Sets the trigger to send its message immediately, '],['fun','scalaris_old','trigger_periodic:stop/1','Stops the trigger until next or now are called aga'],['fun','scalaris_old','uid:get_global_uid/0',[]],['fun','scalaris_old','uid:get_pids_uid/0',[]],['fun','scalaris_old','uid:is_my_old_uid/1','Checks whether the given GUID is an old incarnatio'],['fun','scalaris_old','util:</2','Sorts like erlang:=&lt;/2 but also defines the o'],['fun','scalaris_old','util:app_get_env/1','Get an application environment variable.'],['fun','scalaris_old','util:bin_xor/1',[]],['fun','scalaris_old','util:ceil/1','Returns the smallest integer not smaller than X.'],['fun','scalaris_old','util:collect_while/1',[]],['fun','scalaris_old','util:debug_info/0',[]],['fun','scalaris_old','util:debug_info/1',[]],['fun','scalaris_old','util:delete_if_exists/2','Removes Del from List if it is found.'],['fun','scalaris_old','util:dump/0','Returns a list of all currently executed functions'],['fun','scalaris_old','util:dump2/0','Returns information about all processes memory us'],['fun','scalaris_old','util:dump3/0','Returns various data about all processes.'],['fun','scalaris_old','util:dumpX/1','Returns various data about all processes.'],['fun','scalaris_old','util:dumpX/1','Returns various data about all processes.'],['fun','scalaris_old','util:empty/1',[]],['fun','scalaris_old','util:escape_quotes/1','Escapes quotes in the given string.'],['fun','scalaris_old','util:ets_tables_of/1',[]],['fun','scalaris_old','util:extint2atom/1',[]],['fun','scalaris_old','util:first_matching/2',[]],['fun','scalaris_old','util:floor/1','Returns the largest integer not larger than X.'],['fun','scalaris_old','util:for_to/1',[]],['fun','scalaris_old','util:for_to_ex/1',[]],['fun','scalaris_old','util:for_to_ex/1',[]],['fun','scalaris_old','util:for_to_fold/1',[]],['fun','scalaris_old','util:gb_trees_foldl/1','Foldl over gb_trees.'],['fun','scalaris_old','util:gb_trees_largest_smaller_than/2','Find the largest key in GBTree that is smaller tha'],['fun','scalaris_old','util:get_linetrace/0',[]],['fun','scalaris_old','util:get_linetrace/1',[]],['fun','scalaris_old','util:get_proc_in_vms/1',[]],['fun','scalaris_old','util:get_stacktrace/0','Gets the current stack trace.'],['fun','scalaris_old','util:if_verbose/1',[]],['fun','scalaris_old','util:if_verbose/1',[]],['fun','scalaris_old','util:is_unittest/0','Try to check whether common-test is running.'],['fun','scalaris_old','util:list_set_nth/2',[]],['fun','scalaris_old','util:lists_keystore2/1',[]],['fun','scalaris_old','util:lists_partition3/1',[]],['fun','scalaris_old','util:lists_partition3_feeder/2',[]],['fun','scalaris_old','util:lists_remove_at_indices/1',[]],['fun','scalaris_old','util:lists_split/2','Splits the given list into several partitions, ret'],['fun','scalaris_old','util:log/1','Logarithm of X to the base of Base.'],['fun','scalaris_old','util:log2/1','Logarithm of X to the base of 2.'],['fun','scalaris_old','util:logged_exec/1',[]],['fun','scalaris_old','util:make_filename/1',[]],['fun','scalaris_old','util:map_with_nr/2','Similar to lists:map/2 but also passes the current'],['fun','scalaris_old','util:map_with_nr_feeder/2',[]],['fun','scalaris_old','util:max/1','Variant of erlang:max/2 also taking ?PLUS_INFINITY'],['fun','scalaris_old','util:min/1','Variant of erlang:min/2 also taking ?PLUS_INFINITY'],['fun','scalaris_old','util:minus_all/2','minus_all(M,N) : { x | x in M and x notin N}.'],['fun','scalaris_old','util:minus_first/2','Deletes the first occurrence of each element in Ex'],['fun','scalaris_old','util:par_map/1','Parallel version of lists:map/2 with the possibili'],['fun','scalaris_old','util:par_map/1','Parallel version of lists:map/2.'],['fun','scalaris_old','util:par_map_feeder/2',[]],['fun','scalaris_old','util:par_map_feeder/2',[]],['fun','scalaris_old','util:parallel_run/1',[]],['fun','scalaris_old','util:pop_randomelem/2','Removes a random element from the (non-empty!) lis'],['fun','scalaris_old','util:pop_randomelem/3','Removes a random element from the first Size eleme'],['fun','scalaris_old','util:pow/1',[]],['fun','scalaris_old','util:print_bits/1',[]],['fun','scalaris_old','util:random_subset/1','Returns a random subset of Size elements from the '],['fun','scalaris_old','util:randomelem/2','Returns a random element from the given (non-empty'],['fun','scalaris_old','util:randomelem_and_length/2','Returns a random element from the given (non-empty'],['fun','scalaris_old','util:readable_utc_time/1',[]],['fun','scalaris_old','util:readable_utc_time_feeder/3',[]],['fun','scalaris_old','util:repeat/1',[]],['fun','scalaris_old','util:repeat/1','Sequencial (default) or parallel run of function F'],['fun','scalaris_old','util:rrd_combine_gauge_slots/1',[]],['fun','scalaris_old','util:rrd_combine_gauge_slots/1','This function does the same as rrd_combine_timing_'],['fun','scalaris_old','util:rrd_combine_slots/1','Accumulates data over RRD slots.'],['fun','scalaris_old','util:rrd_combine_timing_slots/1',[]],['fun','scalaris_old','util:rrd_combine_timing_slots/1','Combine the last N slots from a dump into one tupl'],['fun','scalaris_old','util:safe_split/1','Splits off N elements from List.'],['fun','scalaris_old','util:sets_map/1',[]],['fun','scalaris_old','util:shuffle/1','Fisher-Yates shuffling for lists.'],['fun','scalaris_old','util:sleep_for_ever/0',[]],['fun','scalaris_old','util:smerge2/2','Merges two unique sorted lists into a single list.'],['fun','scalaris_old','util:smerge2/4','Merges two unique Lte-sorted lists into a single l'],['fun','scalaris_old','util:smerge2/4','Merges two unique Lte-sorted lists into a single l'],['fun','scalaris_old','util:split_unique/2','Splits L1 into a list of elements that are not con'],['fun','scalaris_old','util:split_unique/4','Splits L1 into a list of elements that are not con'],['fun','scalaris_old','util:split_unique/4','Splits L1 into a list of elements that are not con'],['fun','scalaris_old','util:ssplit_unique/2','Splits L1 into a list of elements that are not con'],['fun','scalaris_old','util:ssplit_unique/4','Splits L1 into a list of elements that are not con'],['fun','scalaris_old','util:ssplit_unique/4','Splits L1 into a list of elements that are not con'],['fun','scalaris_old','util:sublist/3','A more flexible sublist function than lists:sublis'],['fun','scalaris_old','util:sup_supervisor_desc/1','Creates a supervisor description for a supervisor.'],['fun','scalaris_old','util:sup_supervisor_desc/1','Creates a supervisor description for a supervisor.'],['fun','scalaris_old','util:sup_worker_desc/1','Creates a worker description for a supervisor.'],['fun','scalaris_old','util:sup_worker_desc/1','Creates a worker description for a supervisor.'],['fun','scalaris_old','util:supervisor_terminate/1',[]],['fun','scalaris_old','util:supervisor_terminate_childs/1',[]],['fun','scalaris_old','util:tc/1','Measures the execution time (in microseconds) for '],['fun','scalaris_old','util:tc/1','Measures the execution time (in microseconds) for '],['fun','scalaris_old','util:tc/1','Measures the execution time (in microseconds) for '],['fun','scalaris_old','util:time_plus_ms/1',[]],['fun','scalaris_old','util:time_plus_s/1',[]],['fun','scalaris_old','util:time_plus_us/1',[]],['fun','scalaris_old','util:timestamp2us/1','convert os:timestamp() to microsecs See http://er'],['fun','scalaris_old','util:topDumpX/1','Convenience wrapper to topDumpX/3.'],['fun','scalaris_old','util:topDumpX/3','Gets the number of reductions for each process wit'],['fun','scalaris_old','util:topDumpXEvery/2','Convenience wrapper to topDumpXEvery/5.'],['fun','scalaris_old','util:topDumpXEvery/4','Calls topDumpX/3 every Seconds and prints the top '],['fun','scalaris_old','util:topDumpXEvery_helper/4','Helper function for topDumpXEvery/5 (export needed'],['fun','scalaris_old','util:us2timestamp/1','convert microsecs to os:timestamp().'],['fun','scalaris_old','util:wait_for/1',[]],['fun','scalaris_old','util:wait_for/1',[]],['fun','scalaris_old','util:wait_for_process_to_die/1',[]],['fun','scalaris_old','util:wait_for_table_to_disappear/1',[]],['fun','scalaris_old','util:zipfoldl/2',[]],['fun','scalaris_old','vivaldi:activate/0','Activates the vivaldi process.'],['fun','scalaris_old','vivaldi:check_config/0','Checks whether config parameters of the vivaldi pr'],['fun','scalaris_old','vivaldi:deactivate/0','Deactivates the cyclon process.'],['fun','scalaris_old','vivaldi:get_base_interval/0','Gets the vivaldi interval set in scalaris.cfg.'],['fun','scalaris_old','vivaldi:get_coordinate/0','Sends a (local) message to the vivaldi process of '],['fun','scalaris_old','vivaldi:init/1',[]],['fun','scalaris_old','vivaldi:on_active/1','Message handler when the module is fully initializ'],['fun','scalaris_old','vivaldi:on_inactive/1','Message handler during start up phase (will change'],['fun','scalaris_old','vivaldi:start_link/1',[]],['fun','scalaris_old','vivaldi_latency:check_config/0','Checks whether config parameters of the vivaldi_la'],['fun','scalaris_old','vivaldi_latency:init/1',[]],['fun','scalaris_old','vivaldi_latency:measure_latency/1',[]],['fun','scalaris_old','vivaldi_latency:on/1','message handler.'],['fun','scalaris_old','webhelpers:color/1','Choose a random color for a Pid.'],['fun','scalaris_old','webhelpers:delete_key/1',[]],['fun','scalaris_old','webhelpers:flush_ring_cache/0',[]],['fun','scalaris_old','webhelpers:format_centroids/1','Convert a list of centroids into a JSON string.'],['fun','scalaris_old','webhelpers:format_coordinate/1','Get a string representation for a vivaldi coordina'],['fun','scalaris_old','webhelpers:format_nodes/1','Format Nodes as returned by getVivaldiMap() into J'],['fun','scalaris_old','webhelpers:get_and_cache_ring/0',[]],['fun','scalaris_old','webhelpers:getDCClustersAndNodes/0',[]],['fun','scalaris_old','webhelpers:getGossipRendered/0',[]],['fun','scalaris_old','webhelpers:getIndexedRingRendered/0',[]],['fun','scalaris_old','webhelpers:getMonitorClientData/0',[]],['fun','scalaris_old','webhelpers:getMonitorRingData/0',[]],['fun','scalaris_old','webhelpers:getRingChart/0',[]],['fun','scalaris_old','webhelpers:getRingRendered/0',[]],['fun','scalaris_old','webhelpers:getVivaldiMap/0',[]],['fun','scalaris_old','webhelpers:isPost/1','Checks whether the current request is a post opera'],['fun','scalaris_old','webhelpers:lookup/1',[]],['fun','scalaris_old','webhelpers:pid_to_integer/1','Convert a Pid into an integer.'],['fun','scalaris_old','webhelpers:safe_html_string/1','Escapes angle brackets within the string with thei'],['fun','scalaris_old','webhelpers:safe_html_string/1','Formats the data with the format string and escape'],['fun','scalaris_old','webhelpers:set_key/1',[]]];