var index = [['app','erlang-trader','erlang-trader','[application]'],['mod','erlang-trader','acceptor_SUITE',[]],['mod','erlang-trader','active_echo_protocol',[]],['mod','erlang-trader','echo_protocol',[]],['mod','erlang-trader','fix_engine',[]],['mod','erlang-trader','fix_engine_app',[]],['mod','erlang-trader','fix_engine_field',[]],['mod','erlang-trader','fix_engine_field_sup',[]],['mod','erlang-trader','fix_engine_log',[]],['mod','erlang-trader','fix_engine_server',[]],['mod','erlang-trader','fix_engine_server_sup',[]],['mod','erlang-trader','fix_engine_tests',[]],['mod','erlang-trader','fix_engine_utils',[]],['mod','erlang-trader','market_data_app',[]],['mod','erlang-trader','market_data_sup',[]],['mod','erlang-trader','notify_and_wait_protocol',[]],['mod','erlang-trader','oms_app',[]],['mod','erlang-trader','oms_sup',[]],['mod','erlang-trader','portfolio_app',[]],['mod','erlang-trader','portfolio_sup',[]],['mod','erlang-trader','ranch','Ranch API to start and stop listeners.'],['mod','erlang-trader','ranch_listener','Public API for managing listeners.'],['mod','erlang-trader','ranch_ssl','SSL transport API.'],['mod','erlang-trader','ranch_tcp','TCP transport API.'],['mod','erlang-trader','remove_conn_and_wait_protocol',[]],['mod','erlang-trader','tcp_echo',[]],['fun','erlang-trader','acceptor_SUITE:all/0',[]],['fun','erlang-trader','acceptor_SUITE:end_per_group/2',[]],['fun','erlang-trader','acceptor_SUITE:end_per_suite/1',[]],['fun','erlang-trader','acceptor_SUITE:groups/0',[]],['fun','erlang-trader','acceptor_SUITE:init_per_group/2',[]],['fun','erlang-trader','acceptor_SUITE:init_per_suite/1',[]],['fun','erlang-trader','acceptor_SUITE:misc_bad_transport/1',[]],['fun','erlang-trader','acceptor_SUITE:ssl_accept_error/1',[]],['fun','erlang-trader','acceptor_SUITE:ssl_accept_socket/1',[]],['fun','erlang-trader','acceptor_SUITE:ssl_active_echo/1',[]],['fun','erlang-trader','acceptor_SUITE:ssl_echo/1',[]],['fun','erlang-trader','acceptor_SUITE:supervisor_clean_child_restart/1',[]],['fun','erlang-trader','acceptor_SUITE:supervisor_clean_restart/1',[]],['fun','erlang-trader','acceptor_SUITE:supervisor_conns_alive/1',[]],['fun','erlang-trader','acceptor_SUITE:tcp_accept_socket/1',[]],['fun','erlang-trader','acceptor_SUITE:tcp_active_echo/1',[]],['fun','erlang-trader','acceptor_SUITE:tcp_echo/1',[]],['fun','erlang-trader','acceptor_SUITE:tcp_infinity_max_connections/1',[]],['fun','erlang-trader','acceptor_SUITE:tcp_max_connections/1',[]],['fun','erlang-trader','acceptor_SUITE:tcp_max_connections_and_beyond/1',[]],['fun','erlang-trader','acceptor_SUITE:tcp_set_max_connections/1',[]],['fun','erlang-trader','acceptor_SUITE:tcp_upgrade/1',[]],['fun','erlang-trader','active_echo_protocol:init/4',[]],['fun','erlang-trader','active_echo_protocol:start_link/4',[]],['fun','erlang-trader','echo_protocol:init/4',[]],['fun','erlang-trader','echo_protocol:start_link/4',[]],['fun','erlang-trader','fix_engine_app:restart/0',[]],['fun','erlang-trader','fix_engine_app:start/2',[]],['fun','erlang-trader','fix_engine_app:stop/1',[]],['fun','erlang-trader','fix_engine_field:handle_info/2',[]],['fun','erlang-trader','fix_engine_field:init/1',[]],['fun','erlang-trader','fix_engine_field:lookup_field/1',[]],['fun','erlang-trader','fix_engine_field:start_link/0','Start the fix_engine gen_server.'],['fun','erlang-trader','fix_engine_field_sup:init/1',[]],['fun','erlang-trader','fix_engine_field_sup:start_link/0',[]],['fun','erlang-trader','fix_engine_log:log/3',[]],['fun','erlang-trader','fix_engine_server:add_listener/4','Register/Unregister data receivers.'],['fun','erlang-trader','fix_engine_server:handle_cast/2',[]],['fun','erlang-trader','fix_engine_server:handle_info/2',[]],['fun','erlang-trader','fix_engine_server:init/1',[]],['fun','erlang-trader','fix_engine_server:remove_listener/2',[]],['fun','erlang-trader','fix_engine_server:start_link/0','Start the fix_engine gen_server.'],['fun','erlang-trader','fix_engine_server_sup:init/1',[]],['fun','erlang-trader','fix_engine_server_sup:start_link/0',[]],['fun','erlang-trader','fix_engine_utils:abort/0',[]],['fun','erlang-trader','fix_engine_utils:abort/1',[]],['fun','erlang-trader','market_data_app:start/2',[]],['fun','erlang-trader','market_data_app:stop/1',[]],['fun','erlang-trader','market_data_sup:init/1',[]],['fun','erlang-trader','market_data_sup:start_link/0',[]],['fun','erlang-trader','notify_and_wait_protocol:init/2',[]],['fun','erlang-trader','notify_and_wait_protocol:start_link/4',[]],['fun','erlang-trader','oms_app:start/2',[]],['fun','erlang-trader','oms_app:stop/1',[]],['fun','erlang-trader','oms_sup:init/1',[]],['fun','erlang-trader','oms_sup:start_link/0',[]],['fun','erlang-trader','portfolio_app:start/2',[]],['fun','erlang-trader','portfolio_app:stop/1',[]],['fun','erlang-trader','portfolio_sup:init/1',[]],['fun','erlang-trader','portfolio_sup:start_link/0',[]],['fun','erlang-trader','ranch:accept_ack/1','Acknowledge the accepted connection.'],['fun','erlang-trader','ranch:child_spec/1','Return a child spec suitable for embedding.'],['fun','erlang-trader','ranch:filter_options/1','Filter a list of options and remove all unwanted v'],['fun','erlang-trader','ranch:get_max_connections/1','Return the max number of connections allowed concu'],['fun','erlang-trader','ranch:get_port/1','Return the listeners port.'],['fun','erlang-trader','ranch:get_protocol_options/1','Return the current protocol options for the given '],['fun','erlang-trader','ranch:require/1','Start the given applications if they were not alre'],['fun','erlang-trader','ranch:set_max_connections/1','Set the max number of connections allowed concurre'],['fun','erlang-trader','ranch:set_option_default/2','Add an option to a list, but only if it wasnt pre'],['fun','erlang-trader','ranch:set_protocol_options/1','Upgrade the protocol options for the given listene'],['fun','erlang-trader','ranch:start_listener/1','Start a listener for the given transport and proto'],['fun','erlang-trader','ranch:stop_listener/1','Stop a listener identified by Ref.'],['fun','erlang-trader','ranch_listener:add_connection/1','Add a connection to the listeners pool.'],['fun','erlang-trader','ranch_listener:get_max_connections/1','Return the max number of connections allowed concu'],['fun','erlang-trader','ranch_listener:get_port/1','Return the listeners port.'],['fun','erlang-trader','ranch_listener:get_protocol_options/1','Return the current protocol options.'],['fun','erlang-trader','ranch_listener:remove_connection/1','Remove this process connection from the pool.'],['fun','erlang-trader','ranch_listener:set_max_connections/1','Set the max number of connections allowed concurre'],['fun','erlang-trader','ranch_listener:set_protocol_options/1','Upgrade the protocol options.'],['fun','erlang-trader','ranch_ssl:accept/1','Accept connections with the given listening socket'],['fun','erlang-trader','ranch_ssl:close/1','Close the given socket.'],['fun','erlang-trader','ranch_ssl:controlling_process/1','Give control of the socket to a new process.'],['fun','erlang-trader','ranch_ssl:listen/2','Listen for connections on the given port number.'],['fun','erlang-trader','ranch_ssl:messages/0','Atoms used to identify messages in {active, once |'],['fun','erlang-trader','ranch_ssl:name/0','Name of this transport, ssl.'],['fun','erlang-trader','ranch_ssl:peername/1','Return the remote address and port of the connecti'],['fun','erlang-trader','ranch_ssl:recv/1','Receive data from a socket in passive mode.'],['fun','erlang-trader','ranch_ssl:send/1','Send data on a socket.'],['fun','erlang-trader','ranch_ssl:sendfile/1','Send a file on a socket.'],['fun','erlang-trader','ranch_ssl:setopts/1','Set options on the given socket.'],['fun','erlang-trader','ranch_ssl:sockname/1','Return the local address and port of the connectio'],['fun','erlang-trader','ranch_tcp:accept/1','Accept connections with the given listening socket'],['fun','erlang-trader','ranch_tcp:close/1','Close the given socket.'],['fun','erlang-trader','ranch_tcp:controlling_process/1','Give control of the socket to a new process.'],['fun','erlang-trader','ranch_tcp:listen/2','Listen for connections on the given port number.'],['fun','erlang-trader','ranch_tcp:messages/0','Atoms used to identify messages in {active, once |'],['fun','erlang-trader','ranch_tcp:name/0','Name of this transport, tcp.'],['fun','erlang-trader','ranch_tcp:peername/1','Return the remote address and port of the connecti'],['fun','erlang-trader','ranch_tcp:recv/1','Receive data from a socket in passive mode.'],['fun','erlang-trader','ranch_tcp:send/1','Send data on a socket.'],['fun','erlang-trader','ranch_tcp:sendfile/1','Send a file on a socket.'],['fun','erlang-trader','ranch_tcp:setopts/1','Set options on the given socket.'],['fun','erlang-trader','ranch_tcp:sockname/1','Return the local address and port of the connectio'],['fun','erlang-trader','remove_conn_and_wait_protocol:init/2',[]],['fun','erlang-trader','remove_conn_and_wait_protocol:start_link/4',[]],['fun','erlang-trader','tcp_echo:start/0',[]]];