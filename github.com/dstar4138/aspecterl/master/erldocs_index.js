var index = [['app','aspecterl','aspecterl','[application]'],['mod','aspecterl','aspecterl','   This module does three things: It provides acc'],['mod','aspecterl','aspecterl_extractor',[]],['mod','aspecterl','aspecterl_injector',[]],['mod','aspecterl','aspecterl_util',[]],['mod','aspecterl','ast_wrapper','   This module abstracts the usage of the Erlang '],['mod','aspecterl','erladf',[]],['fun','aspecterl','aspecterl:code_change/3',[]],['fun','aspecterl','aspecterl:compile/1','Compiles a source directory using the AspectErl tr'],['fun','aspecterl','aspecterl:compile/3','Similar to compile/1 except you must provide all t'],['fun','aspecterl','aspecterl:handle_info/2',[]],['fun','aspecterl','aspecterl:parse_transform/2','Entry point for the AspectErl injection and extrac'],['fun','aspecterl','aspecterl:terminate/2',[]],['fun','aspecterl','aspecterl_extractor:run/2','Loops through the Abstract Syntax Tree and extract'],['fun','aspecterl','aspecterl_injector:run/2','Loops through the Abstract Syntax Tree and injects'],['fun','aspecterl','ast_wrapper:around/4','    Modifies the Function forms passed in so that'],['fun','aspecterl','ast_wrapper:before/4','    Modifies the Function forms passed in so that'],['fun','aspecterl','ast_wrapper:final/4','    Modifies the Function forms passed in so that'],['fun','aspecterl','ast_wrapper:inject_error_fun/4','Injects a function into the AST that just throws a'],['fun','aspecterl','ast_wrapper:onthrow/4','    Modifies the Function forms passed in so that'],['fun','aspecterl','ast_wrapper:return/4','    Modifies the Function forms passed in so that'],['fun','aspecterl','erladf:is_advice_dir/1','Checks if a particular directory has global advice'],['fun','aspecterl','erladf:parse/1','Wraps call to file parser with the AspectErl ADF f'],['fun','aspecterl','erladf:parse_all/1','Wraps directory call and will get all adf files in']];