var index = [['app','pibfi','pibfi','[application]'],['mod','pibfi','bf','Cats Eye Technologies Erlang Brainf*ck Interpret'],['mod','pibfi','pibfi','Platonic Ideal Brainf*ck Interpreter (pibfi).'],['mod','pibfi','pibfi_filter','Stream filtering for the Platonic Ideal Brainf*ck '],['mod','pibfi','pibfi_input','Input subsystem of the Platonic Ideal Brainf*ck In'],['mod','pibfi','pibfi_interpreter','Interpreter for pibfi.'],['mod','pibfi','pibfi_io','I/O subsystem of the Platonic Ideal Brainf*ck Inte'],['mod','pibfi','pibfi_optimizer','Optimizer for pibfi.'],['mod','pibfi','pibfi_options','Options parser for pibfi.'],['mod','pibfi','pibfi_parser','Brainf*ck parser for pibfi.'],['mod','pibfi','pibfi_statistics','Statistics collector for pibfi.'],['mod','pibfi','pibfi_stripper','Stripper for pibfi.'],['mod','pibfi','pibfi_supervisor','Supervisor process for pibfi.'],['mod','pibfi','pibfi_tape','Tape ADT for the Platonic Ideal Brainf*ck Interpre'],['mod','pibfi','pibfi_tape_dict','Dict backend for tape ADT for the Platonic Ideal B'],['mod','pibfi','pibfi_tape_dynarray','dynarray backend for tape ADT for pibfi.'],['mod','pibfi','pibfi_tape_ets','ETS backend for tape ADT for the Platonic Ideal Br'],['mod','pibfi','pibfi_tape_tuple','Tuple backend for tape ADT for pibfi.'],['mod','pibfi','pibfi_xlat','Character translation server for pibfi.'],['fun','pibfi','bf:interpret/1','Equivalent to interpret(Program, 512).'],['fun','pibfi','bf:interpret/1','The main user interface to the Brainf*ck interpret'],['fun','pibfi','bf:test/1','Test functions, numbered from 1 upwards.'],['fun','pibfi','pibfi:assert/1','Asserts that the condition is true.'],['fun','pibfi','pibfi:assert_in_bounds/4',[]],['fun','pibfi','pibfi:os_eol/0','Returns the native end-of-line convention, if it c'],['fun','pibfi','pibfi:run/1','Runs a Brainf*ck program.'],['fun','pibfi','pibfi:run/1','Starts pibfi for the purposes of running a Brainf*'],['fun','pibfi','pibfi:startup/2',[]],['fun','pibfi','pibfi:whisper/1','Displays extra information.'],['fun','pibfi','pibfi:whisper/1','Equivalent to whisper(string(), []).'],['fun','pibfi','pibfi:wrap/1','Implements a generic modulus function.'],['fun','pibfi','pibfi_filter:notify/1','Notifies the other end of the connection.'],['fun','pibfi','pibfi_filter:send/1','Sends a character or characters to a filter server'],['fun','pibfi','pibfi_filter:server/5',[]],['fun','pibfi','pibfi_filter:start/1','Creates and spawns a new stream filter.'],['fun','pibfi','pibfi_input:server/5',[]],['fun','pibfi','pibfi_input:start/1','Creates and spawns a new input subsystem.'],['fun','pibfi','pibfi_interpreter:interpret/1','Interprets a Brainf*ck program.'],['fun','pibfi','pibfi_io:flush/1','Flushes any pending output, even if it has not bee'],['fun','pibfi','pibfi_io:input/1','Retrieves the next character value from the input '],['fun','pibfi','pibfi_io:output/1','Sends the given character value to the output stre'],['fun','pibfi','pibfi_io:server/1','Spawned by start/1.'],['fun','pibfi','pibfi_io:start/1','Creates and spawns a new I/O subsystem.'],['fun','pibfi','pibfi_io:stop/1','Tells the I/O server to stop.'],['fun','pibfi','pibfi_optimizer:optimize/1','Optimizes a Brainf*ck program.'],['fun','pibfi','pibfi_options:get_flag/1','Gets a switch from the command line.'],['fun','pibfi','pibfi_options:get_option/1','Gets an option from a list of (already parsed) opt'],['fun','pibfi','pibfi_options:get_opts/1','Gets a set of options from the command line.'],['fun','pibfi','pibfi_parser:parse/1','Transforms a string into a nested tuple data struc'],['fun','pibfi','pibfi_statistics:dump/0',[]],['fun','pibfi','pibfi_statistics:dump/1',[]],['fun','pibfi','pibfi_statistics:server/2',[]],['fun','pibfi','pibfi_statistics:start/3',[]],['fun','pibfi','pibfi_statistics:update_program/3',[]],['fun','pibfi','pibfi_stripper:strip/1','Strips a Brainf*ck program.'],['fun','pibfi','pibfi_supervisor:link/3',[]],['fun','pibfi','pibfi_supervisor:server/0',[]],['fun','pibfi','pibfi_supervisor:spawn_link/6',[]],['fun','pibfi','pibfi_supervisor:start/0',[]],['fun','pibfi','pibfi_tape:behaviour_info/1',[]],['fun','pibfi','pibfi_tape:decrement/1','Decrements the value at the current position on th'],['fun','pibfi','pibfi_tape:decrement/1','Decrements the value at the current position on th'],['fun','pibfi','pibfi_tape:examine/1','Examines the state of the tape.'],['fun','pibfi','pibfi_tape:increment/1','Increments the value at the current position on th'],['fun','pibfi','pibfi_tape:increment/1','Increments the value at the current position on th'],['fun','pibfi','pibfi_tape:left/1','Moves the read/write head N positions left on the '],['fun','pibfi','pibfi_tape:left/1','Moves the read/write head one position left on the'],['fun','pibfi','pibfi_tape:read/1','Returns the value at the current position on the t'],['fun','pibfi','pibfi_tape:right/1','Moves the read/write head N positions right on the'],['fun','pibfi','pibfi_tape:right/1','Moves the read/write head one position right on th'],['fun','pibfi','pibfi_tape:server/2',[]],['fun','pibfi','pibfi_tape:start/1','Starts and returns the pid of a new tape server.'],['fun','pibfi','pibfi_tape:write/1','Places the given value at the current position on '],['fun','pibfi','pibfi_tape_dict:head/1',[]],['fun','pibfi','pibfi_tape_dict:left/1','Moves the read/write head N positions left on the '],['fun','pibfi','pibfi_tape_dict:new/1','Creates and returns a new tape.'],['fun','pibfi','pibfi_tape_dict:peek/2',[]],['fun','pibfi','pibfi_tape_dict:poke/3',[]],['fun','pibfi','pibfi_tape_dict:read/1','Returns the value at the current position on the t'],['fun','pibfi','pibfi_tape_dict:right/1','Moves the read/write head N positions right on the'],['fun','pibfi','pibfi_tape_dict:write/1','Places the given value at the current position on '],['fun','pibfi','pibfi_tape_dynarray:decrement/1','Decrements the value at the current position on th'],['fun','pibfi','pibfi_tape_dynarray:head/1',[]],['fun','pibfi','pibfi_tape_dynarray:increment/1','Increments the value at the current position on th'],['fun','pibfi','pibfi_tape_dynarray:left/1','Moves the read/write head N positions left on the '],['fun','pibfi','pibfi_tape_dynarray:new/1','Creates and returns a new dynarray-backed tape.'],['fun','pibfi','pibfi_tape_dynarray:peek/2',[]],['fun','pibfi','pibfi_tape_dynarray:poke/3',[]],['fun','pibfi','pibfi_tape_dynarray:read/1','Returns the value at the current position on the t'],['fun','pibfi','pibfi_tape_dynarray:right/1','Moves the read/write head N positions right on the'],['fun','pibfi','pibfi_tape_dynarray:write/1','Places the given value at the current position on '],['fun','pibfi','pibfi_tape_ets:head/1',[]],['fun','pibfi','pibfi_tape_ets:left/1','Moves the read/write head N positions left on the '],['fun','pibfi','pibfi_tape_ets:new/1','Creates and returns a new ETS-backed tape.'],['fun','pibfi','pibfi_tape_ets:peek/2',[]],['fun','pibfi','pibfi_tape_ets:poke/3',[]],['fun','pibfi','pibfi_tape_ets:read/1','Returns the value at the current position on the t'],['fun','pibfi','pibfi_tape_ets:right/1','Moves the read/write head N positions right on the'],['fun','pibfi','pibfi_tape_ets:write/1','Places the given value at the current position on '],['fun','pibfi','pibfi_tape_tuple:decrement/1','Decrements the value at the current position on th'],['fun','pibfi','pibfi_tape_tuple:head/1',[]],['fun','pibfi','pibfi_tape_tuple:increment/1','Increments the value at the current position on th'],['fun','pibfi','pibfi_tape_tuple:left/1','Moves the read/write head N positions left on the '],['fun','pibfi','pibfi_tape_tuple:new/1','Creates and returns a new tuple-backed tape.'],['fun','pibfi','pibfi_tape_tuple:peek/2',[]],['fun','pibfi','pibfi_tape_tuple:poke/3',[]],['fun','pibfi','pibfi_tape_tuple:read/1','Returns the value at the current position on the t'],['fun','pibfi','pibfi_tape_tuple:right/1','Moves the read/write head N positions right on the'],['fun','pibfi','pibfi_tape_tuple:write/1','Places the given value at the current position on '],['fun','pibfi','pibfi_xlat:flush/1','Causes the xlat server to flush all its characters'],['fun','pibfi','pibfi_xlat:notify/1','Notifies the other end of the connection.'],['fun','pibfi','pibfi_xlat:send/1','Sends a character or characters to an xlat server '],['fun','pibfi','pibfi_xlat:server/1','Spawned by start/2, should not be called  directl'],['fun','pibfi','pibfi_xlat:start/1','Starts an xlat server.'],['fun','pibfi','pibfi_xlat:test/0',[]]];