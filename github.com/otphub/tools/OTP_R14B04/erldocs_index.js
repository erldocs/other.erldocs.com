var index = [['app','tools','tools','[application]'],['mod','tools','cover','A Coverage Analysis Tool for Erlang'],['mod','tools','cover_web',[]],['mod','tools','cprof','A simple Call Count Profiling Tool using breakpoin'],['mod','tools','eprof','A Time Profiling Tool for Erlang'],['mod','tools','erlang_mode','Erlang mode for Emacs '],['mod','tools','fprof','A Time Profiling Tool using trace to file for mini'],['mod','tools','instrument','Analysis and Utility Functions for Instrumentation'],['mod','tools','lcnt','A runtime system Lock Profiling tool.'],['mod','tools','make','A Make Utility for Erlang'],['mod','tools','tags','Generate Emacs TAGS file from Erlang source files'],['mod','tools','xref','A Cross Reference Tool for analyzing dependencies '],['mod','tools','xref_base',[]],['mod','tools','xref_compiler',[]],['mod','tools','xref_reader',[]],['mod','tools','xref_scanner',[]],['mod','tools','xref_utils',[]],['fun','tools','cover:analyse/1','Analyse a Cover compiled module.'],['fun','tools','cover:analyse/2','Analyse a Cover compiled module.'],['fun','tools','cover:analyse/2','Analyse a Cover compiled module.'],['fun','tools','cover:analyse/3','Analyse a Cover compiled module.'],['fun','tools','cover:analyse_to_file/1','Detailed coverage analysis of a Cover compiled mod'],['fun','tools','cover:analyse_to_file/2','Detailed coverage analysis of a Cover compiled mod'],['fun','tools','cover:analyse_to_file/2','Detailed coverage analysis of a Cover compiled mod'],['fun','tools','cover:analyse_to_file/3','Detailed coverage analysis of a Cover compiled mod'],['fun','tools','cover:async_analyse_to_file/1','Asynchronous call to analyse_to_file.'],['fun','tools','cover:async_analyse_to_file/2','Asynchronous call to analyse_to_file.'],['fun','tools','cover:async_analyse_to_file/2','Asynchronous call to analyse_to_file.'],['fun','tools','cover:async_analyse_to_file/3','Asynchronous call to analyse_to_file.'],['fun','tools','cover:compile/1','Compile a module for Cover analysis.'],['fun','tools','cover:compile/2','Compile a module for Cover analysis.'],['fun','tools','cover:compile_beam/1','Compile a module for Cover analysis, using an exis'],['fun','tools','cover:compile_beam_directory/0','Compile all .beam files in a directory for Cover a'],['fun','tools','cover:compile_beam_directory/1','Compile all .beam files in a directory for Cover a'],['fun','tools','cover:compile_directory/0','Compile all modules in a directory for Cover analy'],['fun','tools','cover:compile_directory/1','Compile all modules in a directory for Cover analy'],['fun','tools','cover:compile_directory/2','Compile all modules in a directory for Cover analy'],['fun','tools','cover:compile_module/1','Compile a module for Cover analysis.'],['fun','tools','cover:compile_module/2','Compile a module for Cover analysis.'],['fun','tools','cover:export/1','Reset coverage data for Cover compiled modules.'],['fun','tools','cover:export/2','Reset coverage data for Cover compiled modules.'],['fun','tools','cover:import/1','Reset coverage data for Cover compiled modules.'],['fun','tools','cover:imported/0','Return all imported files.'],['fun','tools','cover:imported_modules/0','Return all modules for which there are imported da'],['fun','tools','cover:is_compiled/1','Check if a module is Cover compiled.'],['fun','tools','cover:modules/0','Return all Cover compiled modules.'],['fun','tools','cover:reset/0','Reset coverage data for Cover compiled modules.'],['fun','tools','cover:reset/1','Reset coverage data for Cover compiled modules.'],['fun','tools','cover:start/0','Start Cover.'],['fun','tools','cover:start/1','Start Cover on remote nodes.'],['fun','tools','cover:stop/0','Stop Cover.'],['fun','tools','cover:stop/1','Stop Cover on remote nodes.'],['fun','tools','cover:which_nodes/0','Return all nodes that are part of the coverage ana'],['fun','tools','cover_web:add_node/2',[]],['fun','tools','cover_web:calls/2',[]],['fun','tools','cover_web:code_change/3',[]],['fun','tools','cover_web:compile/2',[]],['fun','tools','cover_web:compile_frame/2',[]],['fun','tools','cover_web:configData/0',[]],['fun','tools','cover_web:coverage/2',[]],['fun','tools','cover_web:handle_call/3',[]],['fun','tools','cover_web:handle_cast/2',[]],['fun','tools','cover_web:handle_info/2',[]],['fun','tools','cover_web:import/2',[]],['fun','tools','cover_web:import_frame/2',[]],['fun','tools','cover_web:init/1',[]],['fun','tools','cover_web:list_dir/2',[]],['fun','tools','cover_web:menu_frame/2',[]],['fun','tools','cover_web:nodes_frame/2',[]],['fun','tools','cover_web:remove_node/2',[]],['fun','tools','cover_web:result/2',[]],['fun','tools','cover_web:result_frame/2',[]],['fun','tools','cover_web:start/0',[]],['fun','tools','cover_web:start_link/0',[]],['fun','tools','cover_web:stop/0',[]],['fun','tools','cover_web:terminate/2',[]],['fun','tools','cprof:analyse/0','Collect and analyse call counters.'],['fun','tools','cprof:analyse/1','Collect and analyse call counters.'],['fun','tools','cprof:analyse/1','Collect and analyse call counters.'],['fun','tools','cprof:analyse/2','Collect and analyse call counters.'],['fun','tools','cprof:pause/0','Pause running call count trace for all functions.'],['fun','tools','cprof:pause/1','Pause running call count trace for matching functi'],['fun','tools','cprof:pause/2','Pause running call count trace for matching functi'],['fun','tools','cprof:pause/3','Pause running call count trace for matching functi'],['fun','tools','cprof:restart/0','Restart existing call counters for matching functi'],['fun','tools','cprof:restart/1','Restart existing call counters for matching functi'],['fun','tools','cprof:restart/2','Restart existing call counters for matching functi'],['fun','tools','cprof:restart/3','Restart existing call counters for matching functi'],['fun','tools','cprof:start/0','Start call count tracing for all functions.'],['fun','tools','cprof:start/1','Start call count tracing for matching functions.'],['fun','tools','cprof:start/2','Start call count tracing for matching functions.'],['fun','tools','cprof:start/3','Start call count tracing for matching functions.'],['fun','tools','cprof:stop/0','Stop call count tracing for all functions.'],['fun','tools','cprof:stop/1','Stop call count tracing for matching functions.'],['fun','tools','cprof:stop/2','Stop call count tracing for matching functions.'],['fun','tools','cprof:stop/3','Stop call count tracing for matching functions.'],['fun','tools','eprof:analyze/0','Display profiling results per process.'],['fun','tools','eprof:analyze/1','Display profiling results per process.'],['fun','tools','eprof:analyze/2','Display profiling results per process.'],['fun','tools','eprof:log/1','Activate logging of <c>eprof</c>printouts.'],['fun','tools','eprof:profile/1','Start profiling.'],['fun','tools','eprof:profile/1','Start profiling.'],['fun','tools','eprof:profile/2','Start profiling.'],['fun','tools','eprof:profile/3','Start profiling.'],['fun','tools','eprof:profile/4','Start profiling.'],['fun','tools','eprof:profile/5','Start profiling.'],['fun','tools','eprof:start/0','Start Eprof.'],['fun','tools','eprof:start_profiling/1','Start profiling.'],['fun','tools','eprof:start_profiling/2','Start profiling.'],['fun','tools','eprof:stop/0','Stop Eprof.'],['fun','tools','eprof:stop_profiling/0','Stop profiling.'],['fun','tools','fprof:analyse/0','Same as <c>analyse([])</c>.'],['fun','tools','fprof:analyse/1','Analyses raw profile data in the <c>fprof</c>&nbsp'],['fun','tools','fprof:analyse/1','Same as <c>analyse([OptionName])</c>.'],['fun','tools','fprof:analyse/2','Same as <c>analyse([{OptionName, OptionValue}])</c'],['fun','tools','fprof:analyse/2','Same as <c>analyse([{OptionName, OptionValue}])</c'],['fun','tools','fprof:apply/2','Same as <c>apply(Func, Args, [])</c>.'],['fun','tools','fprof:apply/3','Calls <c>erlang:apply(Func, Args)</c>surrounded by'],['fun','tools','fprof:apply/3','Same as <c>apply({Module, Function}, Args, [])</c>'],['fun','tools','fprof:apply/4','Same as <c>apply({Module, Function}, Args, OptionL'],['fun','tools','fprof:profile/0','Same as <c>profile([])</c>.'],['fun','tools','fprof:profile/1','Compiles a trace into raw profile data held by the'],['fun','tools','fprof:profile/1','Same as <c>profile([OptionName])</c>.'],['fun','tools','fprof:profile/2','Same as <c>profile([{OptionName, OptionValue}])</c'],['fun','tools','fprof:profile/2','Same as <c>profile([{OptionName, OptionValue}])</c'],['fun','tools','fprof:start/0','Starts the <c>fprof</c>&nbsp;server.'],['fun','tools','fprof:stop/0','Same as <c>stop(normal)</c>.'],['fun','tools','fprof:stop/1','Stops the <c>fprof</c>&nbsp;server.'],['fun','tools','fprof:trace/1','Starts or stops tracing.'],['fun','tools','fprof:trace/1','Same as <c>trace([OptionName])</c>.'],['fun','tools','fprof:trace/1','Same as <c>trace([start, verbose])</c>.'],['fun','tools','fprof:trace/2','Same as <c>trace([{OptionName, OptionValue}])</c>.'],['fun','tools','fprof:trace/2','Same as <c>trace([{OptionName, OptionValue}])</c>.'],['fun','tools','fprof:trace/2','Same as <c>trace([start, verbose, {file, Filename}'],['fun','tools','fprof:trace/2','Same as <c>trace([start, {file, Filename}])</c>.'],['fun','tools','instrument:allocator_descr/2','Returns a allocator description'],['fun','tools','instrument:block_header_size/1','Returns the memory block header size used by the e'],['fun','tools','instrument:class_descr/2','Returns a allocator description'],['fun','tools','instrument:descr/1','Replace type numbers in memory allocation map with'],['fun','tools','instrument:holes/1','Print out the sizes of unused memory blocks'],['fun','tools','instrument:mem_limits/1','Return lowest and highest memory address used'],['fun','tools','instrument:memory_data/0','Return the current memory allocation map'],['fun','tools','instrument:memory_status/1','Return current memory allocation status'],['fun','tools','instrument:read_memory_data/1','Read memory allocation map'],['fun','tools','instrument:read_memory_status/1','Read memory allocation status from a file'],['fun','tools','instrument:sort/1','Sort the memory allocation list'],['fun','tools','instrument:store_memory_data/1','Store the current memory allocation map on a file'],['fun','tools','instrument:store_memory_status/1','Store the current memory allocation status on a fi'],['fun','tools','instrument:sum_blocks/1','Return the total amount of memory used'],['fun','tools','instrument:type_descr/2','Returns a type description'],['fun','tools','instrument:type_no_range/1','Returns the memory block type numbers'],['fun','tools','lcnt:clear/0','Same as <c>clear(node())</c>.'],['fun','tools','lcnt:clear/1','Clears the internal lock statistics from runtime s'],['fun','tools','lcnt:collect/0','Same as <c>collect(node())</c>.'],['fun','tools','lcnt:collect/1','Collects lock statistics from the runtime system.'],['fun','tools','lcnt:conflicts/0','Same as <c>conflicts([])</c>.'],['fun','tools','lcnt:conflicts/1','Prints a list of internal lock counters.'],['fun','tools','lcnt:information/0','Prints lcnt server state and generic information a'],['fun','tools','lcnt:inspect/1','Same as <c>inspect(Lock, [])</c>.'],['fun','tools','lcnt:inspect/2','Prints a list of internal lock counters for a spec'],['fun','tools','lcnt:load/1','Restores previously saved data to the server.'],['fun','tools','lcnt:locations/0','Same as <c>locations([])</c>.'],['fun','tools','lcnt:locations/1','Prints a list of internal lock counters by source '],['fun','tools','lcnt:save/1','Saves the collected data to file.'],['fun','tools','lcnt:start/0','Starts the lock profiler server.'],['fun','tools','lcnt:stop/0','Stops the lock profiler server.'],['fun','tools','lcnt:swap_pid_keys/0','Swaps places on <c>Name</c> and <c>Id</c> space fo'],['fun','tools','make:all/0','Compile a set of modules.'],['fun','tools','make:all/1','Compile a set of modules.'],['fun','tools','make:files/1','Compile a set of modules.'],['fun','tools','make:files/2','Compile a set of modules.'],['fun','tools','tags:dir/2','Create a TAGS file for all files in directory<c>Di'],['fun','tools','tags:dirs/2','Create a TAGS file for all files in any directory '],['fun','tools','tags:file/2','Create a <c>TAGS</c>file for the file <c>File</c>.'],['fun','tools','tags:files/2','Create a TAGS file for the files in the list<c>Fil'],['fun','tools','tags:root/1','Create a <c>TAGS</c>file covering all files in the'],['fun','tools','tags:subdir/2','Descend recursively down the directory <c>Dir</c>a'],['fun','tools','tags:subdirs/2','Descend recursively down all the directories in<c>'],['fun','tools','xref:add_application/3','Add the modules of an application.'],['fun','tools','xref:add_directory/3','Add the modules in a directory.'],['fun','tools','xref:add_module/3','Add a module.'],['fun','tools','xref:add_release/3','Add the modules of a release.'],['fun','tools','xref:analyze/3','Evaluate a predefined analysis.'],['fun','tools','xref:d/1','Check the modules in a directory using the code pa'],['fun','tools','xref:forget/1','Remove user variables and their values.'],['fun','tools','xref:forget/2','Remove user variables and their values.'],['fun','tools','xref:format_error/1','Return an English description of an Xref error rep'],['fun','tools','xref:get_default/1','Return the default values of options.'],['fun','tools','xref:get_default/2','Return the default values of options.'],['fun','tools','xref:get_library_path/1','Return the library path.'],['fun','tools','xref:info/1','Return information about an Xref server.'],['fun','tools','xref:info/2','Return information about an Xref server.'],['fun','tools','xref:info/3','Return information about an Xref server.'],['fun','tools','xref:m/1','Check a module using the code path.'],['fun','tools','xref:m/1','Check a module using the code path.'],['fun','tools','xref:q/3','Evaluate a query.'],['fun','tools','xref:remove_application/2','Remove applications and their modules.'],['fun','tools','xref:remove_module/2','Remove analyzed modules.'],['fun','tools','xref:remove_release/2','Remove releases and their applications and modules'],['fun','tools','xref:replace_application/4','Replace an applications modules.'],['fun','tools','xref:replace_module/4','Replace an analyzed module.'],['fun','tools','xref:set_default/2','Set the default values of options.'],['fun','tools','xref:set_default/3','Set the default values of options.'],['fun','tools','xref:set_library_path/3','Set the library path and finds the library modules'],['fun','tools','xref:start/1','Create an Xref server.'],['fun','tools','xref:start/2','Create an Xref server.'],['fun','tools','xref:stop/1','Delete an Xref server.'],['fun','tools','xref:update/2','Replace newly compiled analyzed modules.'],['fun','tools','xref:variables/2','Return the names of variables.'],['fun','tools','xref_base:add_application/2',[]],['fun','tools','xref_base:add_application/3',[]],['fun','tools','xref_base:add_directory/2',[]],['fun','tools','xref_base:add_directory/3',[]],['fun','tools','xref_base:add_module/2',[]],['fun','tools','xref_base:add_module/3',[]],['fun','tools','xref_base:add_release/2',[]],['fun','tools','xref_base:add_release/3',[]],['fun','tools','xref_base:analysis/1',[]],['fun','tools','xref_base:analyze/2',[]],['fun','tools','xref_base:analyze/3',[]],['fun','tools','xref_base:delete/1',[]],['fun','tools','xref_base:do_add_application/2',[]],['fun','tools','xref_base:do_add_module/4',[]],['fun','tools','xref_base:do_add_release/2',[]],['fun','tools','xref_base:do_remove_module/2',[]],['fun','tools','xref_base:forget/1',[]],['fun','tools','xref_base:forget/2',[]],['fun','tools','xref_base:format_error/1',[]],['fun','tools','xref_base:get_default/1',[]],['fun','tools','xref_base:get_default/2',[]],['fun','tools','xref_base:get_library_path/1',[]],['fun','tools','xref_base:info/1',[]],['fun','tools','xref_base:info/2',[]],['fun','tools','xref_base:info/3',[]],['fun','tools','xref_base:new/0',[]],['fun','tools','xref_base:new/1',[]],['fun','tools','xref_base:q/2',[]],['fun','tools','xref_base:q/3',[]],['fun','tools','xref_base:remove_application/2',[]],['fun','tools','xref_base:remove_module/2',[]],['fun','tools','xref_base:remove_release/2',[]],['fun','tools','xref_base:replace_application/3',[]],['fun','tools','xref_base:replace_application/4',[]],['fun','tools','xref_base:replace_module/3',[]],['fun','tools','xref_base:replace_module/4',[]],['fun','tools','xref_base:set_default/2',[]],['fun','tools','xref_base:set_default/3',[]],['fun','tools','xref_base:set_library_path/2',[]],['fun','tools','xref_base:set_library_path/3',[]],['fun','tools','xref_base:set_up/1',[]],['fun','tools','xref_base:set_up/2',[]],['fun','tools','xref_base:update/1',[]],['fun','tools','xref_base:update/2',[]],['fun','tools','xref_base:variables/1',[]],['fun','tools','xref_base:variables/2',[]],['fun','tools','xref_compiler:compile/2',[]],['fun','tools','xref_compiler:format_error/1',[]],['fun','tools','xref_compiler:update_graph_counter/3',[]],['fun','tools','xref_reader:module/5',[]],['fun','tools','xref_scanner:scan/1',[]],['fun','tools','xref_utils:application_filename/1',[]],['fun','tools','xref_utils:application_filename/2',[]],['fun','tools','xref_utils:call/2',[]],['fun','tools','xref_utils:closure/1',[]],['fun','tools','xref_utils:components/1',[]],['fun','tools','xref_utils:condensation/1',[]],['fun','tools','xref_utils:fa_to_mfa/2',[]],['fun','tools','xref_utils:file_info/1',[]],['fun','tools','xref_utils:filename_to_application/1',[]],['fun','tools','xref_utils:find_beam/1',[]],['fun','tools','xref_utils:format_error/1',[]],['fun','tools','xref_utils:is_abstract_module/1',[]],['fun','tools','xref_utils:is_builtin/3',[]],['fun','tools','xref_utils:is_directory/1',[]],['fun','tools','xref_utils:is_funfun/3',[]],['fun','tools','xref_utils:is_path/1',[]],['fun','tools','xref_utils:is_static_function/2',[]],['fun','tools','xref_utils:is_string/2',[]],['fun','tools','xref_utils:list_path/2',[]],['fun','tools','xref_utils:module_filename/2',[]],['fun','tools','xref_utils:options/2',[]],['fun','tools','xref_utils:path/2',[]],['fun','tools','xref_utils:predefined_functions/0',[]],['fun','tools','xref_utils:regexpr/2',[]],['fun','tools','xref_utils:relation_to_graph/1',[]],['fun','tools','xref_utils:release_directory/3',[]],['fun','tools','xref_utils:scan_directory/4',[]],['fun','tools','xref_utils:select_application_directories/2',[]],['fun','tools','xref_utils:select_last_application_version/1',[]],['fun','tools','xref_utils:split_filename/2',[]],['fun','tools','xref_utils:subprocess/2',[]],['fun','tools','xref_utils:use/2',[]],['fun','tools','xref_utils:xset/2',[]]];