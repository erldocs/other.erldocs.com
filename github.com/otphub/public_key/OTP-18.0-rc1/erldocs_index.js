var index = [['app','public_key','public_key','[application]'],['mod','public_key','public_key',' API module for public key infrastructure.'],['fun','public_key','public_key:compute_key/2',' Compute shared secret'],['fun','public_key','public_key:compute_key/3',' Compute shared secret'],['fun','public_key','public_key:decrypt_private/2','Public key decryption.'],['fun','public_key','public_key:decrypt_private/3','Public key decryption.'],['fun','public_key','public_key:decrypt_public/2',[]],['fun','public_key','public_key:decrypt_public/3',[]],['fun','public_key','public_key:der_decode/2',' Decodes a public key ASN.1 DER encoded entity.'],['fun','public_key','public_key:der_encode/2',' Encodes a public key entity with asn1 DER encodin'],['fun','public_key','public_key:encrypt_private/2',' Public key encryption using the private key.'],['fun','public_key','public_key:encrypt_public/2',' Public key encryption using the public key.'],['fun','public_key','public_key:generate_key/1','Generates a new keypair'],['fun','public_key','public_key:pem_decode/1','Decode PEM binary data and return    entries as A'],['fun','public_key','public_key:pem_encode/1','Creates a PEM binary'],['fun','public_key','public_key:pem_entry_decode/1','Decodes a pem entry.'],['fun','public_key','public_key:pem_entry_decode/2','Decodes a pem entry.'],['fun','public_key','public_key:pem_entry_encode/2',' Creates a PEM entry that can be fed to pem_encode'],['fun','public_key','public_key:pem_entry_encode/4',' Creates a PEM entry that can be fed to pem_encode'],['fun','public_key','public_key:pkix_crl_issuer/1','Returns the issuer of the <c>CRL</c>.'],['fun','public_key','public_key:pkix_crl_verify/2',' Verify that  <c>Cert</c>  is the <c> CRL</c>  sig'],['fun','public_key','public_key:pkix_crls_validate/3',' Performs CRL validation.'],['fun','public_key','public_key:pkix_decode_cert/2',' Decodes an ASN.1 DER encoded PKIX x509 certificat'],['fun','public_key','public_key:pkix_dist_point/1','Creates a distribution point for CRLs issued by th'],['fun','public_key','public_key:pkix_dist_points/1',' Extracts distribution points from the certificate'],['fun','public_key','public_key:pkix_encode/3','DER encodes a PKIX x509 certificate or part of suc'],['fun','public_key','public_key:pkix_is_fixed_dh_cert/1',' Checks if a Certificate is a fixed Diffie-Hellman'],['fun','public_key','public_key:pkix_is_issuer/2',' Checks if <c>IssuerCert</c> issued <c>Cert</c>'],['fun','public_key','public_key:pkix_is_self_signed/1',' Checks if a Certificate is self signed.'],['fun','public_key','public_key:pkix_issuer_id/2',' Returns the issuer id.'],['fun','public_key','public_key:pkix_normalize_name/1','Normalizes a issuer name so that it can be easily'],['fun','public_key','public_key:pkix_path_validation/3',' Performs a basic path validation according to RFC'],['fun','public_key','public_key:pkix_sign/2','Signs certificate.'],['fun','public_key','public_key:pkix_sign_types/1','Translates signature algorithm oid to erlang diges'],['fun','public_key','public_key:pkix_verify/2',' Verify pkix x.509 certificate signature.'],['fun','public_key','public_key:sign/3',' Create digital signature.'],['fun','public_key','public_key:ssh_decode/2','Decodes a ssh file-binary. '],['fun','public_key','public_key:ssh_encode/3',' Encodes a list of ssh file entries to a binary.'],['fun','public_key','public_key:verify/4','Verifies a digital signature.']];