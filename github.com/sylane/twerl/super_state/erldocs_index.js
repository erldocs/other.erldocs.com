var index = [['app','twerl','twerl','[application]'],['mod','twerl','base_stage','       Base module for twerl stages declaring all '],['mod','twerl','stage_file_producer','Stage producing data form a disk file.'],['mod','twerl','stage_formats','       Stage format handling unitiliy functions.'],['mod','twerl','stage_http_pkt_decoder','Stage decoding data to http_pkt idiom.'],['mod','twerl','stage_http_pkt_encoder','Stage encoding http_pkt idiom to raw data.'],['mod','twerl','stage_packet_decoder','Stage decoding packets from raw data.'],['mod','twerl','stage_regex_splitter','Stage splitting input data using regular expresion'],['mod','twerl','stage_stdio_consumer','Stage priting consumed data to standard output.'],['mod','twerl','stage_stdio_producer','Stage producing data from standard input.'],['mod','twerl','stage_tcp_consumer','Stage writing consumed data to a TCP socket.'],['mod','twerl','stage_tcp_producer','Stage producing data from a TCP socket.'],['fun','twerl','base_stage:agree/3','Called to agree on a negotiated formats.'],['fun','twerl','base_stage:continue/3','Called to continue data processing.'],['fun','twerl','base_stage:init/1','Called to initialize the pipeline stage.'],['fun','twerl','base_stage:negotiate/2','Called to negotiate input format.'],['fun','twerl','base_stage:process/3','Called to process some data or query.'],['fun','twerl','base_stage:setup/3','Called to setup the pipeline stage.'],['fun','twerl','stage_file_producer:agree/3',[]],['fun','twerl','stage_file_producer:continue/3',[]],['fun','twerl','stage_file_producer:init/1',[]],['fun','twerl','stage_file_producer:negotiate/2',[]],['fun','twerl','stage_file_producer:new/1','Creates a file producer stage with default block s'],['fun','twerl','stage_file_producer:new/2','Creates a file producer stage with specified block'],['fun','twerl','stage_file_producer:process/3',[]],['fun','twerl','stage_file_producer:setup/3',[]],['fun','twerl','stage_formats:canonical/1','Returns the cannonical form of specified stage for'],['fun','twerl','stage_http_pkt_decoder:agree/3',[]],['fun','twerl','stage_http_pkt_decoder:continue/3',[]],['fun','twerl','stage_http_pkt_decoder:init/1',[]],['fun','twerl','stage_http_pkt_decoder:negotiate/2',[]],['fun','twerl','stage_http_pkt_decoder:new/0','Creates an HTTP decoder stage decoding data to htt'],['fun','twerl','stage_http_pkt_decoder:process/3',[]],['fun','twerl','stage_http_pkt_decoder:setup/3',[]],['fun','twerl','stage_http_pkt_encoder:agree/3',[]],['fun','twerl','stage_http_pkt_encoder:continue/3',[]],['fun','twerl','stage_http_pkt_encoder:init/1',[]],['fun','twerl','stage_http_pkt_encoder:negotiate/2',[]],['fun','twerl','stage_http_pkt_encoder:new/0','Creates an HTTP encoder stage converting http_pkt '],['fun','twerl','stage_http_pkt_encoder:process/3',[]],['fun','twerl','stage_http_pkt_encoder:setup/3',[]],['fun','twerl','stage_packet_decoder:agree/3',[]],['fun','twerl','stage_packet_decoder:continue/3',[]],['fun','twerl','stage_packet_decoder:init/1',[]],['fun','twerl','stage_packet_decoder:negotiate/2',[]],['fun','twerl','stage_packet_decoder:new/0','Creates a packet deocder stage.'],['fun','twerl','stage_packet_decoder:process/3',[]],['fun','twerl','stage_packet_decoder:setup/3',[]],['fun','twerl','stage_regex_splitter:agree/3',[]],['fun','twerl','stage_regex_splitter:continue/3',[]],['fun','twerl','stage_regex_splitter:init/1',[]],['fun','twerl','stage_regex_splitter:negotiate/2',[]],['fun','twerl','stage_regex_splitter:new/0','Creates a regular new line splitter.'],['fun','twerl','stage_regex_splitter:new/1','Creates a splitter stage with specified regular ex'],['fun','twerl','stage_regex_splitter:process/3',[]],['fun','twerl','stage_regex_splitter:setup/3',[]],['fun','twerl','stage_stdio_consumer:agree/3',[]],['fun','twerl','stage_stdio_consumer:continue/3',[]],['fun','twerl','stage_stdio_consumer:init/1',[]],['fun','twerl','stage_stdio_consumer:negotiate/2',[]],['fun','twerl','stage_stdio_consumer:new/0','Creates a stage printing data it receive to standa'],['fun','twerl','stage_stdio_consumer:new/1','Creates a stage printing data it receive to standa'],['fun','twerl','stage_stdio_consumer:process/3',[]],['fun','twerl','stage_stdio_consumer:setup/3',[]],['fun','twerl','stage_stdio_producer:agree/3',[]],['fun','twerl','stage_stdio_producer:continue/3',[]],['fun','twerl','stage_stdio_producer:init/1',[]],['fun','twerl','stage_stdio_producer:negotiate/2',[]],['fun','twerl','stage_stdio_producer:new/0','Creates a stage producing data read from console s'],['fun','twerl','stage_stdio_producer:new/1','Creates a stage producing data read from console s'],['fun','twerl','stage_stdio_producer:process/3',[]],['fun','twerl','stage_stdio_producer:setup/3',[]],['fun','twerl','stage_tcp_consumer:agree/3',[]],['fun','twerl','stage_tcp_consumer:continue/3',[]],['fun','twerl','stage_tcp_consumer:init/1',[]],['fun','twerl','stage_tcp_consumer:negotiate/2',[]],['fun','twerl','stage_tcp_consumer:new/2','Creats a TCP consumer writing consumed data to spe'],['fun','twerl','stage_tcp_consumer:process/3',[]],['fun','twerl','stage_tcp_consumer:setup/3',[]],['fun','twerl','stage_tcp_producer:agree/3',[]],['fun','twerl','stage_tcp_producer:continue/3',[]],['fun','twerl','stage_tcp_producer:init/1',[]],['fun','twerl','stage_tcp_producer:negotiate/2',[]],['fun','twerl','stage_tcp_producer:new/2','Creates a TCP stage producing data from the specif'],['fun','twerl','stage_tcp_producer:process/3',[]],['fun','twerl','stage_tcp_producer:setup/3',[]]];