var index = [['app','dummy','dummy','[application]'],['mod','dummy','dummy_app',[]],['mod','dummy','dummy_document',[]],['mod','dummy','dummy_document_child',[]],['mod','dummy','dummy_document_content',[]],['mod','dummy','dummy_session',[]],['mod','dummy','dummy_sup',[]],['mod','dummy','dummy_user',[]],['mod','dummy','dummy_user_info',[]],['fun','dummy','dummy_app:start/2',[]],['fun','dummy','dummy_app:stop/1',[]],['fun','dummy','dummy_document:create_document/2',[]],['fun','dummy','dummy_document:export_child_key/1',[]],['fun','dummy','dummy_document:get_content/2',[]],['fun','dummy','dummy_document:import_child_key/1',[]],['fun','dummy','dummy_document:init/2',[]],['fun','dummy','dummy_document:init_factory/1',[]],['fun','dummy','dummy_document:knows_content/2',[]],['fun','dummy','dummy_document:start_document/2',[]],['fun','dummy','dummy_document_child:encode/2',[]],['fun','dummy','dummy_document_content:encode/2',[]],['fun','dummy','dummy_session:init/1',[]],['fun','dummy','dummy_sup:init/1',[]],['fun','dummy','dummy_sup:start_link/0',[]],['fun','dummy','dummy_user:authenticate/2',[]],['fun','dummy','dummy_user:info/2',[]],['fun','dummy','dummy_user:init/2',[]],['fun','dummy','dummy_user_info:encode/2',[]],['app','erdom','erdom','[application]'],['mod','erdom','erdom_app','TODO: Document module erod_actions.'],['mod','erdom','erdom_document_group','TODO: Document module erdom_document_group.'],['mod','erdom','erdom_document_group_child','TODO: Document module erdom_document_group_child.'],['mod','erdom','erdom_document_group_content','TODO: Document module erdom_document_group_content'],['mod','erdom','erdom_document_index','TODO: Document module erdom_document_index.'],['mod','erdom','erdom_document_index_child','TODO: Document module erdom_document_index_child.'],['mod','erdom','erdom_document_index_content','TODO: Document module erdom_document_index_content'],['mod','erdom','erdom_document_user','TODO: Document module erdom_document_user.'],['mod','erdom','erdom_document_user_content','TODO: Document module erdom_document_user_content.'],['mod','erdom','erdom_proto_user_info','TODO: Document module erdom_proto_user_info.'],['mod','erdom','erdom_session','TODO: Document module erdom_session.'],['mod','erdom','erdom_storage','TODO: Document module erdom_storage.'],['mod','erdom','erdom_sup','TODO: Document module erdom_sup.'],['mod','erdom','erdom_user','TODO: Document module erdom_user.'],['fun','erdom','erdom_app:start/2',[]],['fun','erdom','erdom_app:stop/1',[]],['fun','erdom','erdom_document_group:create_document/2',[]],['fun','erdom','erdom_document_group:export_child_key/1',[]],['fun','erdom','erdom_document_group:get_content/2',[]],['fun','erdom','erdom_document_group:import_child_key/1',[]],['fun','erdom','erdom_document_group:init/2',[]],['fun','erdom','erdom_document_group:init_factory/1',[]],['fun','erdom','erdom_document_group:knows_content/2',[]],['fun','erdom','erdom_document_group:start_document/2',[]],['fun','erdom','erdom_document_group_child:encode/2','Encodes groups child records to specified format.'],['fun','erdom','erdom_document_group_content:encode/2','Encodes groups content record to specified format'],['fun','erdom','erdom_document_index:create_document/2',[]],['fun','erdom','erdom_document_index:export_child_key/1',[]],['fun','erdom','erdom_document_index:get_content/2',[]],['fun','erdom','erdom_document_index:import_child_key/1',[]],['fun','erdom','erdom_document_index:init/2',[]],['fun','erdom','erdom_document_index:init_factory/1',[]],['fun','erdom','erdom_document_index:knows_content/2',[]],['fun','erdom','erdom_document_index:start_document/2',[]],['fun','erdom','erdom_document_index_child:encode/2','Encodes indexs child records to specified format.'],['fun','erdom','erdom_document_index_content:encode/2','Encodes indexs content records to specified forma'],['fun','erdom','erdom_document_user:create_document/2',[]],['fun','erdom','erdom_document_user:export_child_key/1',[]],['fun','erdom','erdom_document_user:get_content/2',[]],['fun','erdom','erdom_document_user:import_child_key/1',[]],['fun','erdom','erdom_document_user:init/2',[]],['fun','erdom','erdom_document_user:init_factory/1',[]],['fun','erdom','erdom_document_user:knows_content/2',[]],['fun','erdom','erdom_document_user:start_document/2',[]],['fun','erdom','erdom_document_user_content:encode/2','Encodes users content records to specified format'],['fun','erdom','erdom_proto_user_info:encode/2','Encodes users information records to specified fo'],['fun','erdom','erdom_session:init/1',[]],['fun','erdom','erdom_storage:code_change/3',[]],['fun','erdom','erdom_storage:does_group_exist/1',[]],['fun','erdom','erdom_storage:does_user_exist/1',[]],['fun','erdom','erdom_storage:get_group_children/1',[]],['fun','erdom','erdom_storage:get_group_content/1',[]],['fun','erdom','erdom_storage:get_index_children/0',[]],['fun','erdom','erdom_storage:get_user_by_username/1',[]],['fun','erdom','erdom_storage:get_user_content/1',[]],['fun','erdom','erdom_storage:handle_call/3',[]],['fun','erdom','erdom_storage:handle_cast/2',[]],['fun','erdom','erdom_storage:handle_info/2',[]],['fun','erdom','erdom_storage:init/1',[]],['fun','erdom','erdom_storage:start_link/0',[]],['fun','erdom','erdom_storage:terminate/2',[]],['fun','erdom','erdom_sup:init/1',[]],['fun','erdom','erdom_sup:start_link/0',[]],['fun','erdom','erdom_user:authenticate/2',[]],['fun','erdom','erdom_user:info/2',[]],['fun','erdom','erdom_user:init/2',[]],['app','erod','erod','[application]'],['app','erod','erod','[application]'],['mod','erod','erod','TODO: Document module erod.'],['mod','erod','erod_actions','TODO: Document module erod_actions.'],['mod','erod','erod_context','TODO: Document module erod.'],['mod','erod','erod_document','TODO: Document module erod_document.'],['mod','erod','erod_document_factory','TODO: Document module erod_document_factory.'],['mod','erod','erod_document_proc','TODO: Document module erod_document_proc.'],['mod','erod','erod_proxy','TODO: Document module erod_proxy.'],['mod','erod','erod_registry','TODO: Document module erod_registry.'],['fun','erod','erod:start_document/3','Starts a document process for the gien document fa'],['fun','erod','erod_actions:perform/1','Performs the next action for the given context.'],['fun','erod','erod_actions:perform/2','Setups the given context with the specified list o'],['fun','erod','erod_actions:perform/3','Setups the given context with the specified action'],['fun','erod','erod_context:clone/3','Clones a context from another one keeping the sess'],['fun','erod','erod_context:compact/1','Compacts a context keeping only the minimum amount'],['fun','erod','erod_context:debug/3','Same as lager:debug/2 with the context log identif'],['fun','erod','erod_context:done/1','Marks the contexts current action as done and sta'],['fun','erod','erod_context:done/2','Marks the contexts current action as done with sp'],['fun','erod','erod_context:error/3','Same as lager:error/2 with the context log identif'],['fun','erod','erod_context:failed/2','Marks the contexts current action as failed for t'],['fun','erod','erod_context:info/3','Same as lager:info/2 with the context log identifi'],['fun','erod','erod_context:log_id/1','Gives the logging identifier of the context.'],['fun','erod','erod_context:new/2','Creates a new context with given callback module a'],['fun','erod','erod_context:warning/3','Same as lager:warning/2 with the context log ident'],['fun','erod','erod_document:add_child/2','Adds a child to the document.'],['fun','erod','erod_document:get_children/4','Gives a page of documents children for a specifie'],['fun','erod','erod_document:get_content/2','Gives the documents content.'],['fun','erod','erod_document:key/1','Gives the documents key.'],['fun','erod','erod_document:new/3','Creates a new document with specified key, callbac'],['fun','erod','erod_document:patch_content/2','Patches the documents content.'],['fun','erod','erod_document:patch_content/3','Patches the documents content if at specified ver'],['fun','erod','erod_document:reply/2','Reply to a synchronous call made to a document.'],['fun','erod','erod_document_factory:create_document/3','Creates a document with given callback module and '],['fun','erod','erod_document_factory:get_content/2','Gives the content of a document directly from stor'],['fun','erod','erod_document_factory:knows_content/2','Tells if the factory knows how to give the documen'],['fun','erod','erod_document_factory:new/2','Creates a new factory with specified callback modu'],['fun','erod','erod_document_factory:start_document/2','Starts a process for given document.'],['fun','erod','erod_document_proc:get_children/5','Gives a page of children from a document contained'],['fun','erod','erod_document_proc:get_children/6','Gives a page of children from a document contained'],['fun','erod','erod_document_proc:get_content/3','Gives the content of a document contained by speci'],['fun','erod','erod_document_proc:get_content/4','Gives the content of a document contained by speci'],['fun','erod','erod_proxy:debug/3','Same as lager:debug/2 with the proxy log identifie'],['fun','erod','erod_proxy:error/3','Same as lager:error/2 with the proxy log identifie'],['fun','erod','erod_proxy:info/3','Same as lager:info/2 with the proxy log identifier'],['fun','erod','erod_proxy:new/2','Creates a new proxy with specified callback module'],['fun','erod','erod_proxy:warning/3','Same as lager:warning/2 with the proxy log identif'],['fun','erod','erod_registry:find_document/1','Gives a documents PID if already started.'],['fun','erod','erod_registry:get_children/3','Same as get_children/5 with undefined watcher  an'],['fun','erod','erod_registry:get_children/4','Same as get_children/5 with undefined watcher.'],['fun','erod','erod_registry:get_children/5','Gives a documents page of children for a given vi'],['fun','erod','erod_registry:get_content/1','Same as get_content/3 with undefined watcher  and'],['fun','erod','erod_registry:get_content/2','Same as get_content/3 with undefined watcher.'],['fun','erod','erod_registry:get_content/3','Gives a documents full content or its changes sin'],['fun','erod','erod_registry:get_document/1','Gives a documents PID.'],['app','erodlib','erodlib','[application]'],['mod','erodlib','erodlib','TODO: Document module erodlib.'],['mod','erodlib','erodlib_indices','TODO: Document module erodlib_indices.'],['mod','erodlib','erodlib_jsx','TODO: Document module erodlib_jsx.'],['mod','erodlib','erodlib_maps','TODO: Document module erodlib_maps.'],['mod','erodlib','erodlib_sets','TODO: Document module erodlib_sets.'],['mod','erodlib','erodlib_term','TODO: Document module erodlib_term.'],['fun','erodlib','erodlib:atom2bin/1','Converts an atom to a binary.'],['fun','erodlib','erodlib:bin2atom/1','Converts a binary to an atom.'],['fun','erodlib','erodlib:maybe_atom/2','Converts a binary to an atom if it exists or a def'],['fun','erodlib','erodlib:peer2bin/1','Converts a network peer tuple to a binary if possi'],['fun','erodlib','erodlib_indices:delete/4','Removes the key from the indice for given map and '],['fun','erodlib','erodlib_indices:delete/5','Removes the key from the indice for given map and '],['fun','erodlib','erodlib_indices:for_map/2','Creates an indice for a map using a custom compari'],['fun','erodlib','erodlib_indices:from_orddict/1','Creates a new indice from an ordered list of items'],['fun','erodlib','erodlib_indices:from_ordset/1','Creates a new indice from an ordered list of keys.'],['fun','erodlib','erodlib_indices:insert/4','Inserts a key in the indice using the comparison f'],['fun','erodlib','erodlib_indices:insert/5','Inserts a key in the indice using the comparison f'],['fun','erodlib','erodlib_indices:items/2','Gives key-value pairs of specified map in the indi'],['fun','erodlib','erodlib_indices:keys/1','Gives the keys in indice order.'],['fun','erodlib','erodlib_indices:largest_key/1','Gives the largest indice key.'],['fun','erodlib','erodlib_indices:largest_value/2','Gives the map value with the largest indice key.'],['fun','erodlib','erodlib_indices:map/3','Gives the list resulting of mapping a function on '],['fun','erodlib','erodlib_indices:new/0','Creates a new empty indice.'],['fun','erodlib','erodlib_indices:position/4','Gives the position of a key in the indice for a gi'],['fun','erodlib','erodlib_indices:position/5','Gives the position of a key in the indice for a gi'],['fun','erodlib','erodlib_indices:size/1','Gives the numer of keys of the indice.'],['fun','erodlib','erodlib_indices:smallest_key/1','Gives the smallest indice key.'],['fun','erodlib','erodlib_indices:smallest_value/2','Gives the map value with the smallest indice key.'],['fun','erodlib','erodlib_indices:take_largest_key/1','Removes and returns the largest indice key.'],['fun','erodlib','erodlib_indices:take_largest_keys/2','Removes and returns the N largest indice keys.'],['fun','erodlib','erodlib_indices:take_largest_value/2','Removes the largest indice key and returns the map'],['fun','erodlib','erodlib_indices:take_smallest_key/1','Removes and returns the smallest indice key.'],['fun','erodlib','erodlib_indices:take_smallest_keys/2','Removes and returns the N smallest indice keys.'],['fun','erodlib','erodlib_indices:take_smallest_value/2','Removes the smallest indice key and returns the ma'],['fun','erodlib','erodlib_indices:values/2','Gives the specified maps values in indice order.'],['fun','erodlib','erodlib_jsx:decode/2','Decodes data in specified format to a JSX term str'],['fun','erodlib','erodlib_jsx:encode/2','Encode a JSX term structure into specified format.'],['fun','erodlib','erodlib_jsx:encode_any/2','Gives a JSX formated term for the give value.'],['fun','erodlib','erodlib_jsx:encode_bool/2','Gives a JSX formated boolean value.'],['fun','erodlib','erodlib_jsx:encode_int/2','Gives a JSX formated integer value.'],['fun','erodlib','erodlib_jsx:encode_key/2','Gives a JSX formated term for an erod key.'],['fun','erodlib','erodlib_jsx:encode_patch/2','Gives a JSX formated term for an erod patch.'],['fun','erodlib','erodlib_jsx:encode_str/2','Gives a JSX formated string value.'],['fun','erodlib','erodlib_jsx:encode_str/3','Gives a JSX formated string value, if the value is'],['fun','erodlib','erodlib_jsx:encode_ver/2','Gives a JSX formated term for an erod version.'],['fun','erodlib','erodlib_maps:delete/2','Removes the node with specified key from the map.'],['fun','erodlib','erodlib_maps:from_items/1','Creates a new map from an unordered list of items.'],['fun','erodlib','erodlib_maps:from_orddict/1','Creates a new ap from an ordered list of items.'],['fun','erodlib','erodlib_maps:insert/3','Inserts a node with specified key and value in the'],['fun','erodlib','erodlib_maps:keys/1','Gives the ordered list of keys of a map.'],['fun','erodlib','erodlib_maps:lookup/2','Gives the map value for given key or none.'],['fun','erodlib','erodlib_maps:lookup_from/2','Lookup all the values starting from the specified '],['fun','erodlib','erodlib_maps:new/0','Creates a new empty map.'],['fun','erodlib','erodlib_maps:size/1','Gives the number of nodes in the map.'],['fun','erodlib','erodlib_maps:trim_smallest/2','Removes the smallest nodes so the map size become '],['fun','erodlib','erodlib_maps:update/3','Update the map value with specified key.'],['fun','erodlib','erodlib_maps:value/2','Gives the map value for given key assuming it exis'],['fun','erodlib','erodlib_sets:add/2','Adds a value to the set.'],['fun','erodlib','erodlib_sets:new/0','Creates a new empty set.'],['fun','erodlib','erodlib_sets:values/1','Gives the ordered list of values from the set.'],['fun','erodlib','erodlib_term:decode/2','Decodes data in specified format to erlang an term'],['fun','erodlib','erodlib_term:encode/2','Encodes an erlang term into specified format.'],['fun','erodlib','erodlib_term:ensure_undefined/2','Ensures the specified key is not present in the te'],['fun','erodlib','erodlib_term:get_allowed_atom/3','Gets an atom value from an erlang term if it is on'],['fun','erodlib','erodlib_term:get_any/2','Gets a value from an erlang term.'],['fun','erodlib','erodlib_term:get_any/3','Gets a value from an erlang term if the key exists'],['fun','erodlib','erodlib_term:get_atom/2','Gets an atom value from an erlang term.'],['fun','erodlib','erodlib_term:get_bin/2','Gets a binary value from an erlang term.'],['fun','erodlib','erodlib_term:get_bin/3','Gets a binary value from an erlang term if the key'],['fun','erodlib','erodlib_term:get_bool/3','Gets a boolean value from an erlang term if the ke'],['fun','erodlib','erodlib_term:get_int/2','Gets an integer value from an erlang term.'],['fun','erodlib','erodlib_term:get_key/2','Gets an erod key from an erlang term.'],['fun','erodlib','erodlib_term:get_patch/2','Gets an erod patch from an erlang term.'],['fun','erodlib','erodlib_term:get_ver/3','Gets an erod version from an erlang term if the ke'],['app','erodws','erodws','[application]'],['mod','erodws','erodws','TODO: Document module erodws.'],['mod','erodws','erodws_protocol','TODO: Document module erodws_protocol.'],['fun','erodws','erodws:start/1','Starts the websocket acceptors on specified port.'],['fun','erodws','erodws:start/3','Starts the websocket acceptors on specified port '],['fun','erodws','erodws_protocol:attach_context/2','Attaches a context to the protocol.'],['fun','erodws','erodws_protocol:encode_error/4','Encodes an error in specified format.'],['fun','erodws','erodws_protocol:encode_error_reply/4','Encodes an error reply to a given message in speci'],['fun','erodws','erodws_protocol:encode_error_reply/5','Encodes an error reply with given identifier in sp'],['fun','erodws','erodws_protocol:encode_result_reply/5','Encodes a result reply to a given message in speci'],['fun','erodws','erodws_protocol:encode_result_reply/6','Encodes a result reply with given identifier in sp'],['fun','erodws','erodws_protocol:handle_packet/3','Handles a protocol packet.'],['fun','erodws','erodws_protocol:new/3','Creates a new protocol with specified callack modu'],['fun','erodws','erodws_protocol:release_context/1','Releases the protocol current context.'],['fun','erodws','erodws_protocol:shutdown/2','Shutdowns the protocol.'],['fun','erodws','erodws_protocol:terminated/2','Informs the protocol of termination.']];