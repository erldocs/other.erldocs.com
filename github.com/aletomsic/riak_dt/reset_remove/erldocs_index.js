var index = [['app','riak_dt','riak_dt','[application]'],['mod','riak_dt','orset_bm',[]],['mod','riak_dt','riak_dt',[]],['mod','riak_dt','riak_dt_lwwreg','  An LWW Register CRDT.'],['mod','riak_dt','riak_dt_multi','a multi CRDT holder.'],['mod','riak_dt','riak_dt_orset',[]],['fun','riak_dt','riak_dt:behaviour_info/1',[]],['fun','riak_dt','riak_dt_lwwreg:equal/1','Are two lwwreg()s structurally equal? This is not '],['fun','riak_dt','riak_dt_lwwreg:from_binary/1','Decode binary lwwreg()'],['fun','riak_dt','riak_dt_lwwreg:merge/1','Merge two lwwreg()s to a single lwwreg().'],['fun','riak_dt','riak_dt_lwwreg:new/0','Create a new, empty lwwreg()'],['fun','riak_dt','riak_dt_lwwreg:reset/1',[]],['fun','riak_dt','riak_dt_lwwreg:to_binary/1','Encode an effecient binary representation of an lw'],['fun','riak_dt','riak_dt_lwwreg:update/1','Assign a Value to the lwwreg()  associating the u'],['fun','riak_dt','riak_dt_lwwreg:value/1','query for this lwwreg().'],['fun','riak_dt','riak_dt_lwwreg:value/1','The single total value of a gcounter().'],['fun','riak_dt','riak_dt_multi:equal/1',[]],['fun','riak_dt','riak_dt_multi:from_binary/1',[]],['fun','riak_dt','riak_dt_multi:merge/1',[]],['fun','riak_dt','riak_dt_multi:new/0',[]],['fun','riak_dt','riak_dt_multi:reset/1',[]],['fun','riak_dt','riak_dt_multi:to_binary/1',[]],['fun','riak_dt','riak_dt_multi:update/3',[]],['fun','riak_dt','riak_dt_multi:value/1','execute the given multi_q() against the given  mu'],['fun','riak_dt','riak_dt_multi:value/1','get the current set of values for this multi.'],['fun','riak_dt','riak_dt_orset:equal/2',[]],['fun','riak_dt','riak_dt_orset:from_binary/1',[]],['fun','riak_dt','riak_dt_orset:merge/2',[]],['fun','riak_dt','riak_dt_orset:new/0',[]],['fun','riak_dt','riak_dt_orset:to_binary/1',[]],['fun','riak_dt','riak_dt_orset:update/3',[]],['fun','riak_dt','riak_dt_orset:value/1',[]],['fun','riak_dt','riak_dt_orset:value/2',[]]];