var index = [['app','erl-redis','erl-redis','[application]'],['mod','erl-redis','redis','the interface for redis, this module is parameteri'],['mod','erl-redis','redis_client','the redis client.'],['mod','erl-redis','redis_conn_sup','redis client connection supervisor.'],['mod','erl-redis','redis_proto','the redis protocol module.'],['fun','erl-redis','redis:append/1','append the specified string to the string stored a'],['fun','erl-redis','redis:bg_rewrite_aof/0','rewrite the append only log in background.'],['fun','erl-redis','redis:bg_save/0','save the DB in background.'],['fun','erl-redis','redis:command/1','other unknown commands.'],['fun','erl-redis','redis:config_get/1','retrieve the config info in running redis server.'],['fun','erl-redis','redis:config_set/1','alter the config info in running redis server.'],['fun','erl-redis','redis:db/0','return the currently selected db.'],['fun','erl-redis','redis:dbsize/0','return the nubmer of keys in all the currently sel'],['fun','erl-redis','redis:decr/1','decrease the integer value of key by integer  O(1'],['fun','erl-redis','redis:decr/1','decrease the integer value of key  O(1).'],['fun','erl-redis','redis:delete/1','remove the specified key, return ture if deleted,'],['fun','erl-redis','redis:exists/1','test if the specified key exists  O(1).'],['fun','erl-redis','redis:expire/1','set a timeout on the specified key, after the Time'],['fun','erl-redis','redis:expire_at/1','set a unix timestamp on the specified key, the Key'],['fun','erl-redis','redis:flush_all/0',[]],['fun','erl-redis','redis:flush_db/0','delete all the keys of the currently selected DB.'],['fun','erl-redis','redis:get/1','get the value of specified key  O(1).'],['fun','erl-redis','redis:getset/1','atomatic set the value and return the old value  '],['fun','erl-redis','redis:hash_all/1','return a tuple list include both the fields and va'],['fun','erl-redis','redis:hash_del/1','remove the sepcified field from the hash  O(1).'],['fun','erl-redis','redis:hash_exists/1','test if the field exists in the hash  O(1).'],['fun','erl-redis','redis:hash_get/1','retrieve the value of the specified hash field  O'],['fun','erl-redis','redis:hash_incr/1','If the field already exists increase its score,  '],['fun','erl-redis','redis:hash_keys/1','return all the fields in hash  O(n).'],['fun','erl-redis','redis:hash_len/1','return the number of items in hash  O(1).'],['fun','erl-redis','redis:hash_multi_get/1','get the values of all specified fields  O(1).'],['fun','erl-redis','redis:hash_multi_set/1','set the hash fileds with the respective values,  '],['fun','erl-redis','redis:hash_set/1','set specified hash filed with Val  O(1).'],['fun','erl-redis','redis:hash_set_not_exists/1','set specified hash filed with Val,  if the field '],['fun','erl-redis','redis:hash_vals/1','return all the values in hash.'],['fun','erl-redis','redis:i/0','show stats info in the stdout.'],['fun','erl-redis','redis:incr/1','increase the integer value of key by integer  O(1'],['fun','erl-redis','redis:incr/1','increase the integer value of key  O(1).'],['fun','erl-redis','redis:info/0','return the info about the server.'],['fun','erl-redis','redis:keys/1','return the keys list matching a given pattern  O('],['fun','erl-redis','redis:lastsave_time/0','return the UNIX time that the last DB save excuted'],['fun','erl-redis','redis:list_block_pop_head/1','blocking list_pop_head  O(1).'],['fun','erl-redis','redis:list_block_pop_tail/1','blocking list_pop_tail  O(1).'],['fun','erl-redis','redis:list_index/1','return the element at Idx in the list(zero-based)'],['fun','erl-redis','redis:list_len/1','return the length of the list  O(1).'],['fun','erl-redis','redis:list_pop_head/1','atomically return and remove the first element of '],['fun','erl-redis','redis:list_pop_tail/1','atomically return and remove the last element of t'],['fun','erl-redis','redis:list_push_head/1','add the string Val to the head of the list stored '],['fun','erl-redis','redis:list_push_tail/1','add the string Val to the tail of the list stored '],['fun','erl-redis','redis:list_range/1','return the specified elements of the list, Start, '],['fun','erl-redis','redis:list_rm/1','remove all the elements in the list whose value ar'],['fun','erl-redis','redis:list_rm_from_head/1','remove the first N occurrences of the value from h'],['fun','erl-redis','redis:list_rm_from_tail/1','remove the first N occurrences of the value from t'],['fun','erl-redis','redis:list_set/1','set the list element at Idx with the new value Val'],['fun','erl-redis','redis:list_tail_to_head/1','atomically remove the last element of the SrcKey l'],['fun','erl-redis','redis:list_trim/1','trim an existing list, it will contains the elemen'],['fun','erl-redis','redis:move/1','move the specified key  from the currently selecte'],['fun','erl-redis','redis:multi_delete/1','remove the specified keys, return the number of  '],['fun','erl-redis','redis:multi_get/1','get the values of all the specified keys  O(1).'],['fun','erl-redis','redis:multi_set/1','set the respective keys to respective values  O(1'],['fun','erl-redis','redis:multi_set_not_exists/1','set the respective keys to respective values, eith'],['fun','erl-redis','redis:not_exists_set/1','set value, if the key already exists no operation '],['fun','erl-redis','redis:ping/0','ping the redis server.'],['fun','erl-redis','redis:publish/1','publish message to channel.'],['fun','erl-redis','redis:random_key/0','return a randomly selected key from the currently '],['fun','erl-redis','redis:rename/1','atmoically renames key OldKey to NewKey  O(1).'],['fun','erl-redis','redis:rename_not_exists/1',' rename oldkey into newkey  but fails if the desti'],['fun','erl-redis','redis:save/0','synchronously save the DB on disk.'],['fun','erl-redis','redis:select/1','select the DB with have the specified zero-based n'],['fun','erl-redis','redis:set/1','set the string as value of the key with expired ti'],['fun','erl-redis','redis:set/1','set the string as value of the key  O(1).'],['fun','erl-redis','redis:set_add/1','add Mem to the set stored at Key  O(1).'],['fun','erl-redis','redis:set_diff/1','return the difference between the First set and al'],['fun','erl-redis','redis:set_diff_store/1','compute the difference between the sets and save t'],['fun','erl-redis','redis:set_inter/1','return the intersection between the sets  O(N*M).'],['fun','erl-redis','redis:set_inter_store/1','compute the intersection between the sets and save'],['fun','erl-redis','redis:set_is_member/1','test if the specified value is the member of the s'],['fun','erl-redis','redis:set_len/1','return the number of elements in set  O(1).'],['fun','erl-redis','redis:set_members/1','return all the members in the set  O(1).'],['fun','erl-redis','redis:set_move/1','atomically move the member form one set to another'],['fun','erl-redis','redis:set_pop/1','remove a random member from the set, returning it '],['fun','erl-redis','redis:set_random_member/1','return a random member from the set  O(1).'],['fun','erl-redis','redis:set_rm/1','remove the specified member from the set.'],['fun','erl-redis','redis:set_union/1',' return the union of all the sets  O(n).'],['fun','erl-redis','redis:set_union_store/1','compute the union between the sets and save the  '],['fun','erl-redis','redis:shutdown/0','synchronously save the DB on disk, then shutdown t'],['fun','erl-redis','redis:slave_of/1','change the slaves master to Host:Port (the old da'],['fun','erl-redis','redis:slave_off/0','make the redis from slave into a master instance.'],['fun','erl-redis','redis:sort/1','sort a list or set accordingly to the parameters.'],['fun','erl-redis','redis:subscribe/1','subscribe to channels.'],['fun','erl-redis','redis:substr/1','return a substring of a larger string, both Start '],['fun','erl-redis','redis:trans_abort/0','transaction discard.'],['fun','erl-redis','redis:trans_begin/0','transaction begin.'],['fun','erl-redis','redis:trans_commit/0','transaction commit.'],['fun','erl-redis','redis:ttl/1','return the remaining time to live in seconds of a '],['fun','erl-redis','redis:type/1','return the type of the value stored at key  O(1).'],['fun','erl-redis','redis:unsubscribe/1','unsubscribe some channels.'],['fun','erl-redis','redis:unsubscribe/1','unsubscribe to all channels.'],['fun','erl-redis','redis:version/0','return the redis version info.'],['fun','erl-redis','redis:zset_add/1','add Mem to the sorted set stored at Key  O(log(N)'],['fun','erl-redis','redis:zset_incr/1','If the member already exists increase its score, '],['fun','erl-redis','redis:zset_index/1','return the index(rank) of member in the sorted set'],['fun','erl-redis','redis:zset_inter_store/1','calculate the intersection between the sorted sets'],['fun','erl-redis','redis:zset_inter_store/4',[]],['fun','erl-redis','redis:zset_len/1','return the number of elements in sorted set.'],['fun','erl-redis','redis:zset_range_index/1','return a range of elements from the sorted set  O'],['fun','erl-redis','redis:zset_range_index_reverse/1','return a range of elements form the sorted set, li'],['fun','erl-redis','redis:zset_range_score/1',[]],['fun','erl-redis','redis:zset_range_score/1','return all elements with score in the specified sc'],['fun','erl-redis','redis:zset_reverse_index/1','return the index(rank) of member in the sorted set'],['fun','erl-redis','redis:zset_rm/1','remove the specified member from the sorted set  '],['fun','erl-redis','redis:zset_rm_by_index/1','remove the elements in the sorted set with index b'],['fun','erl-redis','redis:zset_rm_by_score/1','remove the elements in the sorted set with score b'],['fun','erl-redis','redis:zset_score/1','return the score of the element.'],['fun','erl-redis','redis:zset_union_store/1','return the intersection between the sorted sets, a'],['fun','erl-redis','redis:zset_union_store/4',[]],['fun','erl-redis','redis_client:code_change/3',[]],['fun','erl-redis','redis_client:existing_name/2',[]],['fun','erl-redis','redis_client:existing_name/3',[]],['fun','erl-redis','redis_client:get_selected_db/1','get the selected db.'],['fun','erl-redis','redis_client:get_server/1','get the server info.'],['fun','erl-redis','redis_client:get_sock/1','return the socket.'],['fun','erl-redis','redis_client:handle_call/3',[]],['fun','erl-redis','redis_client:handle_cast/2',[]],['fun','erl-redis','redis_client:handle_info/2',[]],['fun','erl-redis','redis_client:handler/1',[]],['fun','erl-redis','redis_client:init/1',[]],['fun','erl-redis','redis_client:msg_send_cb/1','generate one callback functions for pubsub, which '],['fun','erl-redis','redis_client:name/2','generate process registered name.'],['fun','erl-redis','redis_client:name/3','generate process registered name.'],['fun','erl-redis','redis_client:quit/1',[]],['fun','erl-redis','redis_client:send/1','send the data.'],['fun','erl-redis','redis_client:set_selected_db/1','set the select db.'],['fun','erl-redis','redis_client:shutdown/1',[]],['fun','erl-redis','redis_client:start/1',[]],['fun','erl-redis','redis_client:start/1',[]],['fun','erl-redis','redis_client:start_link/1',[]],['fun','erl-redis','redis_client:start_link/1',[]],['fun','erl-redis','redis_client:stop/1',[]],['fun','erl-redis','redis_client:subscribe/1',[]],['fun','erl-redis','redis_client:terminate/2',[]],['fun','erl-redis','redis_client:unsubscribe/1',[]],['fun','erl-redis','redis_client:unsubscribe/1',[]],['fun','erl-redis','redis_conn_sup:connect/3','start an new redis_client process connect the spec'],['fun','erl-redis','redis_conn_sup:connect/4','start an new redis_client process connect the spec'],['fun','erl-redis','redis_conn_sup:init/1','the connection supervisor callback.'],['fun','erl-redis','redis_conn_sup:start_link/0','the application start callback.'],['fun','erl-redis','redis_proto:mbulk/1',[]],['fun','erl-redis','redis_proto:mbulk/1',[]],['fun','erl-redis','redis_proto:mbulk/1',[]],['fun','erl-redis','redis_proto:mbulk/1','generate the mbulk command.'],['fun','erl-redis','redis_proto:mbulk_list/1',[]],['fun','erl-redis','redis_proto:parse_reply/1','parse the reply.'],['fun','erl-redis','redis_proto:tokens/1','return a list of tokens in binary, separated by th']];