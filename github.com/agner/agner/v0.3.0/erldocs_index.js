var index = [['app','agner','agner','[application]'],['mod','agner','agner_app',[]],['mod','agner','agner_download',[]],['mod','agner','agner_index',[]],['mod','agner','agner_main',[]],['mod','agner','agner_spec',[]],['mod','agner','agner_sup',[]],['mod','agner','agner_utils',[]],['mod','agner','mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','agner','mochinum','Useful numeric algorithms for floats that cover so'],['fun','agner','agner_app:start/2',[]],['fun','agner','agner_app:stop/1',[]],['fun','agner','agner_download:fetch/2',[]],['fun','agner','agner_download:git/1',[]],['fun','agner','agner_download:git/2',[]],['fun','agner','agner_download:process_port/2',[]],['fun','agner','agner_index:behaviour_info/1',[]],['fun','agner','agner_main:main/1',[]],['fun','agner','agner_spec:list_to_version/1',[]],['fun','agner','agner_spec:parse/1',[]],['fun','agner','agner_spec:property_to_list/1',[]],['fun','agner','agner_spec:version_to_list/1',[]],['fun','agner','agner_sup:init/1',[]],['fun','agner','agner_sup:start_link/0',[]],['fun','agner','agner_utils:launch_browser/1',[]],['fun','agner','mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','agner','mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','agner','mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','agner','mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','agner','mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','agner','mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','agner','mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','agner','mochinum:int_pow/1',' Moderately efficient way to exponentiate integers']];