var index = [['app','mixers','mixers','[application]'],['mod','mixers','gin','Function-based generators.'],['mod','mixers','mayo','Recursion help for anonymous functions and alterna'],['mod','mixers','mixers_app',[]],['mod','mixers','mixers_sup',[]],['fun','mixers','gin:filter/1','Filter a gin, producing a new gin that only produc'],['fun','mixers','gin:fold/1','Fold over a gin, accumulating a result.'],['fun','mixers','gin:foreach/1','Evaluate Fun for each item produced by Gin.'],['fun','mixers','gin:from_list/1','Create a gin that produces the items from a list, '],['fun','mixers','gin:make/1','Turn a zero-arity function into an infinite gin.'],['fun','mixers','gin:make_acc/1','Turn an arity-1 function into an infinite gin.'],['fun','mixers','gin:make_n/1','Turn an arity-1 function into an infinite gin.'],['fun','mixers','gin:map/1','Map over a gin, producing a new gin with each item'],['fun','mixers','gin:next/1','Get the next value to be produced by a gin, and a '],['fun','mixers','gin:seq/1','Create a gin that produces a sequence of numbers, '],['fun','mixers','gin:seq/1','Create a gin that produces the numbers from Start '],['fun','mixers','gin:sum/1','Sum the items produced by a gin.'],['fun','mixers','gin:to_list/1','Create a list containing the items produced by a g'],['fun','mixers','gin:zip/1','Equivalent to zipwithl(fun erlang:list_to_tuple/1,'],['fun','mixers','gin:zip/1','Equivalent to zip([Gin1, Gin2]).'],['fun','mixers','gin:zipwitha/1','Zip N gins together into a new gin.'],['fun','mixers','gin:zipwithl/1','Zip N gins together into a new gin.'],['fun','mixers','mayo:do/1','Evaluate Fun(Acc) until Pred(Acc) returns false.'],['fun','mixers','mayo:loop/1','Evaluate Fun(Acc) as long as it returns {continue,'],['fun','mixers','mayo:while/1','Evaluate Fun(Acc) until Pred(Acc) returns false.'],['fun','mixers','mixers_app:start/2',[]],['fun','mixers','mixers_app:stop/1',[]],['fun','mixers','mixers_sup:init/1',[]],['fun','mixers','mixers_sup:start_link/0',[]]];