var index = [['app','luwak','luwak','[application]'],['mod','luwak','luwak_app',[]],['mod','luwak','luwak_block',[]],['mod','luwak','luwak_checksum',[]],['mod','luwak','luwak_file',[]],['mod','luwak','luwak_get_stream',[]],['mod','luwak','luwak_io',[]],['mod','luwak','luwak_put_stream',[]],['mod','luwak','luwak_tree',[]],['mod','luwak','luwak_tree_utils',[]],['fun','luwak','luwak_app:start/2',[]],['fun','luwak','luwak_app:stop/1',[]],['fun','luwak','luwak_block:create/2',[]],['fun','luwak','luwak_block:data/1',[]],['fun','luwak','luwak_block:name/1',[]],['fun','luwak','luwak_checksum:sha1/2',[]],['fun','luwak','luwak_file:create/1','Create a luwak file handle with the given name and'],['fun','luwak','luwak_file:create/1','Create a luwak file handle with the given name and'],['fun','luwak','luwak_file:delete/1','deletes the named file from luwak.'],['fun','luwak','luwak_file:exists/1','Checks for the existence of the named file.'],['fun','luwak','luwak_file:get/1','returns a filehandle for the named file.'],['fun','luwak','luwak_file:get_attributes/1','Gets the attribute dictionary from the file handle'],['fun','luwak','luwak_file:get_property/1','retrieves the named property from the filehandle.'],['fun','luwak','luwak_file:length/1','returns the length in bytes of the file.'],['fun','luwak','luwak_file:name/1','returns the name of the given file handle.'],['fun','luwak','luwak_file:set_attributes/1','Sets the new attributes, saves them, and returns a'],['fun','luwak','luwak_get_stream:close/1','Closes a get stream.'],['fun','luwak','luwak_get_stream:recv/1','Receive will block the calling process until eithe'],['fun','luwak','luwak_get_stream:start/1','Creates and returns a handle to a streaming get.'],['fun','luwak','luwak_io:get_range/1','Returns an iolist() for the starting offset and le'],['fun','luwak','luwak_io:put_range/1','Put range performs a synchronous write operation o'],['fun','luwak','luwak_io:truncate/1','Truncates a file to the specified offset.'],['fun','luwak','luwak_put_stream:close/1','Signals the stream to close.'],['fun','luwak','luwak_put_stream:flush/1','Causes the stream to immediately flush its buffers'],['fun','luwak','luwak_put_stream:ping/1','Pings the stream, resetting the TTL timer.'],['fun','luwak','luwak_put_stream:send/2','Sends the given binary to the stream for writing.'],['fun','luwak','luwak_put_stream:start/4',[]],['fun','luwak','luwak_put_stream:start_link/1','Starts a stream for writing at the specified offse'],['fun','luwak','luwak_put_stream:status/1','Gets the current filehandle on which the stream is'],['fun','luwak','luwak_tree:block_at/1',[]],['fun','luwak','luwak_tree:get/2',[]],['fun','luwak','luwak_tree:get_range/6',[]],['fun','luwak','luwak_tree:get_range/7',[]],['fun','luwak','luwak_tree:truncate/1',[]],['fun','luwak','luwak_tree:truncate/7',[]],['fun','luwak','luwak_tree:update/4',[]],['fun','luwak','luwak_tree:visualize_tree/2',[]],['fun','luwak','luwak_tree_utils:blocklist_length/1',[]],['fun','luwak','luwak_tree_utils:five_way_split/4',[]],['fun','luwak','luwak_tree_utils:foldrflatmap/3',[]],['fun','luwak','luwak_tree_utils:longest_divisable_subtree/2',[]],['fun','luwak','luwak_tree_utils:longest_divisable_subtree/4',[]],['fun','luwak','luwak_tree_utils:shortest_subtree_split/4',[]],['fun','luwak','luwak_tree_utils:split_at_length/2',[]],['fun','luwak','luwak_tree_utils:split_at_length_left_bias/2',[]]];