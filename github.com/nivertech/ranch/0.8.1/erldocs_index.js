var index = [['app','ranch','ranch','[application]'],['mod','ranch','ranch','Ranch API to start and stop listeners.'],['mod','ranch','ranch_ssl','SSL transport API.'],['mod','ranch','ranch_tcp','TCP transport API.'],['fun','ranch','ranch:accept_ack/1','Acknowledge the accepted connection.'],['fun','ranch','ranch:child_spec/1','Return a child spec suitable for embedding.'],['fun','ranch','ranch:filter_options/1','Filter a list of options and remove all unwanted v'],['fun','ranch','ranch:get_max_connections/1','Return the max number of connections allowed concu'],['fun','ranch','ranch:get_port/1','Return the listeners port.'],['fun','ranch','ranch:get_protocol_options/1','Return the current protocol options for the given '],['fun','ranch','ranch:remove_connection/1','Remove the calling process connection from the po'],['fun','ranch','ranch:require/1','Start the given applications if they were not alre'],['fun','ranch','ranch:set_max_connections/1','Set the max number of connections allowed concurre'],['fun','ranch','ranch:set_option_default/2','Add an option to a list, but only if it wasnt pre'],['fun','ranch','ranch:set_protocol_options/1','Upgrade the protocol options for the given listene'],['fun','ranch','ranch:start_listener/1','Start a listener for the given transport and proto'],['fun','ranch','ranch:stop_listener/1','Stop a listener identified by Ref.'],['fun','ranch','ranch_ssl:accept/1','Accept connections with the given listening socket'],['fun','ranch','ranch_ssl:close/1','Close the given socket.'],['fun','ranch','ranch_ssl:controlling_process/1','Give control of the socket to a new process.'],['fun','ranch','ranch_ssl:listen/2','Listen for connections on the given port number.'],['fun','ranch','ranch_ssl:messages/0','Atoms used to identify messages in {active, once |'],['fun','ranch','ranch_ssl:name/0','Name of this transport, ssl.'],['fun','ranch','ranch_ssl:peername/1','Return the remote address and port of the connecti'],['fun','ranch','ranch_ssl:recv/1','Receive data from a socket in passive mode.'],['fun','ranch','ranch_ssl:send/1','Send data on a socket.'],['fun','ranch','ranch_ssl:sendfile/1','Send a file on a socket.'],['fun','ranch','ranch_ssl:setopts/1','Set options on the given socket.'],['fun','ranch','ranch_ssl:sockname/1','Return the local address and port of the connectio'],['fun','ranch','ranch_tcp:accept/1','Accept connections with the given listening socket'],['fun','ranch','ranch_tcp:close/1','Close the given socket.'],['fun','ranch','ranch_tcp:controlling_process/1','Give control of the socket to a new process.'],['fun','ranch','ranch_tcp:listen/2','Listen for connections on the given port number.'],['fun','ranch','ranch_tcp:messages/0','Atoms used to identify messages in {active, once |'],['fun','ranch','ranch_tcp:name/0','Name of this transport, tcp.'],['fun','ranch','ranch_tcp:peername/1','Return the remote address and port of the connecti'],['fun','ranch','ranch_tcp:recv/1','Receive data from a socket in passive mode.'],['fun','ranch','ranch_tcp:send/1','Send data on a socket.'],['fun','ranch','ranch_tcp:sendfile/1','Send a file on a socket.'],['fun','ranch','ranch_tcp:setopts/1','Set options on the given socket.'],['fun','ranch','ranch_tcp:sockname/1','Return the local address and port of the connectio']];