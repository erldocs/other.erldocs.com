var index = [['app','sbroker','sbroker','[application]'],['mod','sbroker','sbroker','  This module provides a process match making ser'],['mod','sbroker','sbroker_codel_queue','Implements a head or tail drop queue with queue ma'],['mod','sbroker','sbroker_drop_queue','Implements a head or tail drop queue.'],['mod','sbroker','sbroker_legacy','This module provides a fallback monotonic time imp'],['mod','sbroker','sbroker_time','This module provides a behaviour for reading the t'],['mod','sbroker','sbroker_timeout_queue','Implements a head or tail drop queue with a timeou'],['mod','sbroker','sscheduler','This modules provides utility functions for basic '],['fun','sbroker','sbroker:ask/1','Equivalent to ask(Broker, self()).'],['fun','sbroker','sbroker:ask/2','Send a match request, with value ReqValue, to try '],['fun','sbroker','sbroker:ask_r/1','Equivalent to ask_r(Broker, self()).'],['fun','sbroker','sbroker:ask_r/2','Tries to match with a process calling ask/2 on the'],['fun','sbroker','sbroker:async_ask/1','Equivalent to async_ask(Broker, self()).'],['fun','sbroker','sbroker:async_ask/2','Monitors the broker and sends an asynchronous requ'],['fun','sbroker','sbroker:async_ask/3','Sends an asynchronous request to match with a proc'],['fun','sbroker','sbroker:async_ask_r/1','Equivalent to async_ask_r(Broker, self()).'],['fun','sbroker','sbroker:async_ask_r/2','Monitors the broker and sends an asynchronous requ'],['fun','sbroker','sbroker:async_ask_r/3','Sends an asynchronous request to match with a proc'],['fun','sbroker','sbroker:await/2','Await the response to an asynchronous request iden'],['fun','sbroker','sbroker:cancel/3','Cancels an asynchronous request.'],['fun','sbroker','sbroker:change_config/2','Change the configuration of the broker.'],['fun','sbroker','sbroker:len/2','Get the length of the ask queue in the broker, Bro'],['fun','sbroker','sbroker:len_r/2','Get the length of the ask_r queue in the broker, B'],['fun','sbroker','sbroker:nb_ask/1','Equivalent to nb_ask(Broker, self()).'],['fun','sbroker','sbroker:nb_ask/2','Tries to match with a process calling ask_r/2 on t'],['fun','sbroker','sbroker:nb_ask_r/1','Equivalent to nb_ask_r(Broker, self()).'],['fun','sbroker','sbroker:nb_ask_r/2','Tries to match with a process calling ask/2 on the'],['fun','sbroker','sbroker:start_link/3','Starts a broker with callback module Module and ar'],['fun','sbroker','sbroker:start_link/4','Starts a broker with name Name, callback module Mo'],['fun','sbroker','sbroker_codel_queue:config_change/7',[]],['fun','sbroker','sbroker_drop_queue:config_change/5',[]],['fun','sbroker','sbroker_legacy:monotonic_time/0','Get the time, Time, as an integer() in micro_secon'],['fun','sbroker','sbroker_legacy:monotonic_time/1','Get the time, Time, as an integer() in the TimeUni'],['fun','sbroker','sbroker_time:monotonic_time/0','Get the time, Time, as an integer() in the native '],['fun','sbroker','sbroker_time:monotonic_time/1','Get the time, Time, as an integer() in the TimeUni'],['fun','sbroker','sbroker_timeout_queue:config_change/6',[]],['fun','sbroker','sscheduler:send/2','Send a message to one element, selected based on t'],['fun','sbroker','sscheduler:whereis_name/1','Lookup the pid or process name of one element, sel']];