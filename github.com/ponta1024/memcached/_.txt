 :: Extracting meta information
$ infinity  `git ls-remote --heads --tags 'https://github.com/ponta1024/memcached'  2>&1`
>>> [repo] 3 branches, 0 tags
WTF {ok,{{"HTTP/1.1",200,"OK"},
         [{"cache-control","max-age=300"},
          {"connection","keep-alive"},
          {"date","Sun, 11 Oct 2015 22:19:38 GMT"},
          {"via","1.1 varnish"},
          {"accept-ranges","bytes"},
          {"etag","\"c8b75c36c02b5c5de09e7e9e9fe4fb66095f5a1f\""},
          {"vary","Authorization,Accept-Encoding"},
          {"content-length","594"},
          {"content-type","text/plain; charset=utf-8"},
          {"expires","Sun, 11 Oct 2015 22:24:38 GMT"},
          {"content-security-policy","default-src 'none'"},
          {"x-xss-protection","1; mode=block"},
          {"x-frame-options","deny"},
          {"x-content-type-options","nosniff"},
          {"strict-transport-security","max-age=31536000"},
          {"x-served-by","cache-lcy1126-LCY"},
          {"x-cache","MISS"},
          {"x-cache-hits","0"},
          {"access-control-allow-origin","*"},
          {"source-age","0"}],
         "{name,\"memcached\"}.\n{target_path,\"github.com/ponta1024/memcached\"}.\n{url,\"https://github.com/ponta1024/memcached\"}.\n{vsn_format,2}.\n{vsn_pass,101}.\n{time_begin,{{2015,9,22},{0,48,12}}}.\n{method,git}.\n{count_tags,0}.\n{count_branches,3}.\n{revisions,[{rev,branch,\"master\",\"60855600aad4c2070a9ce0efbae928e4d1cdb313\",\n                 false,[],[]},\n            {rev,branch,\"updated\",\"2030dec40bfd2faa52e5b30e332970568f2257a5\",\n                 true,[],[]},\n            {rev,branch,\"zzz\",\"ca87189680953eb143b6afbc76a3d9b186e9988e\",true,\n                 [],[]}]}.\n{time_end,{{2015,9,22},{0,48,12}}}.\n"}}
 :: Writing meta to "/home/pete/wefwefwef/docs/other/c26e5a78607292b6498edc1c1025551f125f6db9/meta.txt"
 :: Skipping branch "master"
 :: Skipping branch "updated"
 :: Skipping branch "zzz"
 :: Finishing up
$ 5000  `rm -r '/home/pete/wefwefwef/docs/other/c26e5a78607292b6498edc1c1025551f125f6db9/memcached'  2>&1`
