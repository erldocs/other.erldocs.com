var index = [['app','ice','ice','[application]'],['mod','ice','ice',[]],['mod','ice','ice_ast',[]],['mod','ice','ice_cache',[]],['mod','ice','ice_closure',[]],['mod','ice','ice_core',[]],['mod','ice','ice_dtree',[]],['mod','ice','ice_file',[]],['mod','ice','ice_par',[]],['mod','ice','ice_parser',[]],['mod','ice','ice_primop',[]],['mod','ice','ice_primop_eval',[]],['mod','ice','ice_string',[]],['mod','ice','ice_t0',[]],['mod','ice','ice_t1',[]],['mod','ice','ice_thread',[]],['mod','ice','ice_visitor',[]],['fun','ice','ice:eval/1',[]],['fun','ice','ice:f/1',[]],['fun','ice','ice:i/1',[]],['fun','ice','ice_ast:transform/1',[]],['fun','ice','ice_cache:add/6','Add an {identifier, context, value} to the cache '],['fun','ice','ice_cache:create/0','Create a named ets table which represents the cach'],['fun','ice','ice_cache:delete/0','Delete the named ets table which represents the ca'],['fun','ice','ice_cache:find/5','Find an identifier with a specific context K restr'],['fun','ice','ice_closure:close_abs/3','Close the specified abstraction.'],['fun','ice','ice_closure:close_shallowest_abs_in_wherevar_expressions/3','Close the shallowest abstractions in a wherevar.'],['fun','ice','ice_core:eval/7',[]],['fun','ice','ice_dtree:delete/0','Delete the ets table ----------------------------'],['fun','ice','ice_dtree:insert/1','Insert a value at {Xi, Key} into the cache.'],['fun','ice','ice_dtree:insert_new/1','Insert a value at {Xi, Key} into the cache unless '],['fun','ice','ice_dtree:lookup/1','Lookup an {Identifier, Context} pair in the cache.'],['fun','ice','ice_dtree:new/0','Create a new ets table for the cache ------------'],['fun','ice','ice_dtree:sort_context/1','Sort the specified context by dimension ---------'],['fun','ice','ice_file:parse/1',[]],['fun','ice','ice_par:eval/7','Evaluate expressions in parallel.'],['fun','ice','ice_par:eval_seq/7','Evaluate a sequence expressions -----------------'],['fun','ice','ice_parser:file/1',[]],['fun','ice','ice_parser:parse/1',[]],['fun','ice','ice_parser:scan/1',[]],['fun','ice','ice_parser:string/1',[]],['fun','ice','ice_primop:abs/1',[]],['fun','ice','ice_primop:acos/1',[]],['fun','ice','ice_primop:acosh/1',[]],['fun','ice','ice_primop:and/2',[]],['fun','ice','ice_primop:asin/1',[]],['fun','ice','ice_primop:asinh/1',[]],['fun','ice','ice_primop:atan/1',[]],['fun','ice','ice_primop:atan2/2',[]],['fun','ice','ice_primop:atanh/1',[]],['fun','ice','ice_primop:ceil/1',[]],['fun','ice','ice_primop:cos/1',[]],['fun','ice','ice_primop:cosh/1',[]],['fun','ice','ice_primop:divide/2',[]],['fun','ice','ice_primop:eq/2',[]],['fun','ice','ice_primop:exp/1',[]],['fun','ice','ice_primop:floor/1',[]],['fun','ice','ice_primop:gt/2',[]],['fun','ice','ice_primop:gte/2',[]],['fun','ice','ice_primop:log/1',[]],['fun','ice','ice_primop:log10/1',[]],['fun','ice','ice_primop:log2/1',[]],['fun','ice','ice_primop:lt/2',[]],['fun','ice','ice_primop:lte/2',[]],['fun','ice','ice_primop:minus/1',[]],['fun','ice','ice_primop:minus/2',[]],['fun','ice','ice_primop:mod/2',[]],['fun','ice','ice_primop:neq/2',[]],['fun','ice','ice_primop:not/1',[]],['fun','ice','ice_primop:or/2',[]],['fun','ice','ice_primop:plus/1',[]],['fun','ice','ice_primop:plus/2',[]],['fun','ice','ice_primop:pow/2',[]],['fun','ice','ice_primop:sin/1',[]],['fun','ice','ice_primop:sinh/1',[]],['fun','ice','ice_primop:sqrt/1',[]],['fun','ice','ice_primop:tan/1',[]],['fun','ice','ice_primop:tanh/1',[]],['fun','ice','ice_primop:times/2',[]],['fun','ice','ice_primop_eval:%/2',[]],['fun','ice','ice_primop_eval:*/2',[]],['fun','ice','ice_primop_eval:+/1',[]],['fun','ice','ice_primop_eval:+/2',[]],['fun','ice','ice_primop_eval:-/1',[]],['fun','ice','ice_primop_eval:-/2',[]],['fun','ice','ice_primop_eval://2',[]],['fun','ice','ice_primop_eval:/=/2',[]],['fun','ice','ice_primop_eval:</2',[]],['fun','ice','ice_primop_eval:=</2',[]],['fun','ice','ice_primop_eval:==/2','Evaluate the primitive operation.'],['fun','ice','ice_primop_eval:>/2',[]],['fun','ice','ice_primop_eval:>=/2',[]],['fun','ice','ice_primop_eval:abs/1',[]],['fun','ice','ice_primop_eval:acos/1',[]],['fun','ice','ice_primop_eval:acosh/1',[]],['fun','ice','ice_primop_eval:and/2',[]],['fun','ice','ice_primop_eval:asin/1',[]],['fun','ice','ice_primop_eval:asinh/1',[]],['fun','ice','ice_primop_eval:atan/1',[]],['fun','ice','ice_primop_eval:atan2/2',[]],['fun','ice','ice_primop_eval:atanh/1',[]],['fun','ice','ice_primop_eval:ceil/1',[]],['fun','ice','ice_primop_eval:cos/1',[]],['fun','ice','ice_primop_eval:cosh/1',[]],['fun','ice','ice_primop_eval:exp/1',[]],['fun','ice','ice_primop_eval:floor/1',[]],['fun','ice','ice_primop_eval:log/1',[]],['fun','ice','ice_primop_eval:log10/1',[]],['fun','ice','ice_primop_eval:log2/1',[]],['fun','ice','ice_primop_eval:not/1',[]],['fun','ice','ice_primop_eval:or/2',[]],['fun','ice','ice_primop_eval:pow/2',[]],['fun','ice','ice_primop_eval:sin/1',[]],['fun','ice','ice_primop_eval:sinh/1',[]],['fun','ice','ice_primop_eval:sqrt/1',[]],['fun','ice','ice_primop_eval:tan/1',[]],['fun','ice','ice_primop_eval:tanh/1',[]],['fun','ice','ice_string:parse/1',[]],['fun','ice','ice_t0:transform/1','Transform functions and where clauses.'],['fun','ice','ice_t1:transform/1',[]],['fun','ice','ice_thread:evaluator/1',[]],['fun','ice','ice_thread:join/8','Join sorted threads to ordered expressions.'],['fun','ice','ice_thread:spawn_n/2','Spawn N ordered processes responsible for evaluati'],['fun','ice','ice_visitor:visit/2',[]],['fun','ice','ice_visitor:visit/3',[]]];