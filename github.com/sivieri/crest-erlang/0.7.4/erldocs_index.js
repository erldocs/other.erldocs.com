var index = [['app','crest-erlang','crest-erlang','[application]'],['mod','crest-erlang','crest','Start module of the CREST server, it initializes a'],['mod','crest-erlang','crest_app','CREST application behaviour: it starts and stop th'],['mod','crest-erlang','crest_deps','Ensure that the relatively-installed dependencies '],['mod','crest-erlang','crest_json','A module for destructuring JSON Erlang objects (co'],['mod','crest-erlang','crest_local','CREST local computations installer.'],['mod','crest-erlang','crest_manager','Manager module: it invokes all the currently spawn'],['mod','crest-erlang','crest_operations','Main Computational REST operations.'],['mod','crest-erlang','crest_peer','Server module of a CREST peer.'],['mod','crest-erlang','crest_spawn','Process operations module; it is designed as a sup'],['mod','crest-erlang','crest_spawn_sup','Supervisor for the spawn computations.'],['mod','crest-erlang','crest_sup','Supervisor for the crest application.'],['mod','crest-erlang','crest_utils','Miscellaneous utilities.'],['mod','crest-erlang','crest_web','Web server for crest.'],['mod','crest-erlang','crest_web_ssl','Web server for crest, with SSL support.'],['mod','crest-erlang','destructure_json',[]],['mod','crest-erlang','gen_server2',[]],['mod','crest-erlang','uuid','  UUID module for Erlang.'],['fun','crest-erlang','crest:start/0','Initialize all modules and start the application.'],['fun','crest-erlang','crest:stop/0','Stop the application.'],['fun','crest-erlang','crest_app:start/1','Start all dependency modules and the CREST applica'],['fun','crest-erlang','crest_app:stop/1','Stop the application.'],['fun','crest-erlang','crest_deps:deps_on_path/0',[]],['fun','crest-erlang','crest_deps:ensure/0',[]],['fun','crest-erlang','crest_deps:ensure/1',[]],['fun','crest-erlang','crest_deps:get_base_dir/0',[]],['fun','crest-erlang','crest_deps:get_base_dir/1',[]],['fun','crest-erlang','crest_deps:local_path/1',[]],['fun','crest-erlang','crest_deps:local_path/2',[]],['fun','crest-erlang','crest_deps:new_siblings/1',[]],['fun','crest-erlang','crest_json:destructure/1','Call this function with a JSON-decoded structure a'],['fun','crest-erlang','crest_local:add_local/1','Add a new local computation.'],['fun','crest-erlang','crest_local:code_change/3',[]],['fun','crest-erlang','crest_local:handle_call/3',[]],['fun','crest-erlang','crest_local:handle_cast/2',[]],['fun','crest-erlang','crest_local:handle_info/2',[]],['fun','crest-erlang','crest_local:init/1',[]],['fun','crest-erlang','crest_local:list_local/0','Get a list of local computations available to inst'],['fun','crest-erlang','crest_local:reload/0','Reload the configuration file; do not replace any '],['fun','crest-erlang','crest_local:remove_local/1','Remove a computation from  the local ones; it repl'],['fun','crest-erlang','crest_local:start/0','Start this peer.'],['fun','crest-erlang','crest_local:start_local/1','Install a computation locally, if present in the l'],['fun','crest-erlang','crest_local:stop/0','Stop this peer.'],['fun','crest-erlang','crest_local:terminate/2',[]],['fun','crest-erlang','crest_manager:get_installed_data/0','Function to get names, operations and parameters f'],['fun','crest-erlang','crest_manager:get_local_data/0','Function to get names, operations and parameters f'],['fun','crest-erlang','crest_operations:install_local/1','Wrapper around crest_local:start_local/1.'],['fun','crest-erlang','crest_operations:invoke_lambda/2','Invoke an already installed computation with param'],['fun','crest-erlang','crest_operations:invoke_local_lambda/1','Invoke an already installed computation in the sam'],['fun','crest-erlang','crest_operations:invoke_local_spawn/1','Spawn a function on this host; it can be done also'],['fun','crest-erlang','crest_operations:invoke_remote/1','Spawn a function on a certain host and invoke it w'],['fun','crest-erlang','crest_operations:invoke_spawn/1','Spawn a function on a certain host; the function m'],['fun','crest-erlang','crest_peer:add_child/1','Add a new process to the internal server list, wit'],['fun','crest-erlang','crest_peer:code_change/3',[]],['fun','crest-erlang','crest_peer:get_list/1','Get a dictionary of responses from all childs, pas'],['fun','crest-erlang','crest_peer:handle_call/3',[]],['fun','crest-erlang','crest_peer:handle_cast/2',[]],['fun','crest-erlang','crest_peer:handle_info/2',[]],['fun','crest-erlang','crest_peer:init/1',[]],['fun','crest-erlang','crest_peer:remote/1','Install and execute a new operation on this peer, '],['fun','crest-erlang','crest_peer:remove_child/1','Remove a child process from the internal server li'],['fun','crest-erlang','crest_peer:spawn_exec/2','Execute an already installed operation, specified '],['fun','crest-erlang','crest_peer:spawn_exec/2','Execute an already installed operation, specified '],['fun','crest-erlang','crest_peer:spawn_install/1','Install a new operation on this peer, using the gi'],['fun','crest-erlang','crest_peer:spawn_local_install/1','Install a new operation on this peer, already loca'],['fun','crest-erlang','crest_peer:start/0','Start this peer.'],['fun','crest-erlang','crest_peer:stop/0','Stop this peer.'],['fun','crest-erlang','crest_peer:terminate/2',[]],['fun','crest-erlang','crest_spawn:init/1','Add child pid and key to the crest_peer server her'],['fun','crest-erlang','crest_spawn:install/1','Install a new operation, specified by the function'],['fun','crest-erlang','crest_spawn:start/1','Start the link of this bridge to the newly spawned'],['fun','crest-erlang','crest_spawn:terminate/1','Terminate a child pid.'],['fun','crest-erlang','crest_spawn_sup:init/1',[]],['fun','crest-erlang','crest_spawn_sup:start_link/0',[]],['fun','crest-erlang','crest_spawn_sup:upgrade/0',[]],['fun','crest-erlang','crest_sup:init/1',[]],['fun','crest-erlang','crest_sup:start_link/0',[]],['fun','crest-erlang','crest_sup:upgrade/0',[]],['fun','crest-erlang','crest_utils:code_hash/1','Calculate the hash of a binary blob; it hides the '],['fun','crest-erlang','crest_utils:first/1','Returns the head of a list if the parameter is a l'],['fun','crest-erlang','crest_utils:format/1','Format the parameters as a string.'],['fun','crest-erlang','crest_utils:get_lambda/1','Take a list of parameters from an HTTP request and'],['fun','crest-erlang','crest_utils:get_lambda_params/3',[]],['fun','crest-erlang','crest_utils:http_get/1','Get the content of the given URL.'],['fun','crest-erlang','crest_utils:pack_key/1','Put a key in its correct JSON format, for sending '],['fun','crest-erlang','crest_utils:pmap/1','Parallel version of the map/2 function.'],['fun','crest-erlang','crest_utils:rpc/1','Remote Procedure Call: send a message to a certain'],['fun','crest-erlang','crest_utils:ssl_options/0','Returns the list of SSL options for making HTTPS r'],['fun','crest-erlang','crest_web:loop/1','Main server loop, serving requests.'],['fun','crest-erlang','crest_web:start/1','Start the Web server.'],['fun','crest-erlang','crest_web:stop/0','Stop the Web server.'],['fun','crest-erlang','crest_web_ssl:loop/1','Main server loop, serving requests.'],['fun','crest-erlang','crest_web_ssl:start/1','Start the Web server.'],['fun','crest-erlang','crest_web_ssl:stop/0','Stop the Web server.'],['fun','crest-erlang','destructure_json:file/1',[]],['fun','crest-erlang','destructure_json:parse/1',[]],['fun','crest-erlang','gen_server2:abcast/2',[]],['fun','crest-erlang','gen_server2:abcast/3',[]],['fun','crest-erlang','gen_server2:behaviour_info/1',[]],['fun','crest-erlang','gen_server2:call/2',[]],['fun','crest-erlang','gen_server2:call/3',[]],['fun','crest-erlang','gen_server2:cast/2',[]],['fun','crest-erlang','gen_server2:enter_loop/3',[]],['fun','crest-erlang','gen_server2:enter_loop/4',[]],['fun','crest-erlang','gen_server2:enter_loop/5',[]],['fun','crest-erlang','gen_server2:format_status/2',[]],['fun','crest-erlang','gen_server2:init_it/6',[]],['fun','crest-erlang','gen_server2:multi_call/2',[]],['fun','crest-erlang','gen_server2:multi_call/3',[]],['fun','crest-erlang','gen_server2:multi_call/4',[]],['fun','crest-erlang','gen_server2:print_event/3',[]],['fun','crest-erlang','gen_server2:reply/2',[]],['fun','crest-erlang','gen_server2:start/3',[]],['fun','crest-erlang','gen_server2:start/4',[]],['fun','crest-erlang','gen_server2:start_link/3',[]],['fun','crest-erlang','gen_server2:start_link/4',[]],['fun','crest-erlang','gen_server2:system_code_change/4',[]],['fun','crest-erlang','gen_server2:system_continue/3',[]],['fun','crest-erlang','gen_server2:system_terminate/4',[]],['fun','crest-erlang','uuid:code_change/3',[]],['fun','crest-erlang','uuid:handle_call/3',[]],['fun','crest-erlang','uuid:handle_cast/2',[]],['fun','crest-erlang','uuid:handle_info/2',[]],['fun','crest-erlang','uuid:init/1',[]],['fun','crest-erlang','uuid:md5/2','  Generates a UUID based on a crypto:md5() hash.'],['fun','crest-erlang','uuid:random/0','  Generates a random UUID.'],['fun','crest-erlang','uuid:sha/2','  Generates a UUID based on a crypto:sha() hash.'],['fun','crest-erlang','uuid:srandom/0','  Seeds random number generation with erlang:now('],['fun','crest-erlang','uuid:start/0',[]],['fun','crest-erlang','uuid:start/1',[]],['fun','crest-erlang','uuid:start_link/0',[]],['fun','crest-erlang','uuid:start_link/1',[]],['fun','crest-erlang','uuid:stop/0',[]],['fun','crest-erlang','uuid:terminate/2',[]],['fun','crest-erlang','uuid:timestamp/0','  Generates a UUID based on timestamp.'],['fun','crest-erlang','uuid:timestamp/2','  Generates a UUID based on timestamp.'],['fun','crest-erlang','uuid:to_string/1','  Generates a string representation of a UUID.'],['fun','crest-erlang','uuid:v4/0','Equivalent to random().']];