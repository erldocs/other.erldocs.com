var index = [['app','osm','osm','[application]'],['mod','osm','add','Erlang mini project.'],['mod','osm','death',[]],['mod','osm','fifo',[]],['mod','osm','list',[]],['mod','osm','pfifo',[]],['mod','osm','tutorial',[]],['mod','osm','utils','A small collection of utility functions.'],['fun','osm','add:adder/6','Revereses the lists A and B and spawns two process'],['fun','osm','add:calculate/8','Calculates the result of A and B and stores it in '],['fun','osm','add:encode/2','Converts a decimal number into base Base.'],['fun','osm','add:manager/7','Checks if we have a carry bit or not and sends thi'],['fun','osm','add:start/3','Calculates A+B using only one process and returns '],['fun','osm','add:start/4','Calculates A+B using Options processes and returns'],['fun','osm','death:gamble/1','Gamle with Death.'],['fun','osm','death:start/1','Starts a new death service such that the probabili'],['fun','osm','fifo:empty/1','Returns true if the queue is empty, false if not.'],['fun','osm','fifo:new/0','Creates an empty FIFO buffer.'],['fun','osm','fifo:pop/1','Pops the next value in order from the queue.'],['fun','osm','fifo:push/2','Pushes a new value to the queue.'],['fun','osm','fifo:size/1','Calculates the size of the fifo buffer.'],['fun','osm','list:max/1','Find the max value in a list using a sequential, r'],['fun','osm','list:pmax/2','Find the max value in List by spliting up List in '],['fun','osm','list:split/2','Split a list L into lists of lengt N.'],['fun','osm','pfifo:empty/1','Returns true if Fifo is empty, otherwise returns f'],['fun','osm','pfifo:new/0','Creates a new fifo buffer.'],['fun','osm','pfifo:pop/1','Pops a value from Fifo.'],['fun','osm','pfifo:push/2','Push a new value to Fifo.'],['fun','osm','pfifo:size/1','Returns the number of elements in Fifo.'],['fun','osm','tutorial:char_to_lower/1','Convert a character to lower case.'],['fun','osm','tutorial:char_to_upper/1','Convert a character to upper case.'],['fun','osm','tutorial:count/2','Returns the number of times Char occurs in String.'],['fun','osm','tutorial:fac/1','The factorial function.'],['fun','osm','tutorial:fac_tr/1','The factorial function, implemented using tail rec'],['fun','osm','tutorial:fib/1','Calcultates the Nth Fibonnacci number.'],['fun','osm','tutorial:fib_tr/1','Calculates the Nth fibonacci number, implemented u'],['fun','osm','tutorial:hello/0','Prints "Hello!" to the terminal.'],['fun','osm','tutorial:hello/1','Prints "Hello!" N times, and writes N before each '],['fun','osm','tutorial:max/1','Returns the max value M in a list L.'],['fun','osm','tutorial:odd_and_even/1','Returns a tuple {{odd, Odd}, {even, Even}} where O'],['fun','osm','tutorial:right_triangles/1','Generates a list of tuples {A,B,C} such that A and'],['fun','osm','tutorial:simpsons/0','Returns a list of tuples, where each tuple describ'],['fun','osm','tutorial:simpsons/1','Returns a filtered list of names of characters in '],['fun','osm','tutorial:str_to_lower/1','Convert a string to lower case.'],['fun','osm','tutorial:str_to_upper/1','Convert a string to upper case.'],['fun','osm','utils:decToBase/2',[]],['fun','osm','utils:filter/2','Each list in List2 contains the elements Elem in L'],['fun','osm','utils:line/1',[]],['fun','osm','utils:printList/1',[]],['fun','osm','utils:seqs/1','Generates a list of lists of increasing sequences '],['fun','osm','utils:split/2','Split List into N Lists such that all Lists have a']];