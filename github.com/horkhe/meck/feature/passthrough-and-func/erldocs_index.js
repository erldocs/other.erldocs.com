var index = [['app','meck','meck','[application]'],['mod','meck','meck','Module mocking library for Erlang.'],['fun','meck','meck:called/3','Returns whether Mod:Func has been called with Args'],['fun','meck','meck:called/4','Returns whether Pid has called Mod:Func with Args.'],['fun','meck','meck:delete/3','Deletes an expectation.'],['fun','meck','meck:exception/2','Throws an expected exception inside an expect fun.'],['fun','meck','meck:exec/1','Creates a ret_spec() from a function.'],['fun','meck','meck:expect/3','Add expectation for a function Func to the mocked '],['fun','meck','meck:expect/4','Adds an expectation with the supplied arity and re'],['fun','meck','meck:history/1','Return the call history of the mocked module for a'],['fun','meck','meck:history/2','Return the call history of the mocked module for t'],['fun','meck','meck:loop/1','Converts a list of terms into ret_spec() defining '],['fun','meck','meck:loop/4','Equivalent to expect(Mod, Func, Ari, loop(Loop)).'],['fun','meck','meck:new/1','Equivalent to new(Mod, []).'],['fun','meck','meck:new/2','Creates new mocked module(s).'],['fun','meck','meck:num_calls/3','Returns the number of times Mod:Func has been call'],['fun','meck','meck:num_calls/4','Returns the number of times process Pid has called'],['fun','meck','meck:passthrough/0','Creates a ret_spec() that makes the original modul'],['fun','meck','meck:passthrough/1','Calls the original function (if existing) inside a'],['fun','meck','meck:raise/2','Creates a ret_spec() that defines an exception.'],['fun','meck','meck:reset/1','Erases the call history for a mocked module or a l'],['fun','meck','meck:seq/1','Converts a list of terms into ret_spec() defining '],['fun','meck','meck:sequence/4','Equivalent to expect(Mod, Func, Ari, seq(Sequence)'],['fun','meck','meck:unload/0','Unloads all mocked modules from memory.'],['fun','meck','meck:unload/1','Unload a mocked module or a list of mocked modules'],['fun','meck','meck:val/1','Converts a term into ret_spec() defining an indivi'],['fun','meck','meck:validate/1','Validate the state of the mock module(s).']];