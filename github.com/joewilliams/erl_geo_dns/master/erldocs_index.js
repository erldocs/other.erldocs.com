var index = [['app','couchbeam','couchbeam','[application]'],['mod','couchbeam','couchbeam',[]],['mod','couchbeam','couchbeam_db',[]],['mod','couchbeam','couchbeam_deps','Ensure that the relatively-installed dependencies '],['mod','couchbeam','couchbeam_doc',[]],['mod','couchbeam','couchbeam_manager','Manager for couchbeam  This gen_server is respons'],['mod','couchbeam','couchbeam_mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','couchbeam','couchbeam_mochinum','Useful numeric algorithms for floats that cover so'],['mod','couchbeam','couchbeam_resource',[]],['mod','couchbeam','couchbeam_server',[]],['mod','couchbeam','couchbeam_sup',[]],['mod','couchbeam','couchbeam_util',[]],['mod','couchbeam','couchbeam_uuids',[]],['mod','couchbeam','couchbeam_view',[]],['fun','couchbeam','couchbeam:json_decode/1','decode from json string.'],['fun','couchbeam','couchbeam:json_encode/1','Encode to json.'],['fun','couchbeam','couchbeam:start/0','Start applications which exmpp depends on then sta'],['fun','couchbeam','couchbeam:version/0','Return the version of the application.'],['fun','couchbeam','couchbeam_db:all_docs/1','This method has the same behavior as a view.'],['fun','couchbeam','couchbeam_db:all_docs_by_seq/1','This method has the same behavior as a view.'],['fun','couchbeam','couchbeam_db:close/2',[]],['fun','couchbeam','couchbeam_db:code_change/3',[]],['fun','couchbeam','couchbeam_db:create/2',[]],['fun','couchbeam','couchbeam_db:delete/2',[]],['fun','couchbeam','couchbeam_db:delete_attachment/1','delete attachment.'],['fun','couchbeam','couchbeam_db:delete_doc/1','delete a document.'],['fun','couchbeam','couchbeam_db:delete_docs/2',[]],['fun','couchbeam','couchbeam_db:delete_docs/3',[]],['fun','couchbeam','couchbeam_db:encode_docid/1',[]],['fun','couchbeam','couchbeam_db:fetch_attachment/1','fetch attachment.'],['fun','couchbeam','couchbeam_db:fetch_attachment/1','fetch attachment.'],['fun','couchbeam','couchbeam_db:handle_call/3',[]],['fun','couchbeam','couchbeam_db:handle_cast/2',[]],['fun','couchbeam','couchbeam_db:handle_info/2',[]],['fun','couchbeam','couchbeam_db:info/1','fetch information of Database.'],['fun','couchbeam','couchbeam_db:open/2',[]],['fun','couchbeam','couchbeam_db:open_doc/1','open a doc with DocId.'],['fun','couchbeam','couchbeam_db:open_doc/3',[]],['fun','couchbeam','couchbeam_db:open_or_create/2',[]],['fun','couchbeam','couchbeam_db:put_attachment/1','put attachment attachment with ContentType fixed.'],['fun','couchbeam','couchbeam_db:put_attachment/1','put attachment attachment, It will try to guess mi'],['fun','couchbeam','couchbeam_db:query_view/1','query a view and return results depending on param'],['fun','couchbeam','couchbeam_db:save_doc/1','save a do with DocId.'],['fun','couchbeam','couchbeam_db:save_doc/3',[]],['fun','couchbeam','couchbeam_db:save_docs/1','bulk update with options, currently support only a'],['fun','couchbeam','couchbeam_db:save_docs/1','bulk update.'],['fun','couchbeam','couchbeam_db:suscribe/1','suscribe to db changes.'],['fun','couchbeam','couchbeam_db:suscribe/3','suscribe to db changes, wait for changes heartbeat'],['fun','couchbeam','couchbeam_db:terminate/2',[]],['fun','couchbeam','couchbeam_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','couchbeam','couchbeam_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','couchbeam','couchbeam_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','couchbeam','couchbeam_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','couchbeam','couchbeam_deps:get_base_dir/1','Return the application directory for Module.'],['fun','couchbeam','couchbeam_deps:local_path/1','Return an application-relative directory for this '],['fun','couchbeam','couchbeam_deps:local_path/1','Return an application-relative directory from Modu'],['fun','couchbeam','couchbeam_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','couchbeam','couchbeam_doc:add_attachment/1','add attachment  to a doc and encode it with Conten'],['fun','couchbeam','couchbeam_doc:add_attachment/1','add attachment  to a doc and encode it.'],['fun','couchbeam','couchbeam_doc:delete_inline_attachment/1','delete an attachment record in doc.'],['fun','couchbeam','couchbeam_doc:delete_value/1','Deletes all entries associated with Key in json ob'],['fun','couchbeam','couchbeam_doc:extend/1','extend a jsonobject by a property or list of prope'],['fun','couchbeam','couchbeam_doc:extend/1','extend a jsonobject by key, value.'],['fun','couchbeam','couchbeam_doc:get_id/1','get document id.'],['fun','couchbeam','couchbeam_doc:get_idrev/1','get  a tuple containing docucment id and revision.'],['fun','couchbeam','couchbeam_doc:get_rev/1','get document revision.'],['fun','couchbeam','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','couchbeam','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','couchbeam','couchbeam_doc:is_saved/1','If document have been saved (revision is defined) '],['fun','couchbeam','couchbeam_doc:set_value/1','set a value for a key in jsonobj.'],['fun','couchbeam','couchbeam_manager:code_change/3',[]],['fun','couchbeam','couchbeam_manager:connection_count/0',[]],['fun','couchbeam','couchbeam_manager:get_connection/1',[]],['fun','couchbeam','couchbeam_manager:get_db/1',[]],['fun','couchbeam','couchbeam_manager:handle_cast/2',[]],['fun','couchbeam','couchbeam_manager:handle_info/2',[]],['fun','couchbeam','couchbeam_manager:init/1',[]],['fun','couchbeam','couchbeam_manager:register_connection/2',[]],['fun','couchbeam','couchbeam_manager:register_db/3',[]],['fun','couchbeam','couchbeam_manager:terminate/2',[]],['fun','couchbeam','couchbeam_manager:unregister_connection/1',[]],['fun','couchbeam','couchbeam_manager:unregister_db/1',[]],['fun','couchbeam','couchbeam_mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','couchbeam','couchbeam_mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','couchbeam','couchbeam_mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','couchbeam','couchbeam_mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','couchbeam','couchbeam_mochijson2:test/0',[]],['fun','couchbeam','couchbeam_mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','couchbeam','couchbeam_mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','couchbeam','couchbeam_mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','couchbeam','couchbeam_mochinum:int_pow/1',' Moderately efficient way to exponentiate integers'],['fun','couchbeam','couchbeam_mochinum:test/0',[]],['fun','couchbeam','couchbeam_resource:delete/5',[]],['fun','couchbeam','couchbeam_resource:encode_query/1',[]],['fun','couchbeam','couchbeam_resource:get/5',[]],['fun','couchbeam','couchbeam_resource:get_body_part/1','Reads a body part from an ongoing response when  '],['fun','couchbeam','couchbeam_resource:get_body_part/1','Reads a body part from an ongoing response when  '],['fun','couchbeam','couchbeam_resource:head/5',[]],['fun','couchbeam','couchbeam_resource:post/6',[]],['fun','couchbeam','couchbeam_resource:put/6',[]],['fun','couchbeam','couchbeam_server:all_dbs/1','fetch list of all dbs.'],['fun','couchbeam','couchbeam_server:close/1',[]],['fun','couchbeam','couchbeam_server:close_db/2',[]],['fun','couchbeam','couchbeam_server:code_change/3',[]],['fun','couchbeam','couchbeam_server:create_db/1','create a database with DbName.'],['fun','couchbeam','couchbeam_server:delete_db/1','delete a database with dbname.'],['fun','couchbeam','couchbeam_server:handle_call/3',[]],['fun','couchbeam','couchbeam_server:handle_cast/2',[]],['fun','couchbeam','couchbeam_server:handle_info/2',[]],['fun','couchbeam','couchbeam_server:info/1',[]],['fun','couchbeam','couchbeam_server:is_db/1','If database exist in the node returns true.'],['fun','couchbeam','couchbeam_server:open_db/2',[]],['fun','couchbeam','couchbeam_server:open_db/3',[]],['fun','couchbeam','couchbeam_server:open_or_create_db/2',[]],['fun','couchbeam','couchbeam_server:start_connection/0',[]],['fun','couchbeam','couchbeam_server:start_connection/1',[]],['fun','couchbeam','couchbeam_server:start_connection_link/0',[]],['fun','couchbeam','couchbeam_server:start_connection_link/1',[]],['fun','couchbeam','couchbeam_server:terminate/2',[]],['fun','couchbeam','couchbeam_sup:init/1',[]],['fun','couchbeam','couchbeam_sup:start_link/0',[]],['fun','couchbeam','couchbeam_util:encodeBase64/1',[]],['fun','couchbeam','couchbeam_util:generate_uuids/1',[]],['fun','couchbeam','couchbeam_util:guess_mime/1',' Guess the mime type of a file by the extension of'],['fun','couchbeam','couchbeam_util:join/1','Join a list of strings together with the given sep'],['fun','couchbeam','couchbeam_util:new_uuid/0',[]],['fun','couchbeam','couchbeam_util:quote_plus/1','URL safe encoding of the given term.'],['fun','couchbeam','couchbeam_util:revjoin/3',[]],['fun','couchbeam','couchbeam_util:split/1','split a binary.'],['fun','couchbeam','couchbeam_util:to_digit/1',[]],['fun','couchbeam','couchbeam_util:to_hex/1',[]],['fun','couchbeam','couchbeam_util:url_encode/1','URL-encodes a string based on RFC 1738.'],['fun','couchbeam','couchbeam_util:val/1',[]],['fun','couchbeam','couchbeam_uuids:code_change/3',[]],['fun','couchbeam','couchbeam_uuids:handle_call/3',[]],['fun','couchbeam','couchbeam_uuids:handle_cast/2',[]],['fun','couchbeam','couchbeam_uuids:handle_info/2',[]],['fun','couchbeam','couchbeam_uuids:next_uuid/1',[]],['fun','couchbeam','couchbeam_uuids:terminate/2',[]],['fun','couchbeam','couchbeam_uuids:uuid/1',[]],['fun','couchbeam','couchbeam_uuids:uuids/2',[]],['fun','couchbeam','couchbeam_view:close_view/1',[]],['fun','couchbeam','couchbeam_view:code_change/3',[]],['fun','couchbeam','couchbeam_view:count/1',[]],['fun','couchbeam','couchbeam_view:count/2',[]],['fun','couchbeam','couchbeam_view:fetch_view/1',[]],['fun','couchbeam','couchbeam_view:fetch_view/2',[]],['fun','couchbeam','couchbeam_view:first/1',[]],['fun','couchbeam','couchbeam_view:first/2',[]],['fun','couchbeam','couchbeam_view:handle_call/3',[]],['fun','couchbeam','couchbeam_view:handle_cast/2',[]],['fun','couchbeam','couchbeam_view:handle_info/2',[]],['fun','couchbeam','couchbeam_view:parse_view/1','Return a list of document ids for a given view.'],['fun','couchbeam','couchbeam_view:parse_view/2',[]],['fun','couchbeam','couchbeam_view:terminate/2',[]],['app','erl_geo_dns','erl_geo_dns','[application]'],['mod','erl_geo_dns','couchbeam',[]],['mod','erl_geo_dns','couchbeam_db',[]],['mod','erl_geo_dns','couchbeam_deps','Ensure that the relatively-installed dependencies '],['mod','erl_geo_dns','couchbeam_doc',[]],['mod','erl_geo_dns','couchbeam_manager','Manager for couchbeam  This gen_server is respons'],['mod','erl_geo_dns','couchbeam_mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','erl_geo_dns','couchbeam_mochinum','Useful numeric algorithms for floats that cover so'],['mod','erl_geo_dns','couchbeam_resource',[]],['mod','erl_geo_dns','couchbeam_server',[]],['mod','erl_geo_dns','couchbeam_sup',[]],['mod','erl_geo_dns','couchbeam_util',[]],['mod','erl_geo_dns','couchbeam_uuids',[]],['mod','erl_geo_dns','couchbeam_view',[]],['mod','erl_geo_dns','geo_dns',[]],['mod','erl_geo_dns','geo_dns_app',[]],['mod','erl_geo_dns','geo_dns_distance',[]],['mod','erl_geo_dns','geo_dns_query',[]],['mod','erl_geo_dns','geo_dns_sup',[]],['mod','erl_geo_dns','geo_dns_udp',[]],['mod','erl_geo_dns','lhttpc','Main interface to the lightweight http client.'],['mod','erl_geo_dns','lhttpc_manager','Connection manager for the HTTP client.'],['mod','erl_geo_dns','lhttpc_sup','Top supervisor for the lhttpc application.'],['mod','erl_geo_dns','libgeoip',[]],['mod','erl_geo_dns','libgeoip_app',[]],['mod','erl_geo_dns','libgeoip_sup',[]],['fun','erl_geo_dns','couchbeam:json_decode/1','decode from json string.'],['fun','erl_geo_dns','couchbeam:json_encode/1','Encode to json.'],['fun','erl_geo_dns','couchbeam:start/0','Start applications which exmpp depends on then sta'],['fun','erl_geo_dns','couchbeam:version/0','Return the version of the application.'],['fun','erl_geo_dns','couchbeam_db:all_docs/1','This method has the same behavior as a view.'],['fun','erl_geo_dns','couchbeam_db:all_docs_by_seq/1','This method has the same behavior as a view.'],['fun','erl_geo_dns','couchbeam_db:close/2',[]],['fun','erl_geo_dns','couchbeam_db:code_change/3',[]],['fun','erl_geo_dns','couchbeam_db:create/2',[]],['fun','erl_geo_dns','couchbeam_db:delete/2',[]],['fun','erl_geo_dns','couchbeam_db:delete_attachment/1','delete attachment.'],['fun','erl_geo_dns','couchbeam_db:delete_doc/1','delete a document.'],['fun','erl_geo_dns','couchbeam_db:delete_docs/2',[]],['fun','erl_geo_dns','couchbeam_db:delete_docs/3',[]],['fun','erl_geo_dns','couchbeam_db:encode_docid/1',[]],['fun','erl_geo_dns','couchbeam_db:fetch_attachment/1','fetch attachment.'],['fun','erl_geo_dns','couchbeam_db:fetch_attachment/1','fetch attachment.'],['fun','erl_geo_dns','couchbeam_db:handle_call/3',[]],['fun','erl_geo_dns','couchbeam_db:handle_cast/2',[]],['fun','erl_geo_dns','couchbeam_db:handle_info/2',[]],['fun','erl_geo_dns','couchbeam_db:info/1','fetch information of Database.'],['fun','erl_geo_dns','couchbeam_db:open/2',[]],['fun','erl_geo_dns','couchbeam_db:open_doc/1','open a doc with DocId.'],['fun','erl_geo_dns','couchbeam_db:open_doc/3',[]],['fun','erl_geo_dns','couchbeam_db:open_or_create/2',[]],['fun','erl_geo_dns','couchbeam_db:put_attachment/1','put attachment attachment with ContentType fixed.'],['fun','erl_geo_dns','couchbeam_db:put_attachment/1','put attachment attachment, It will try to guess mi'],['fun','erl_geo_dns','couchbeam_db:query_view/1','query a view and return results depending on param'],['fun','erl_geo_dns','couchbeam_db:save_doc/1','save a do with DocId.'],['fun','erl_geo_dns','couchbeam_db:save_doc/3',[]],['fun','erl_geo_dns','couchbeam_db:save_docs/1','bulk update with options, currently support only a'],['fun','erl_geo_dns','couchbeam_db:save_docs/1','bulk update.'],['fun','erl_geo_dns','couchbeam_db:suscribe/1','suscribe to db changes.'],['fun','erl_geo_dns','couchbeam_db:suscribe/3','suscribe to db changes, wait for changes heartbeat'],['fun','erl_geo_dns','couchbeam_db:terminate/2',[]],['fun','erl_geo_dns','couchbeam_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','erl_geo_dns','couchbeam_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','erl_geo_dns','couchbeam_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','erl_geo_dns','couchbeam_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','erl_geo_dns','couchbeam_deps:get_base_dir/1','Return the application directory for Module.'],['fun','erl_geo_dns','couchbeam_deps:local_path/1','Return an application-relative directory for this '],['fun','erl_geo_dns','couchbeam_deps:local_path/1','Return an application-relative directory from Modu'],['fun','erl_geo_dns','couchbeam_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','erl_geo_dns','couchbeam_doc:add_attachment/1','add attachment  to a doc and encode it with Conten'],['fun','erl_geo_dns','couchbeam_doc:add_attachment/1','add attachment  to a doc and encode it.'],['fun','erl_geo_dns','couchbeam_doc:delete_inline_attachment/1','delete an attachment record in doc.'],['fun','erl_geo_dns','couchbeam_doc:delete_value/1','Deletes all entries associated with Key in json ob'],['fun','erl_geo_dns','couchbeam_doc:extend/1','extend a jsonobject by a property or list of prope'],['fun','erl_geo_dns','couchbeam_doc:extend/1','extend a jsonobject by key, value.'],['fun','erl_geo_dns','couchbeam_doc:get_id/1','get document id.'],['fun','erl_geo_dns','couchbeam_doc:get_idrev/1','get  a tuple containing docucment id and revision.'],['fun','erl_geo_dns','couchbeam_doc:get_rev/1','get document revision.'],['fun','erl_geo_dns','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','erl_geo_dns','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','erl_geo_dns','couchbeam_doc:is_saved/1','If document have been saved (revision is defined) '],['fun','erl_geo_dns','couchbeam_doc:set_value/1','set a value for a key in jsonobj.'],['fun','erl_geo_dns','couchbeam_manager:code_change/3',[]],['fun','erl_geo_dns','couchbeam_manager:connection_count/0',[]],['fun','erl_geo_dns','couchbeam_manager:get_connection/1',[]],['fun','erl_geo_dns','couchbeam_manager:get_db/1',[]],['fun','erl_geo_dns','couchbeam_manager:handle_cast/2',[]],['fun','erl_geo_dns','couchbeam_manager:handle_info/2',[]],['fun','erl_geo_dns','couchbeam_manager:init/1',[]],['fun','erl_geo_dns','couchbeam_manager:register_connection/2',[]],['fun','erl_geo_dns','couchbeam_manager:register_db/3',[]],['fun','erl_geo_dns','couchbeam_manager:terminate/2',[]],['fun','erl_geo_dns','couchbeam_manager:unregister_connection/1',[]],['fun','erl_geo_dns','couchbeam_manager:unregister_db/1',[]],['fun','erl_geo_dns','couchbeam_mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','erl_geo_dns','couchbeam_mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','erl_geo_dns','couchbeam_mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','erl_geo_dns','couchbeam_mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','erl_geo_dns','couchbeam_mochijson2:test/0',[]],['fun','erl_geo_dns','couchbeam_mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','erl_geo_dns','couchbeam_mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','erl_geo_dns','couchbeam_mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','erl_geo_dns','couchbeam_mochinum:int_pow/1',' Moderately efficient way to exponentiate integers'],['fun','erl_geo_dns','couchbeam_mochinum:test/0',[]],['fun','erl_geo_dns','couchbeam_resource:delete/5',[]],['fun','erl_geo_dns','couchbeam_resource:encode_query/1',[]],['fun','erl_geo_dns','couchbeam_resource:get/5',[]],['fun','erl_geo_dns','couchbeam_resource:get_body_part/1','Reads a body part from an ongoing response when  '],['fun','erl_geo_dns','couchbeam_resource:get_body_part/1','Reads a body part from an ongoing response when  '],['fun','erl_geo_dns','couchbeam_resource:head/5',[]],['fun','erl_geo_dns','couchbeam_resource:post/6',[]],['fun','erl_geo_dns','couchbeam_resource:put/6',[]],['fun','erl_geo_dns','couchbeam_server:all_dbs/1','fetch list of all dbs.'],['fun','erl_geo_dns','couchbeam_server:close/1',[]],['fun','erl_geo_dns','couchbeam_server:close_db/2',[]],['fun','erl_geo_dns','couchbeam_server:code_change/3',[]],['fun','erl_geo_dns','couchbeam_server:create_db/1','create a database with DbName.'],['fun','erl_geo_dns','couchbeam_server:delete_db/1','delete a database with dbname.'],['fun','erl_geo_dns','couchbeam_server:handle_call/3',[]],['fun','erl_geo_dns','couchbeam_server:handle_cast/2',[]],['fun','erl_geo_dns','couchbeam_server:handle_info/2',[]],['fun','erl_geo_dns','couchbeam_server:info/1',[]],['fun','erl_geo_dns','couchbeam_server:is_db/1','If database exist in the node returns true.'],['fun','erl_geo_dns','couchbeam_server:open_db/2',[]],['fun','erl_geo_dns','couchbeam_server:open_db/3',[]],['fun','erl_geo_dns','couchbeam_server:open_or_create_db/2',[]],['fun','erl_geo_dns','couchbeam_server:start_connection/0',[]],['fun','erl_geo_dns','couchbeam_server:start_connection/1',[]],['fun','erl_geo_dns','couchbeam_server:start_connection_link/0',[]],['fun','erl_geo_dns','couchbeam_server:start_connection_link/1',[]],['fun','erl_geo_dns','couchbeam_server:terminate/2',[]],['fun','erl_geo_dns','couchbeam_sup:init/1',[]],['fun','erl_geo_dns','couchbeam_sup:start_link/0',[]],['fun','erl_geo_dns','couchbeam_util:encodeBase64/1',[]],['fun','erl_geo_dns','couchbeam_util:generate_uuids/1',[]],['fun','erl_geo_dns','couchbeam_util:guess_mime/1',' Guess the mime type of a file by the extension of'],['fun','erl_geo_dns','couchbeam_util:join/1','Join a list of strings together with the given sep'],['fun','erl_geo_dns','couchbeam_util:new_uuid/0',[]],['fun','erl_geo_dns','couchbeam_util:quote_plus/1','URL safe encoding of the given term.'],['fun','erl_geo_dns','couchbeam_util:revjoin/3',[]],['fun','erl_geo_dns','couchbeam_util:split/1','split a binary.'],['fun','erl_geo_dns','couchbeam_util:to_digit/1',[]],['fun','erl_geo_dns','couchbeam_util:to_hex/1',[]],['fun','erl_geo_dns','couchbeam_util:url_encode/1','URL-encodes a string based on RFC 1738.'],['fun','erl_geo_dns','couchbeam_util:val/1',[]],['fun','erl_geo_dns','couchbeam_uuids:code_change/3',[]],['fun','erl_geo_dns','couchbeam_uuids:handle_call/3',[]],['fun','erl_geo_dns','couchbeam_uuids:handle_cast/2',[]],['fun','erl_geo_dns','couchbeam_uuids:handle_info/2',[]],['fun','erl_geo_dns','couchbeam_uuids:next_uuid/1',[]],['fun','erl_geo_dns','couchbeam_uuids:terminate/2',[]],['fun','erl_geo_dns','couchbeam_uuids:uuid/1',[]],['fun','erl_geo_dns','couchbeam_uuids:uuids/2',[]],['fun','erl_geo_dns','couchbeam_view:close_view/1',[]],['fun','erl_geo_dns','couchbeam_view:code_change/3',[]],['fun','erl_geo_dns','couchbeam_view:count/1',[]],['fun','erl_geo_dns','couchbeam_view:count/2',[]],['fun','erl_geo_dns','couchbeam_view:fetch_view/1',[]],['fun','erl_geo_dns','couchbeam_view:fetch_view/2',[]],['fun','erl_geo_dns','couchbeam_view:first/1',[]],['fun','erl_geo_dns','couchbeam_view:first/2',[]],['fun','erl_geo_dns','couchbeam_view:handle_call/3',[]],['fun','erl_geo_dns','couchbeam_view:handle_cast/2',[]],['fun','erl_geo_dns','couchbeam_view:handle_info/2',[]],['fun','erl_geo_dns','couchbeam_view:parse_view/1','Return a list of document ids for a given view.'],['fun','erl_geo_dns','couchbeam_view:parse_view/2',[]],['fun','erl_geo_dns','couchbeam_view:terminate/2',[]],['fun','erl_geo_dns','geo_dns:start/0',[]],['fun','erl_geo_dns','geo_dns:stop/0',[]],['fun','erl_geo_dns','geo_dns_app:start/0',[]],['fun','erl_geo_dns','geo_dns_app:start/2',[]],['fun','erl_geo_dns','geo_dns_app:stop/0',[]],['fun','erl_geo_dns','geo_dns_app:stop/1',[]],['fun','erl_geo_dns','geo_dns_distance:closest/2',[]],['fun','erl_geo_dns','geo_dns_distance:closest/3',[]],['fun','erl_geo_dns','geo_dns_distance:distance/3',[]],['fun','erl_geo_dns','geo_dns_distance:haversine/4',[]],['fun','erl_geo_dns','geo_dns_distance:pythagoras/4',[]],['fun','erl_geo_dns','geo_dns_distance:sphericalcos/4',[]],['fun','erl_geo_dns','geo_dns_query:query_handler/2',[]],['fun','erl_geo_dns','geo_dns_sup:init/1',[]],['fun','erl_geo_dns','geo_dns_sup:start_link/0',[]],['fun','erl_geo_dns','geo_dns_udp:code_change/3',[]],['fun','erl_geo_dns','geo_dns_udp:handle_call/3',[]],['fun','erl_geo_dns','geo_dns_udp:handle_cast/2',[]],['fun','erl_geo_dns','geo_dns_udp:handle_info/2',[]],['fun','erl_geo_dns','geo_dns_udp:init/1',[]],['fun','erl_geo_dns','geo_dns_udp:start_link/2',[]],['fun','erl_geo_dns','geo_dns_udp:terminate/2',[]],['fun','erl_geo_dns','lhttpc:get_body_part/1','Reads a body part from an ongoing response when  '],['fun','erl_geo_dns','lhttpc:get_body_part/1','Reads a body part from an ongoing response when  '],['fun','erl_geo_dns','lhttpc:request/4','Sends a request without a body.'],['fun','erl_geo_dns','lhttpc:request/5','Sends a request with a body.'],['fun','erl_geo_dns','lhttpc:request/6','Sends a request with a body.'],['fun','erl_geo_dns','lhttpc:request/9','Sends a request with a body.'],['fun','erl_geo_dns','lhttpc:send_body_part/2','Sends a body part to an ongoing request when  {pa'],['fun','erl_geo_dns','lhttpc:send_body_part/3','Sends a body part to an ongoing request when  {pa'],['fun','erl_geo_dns','lhttpc:send_trailers/2','Sends trailers to an ongoing request when {partial'],['fun','erl_geo_dns','lhttpc:send_trailers/3','Sends trailers to an ongoing request when  {parti'],['fun','erl_geo_dns','lhttpc:start/0','  Start the application.'],['fun','erl_geo_dns','lhttpc:stop/0','  Stops the application.'],['fun','erl_geo_dns','lhttpc_manager:connection_count/0','Returns the total number of active connections mai'],['fun','erl_geo_dns','lhttpc_manager:connection_count/1','Returns the number of active connections to the sp'],['fun','erl_geo_dns','lhttpc_manager:start_link/0','Starts and link to the gen server.'],['fun','erl_geo_dns','lhttpc_manager:update_connection_timeout/1','Updates the timeout for persistent connections.'],['fun','erl_geo_dns','lhttpc_sup:start_link/0','Starts and links to the supervisor.'],['fun','erl_geo_dns','libgeoip:code_change/3',[]],['fun','erl_geo_dns','libgeoip:handle_call/3',[]],['fun','erl_geo_dns','libgeoip:handle_cast/2',[]],['fun','erl_geo_dns','libgeoip:handle_info/2',[]],['fun','erl_geo_dns','libgeoip:init/1',[]],['fun','erl_geo_dns','libgeoip:lookup/1',[]],['fun','erl_geo_dns','libgeoip:set_db/1',[]],['fun','erl_geo_dns','libgeoip:start_link/0',[]],['fun','erl_geo_dns','libgeoip:start_link/1',[]],['fun','erl_geo_dns','libgeoip:terminate/2',[]],['fun','erl_geo_dns','libgeoip:test/0',[]],['fun','erl_geo_dns','libgeoip_app:start/0',[]],['fun','erl_geo_dns','libgeoip_app:start/2',[]],['fun','erl_geo_dns','libgeoip_app:stop/0',[]],['fun','erl_geo_dns','libgeoip_app:stop/1',[]],['fun','erl_geo_dns','libgeoip_sup:init/1',[]],['fun','erl_geo_dns','libgeoip_sup:start_link/0',[]],['app','geo_dns','geo_dns','[application]'],['mod','geo_dns','geo_dns',[]],['mod','geo_dns','geo_dns_app',[]],['mod','geo_dns','geo_dns_distance',[]],['mod','geo_dns','geo_dns_query',[]],['mod','geo_dns','geo_dns_sup',[]],['mod','geo_dns','geo_dns_udp',[]],['fun','geo_dns','geo_dns:start/0',[]],['fun','geo_dns','geo_dns:stop/0',[]],['fun','geo_dns','geo_dns_app:start/0',[]],['fun','geo_dns','geo_dns_app:start/2',[]],['fun','geo_dns','geo_dns_app:stop/0',[]],['fun','geo_dns','geo_dns_app:stop/1',[]],['fun','geo_dns','geo_dns_distance:closest/2',[]],['fun','geo_dns','geo_dns_distance:closest/3',[]],['fun','geo_dns','geo_dns_distance:distance/3',[]],['fun','geo_dns','geo_dns_distance:haversine/4',[]],['fun','geo_dns','geo_dns_distance:pythagoras/4',[]],['fun','geo_dns','geo_dns_distance:sphericalcos/4',[]],['fun','geo_dns','geo_dns_query:query_handler/2',[]],['fun','geo_dns','geo_dns_sup:init/1',[]],['fun','geo_dns','geo_dns_sup:start_link/0',[]],['fun','geo_dns','geo_dns_udp:code_change/3',[]],['fun','geo_dns','geo_dns_udp:handle_call/3',[]],['fun','geo_dns','geo_dns_udp:handle_cast/2',[]],['fun','geo_dns','geo_dns_udp:handle_info/2',[]],['fun','geo_dns','geo_dns_udp:init/1',[]],['fun','geo_dns','geo_dns_udp:start_link/2',[]],['fun','geo_dns','geo_dns_udp:terminate/2',[]],['app','lhttpc','lhttpc','[application]'],['mod','lhttpc','lhttpc','Main interface to the lightweight http client.'],['mod','lhttpc','lhttpc_manager','Connection manager for the HTTP client.'],['mod','lhttpc','lhttpc_sup','Top supervisor for the lhttpc application.'],['fun','lhttpc','lhttpc:get_body_part/1','Reads a body part from an ongoing response when  '],['fun','lhttpc','lhttpc:get_body_part/1','Reads a body part from an ongoing response when  '],['fun','lhttpc','lhttpc:request/4','Sends a request without a body.'],['fun','lhttpc','lhttpc:request/5','Sends a request with a body.'],['fun','lhttpc','lhttpc:request/6','Sends a request with a body.'],['fun','lhttpc','lhttpc:request/9','Sends a request with a body.'],['fun','lhttpc','lhttpc:send_body_part/2','Sends a body part to an ongoing request when  {pa'],['fun','lhttpc','lhttpc:send_body_part/3','Sends a body part to an ongoing request when  {pa'],['fun','lhttpc','lhttpc:send_trailers/2','Sends trailers to an ongoing request when {partial'],['fun','lhttpc','lhttpc:send_trailers/3','Sends trailers to an ongoing request when  {parti'],['fun','lhttpc','lhttpc:start/0','  Start the application.'],['fun','lhttpc','lhttpc:stop/0','  Stops the application.'],['fun','lhttpc','lhttpc_manager:connection_count/0','Returns the total number of active connections mai'],['fun','lhttpc','lhttpc_manager:connection_count/1','Returns the number of active connections to the sp'],['fun','lhttpc','lhttpc_manager:start_link/0','Starts and link to the gen server.'],['fun','lhttpc','lhttpc_manager:update_connection_timeout/1','Updates the timeout for persistent connections.'],['fun','lhttpc','lhttpc_sup:start_link/0','Starts and links to the supervisor.'],['app','libgeoip','libgeoip','[application]'],['mod','libgeoip','libgeoip',[]],['mod','libgeoip','libgeoip_app',[]],['mod','libgeoip','libgeoip_sup',[]],['fun','libgeoip','libgeoip:code_change/3',[]],['fun','libgeoip','libgeoip:handle_call/3',[]],['fun','libgeoip','libgeoip:handle_cast/2',[]],['fun','libgeoip','libgeoip:handle_info/2',[]],['fun','libgeoip','libgeoip:init/1',[]],['fun','libgeoip','libgeoip:lookup/1',[]],['fun','libgeoip','libgeoip:set_db/1',[]],['fun','libgeoip','libgeoip:start_link/0',[]],['fun','libgeoip','libgeoip:start_link/1',[]],['fun','libgeoip','libgeoip:terminate/2',[]],['fun','libgeoip','libgeoip:test/0',[]],['fun','libgeoip','libgeoip_app:start/0',[]],['fun','libgeoip','libgeoip_app:start/2',[]],['fun','libgeoip','libgeoip_app:stop/0',[]],['fun','libgeoip','libgeoip_app:stop/1',[]],['fun','libgeoip','libgeoip_sup:init/1',[]],['fun','libgeoip','libgeoip_sup:start_link/0',[]]];