var index = [['app','riak_core','riak_core','[application]'],['mod','riak_core','app_helper',[]],['mod','riak_core','bloom',[]],['mod','riak_core','gen_nb_server',[]],['mod','riak_core','gen_server2',[]],['mod','riak_core','json_pp',[]],['mod','riak_core','merkerl','An implementation of Merkle Trees for anti-entropy'],['mod','riak_core','priority_queue',[]],['mod','riak_core','process_proxy',[]],['mod','riak_core','riak_core',[]],['mod','riak_core','riak_core_apl',[]],['mod','riak_core','riak_core_app',[]],['mod','riak_core','riak_core_bucket','Functions for manipulating bucket properties.'],['mod','riak_core','riak_core_cinfo_basic',[]],['mod','riak_core','riak_core_cinfo_core',[]],['mod','riak_core','riak_core_claim','The default functions used for claiming partition '],['mod','riak_core','riak_core_gossip','riak_core_gossip takes care of the mechanics of sh'],['mod','riak_core','riak_core_handoff_listener','entry point for TCP-based handoff.'],['mod','riak_core','riak_core_handoff_manager',[]],['mod','riak_core','riak_core_handoff_receiver','incoming data handler for TCP-based handoff.'],['mod','riak_core','riak_core_handoff_sender','send a partitions data via TCP-based handoff.'],['mod','riak_core','riak_core_node_watcher',[]],['mod','riak_core','riak_core_node_watcher_events',[]],['mod','riak_core','riak_core_ring','riak_core_ring manages a riak nodes local view of'],['mod','riak_core','riak_core_ring_events',[]],['mod','riak_core','riak_core_ring_handler',[]],['mod','riak_core','riak_core_ring_manager','the local view of the clusters ring configuration'],['mod','riak_core','riak_core_ring_util',[]],['mod','riak_core','riak_core_sup',[]],['mod','riak_core','riak_core_test_util','utilities for test scripts.'],['mod','riak_core','riak_core_util','Various functions that are useful throughout Riak.'],['mod','riak_core','riak_core_vnode',[]],['mod','riak_core','riak_core_vnode_master','dispatch to vnodes.'],['mod','riak_core','riak_core_vnode_sup','supervise riak_vnode processes.'],['mod','riak_core','riak_core_web','Convenience functions for setting up the HTTP inte'],['mod','riak_core','riak_core_wm_urlmap','This module provides a Webmachine resource that li'],['mod','riak_core','slide','Keep track of thing in a sliding time window.'],['mod','riak_core','spiraltime','A set of sliding windows for recording N-per-secon'],['mod','riak_core','vclock','A simple Erlang implementation of vector clocks as'],['fun','riak_core','app_helper:get_env/1','The official way to get a value from this applicat'],['fun','riak_core','app_helper:get_env/1','The official way to get a value from the apps env'],['fun','riak_core','app_helper:get_env/1','Retrieve all Key/Value pairs in the env for the sp'],['fun','riak_core','bloom:add/2',[]],['fun','riak_core','bloom:add_element/2',[]],['fun','riak_core','bloom:bloom/1',[]],['fun','riak_core','bloom:bloom/2',[]],['fun','riak_core','bloom:capacity/1',[]],['fun','riak_core','bloom:is_element/2',[]],['fun','riak_core','bloom:member/2',[]],['fun','riak_core','bloom:sbf/1',[]],['fun','riak_core','bloom:sbf/2',[]],['fun','riak_core','bloom:sbf/3',[]],['fun','riak_core','bloom:sbf/4',[]],['fun','riak_core','bloom:size/1',[]],['fun','riak_core','gen_nb_server:start_link/4','Start server listening on IpAddr:Port.'],['fun','riak_core','gen_server2:abcast/2',[]],['fun','riak_core','gen_server2:abcast/3',[]],['fun','riak_core','gen_server2:behaviour_info/1',[]],['fun','riak_core','gen_server2:call/2',[]],['fun','riak_core','gen_server2:call/3',[]],['fun','riak_core','gen_server2:cast/2',[]],['fun','riak_core','gen_server2:enter_loop/3',[]],['fun','riak_core','gen_server2:enter_loop/4',[]],['fun','riak_core','gen_server2:enter_loop/5',[]],['fun','riak_core','gen_server2:format_status/2',[]],['fun','riak_core','gen_server2:init_it/6',[]],['fun','riak_core','gen_server2:multi_call/2',[]],['fun','riak_core','gen_server2:multi_call/3',[]],['fun','riak_core','gen_server2:multi_call/4',[]],['fun','riak_core','gen_server2:pcall/3',[]],['fun','riak_core','gen_server2:pcall/4',[]],['fun','riak_core','gen_server2:pcast/3',[]],['fun','riak_core','gen_server2:print_event/3',[]],['fun','riak_core','gen_server2:reply/2',[]],['fun','riak_core','gen_server2:start/3',[]],['fun','riak_core','gen_server2:start/4',[]],['fun','riak_core','gen_server2:start_link/3',[]],['fun','riak_core','gen_server2:start_link/4',[]],['fun','riak_core','gen_server2:system_code_change/4',[]],['fun','riak_core','gen_server2:system_continue/3',[]],['fun','riak_core','gen_server2:system_terminate/4',[]],['fun','riak_core','gen_server2:wake_hib/7',[]],['fun','riak_core','json_pp:print/1',[]],['fun','riak_core','json_pp:test/0',[]],['fun','riak_core','merkerl:allkeys/1',[]],['fun','riak_core','merkerl:build_tree/1','Build a Merkle tree from a list of KHs of objects'],['fun','riak_core','merkerl:delete/2',[]],['fun','riak_core','merkerl:diff/1','Find the keys of objects which differ between the '],['fun','riak_core','merkerl:insert/2','Insert the KH for a new or changed object into T.'],['fun','riak_core','priority_queue:in/2',[]],['fun','riak_core','priority_queue:in/3',[]],['fun','riak_core','priority_queue:is_empty/1',[]],['fun','riak_core','priority_queue:is_queue/1',[]],['fun','riak_core','priority_queue:join/2',[]],['fun','riak_core','priority_queue:len/1',[]],['fun','riak_core','priority_queue:new/0',[]],['fun','riak_core','priority_queue:out/1',[]],['fun','riak_core','priority_queue:out/2',[]],['fun','riak_core','priority_queue:pout/1',[]],['fun','riak_core','priority_queue:to_list/1',[]],['fun','riak_core','process_proxy:init/1',[]],['fun','riak_core','process_proxy:start_link/2',[]],['fun','riak_core','process_proxy:stop/1',[]],['fun','riak_core','riak_core:register_vnode_module/1',[]],['fun','riak_core','riak_core:stop/0','Stop the riak application and the calling process.'],['fun','riak_core','riak_core:stop/1',[]],['fun','riak_core','riak_core:vnode_modules/0',[]],['fun','riak_core','riak_core_apl:active_owners/1',[]],['fun','riak_core','riak_core_apl:active_owners/1',[]],['fun','riak_core','riak_core_apl:get_apl/1',[]],['fun','riak_core','riak_core_apl:get_apl/1',[]],['fun','riak_core','riak_core_apl:get_primary_apl/1',[]],['fun','riak_core','riak_core_apl:get_primary_apl/1',[]],['fun','riak_core','riak_core_app:start/2',[]],['fun','riak_core','riak_core_app:stop/1',[]],['fun','riak_core','riak_core_bucket:append_bucket_defaults/1','Add a list of defaults to global list of defaults '],['fun','riak_core','riak_core_bucket:get_bucket/1','Return the complete current list of properties for'],['fun','riak_core','riak_core_bucket:set_bucket/1','Set the given BucketProps in Bucket.'],['fun','riak_core','riak_core_cinfo_basic:alarm_info/1',[]],['fun','riak_core','riak_core_cinfo_basic:application_info/1',[]],['fun','riak_core','riak_core_cinfo_basic:capture_ets_i/1',[]],['fun','riak_core','riak_core_cinfo_basic:capture_net_kernel_i/1',[]],['fun','riak_core','riak_core_cinfo_basic:capture_regs/1',[]],['fun','riak_core','riak_core_cinfo_basic:cluster_info_generator_funs/0',[]],['fun','riak_core','riak_core_cinfo_basic:cluster_info_init/0',[]],['fun','riak_core','riak_core_cinfo_basic:erlang_memory/1',[]],['fun','riak_core','riak_core_cinfo_basic:erlang_statistics/1',[]],['fun','riak_core','riak_core_cinfo_basic:erlang_system_info/1',[]],['fun','riak_core','riak_core_cinfo_basic:global_summary/1',[]],['fun','riak_core','riak_core_cinfo_basic:inet_db_summary/1',[]],['fun','riak_core','riak_core_cinfo_basic:loaded_modules/1',[]],['fun','riak_core','riak_core_cinfo_basic:memory_hogs/2',[]],['fun','riak_core','riak_core_cinfo_basic:nodes_info/1',[]],['fun','riak_core','riak_core_cinfo_basic:non_zero_mailboxes/1',[]],['fun','riak_core','riak_core_cinfo_basic:port_info/1',[]],['fun','riak_core','riak_core_cinfo_basic:register/0',[]],['fun','riak_core','riak_core_cinfo_basic:registered_names/1',[]],['fun','riak_core','riak_core_cinfo_basic:time_and_date/1',[]],['fun','riak_core','riak_core_cinfo_basic:timer_status/1',[]],['fun','riak_core','riak_core_cinfo_core:cluster_info_generator_funs/0','Required callback function for cluster_info: retur'],['fun','riak_core','riak_core_cinfo_core:cluster_info_init/0','Required callback function for cluster_info: initi'],['fun','riak_core','riak_core_claim:claim_rebalance_n/2',[]],['fun','riak_core','riak_core_claim:default_choose_claim/1','Choose a partition at random.'],['fun','riak_core','riak_core_claim:default_choose_claim/2',[]],['fun','riak_core','riak_core_claim:default_wants_claim/1','Want a partition if we currently have less than fl'],['fun','riak_core','riak_core_claim:never_wants_claim/1','For use by nodes that should not claim any partiti'],['fun','riak_core','riak_core_claim:random_choose_claim/1',[]],['fun','riak_core','riak_core_gossip:remove_from_cluster/1',[]],['fun','riak_core','riak_core_gossip:send_ring/1',[]],['fun','riak_core','riak_core_gossip:send_ring/2',[]],['fun','riak_core','riak_core_gossip:start_link/0',[]],['fun','riak_core','riak_core_gossip:stop/0',[]],['fun','riak_core','riak_core_handoff_listener:code_change/3',[]],['fun','riak_core','riak_core_handoff_listener:handle_call/3',[]],['fun','riak_core','riak_core_handoff_listener:handle_cast/2',[]],['fun','riak_core','riak_core_handoff_listener:handle_info/2',[]],['fun','riak_core','riak_core_handoff_listener:init/1',[]],['fun','riak_core','riak_core_handoff_listener:new_connection/2',[]],['fun','riak_core','riak_core_handoff_listener:sock_opts/0',[]],['fun','riak_core','riak_core_handoff_listener:start_link/0',[]],['fun','riak_core','riak_core_handoff_listener:terminate/2',[]],['fun','riak_core','riak_core_handoff_manager:add_exclusion/2',[]],['fun','riak_core','riak_core_handoff_manager:code_change/3',[]],['fun','riak_core','riak_core_handoff_manager:get_exclusions/1',[]],['fun','riak_core','riak_core_handoff_manager:get_handoff_lock/1',[]],['fun','riak_core','riak_core_handoff_manager:handle_call/3',[]],['fun','riak_core','riak_core_handoff_manager:handle_cast/2',[]],['fun','riak_core','riak_core_handoff_manager:handle_info/2',[]],['fun','riak_core','riak_core_handoff_manager:init/1',[]],['fun','riak_core','riak_core_handoff_manager:release_handoff_lock/2',[]],['fun','riak_core','riak_core_handoff_manager:remove_exclusion/2',[]],['fun','riak_core','riak_core_handoff_manager:start_link/0',[]],['fun','riak_core','riak_core_handoff_manager:terminate/2',[]],['fun','riak_core','riak_core_handoff_receiver:code_change/3',[]],['fun','riak_core','riak_core_handoff_receiver:handle_call/3',[]],['fun','riak_core','riak_core_handoff_receiver:handle_cast/2',[]],['fun','riak_core','riak_core_handoff_receiver:handle_info/2',[]],['fun','riak_core','riak_core_handoff_receiver:init/1',[]],['fun','riak_core','riak_core_handoff_receiver:set_socket/2',[]],['fun','riak_core','riak_core_handoff_receiver:start_link/0',[]],['fun','riak_core','riak_core_handoff_receiver:terminate/2',[]],['fun','riak_core','riak_core_handoff_sender:start_link/3',[]],['fun','riak_core','riak_core_node_watcher:avsn/0',[]],['fun','riak_core','riak_core_node_watcher:code_change/3',[]],['fun','riak_core','riak_core_node_watcher:handle_call/3',[]],['fun','riak_core','riak_core_node_watcher:handle_cast/2',[]],['fun','riak_core','riak_core_node_watcher:handle_info/2',[]],['fun','riak_core','riak_core_node_watcher:init/1',[]],['fun','riak_core','riak_core_node_watcher:node_down/0',[]],['fun','riak_core','riak_core_node_watcher:node_up/0',[]],['fun','riak_core','riak_core_node_watcher:nodes/1',[]],['fun','riak_core','riak_core_node_watcher:service_down/1',[]],['fun','riak_core','riak_core_node_watcher:service_up/2',[]],['fun','riak_core','riak_core_node_watcher:services/0',[]],['fun','riak_core','riak_core_node_watcher:services/1',[]],['fun','riak_core','riak_core_node_watcher:start_link/0',[]],['fun','riak_core','riak_core_node_watcher:terminate/2',[]],['fun','riak_core','riak_core_node_watcher_events:add_callback/1',[]],['fun','riak_core','riak_core_node_watcher_events:add_handler/2',[]],['fun','riak_core','riak_core_node_watcher_events:add_sup_callback/1',[]],['fun','riak_core','riak_core_node_watcher_events:add_sup_handler/2',[]],['fun','riak_core','riak_core_node_watcher_events:code_change/3',[]],['fun','riak_core','riak_core_node_watcher_events:handle_call/2',[]],['fun','riak_core','riak_core_node_watcher_events:handle_event/2',[]],['fun','riak_core','riak_core_node_watcher_events:handle_info/2',[]],['fun','riak_core','riak_core_node_watcher_events:init/1',[]],['fun','riak_core','riak_core_node_watcher_events:service_update/1',[]],['fun','riak_core','riak_core_node_watcher_events:start_link/0',[]],['fun','riak_core','riak_core_node_watcher_events:terminate/2',[]],['fun','riak_core','riak_core_ring:all_members/1','Produce a list of all nodes that own any partition'],['fun','riak_core','riak_core_ring:all_owners/1','Provide all ownership information in the form of {'],['fun','riak_core','riak_core_ring:all_preflists/1','Provide every preflist in the ring, truncated at N'],['fun','riak_core','riak_core_ring:diff_nodes/1','For two rings, return the list of owners that have'],['fun','riak_core','riak_core_ring:equal_rings/1',[]],['fun','riak_core','riak_core_ring:fresh/0','This is used only when this node is creating a bra'],['fun','riak_core','riak_core_ring:fresh/1','Equivalent to fresh/1 but allows specification of '],['fun','riak_core','riak_core_ring:fresh/1','Equivalent to fresh/0 but allows specification of '],['fun','riak_core','riak_core_ring:get_meta/1','Return a value from the cluster metadata dict.'],['fun','riak_core','riak_core_ring:index_owner/1','Return the node that owns the given index.'],['fun','riak_core','riak_core_ring:my_indices/1','Return all partition indices owned by the node exe'],['fun','riak_core','riak_core_ring:num_partitions/1','Return the number of partitions in this Riak ring.'],['fun','riak_core','riak_core_ring:owner_node/1','Return the node that is responsible for a given ch'],['fun','riak_core','riak_core_ring:preflist/1','For a given object key, produce the ordered list o'],['fun','riak_core','riak_core_ring:random_node/1','Return a randomly-chosen node from amongst the own'],['fun','riak_core','riak_core_ring:random_other_index/1',[]],['fun','riak_core','riak_core_ring:random_other_index/1','Return a partition index not owned by the node exe'],['fun','riak_core','riak_core_ring:random_other_node/1','Return a randomly-chosen node from amongst the own'],['fun','riak_core','riak_core_ring:reconcile/1','Incorporate another nodes state into our view of '],['fun','riak_core','riak_core_ring:rename_node/1',' Rename OldNode to NewNode in a Riak ring.'],['fun','riak_core','riak_core_ring:transfer_node/1',[]],['fun','riak_core','riak_core_ring:update_meta/1','Set a key in the cluster metadata dict.'],['fun','riak_core','riak_core_ring_events:add_callback/1',[]],['fun','riak_core','riak_core_ring_events:add_handler/2',[]],['fun','riak_core','riak_core_ring_events:add_sup_callback/1',[]],['fun','riak_core','riak_core_ring_events:add_sup_handler/2',[]],['fun','riak_core','riak_core_ring_events:code_change/3',[]],['fun','riak_core','riak_core_ring_events:force_sync_update/0',[]],['fun','riak_core','riak_core_ring_events:force_update/0',[]],['fun','riak_core','riak_core_ring_events:handle_call/2',[]],['fun','riak_core','riak_core_ring_events:handle_event/2',[]],['fun','riak_core','riak_core_ring_events:handle_info/2',[]],['fun','riak_core','riak_core_ring_events:init/1',[]],['fun','riak_core','riak_core_ring_events:ring_sync_update/1',[]],['fun','riak_core','riak_core_ring_events:ring_update/1',[]],['fun','riak_core','riak_core_ring_events:start_link/0',[]],['fun','riak_core','riak_core_ring_events:terminate/2',[]],['fun','riak_core','riak_core_ring_handler:code_change/3',[]],['fun','riak_core','riak_core_ring_handler:handle_call/2',[]],['fun','riak_core','riak_core_ring_handler:handle_event/2',[]],['fun','riak_core','riak_core_ring_handler:handle_info/2',[]],['fun','riak_core','riak_core_ring_handler:init/1',[]],['fun','riak_core','riak_core_ring_handler:terminate/2',[]],['fun','riak_core','riak_core_ring_manager:do_write_ringfile/1',[]],['fun','riak_core','riak_core_ring_manager:find_latest_ringfile/0',[]],['fun','riak_core','riak_core_ring_manager:get_my_ring/0',[]],['fun','riak_core','riak_core_ring_manager:handle_call/3',[]],['fun','riak_core','riak_core_ring_manager:handle_cast/2',[]],['fun','riak_core','riak_core_ring_manager:handle_info/2',[]],['fun','riak_core','riak_core_ring_manager:init/1',[]],['fun','riak_core','riak_core_ring_manager:prune_ringfiles/0',[]],['fun','riak_core','riak_core_ring_manager:read_ringfile/1',[]],['fun','riak_core','riak_core_ring_manager:ring_trans/2',[]],['fun','riak_core','riak_core_ring_manager:set_my_ring/1',[]],['fun','riak_core','riak_core_ring_manager:set_ring_global/1',[]],['fun','riak_core','riak_core_ring_manager:start_link/0',[]],['fun','riak_core','riak_core_ring_manager:start_link/1',[]],['fun','riak_core','riak_core_ring_manager:write_ringfile/0',[]],['fun','riak_core','riak_core_ring_util:assign/2','Forcibly assign a partition to a specific node.'],['fun','riak_core','riak_core_ring_util:check_ring/0','Check the local ring for any preflists that do not'],['fun','riak_core','riak_core_ring_util:check_ring/1','Check a ring for any preflists that do not satisfy'],['fun','riak_core','riak_core_sup:init/1',[]],['fun','riak_core','riak_core_sup:start_link/0',[]],['fun','riak_core','riak_core_test_util:setup_mockring1/0',[]],['fun','riak_core','riak_core_util:chash_bucketonly_keyfun/1','Object/ring hashing fun that ignores Key, only use'],['fun','riak_core','riak_core_util:chash_key/1','Create a binary used for determining replica place'],['fun','riak_core','riak_core_util:chash_std_keyfun/1','Default object/ring hashing fun, direct passthroug'],['fun','riak_core','riak_core_util:compare_dates/1','Compare two RFC1123 date strings or two now() tupl'],['fun','riak_core','riak_core_util:integer_to_list/1','Convert an integer to its string representation in'],['fun','riak_core','riak_core_util:make_tmp_dir/0','Create a unique directory in /tmp.'],['fun','riak_core','riak_core_util:mkclientid/1','Create a unique-enough id for vclock clients.'],['fun','riak_core','riak_core_util:moment/0','Get the current "moment".'],['fun','riak_core','riak_core_util:reload_all/1','Ask each member node of the riak ring to reload th'],['fun','riak_core','riak_core_util:rpc_every_member/1','Make an RPC call to the given module and function '],['fun','riak_core','riak_core_util:start_app_deps/1','Start depedent applications of App.'],['fun','riak_core','riak_core_util:str_to_node/1',[]],['fun','riak_core','riak_core_util:unique_id_62/0','Create a random identifying integer, returning its'],['fun','riak_core','riak_core_vnode:active/2',[]],['fun','riak_core','riak_core_vnode:active/3',[]],['fun','riak_core','riak_core_vnode:behaviour_info/1',[]],['fun','riak_core','riak_core_vnode:code_change/4',[]],['fun','riak_core','riak_core_vnode:get_mod_index/1',[]],['fun','riak_core','riak_core_vnode:handle_event/3',[]],['fun','riak_core','riak_core_vnode:handle_info/3',[]],['fun','riak_core','riak_core_vnode:handle_sync_event/4',[]],['fun','riak_core','riak_core_vnode:init/1',[]],['fun','riak_core','riak_core_vnode:reply/1','Send a reply to a vnode request.'],['fun','riak_core','riak_core_vnode:send_command/2',[]],['fun','riak_core','riak_core_vnode:send_command_after/1',[]],['fun','riak_core','riak_core_vnode:start_link/2',[]],['fun','riak_core','riak_core_vnode:terminate/3',[]],['fun','riak_core','riak_core_vnode_master:all_nodes/1',[]],['fun','riak_core','riak_core_vnode_master:command/3',[]],['fun','riak_core','riak_core_vnode_master:command/4',[]],['fun','riak_core','riak_core_vnode_master:get_vnode_pid/2',[]],['fun','riak_core','riak_core_vnode_master:handle_call/3',[]],['fun','riak_core','riak_core_vnode_master:handle_cast/2',[]],['fun','riak_core','riak_core_vnode_master:handle_info/2',[]],['fun','riak_core','riak_core_vnode_master:make_request/1',[]],['fun','riak_core','riak_core_vnode_master:reg_name/1',[]],['fun','riak_core','riak_core_vnode_master:start_link/1',[]],['fun','riak_core','riak_core_vnode_master:start_link/2',[]],['fun','riak_core','riak_core_vnode_master:start_vnode/2',[]],['fun','riak_core','riak_core_vnode_master:sync_command/3',[]],['fun','riak_core','riak_core_vnode_master:sync_command/4',[]],['fun','riak_core','riak_core_vnode_master:sync_spawn_command/3',[]],['fun','riak_core','riak_core_vnode_sup:start_link/0',[]],['fun','riak_core','riak_core_vnode_sup:start_vnode/2',[]],['fun','riak_core','riak_core_web:bindings/1',[]],['fun','riak_core','riak_core_web:old_binding/0',[]],['fun','riak_core','riak_core_wm_urlmap:content_types_provided/2',[]],['fun','riak_core','riak_core_wm_urlmap:init/1',[]],['fun','riak_core','riak_core_wm_urlmap:ping/2',[]],['fun','riak_core','riak_core_wm_urlmap:resource_exists/2',[]],['fun','riak_core','riak_core_wm_urlmap:to_html/2',[]],['fun','riak_core','riak_core_wm_urlmap:to_json/2',[]],['fun','riak_core','slide:fresh/0','Equivalent to fresh(60).'],['fun','riak_core','slide:fresh/1','Create an empty slide for tracking Window-seconds '],['fun','riak_core','slide:fresh/1','Equivalent to fresh(Window, Window * 2).'],['fun','riak_core','slide:mean/1','Mean of readings from Moment through Seconds secon'],['fun','riak_core','slide:mean/1','Mean of readings from Moment through Window second'],['fun','riak_core','slide:mean/1','Mean of readings from now through Window seconds a'],['fun','riak_core','slide:moment/0','Get the current time in seconds.'],['fun','riak_core','slide:nines/1','Median, 95%, 99%, and 100% readings from Moment th'],['fun','riak_core','slide:nines/1','Median, 95%, 99%, and 100% readings from Moment th'],['fun','riak_core','slide:nines/1','Median, 95%, 99%, and 100% readings from now throu'],['fun','riak_core','slide:sum/1','Sum of readings from Moment through Seconds second'],['fun','riak_core','slide:sum/1','Sum of readings from Moment through Window seconds'],['fun','riak_core','slide:sum/1','Sum of readings from now through Window seconds ag'],['fun','riak_core','slide:update/1','Store a new reading.'],['fun','riak_core','slide:update/1','Equivalent to update(S, Reading, moment()).'],['fun','riak_core','spiraltime:fresh/0','Create an empty spiral with which to begin recordi'],['fun','riak_core','spiraltime:fresh/1','Create an empty spiral with which to begin recordi'],['fun','riak_core','spiraltime:incr/1','Add N to the counter of events occurring at Moment'],['fun','riak_core','spiraltime:incr/1','Add N to the counter of events, as recently as pos'],['fun','riak_core','spiraltime:n/0',[]],['fun','riak_core','spiraltime:rep_day/1','Produce the approximate number of entries recorded'],['fun','riak_core','spiraltime:rep_hour/1','Produce the approximate number of entries recorded'],['fun','riak_core','spiraltime:rep_minute/1','Produce the number of entries recorded in the last'],['fun','riak_core','spiraltime:rep_second/1','Produce the number of entries recorded in the last'],['fun','riak_core','spiraltime:rep_week/1','Produce the approximate number of entries recorded'],['fun','riak_core','spiraltime:test_spiraltime/0',[]],['fun','riak_core','vclock:all_nodes/1','Return the list of all nodes that have ever increm'],['fun','riak_core','vclock:descends/1','Return true if Va is a direct descendant of Vb, el'],['fun','riak_core','vclock:equal/1','Compares two VClocks for equality.'],['fun','riak_core','vclock:fresh/0','Create a brand new vclock.'],['fun','riak_core','vclock:get_counter/1','Get the counter value in VClock set from Node.'],['fun','riak_core','vclock:get_timestamp/1','Get the timestamp value in a VClock set from Node.'],['fun','riak_core','vclock:increment/1','Increment VClock at Node.'],['fun','riak_core','vclock:merge/1','Combine all VClocks in the input list into their l'],['fun','riak_core','vclock:prune/1','Possibly shrink the size of a vclock, depending on']];