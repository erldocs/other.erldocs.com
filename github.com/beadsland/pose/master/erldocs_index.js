var index = [['app','pose','pose','[application]'],['mod','pose','gen_command','Generic pose command behaviour.'],['mod','pose','pose','Entry points for running pose-compatible commands.'],['mod','pose','pose_beam','Beam binary utility functions used by pose_code.'],['mod','pose','pose_code','Intuitive module loader, used by pose_command.'],['mod','pose','pose_command','Load command modules and submodules in a single op'],['mod','pose','pose_compile','Module compiler for pose_code.'],['mod','pose','pose_file','File-related utility functions for use by pose_cod'],['mod','pose','pose_open','A pose-command interface for reading and writing f'],['mod','pose','pose_package','Parse transform for inserting import/1 directives '],['mod','pose','pose_shell','Asyncrhonously execute multiple commands under an '],['mod','pose','pose_short','Synchronously execute multiple commands under an o'],['mod','pose','pose_shout','Watch for the creation of a text file, tail it unt'],['mod','pose','pose_stdio','Standard I/O functions underlying interface.hrl ma'],['mod','pose','pose_syntax','Erlang syntax utility functions.'],['mod','pose','posure','Posure package import checker for pose.'],['fun','pose','gen_command:behaviour_info/1',[]],['fun','pose','gen_command:get_version/1','Smart VERSION/1 macro function.'],['fun','pose','gen_command:load_command/1',[]],['fun','pose','gen_command:run/1',[]],['fun','pose','gen_command:start/1',[]],['fun','pose','pose:deps/0','Return project subdirectory in which project depen'],['fun','pose','pose:env/0','Return a record of all pose process environment va'],['fun','pose','pose:env/1','Return a value among the pose process environment '],['fun','pose','pose:init/1','Initialize pose process.'],['fun','pose','pose:iwd/0','Return the initial working directory of the Erlang'],['fun','pose','pose:path/0','Return the current search path for pose command mo'],['fun','pose','pose:run/1',[]],['fun','pose','pose:send_load_warnings/1','Send messages to stderr process detailing any warn'],['fun','pose','pose:setenv/1','Assign a value to a pose process environment varia'],['fun','pose','pose:setpath/1','Set the search path for pose command modules.'],['fun','pose','pose:start/0','Equivalent to start([]).'],['fun','pose','pose:start/1','Start as a blocking function.'],['fun','pose','pose:startenv/0','Initialize system-initial environment variables.'],['fun','pose','pose_beam:get_attribute/1','Get attribute entry of a beam.'],['fun','pose','pose_beam:get_chunk/1','Get data for a chunk of a beam.'],['fun','pose','pose_beam:get_compiler_vsn/0','Get version of compiler currently loaded.'],['fun','pose','pose_beam:get_compiler_vsn/1','Get version of compiler used to create beam.'],['fun','pose','pose_beam:get_module/1','Get module name of a beam.'],['fun','pose','pose_beam:get_module_vsn/1','Get version of a beam.'],['fun','pose','pose_beam:get_package/1','Get package of a beam.'],['fun','pose','pose_beam:get_source/1','Get .erl file source of a beam.'],['fun','pose','pose_beam:slurp_binary/1','Read binary file into memory.'],['fun','pose','pose_code:load_module/1','Locate command on search path supplied by Path par'],['fun','pose','pose_command:load/1','Equivalent to load_command(Command).'],['fun','pose','pose_command:load_command/1','Load a command module and all submodules in the sa'],['fun','pose','pose_compile:ensure_compiled/1','Confirm the most recently compiled binary for a co'],['fun','pose','pose_compile:ensure_compiled/1','Equivalent to ensure_compiled(Command, Dir, false)'],['fun','pose','pose_file:can_read/1','Test if file or directory is readable.'],['fun','pose','pose_file:can_write/1','Test if file or directory is writeable.'],['fun','pose','pose_file:find_parallel_folder/1','Walk absolute directory path, finding where parall'],['fun','pose','pose_file:last_modified/1','Get last date and time file last modified.'],['fun','pose','pose_file:realname/1','Ascend absolute path of a file relative to a given'],['fun','pose','pose_file:realname/1','Ascend absolute path of file relative to current w'],['fun','pose','pose_file:size/1','Get current size of file.'],['fun','pose','pose_file:tempdir/0','Get system temporary directory.'],['fun','pose','pose_file:tempname/0','Get a unique name for a temporary file in the syst'],['fun','pose','pose_file:tempname/1','Get a unique name for a temporary file in the spec'],['fun','pose','pose_file:trim/1','Strip whitespace characters from both ends of stri'],['fun','pose','pose_open:file/1',[]],['fun','pose','pose_open:reader/1',[]],['fun','pose','pose_open:reader/1',[]],['fun','pose','pose_open:writer/1',[]],['fun','pose','pose_open:writer/1',[]],['fun','pose','pose_package:parse_transform/2',[]],['fun','pose','pose_shell:command/1','Send a command to an existing shell process.'],['fun','pose','pose_shell:exit/1','Exit an operating system shell process, upon compl'],['fun','pose','pose_shell:spawn/0','Spawn an operating system shell interface as a new'],['fun','pose','pose_short:script/1','Pass a carriage-return delimited sequence of comma'],['fun','pose','pose_shout:monitor/1','Watch a text file, copying each line written to it'],['fun','pose','pose_stdio:format_erlerr/1','Smartly format erlerr messages.'],['fun','pose','pose_stdio:send_debug/1','Smart DEBUG/2 macro function.'],['fun','pose','pose_stdio:send_debug/1','Smart DEBUG/1 macro function.'],['fun','pose','pose_stdio:send_stderr/1','Smart STDERR/1 macro function.'],['fun','pose','pose_stdio:send_stderr/1','Smart STDERR/2 macro function.'],['fun','pose','pose_stdio:send_stdout/1','Smart STDOUT/1 macro function.'],['fun','pose','pose_stdio:send_stdout/1','Smart STDOUT/2 macro function.'],['fun','pose','pose_syntax:functions/1','List all functions defined in module.'],['fun','pose','pose_syntax:harvest/1','List all items of a specific type in an Erlang sou'],['fun','pose','pose_syntax:qualifiers/1','Uniquely list all modules that qualify function ca'],['fun','pose','posure:run/1',[]],['fun','pose','posure:start/0','Equivalent to start([]).'],['fun','pose','posure:start/1','Start as a blocking function.']];