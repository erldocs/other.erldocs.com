var index = [['app','dingding','dingding','[application]'],['mod','dingding','dd_activity','   Monitors and logs the activity of nicks.'],['mod','dingding','dd_app',[]],['mod','dingding','dd_bb','   Module for the bulletin board system.'],['mod','dingding','dd_command_handler','   Command interface to the bot.'],['mod','dingding','dd_config','   The configuration module for dd.'],['mod','dingding','dd_connection_sup','.'],['mod','dingding','dd_connectionhelper','   Helper module to check for connection timeouts'],['mod','dingding','dd_db_init','   Initializing the database for dd.'],['mod','dingding','dd_dcc','   General helpers.'],['mod','dingding','dd_ddg','   Module for interfacing with DuckDuckGo.'],['mod','dingding','dd_eventserver','   This is a server which you can ask to reply to'],['mod','dingding','dd_example_msghandler','   Example module implementation.'],['mod','dingding','dd_helpers','   General helpers.'],['mod','dingding','dd_imdb','   A module to get information from IMDB through '],['mod','dingding','dd_ircmsg','   Parser module for IRC messages.'],['mod','dingding','dd_le_handler','   Handler module for the le .. commands of the'],['mod','dingding','dd_modules','   Handles the module dispatching.'],['mod','dingding','dd_morning','   Handler for the morning message.'],['mod','dingding','dd_msgq','   Queuing up messages before sending them back o'],['mod','dingding','dd_numbers','   A little module for the numbers api on numbers'],['mod','dingding','dd_pdf','   Module to get data from a pdf file (through pd'],['mod','dingding','dd_rss','   The rss feed generator for dd.'],['mod','dingding','dd_sql','   SQL stuff for working with the database.'],['mod','dingding','dd_sup',[]],['mod','dingding','dd_translation','   Providing translations through the mymemory.tr'],['mod','dingding','dd_url_handler','   Example module implementation.'],['mod','dingding','dd_version',[]],['mod','dingding','dd_versioncheck',[]],['mod','dingding','dd_yftcl','   Module to get all the data from yftcl.'],['mod','dingding','mochijson','Yet another JSON (RFC 4627) library for Erlang.'],['mod','dingding','mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','dingding','mochinum','Useful numeric algorithms for floats that cover so'],['mod','dingding','mochiutf8','Algorithm to convert any binary to a valid UTF-8 s'],['mod','dingding','mochiweb_charref','Converts HTML 5 charrefs and entities to codepoint'],['mod','dingding','mochiweb_html','Loosely tokenizes and generates parse trees for HT'],['mod','dingding','mochiweb_xpath_parser','Compile XPath expressions.'],['mod','dingding','mochiweb_xpath_utils','Utility functions, mainly for type conversion    '],['mod','dingding','reloader','Erlang module for automatically reloading modified'],['fun','dingding','dd_activity:handle_msg/1',[]],['fun','dingding','dd_app:start/0',[]],['fun','dingding','dd_app:start/2',[]],['fun','dingding','dd_app:stop/1',[]],['fun','dingding','dd_bb:get_post_by_number/1',[]],['fun','dingding','dd_command_handler:handle_msg/1',[]],['fun','dingding','dd_command_handler:reply_if_single_tweet/1',[]],['fun','dingding','dd_command_handler:reply_if_single_tweet/1',[]],['fun','dingding','dd_config:load_config/0',[]],['fun','dingding','dd_connection_sup:start_link/0','  Starts the supervisor.'],['fun','dingding','dd_connectionhelper:ping_server/2',[]],['fun','dingding','dd_connectionhelper:start/2',[]],['fun','dingding','dd_db_init:start/0',[]],['fun','dingding','dd_ddg:definition/1',[]],['fun','dingding','dd_ddg:related_topics/1',[]],['fun','dingding','dd_eventserver:start_link/0','  Starts the server.'],['fun','dingding','dd_example_msghandler:handle_msg/1','  ReplyPid is the Pid on which to send the reply '],['fun','dingding','dd_helpers:add_item_to_proplist_value/3','  When you have a proplist that contains {string('],['fun','dingding','dd_helpers:diff2now/1',[]],['fun','dingding','dd_helpers:format_time/0',[]],['fun','dingding','dd_helpers:format_time/1',[]],['fun','dingding','dd_helpers:get_db_pid/0',[]],['fun','dingding','dd_helpers:get_urls/1',[]],['fun','dingding','dd_helpers:http_get/1',[]],['fun','dingding','dd_helpers:http_head/1',[]],['fun','dingding','dd_helpers:iso_8601_fmt/1',[]],['fun','dingding','dd_helpers:module_exists/1',[]],['fun','dingding','dd_helpers:ppsec2utc/1',[]],['fun','dingding','dd_helpers:pptimediff/1',[]],['fun','dingding','dd_helpers:remove_item_from_proplist_value/3','  This does the reverse of the adding function.'],['fun','dingding','dd_helpers:request_version/1',[]],['fun','dingding','dd_helpers:request_whois/1',[]],['fun','dingding','dd_helpers:sec2utc/1',[]],['fun','dingding','dd_helpers:utc2sec/0',[]],['fun','dingding','dd_imdb:info_if_imdb_url/1',[]],['fun','dingding','dd_imdb:movie_info/1',[]],['fun','dingding','dd_imdb:movie_info_by_id/1',[]],['fun','dingding','dd_imdb:movie_sort/2',[]],['fun','dingding','dd_imdb:newest_movie/1',[]],['fun','dingding','dd_imdb:oldest_movie/1',[]],['fun','dingding','dd_imdb:scrape/1',[]],['fun','dingding','dd_ircmsg:arguments/1',[]],['fun','dingding','dd_ircmsg:command/1',[]],['fun','dingding','dd_ircmsg:create/1',[]],['fun','dingding','dd_ircmsg:is_numeric/1','  Returns {true, integer()} when the ircmsg{} is '],['fun','dingding','dd_ircmsg:nick/1','  Retrieves the nickname from an ircmsg{} record.'],['fun','dingding','dd_ircmsg:nick_from_prefix/1',[]],['fun','dingding','dd_ircmsg:parse_line/1','  Converts the binary line that comes from the se'],['fun','dingding','dd_ircmsg:parse_packet/1','  A packet is just a list of lines.'],['fun','dingding','dd_ircmsg:prefix/1',[]],['fun','dingding','dd_ircmsg:show/1','  Displays the ircmsg{} on screen.'],['fun','dingding','dd_ircmsg:tail/1',[]],['fun','dingding','dd_ircmsg:to_line/1','  Converts an ircmsg{} back to a binary line so i'],['fun','dingding','dd_le_handler:handle_msg/1',[]],['fun','dingding','dd_modules:add_module/2',[]],['fun','dingding','dd_modules:dispatch/3',[]],['fun','dingding','dd_modules:remove_module/2',[]],['fun','dingding','dd_modules:show_modules/1',[]],['fun','dingding','dd_morning:handle_msg/1',[]],['fun','dingding','dd_msgq:start/1',[]],['fun','dingding','dd_numbers:math/1',[]],['fun','dingding','dd_numbers:trivia/1',[]],['fun','dingding','dd_rss:create_xml_file/0',[]],['fun','dingding','dd_rss:item_node/3',[]],['fun','dingding','dd_rss:item_node/4',[]],['fun','dingding','dd_rss:store/3',[]],['fun','dingding','dd_rss:store_and_publish/3',[]],['fun','dingding','dd_rss:utcnow/0',[]],['fun','dingding','dd_sup:init/1',[]],['fun','dingding','dd_sup:start_link/0',[]],['fun','dingding','dd_translation:translate/1',[]],['fun','dingding','dd_url_handler:get_page_title/1',[]],['fun','dingding','dd_url_handler:handle_msg/1','  Prefix is the part that contains the nickname a'],['fun','dingding','dd_url_handler:type_and_size/1',[]],['fun','dingding','dd_version:handle_msg/1','  Prefix is the part that contains the nickname a'],['fun','dingding','dd_versioncheck:handle_msg/5','  Prefix is the part that contains the nickname a'],['fun','dingding','dd_yftcl:handle_msg/1',[]],['fun','dingding','mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','dingding','mochijson2:decode/1','Decode the given iolist to Erlang terms using the '],['fun','dingding','mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','dingding','mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','dingding','mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','dingding','mochijson:binary_decode/1','Decode the given iolist to Erlang terms, using lis'],['fun','dingding','mochijson:binary_decoder/1','Create a binary_decoder/1 with the given options.'],['fun','dingding','mochijson:binary_encode/1','Encode the given as JSON to an iolist, using lists'],['fun','dingding','mochijson:binary_encoder/1','Create a binary_encoder/1 with the given options.'],['fun','dingding','mochijson:decode/1','Decode the given iolist to Erlang terms.'],['fun','dingding','mochijson:decoder/1','Create a decoder/1 with the given options.'],['fun','dingding','mochijson:encode/1','Encode the given as JSON to an iolist.'],['fun','dingding','mochijson:encoder/1','Create an encoder/1 with the given options.'],['fun','dingding','mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','dingding','mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','dingding','mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','dingding','mochinum:int_pow/1',' Moderately efficient way to exponentiate integers'],['fun','dingding','mochiutf8:bytes_foldl/1',[]],['fun','dingding','mochiutf8:bytes_to_codepoints/1',[]],['fun','dingding','mochiutf8:codepoint_foldl/1',[]],['fun','dingding','mochiutf8:codepoint_to_bytes/1','Convert a unicode codepoint to UTF-8 bytes.'],['fun','dingding','mochiutf8:codepoints_to_bytes/1','Convert a list of codepoints to a UTF-8 binary.'],['fun','dingding','mochiutf8:len/1',[]],['fun','dingding','mochiutf8:read_codepoint/1',[]],['fun','dingding','mochiutf8:valid_utf8_bytes/1','Return only the bytes in B that represent valid UT'],['fun','dingding','mochiweb_charref:charref/1','Convert a decimal charref, hex charref, or html en'],['fun','dingding','mochiweb_html:escape/1','Escape a string such that its safe for HTML (amp;'],['fun','dingding','mochiweb_html:escape_attr/1','Escape a string such that its safe for HTML attrs'],['fun','dingding','mochiweb_html:parse/1','tokenize and then transform the token stream into '],['fun','dingding','mochiweb_html:parse_tokens/1','Transform the output of tokens(Doc) into a HTML tr'],['fun','dingding','mochiweb_html:to_html/1','Convert a list of html_token() to a HTML document.'],['fun','dingding','mochiweb_html:to_tokens/1','Convert a html_node() tree to a list of tokens.'],['fun','dingding','mochiweb_html:tokens/1','Transform the input UTF-8 HTML into a token stream'],['fun','dingding','mochiweb_xpath_parser:compile_xpath/1',[]],['fun','dingding','mochiweb_xpath_utils:boolean_value/1',[]],['fun','dingding','mochiweb_xpath_utils:convert/2',[]],['fun','dingding','mochiweb_xpath_utils:node_set_value/1',[]],['fun','dingding','mochiweb_xpath_utils:number_value/1',[]],['fun','dingding','mochiweb_xpath_utils:string_value/1',[]],['fun','dingding','reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','dingding','reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','dingding','reloader:handle_call/3','gen_server callback.'],['fun','dingding','reloader:handle_cast/2','gen_server callback.'],['fun','dingding','reloader:handle_info/2','gen_server callback.'],['fun','dingding','reloader:init/1','gen_server init, opens the server in an initial st'],['fun','dingding','reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','dingding','reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','dingding','reloader:start/0','Start the reloader.'],['fun','dingding','reloader:start_link/0','Start the reloader.'],['fun','dingding','reloader:stop/0','Stop the reloader.'],['fun','dingding','reloader:terminate/2','gen_server termination callback.']];