var index = [['app','ematrix','ematrix','[application]'],['mod','ematrix','matrix','A library of matrix functions  ------------------'],['fun','ematrix','matrix:add/1','Ordinary matrix addition (scalar).'],['fun','ematrix','matrix:all/1','True if the value of all cells pass the predicate.'],['fun','ematrix','matrix:column/1','The vector representing the column at the given in'],['fun','ematrix','matrix:diagonal/1','Each element at (i,j) such that i = j.'],['fun','ematrix','matrix:dot/1','Ordinary vector dot product.'],['fun','ematrix','matrix:fold/1','A value constructed by reducing the values of the '],['fun','ematrix','matrix:from_list/1','A matrix generated from a list of lists of numbers'],['fun','ematrix','matrix:generate/1','Generates a matrix given a function taking the cur'],['fun','ematrix','matrix:get/1','Gets the contents of the cell at the given positio'],['fun','ematrix','matrix:identity/1','A matrix with 1s on the diagonal, 0s elsewhere.'],['fun','ematrix','matrix:is_equal/2','True if for Matrix1(i,j) == Matrix2(i,j) for all ('],['fun','ematrix','matrix:is_square/1','True if the matrix is square, false otherwise.'],['fun','ematrix','matrix:map/1','A matrix created from a mapping function.'],['fun','ematrix','matrix:mult/1','Ordinary matrix multiplication (scalar).'],['fun','ematrix','matrix:new/1','An matrix with all cells initialized to 0.'],['fun','ematrix','matrix:row/1','The vector representing the row at the given index'],['fun','ematrix','matrix:size/1','The number of rows and columns of the matrix.'],['fun','ematrix','matrix:to_list/1','Serializes a matrix to a list of lists (rows).'],['fun','ematrix','matrix:trace/1','The sum of the diagonal of the matrix.'],['fun','ematrix','matrix:transpose/1','A matrix such that the value at (i,j) is the value'],['fun','ematrix','matrix:zipwith/1','Combines two matrices given a function.']];