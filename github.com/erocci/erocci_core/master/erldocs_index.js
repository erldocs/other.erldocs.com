var index = [['app','erocci_core','erocci_core','[application]'],['mod','erocci_core','occi','occi startup code.'],['mod','erocci_core','occi_acl','.'],['mod','erocci_core','occi_app','.'],['mod','erocci_core','occi_config','Config has 2 sources:    - application env    - '],['mod','erocci_core','occi_hook','.'],['mod','erocci_core','occi_known',[]],['mod','erocci_core','occi_listener','.'],['mod','erocci_core','occi_store','occi_store uses 2 structures to store mountpoints '],['mod','erocci_core','occi_sup','Supervisor for the occi core application.'],['mod','erocci_core','occi_table_mgr',[]],['mod','erocci_core','reloader','Erlang module for automatically reloading modified'],['fun','erocci_core','occi:config/1',[]],['fun','erocci_core','occi:ensure_all_started/1',[]],['fun','erocci_core','occi:ensure_started/1',[]],['fun','erocci_core','occi:start/0','Start the occi server.'],['fun','erocci_core','occi:stop/0','Stop the occi server.'],['fun','erocci_core','occi_acl:check/1',[]],['fun','erocci_core','occi_config:gen_id/1',[]],['fun','erocci_core','occi_config:get/1',[]],['fun','erocci_core','occi_config:get/2',[]],['fun','erocci_core','occi_config:load/1','Config is a proplist, which can be overriden by ap'],['fun','erocci_core','occi_config:set/2',[]],['fun','erocci_core','occi_config:start_link/0',[]],['fun','erocci_core','occi_hook:loop/0',[]],['fun','erocci_core','occi_hook:register/1',[]],['fun','erocci_core','occi_hook:start_link/0',[]],['fun','erocci_core','occi_hook:trigger/1',[]],['fun','erocci_core','occi_known:attr_to_atom/1',[]],['fun','erocci_core','occi_known:class_to_atom/1',[]],['fun','erocci_core','occi_known:hdr_to_atom/1',[]],['fun','erocci_core','occi_known:scheme_to_atom/1',[]],['fun','erocci_core','occi_known:term_to_atom/1',[]],['fun','erocci_core','occi_listener:register/1',[]],['fun','erocci_core','occi_listener:start_link/0','  Starts the supervisor.'],['fun','erocci_core','occi_store:action/2',[]],['fun','erocci_core','occi_store:delete/1',[]],['fun','erocci_core','occi_store:find/1',[]],['fun','erocci_core','occi_store:get/1',[]],['fun','erocci_core','occi_store:init/1',[]],['fun','erocci_core','occi_store:load/1',[]],['fun','erocci_core','occi_store:load/1',[]],['fun','erocci_core','occi_store:register/1',[]],['fun','erocci_core','occi_store:save/1',[]],['fun','erocci_core','occi_store:save/1',[]],['fun','erocci_core','occi_store:start_link/0','  Starts the server.'],['fun','erocci_core','occi_store:update/1',[]],['fun','erocci_core','occi_sup:init/1','supervisor callback.'],['fun','erocci_core','occi_sup:start_link/0','API for starting the supervisor.'],['fun','erocci_core','occi_table_mgr:delete/1',[]],['fun','erocci_core','occi_table_mgr:new/1',[]],['fun','erocci_core','occi_table_mgr:start_link/0',[]],['fun','erocci_core','reloader:all_changed/0','Return a list of beam modules that have changed.'],['fun','erocci_core','reloader:code_change/3','gen_server code_change callback (trivial).'],['fun','erocci_core','reloader:handle_call/3','gen_server callback.'],['fun','erocci_core','reloader:handle_cast/2','gen_server callback.'],['fun','erocci_core','reloader:handle_info/2','gen_server callback.'],['fun','erocci_core','reloader:init/1','gen_server init, opens the server in an initial st'],['fun','erocci_core','reloader:is_changed/1','true if the loaded module is a beam with a vsn att'],['fun','erocci_core','reloader:reload_modules/1','code:purge/1 and code:load_file/1 the given list o'],['fun','erocci_core','reloader:start/0','Start the reloader.'],['fun','erocci_core','reloader:start_link/0','Start the reloader.'],['fun','erocci_core','reloader:stop/0','Stop the reloader.'],['fun','erocci_core','reloader:terminate/2','gen_server termination callback.']];