var index = [['app','fbq','fbq','[application]'],['mod','fbq','couchbeam',[]],['mod','fbq','couchbeam_app',[]],['mod','fbq','couchbeam_attachments','This module contains utilities to manage attachmen'],['mod','fbq','couchbeam_changes',[]],['mod','fbq','couchbeam_deps',[]],['mod','fbq','couchbeam_doc',[]],['mod','fbq','couchbeam_ejson',[]],['mod','fbq','couchbeam_httpc',[]],['mod','fbq','couchbeam_json_stream',[]],['mod','fbq','couchbeam_sup',[]],['mod','fbq','couchbeam_util',[]],['mod','fbq','couchbeam_uuids',[]],['mod','fbq','couchbeam_view',[]],['mod','fbq','fbq_app','Erlang Application to regulate calls to facebook a'],['mod','fbq','fbq_channel_sup',[]],['mod','fbq','fbq_couchdb',[]],['mod','fbq','fbq_diagnostics',[]],['mod','fbq','fbq_ibrowse',[]],['mod','fbq','fbq_monitor_server',[]],['mod','fbq','fbq_rabbit',[]],['mod','fbq','fbq_server',[]],['mod','fbq','fbq_server_monitor',[]],['mod','fbq','fbq_sup',[]],['mod','fbq','fbq_webops',[]],['mod','fbq','gen_changes','gen_changes CouchDB continuous changes consumer be'],['mod','fbq','mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','fbq','mochinum','Useful numeric algorithms for floats that cover so'],['fun','fbq','couchbeam:all_dbs/1','get list of databases on a CouchDB node.'],['fun','fbq','couchbeam:all_docs/1','get all documents from a CouchDB database.'],['fun','fbq','couchbeam:all_docs/1','get all documents from a CouchDB database.'],['fun','fbq','couchbeam:compact/1','Like compact/1 but this compacts the view index fr'],['fun','fbq','couchbeam:compact/1','Compaction compresses the database file by removin'],['fun','fbq','couchbeam:create_db/1','Create a database and a client for connectiong to '],['fun','fbq','couchbeam:create_db/2','Create a database and a client for connectiong to '],['fun','fbq','couchbeam:create_db/3','Create a database and a client for connectiong to '],['fun','fbq','couchbeam:db_exists/1','test if db with dbname exists on the CouchDB node.'],['fun','fbq','couchbeam:db_info/1','get database info.'],['fun','fbq','couchbeam:db_request/4',[]],['fun','fbq','couchbeam:db_request/5',[]],['fun','fbq','couchbeam:db_request/6',[]],['fun','fbq','couchbeam:db_url/1',[]],['fun','fbq','couchbeam:delete_attachment/3','delete a document attachment.'],['fun','fbq','couchbeam:delete_attachment/4','delete a document attachment.'],['fun','fbq','couchbeam:delete_db/1','delete database.'],['fun','fbq','couchbeam:delete_db/1','delete database.'],['fun','fbq','couchbeam:delete_doc/2','delete a document.'],['fun','fbq','couchbeam:delete_doc/3','delete a document  if you want to make sure the d'],['fun','fbq','couchbeam:delete_docs/1','delete a list of documents  if you want to make s'],['fun','fbq','couchbeam:delete_docs/2','delete a list of documents.'],['fun','fbq','couchbeam:doc_exists/1','test if doc with uuid exists in the given db.'],['fun','fbq','couchbeam:doc_url/2',[]],['fun','fbq','couchbeam:ensure_full_commit/1','commit all docs in memory.'],['fun','fbq','couchbeam:ensure_full_commit/1','commit all docs in memory.'],['fun','fbq','couchbeam:fetch_attachment/1','fetch a document attachment.'],['fun','fbq','couchbeam:fetch_attachment/3','fetch a document attachment.'],['fun','fbq','couchbeam:fetch_attachment/4','fetch a document attachment.'],['fun','fbq','couchbeam:get_uuid/1','Get one uuid from the server.'],['fun','fbq','couchbeam:get_uuids/1','Get a list of uuids from the server.'],['fun','fbq','couchbeam:lookup_doc_rev/2',[]],['fun','fbq','couchbeam:lookup_doc_rev/3',[]],['fun','fbq','couchbeam:make_url/3',[]],['fun','fbq','couchbeam:open_db/1','Create a client for connection to a database.'],['fun','fbq','couchbeam:open_db/2','Create a client for connection to a database.'],['fun','fbq','couchbeam:open_doc/1','open a document  Params is a list of query argume'],['fun','fbq','couchbeam:open_doc/2','open a document.'],['fun','fbq','couchbeam:open_or_create_db/1','Create a client for connecting to a database and c'],['fun','fbq','couchbeam:open_or_create_db/2','Create a client for connecting to a database and c'],['fun','fbq','couchbeam:open_or_create_db/3','Create a client for connecting to a database and c'],['fun','fbq','couchbeam:put_attachment/1','put an attachment.'],['fun','fbq','couchbeam:put_attachment/4','put an attachment.'],['fun','fbq','couchbeam:replicate/1','Handle replication.'],['fun','fbq','couchbeam:replicate/1','Handle replication.'],['fun','fbq','couchbeam:replicate/4','handle Replication.'],['fun','fbq','couchbeam:save_doc/1','save a document  A document is a Json object like'],['fun','fbq','couchbeam:save_doc/2','save a document.'],['fun','fbq','couchbeam:save_docs/1','save a list of documents.'],['fun','fbq','couchbeam:save_docs/2','save a list of documents.'],['fun','fbq','couchbeam:server_connection/0','Create a server for connectiong to a CouchDB node.'],['fun','fbq','couchbeam:server_connection/1','Create a server for connectiong to a CouchDB node.'],['fun','fbq','couchbeam:server_connection/2','Create a server for connectiong to a CouchDB node.'],['fun','fbq','couchbeam:server_info/1','Get Information from the server.'],['fun','fbq','couchbeam:server_url/2','Asemble the server URL for the given client.'],['fun','fbq','couchbeam:start/0','Start the couchbeam process.'],['fun','fbq','couchbeam:stop/0','Stop the couchbeam process.'],['fun','fbq','couchbeam:stream_fetch_attachment/1','stream fetch attachment to a Pid.'],['fun','fbq','couchbeam:stream_fetch_attachment/4','stream fetch attachment to a Pid.'],['fun','fbq','couchbeam:stream_fetch_attachment/5','stream fetch attachment to a Pid.'],['fun','fbq','couchbeam:uuids_url/1',[]],['fun','fbq','couchbeam:version/0','Return the version of the application.'],['fun','fbq','couchbeam:view/1','get view results from database.'],['fun','fbq','couchbeam:view/2',' get view results from database.'],['fun','fbq','couchbeam_app:start/2',[]],['fun','fbq','couchbeam_app:stop/1',[]],['fun','fbq','couchbeam_attachments:add_inline/1','add attachment  to a doc and encode it with Conten'],['fun','fbq','couchbeam_attachments:add_inline/1','add attachment  to a doc and encode it.'],['fun','fbq','couchbeam_attachments:attachment_acceptor/3','initiate attachment fetching.'],['fun','fbq','couchbeam_attachments:delete_inline/1','delete an attachment record in doc.'],['fun','fbq','couchbeam_attachments:wait_for_attachment/2','collect all attachments chunks.'],['fun','fbq','couchbeam_changes:changes_loop/1',[]],['fun','fbq','couchbeam_changes:fetch/1','Collect Changes.'],['fun','fbq','couchbeam_changes:fetch/1','Equivalent to fetch(Db, []).'],['fun','fbq','couchbeam_changes:parse_changes_options/1','parse changes options and return a changes_args re'],['fun','fbq','couchbeam_changes:stream/1','Stream changes to a pid.'],['fun','fbq','couchbeam_changes:stream/1','Equivalent to stream(Db, Client, []).'],['fun','fbq','couchbeam_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','fbq','couchbeam_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','fbq','couchbeam_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','fbq','couchbeam_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','fbq','couchbeam_deps:get_base_dir/1','Return the application directory for Module.'],['fun','fbq','couchbeam_deps:local_path/1','Return an application-relative directory for this '],['fun','fbq','couchbeam_deps:local_path/1','Return an application-relative directory from Modu'],['fun','fbq','couchbeam_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','fbq','couchbeam_doc:delete_value/1','Deletes all entries associated with Key in json ob'],['fun','fbq','couchbeam_doc:extend/1','extend a jsonobject by a property, list of propert'],['fun','fbq','couchbeam_doc:extend/1','extend a jsonobject by key, value.'],['fun','fbq','couchbeam_doc:get_id/1','get document id.'],['fun','fbq','couchbeam_doc:get_idrev/1','get  a tuple containing docucment id and revision.'],['fun','fbq','couchbeam_doc:get_rev/1','get document revision.'],['fun','fbq','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','fbq','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','fbq','couchbeam_doc:is_saved/1','If document have been saved (revision is defined) '],['fun','fbq','couchbeam_doc:set_value/1','set a value for a key in jsonobj.'],['fun','fbq','couchbeam_doc:take_value/1','Returns the value of a simple key/value property i'],['fun','fbq','couchbeam_doc:take_value/1','Returns the value of a simple key/value property i'],['fun','fbq','couchbeam_ejson:decode/1','decode a binary to an EJSON term.'],['fun','fbq','couchbeam_ejson:encode/1','encode an erlang term to JSON.'],['fun','fbq','couchbeam_ejson:erl_decode/1',[]],['fun','fbq','couchbeam_ejson:erl_encode/1',[]],['fun','fbq','couchbeam_httpc:clean_mailbox_req/1',[]],['fun','fbq','couchbeam_httpc:redirect_url/2',[]],['fun','fbq','couchbeam_httpc:request/4','send an ibrowse request.'],['fun','fbq','couchbeam_httpc:request/5',[]],['fun','fbq','couchbeam_httpc:request/6',[]],['fun','fbq','couchbeam_httpc:request_stream/4','stream an ibrowse request.'],['fun','fbq','couchbeam_httpc:request_stream/5',[]],['fun','fbq','couchbeam_httpc:request_stream/6',[]],['fun','fbq','couchbeam_json_stream:collect_object/2',[]],['fun','fbq','couchbeam_json_stream:events/2',[]],['fun','fbq','couchbeam_json_stream:to_ejson/1',[]],['fun','fbq','couchbeam_sup:init/1',[]],['fun','fbq','couchbeam_sup:start_link/0',[]],['fun','fbq','couchbeam_util:deprecated/3',[]],['fun','fbq','couchbeam_util:encode_att_name/1',[]],['fun','fbq','couchbeam_util:encode_docid/1',[]],['fun','fbq','couchbeam_util:encode_docid1/1',[]],['fun','fbq','couchbeam_util:encode_docid_noop/1',[]],['fun','fbq','couchbeam_util:encode_query/1','Encode needed value of Query proplists in json.'],['fun','fbq','couchbeam_util:encode_query_value/2','Encode value in JSON if needed depending on the ke'],['fun','fbq','couchbeam_util:get_app_env/2',[]],['fun','fbq','couchbeam_util:get_value/1',[]],['fun','fbq','couchbeam_util:get_value/1','emulate proplists:get_value/2,3 but use faster lis'],['fun','fbq','couchbeam_util:oauth_header/3',[]],['fun','fbq','couchbeam_util:parse_options/1','make view options a list.'],['fun','fbq','couchbeam_util:parse_options/2',[]],['fun','fbq','couchbeam_util:propmerge/3','merge 2 proplists.'],['fun','fbq','couchbeam_util:propmerge1/2','Update a proplist with values of the second.'],['fun','fbq','couchbeam_util:shutdown_sync/1',[]],['fun','fbq','couchbeam_util:start_app_deps/1','Start depedent applications of App.'],['fun','fbq','couchbeam_util:to_atom/1',[]],['fun','fbq','couchbeam_util:to_binary/1',[]],['fun','fbq','couchbeam_util:to_integer/1',[]],['fun','fbq','couchbeam_util:to_list/1',[]],['fun','fbq','couchbeam_uuids:code_change/3',[]],['fun','fbq','couchbeam_uuids:get_uuids/1','Get a list of uuids from the server.'],['fun','fbq','couchbeam_uuids:handle_call/3',[]],['fun','fbq','couchbeam_uuids:handle_cast/2',[]],['fun','fbq','couchbeam_uuids:handle_info/2',[]],['fun','fbq','couchbeam_uuids:start_link/0','Starts the couchbeam process linked to the calling'],['fun','fbq','couchbeam_uuids:terminate/2',[]],['fun','fbq','couchbeam_view:all/1','fetch all docs.'],['fun','fbq','couchbeam_view:all/1','fetch all docs.'],['fun','fbq','couchbeam_view:count/1','count number of doc in a view (or all docs).'],['fun','fbq','couchbeam_view:count/1','Equivalent to count(Db, ViewName, []).'],['fun','fbq','couchbeam_view:count/1','Equivalent to count(Db, all_docs, []).'],['fun','fbq','couchbeam_view:fetch/1','Collect view results.'],['fun','fbq','couchbeam_view:fetch/1','Equivalent to fetch(Db, ViewName, []).'],['fun','fbq','couchbeam_view:fetch/1','Equivalent to fetch(Db, all_docs, []).'],['fun','fbq','couchbeam_view:first/1','get first result of a view.'],['fun','fbq','couchbeam_view:first/1','Equivalent to first(Db, ViewName, []).'],['fun','fbq','couchbeam_view:first/1','Equivalent to first(Db, all_docs, []).'],['fun','fbq','couchbeam_view:fold/1','call Function(Row, AccIn) on succesive row, starti'],['fun','fbq','couchbeam_view:fold/1','Equivalent to fold(Function, Acc, Db, ViewName, []'],['fun','fbq','couchbeam_view:foreach/1','call Function(Row) on succesive row.'],['fun','fbq','couchbeam_view:foreach/1','Equivalent to foreach(Function, Db, ViewName, []).'],['fun','fbq','couchbeam_view:parse_view_options/1','parse view options.'],['fun','fbq','couchbeam_view:stream/1','stream view results to a pid.'],['fun','fbq','couchbeam_view:stream/1','Equivalent to stream(Db, ViewName, Client, []).'],['fun','fbq','couchbeam_view:stream/1','Equivalent to stream(Db, all_docs, Client, []).'],['fun','fbq','couchbeam_view:view_loop/2',[]],['fun','fbq','fbq_app:start/2','Start the main supervisor which inturn starts mult'],['fun','fbq','fbq_app:stop/1','stop the supervisor.'],['fun','fbq','fbq_channel_sup:init/1',[]],['fun','fbq','fbq_channel_sup:start_link/1',[]],['fun','fbq','fbq_couchdb:update_doc/2',[]],['fun','fbq','fbq_diagnostics:check_queue_exist/2',[]],['fun','fbq','fbq_diagnostics:check_rabbit_queues/1',[]],['fun','fbq','fbq_diagnostics:check_rabbit_server/1',[]],['fun','fbq','fbq_diagnostics:check_standard_queue_exist/1',[]],['fun','fbq','fbq_diagnostics:declare_existing_queue/2',[]],['fun','fbq','fbq_diagnostics:get_rabbit_queue_names/1',[]],['fun','fbq','fbq_diagnostics:messages_in_queue/1',[]],['fun','fbq','fbq_ibrowse:parse_message/2',[]],['fun','fbq','fbq_monitor_server:code_change/3',[]],['fun','fbq','fbq_monitor_server:handle_call/3',[]],['fun','fbq','fbq_monitor_server:handle_cast/2',[]],['fun','fbq','fbq_monitor_server:handle_info/2',[]],['fun','fbq','fbq_monitor_server:init/1',[]],['fun','fbq','fbq_monitor_server:start_link/2',[]],['fun','fbq','fbq_monitor_server:stop/0',[]],['fun','fbq','fbq_monitor_server:terminate/2',[]],['fun','fbq','fbq_rabbit:call_supervisor_to_bindqueues/3',[]],['fun','fbq','fbq_rabbit:monitor_server_for_queues/3',[]],['fun','fbq','fbq_rabbit:receive_a_message/0',[]],['fun','fbq','fbq_rabbit:receive_messages/1',[]],['fun','fbq','fbq_server:code_change/3',[]],['fun','fbq','fbq_server:handle_call/3',[]],['fun','fbq','fbq_server:handle_cast/2',[]],['fun','fbq','fbq_server:handle_info/2',[]],['fun','fbq','fbq_server:init/1',[]],['fun','fbq','fbq_server:start_link/2',[]],['fun','fbq','fbq_server:stop/0',[]],['fun','fbq','fbq_server:terminate/2',[]],['fun','fbq','fbq_server_monitor:code_change/3',[]],['fun','fbq','fbq_server_monitor:handle_call/3',[]],['fun','fbq','fbq_server_monitor:handle_cast/2',[]],['fun','fbq','fbq_server_monitor:handle_info/2',[]],['fun','fbq','fbq_server_monitor:init/1',[]],['fun','fbq','fbq_server_monitor:loop/0',[]],['fun','fbq','fbq_server_monitor:start_link/4',[]],['fun','fbq','fbq_server_monitor:stop/0',[]],['fun','fbq','fbq_server_monitor:terminate/2',[]],['fun','fbq','fbq_sup:init/1','Init Callback.'],['fun','fbq','fbq_sup:start_link/0','start the main supervisor.'],['fun','fbq','fbq_sup:stop/0','API call to stop the supervisor.'],['fun','fbq','fbq_webops:rabbit_simple_query/3',[]],['fun','fbq','gen_changes:behaviour_info/1',[]],['fun','fbq','gen_changes:call/2',[]],['fun','fbq','gen_changes:call/3',[]],['fun','fbq','gen_changes:cast/2',[]],['fun','fbq','gen_changes:code_change/3',[]],['fun','fbq','gen_changes:get_seq/1',[]],['fun','fbq','gen_changes:handle_call/3',[]],['fun','fbq','gen_changes:handle_cast/2',[]],['fun','fbq','gen_changes:handle_info/2',[]],['fun','fbq','gen_changes:init/1',[]],['fun','fbq','gen_changes:start_link/2','create a gen_changes process as part of a supervis'],['fun','fbq','gen_changes:stop/1',[]],['fun','fbq','gen_changes:terminate/2',[]],['fun','fbq','mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','fbq','mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','fbq','mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','fbq','mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','fbq','mochinum:digits/1',' Returns a string that accurately represents the g'],['fun','fbq','mochinum:frexp/1',' Return the fractional and exponent part of an IEE'],['fun','fbq','mochinum:int_ceil/1',' Return the ceiling of F as an integer.'],['fun','fbq','mochinum:int_pow/1',' Moderately efficient way to exponentiate integers']];