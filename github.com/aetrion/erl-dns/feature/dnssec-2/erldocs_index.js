var index = [['app','erl-dns','erl-dns','[application]'],['mod','erl-dns','erldns','Convenience API to start erl-dns directly.'],['mod','erl-dns','erldns_app','The erldns OTP application.'],['mod','erl-dns','erldns_axfr','Implementation of AXFR with IP address whitelistin'],['mod','erl-dns','erldns_config','Provide application-wide configuration access.'],['mod','erl-dns','erldns_decoder','Safe response decoding, where exceptions will not '],['mod','erl-dns','erldns_dnssec','Placeholder for eventual DNSSEC implementation.'],['mod','erl-dns','erldns_edns','EDNS0 implementation.'],['mod','erl-dns','erldns_encoder','Safe response encoding, where exceptions will not '],['mod','erl-dns','erldns_event_handler','Application event handler implementation.'],['mod','erl-dns','erldns_events','Public API for erldns event handler registration a'],['mod','erl-dns','erldns_handler','The module that handles the resolution of a single'],['mod','erl-dns','erldns_packet_cache','A basic packet cache that is used to avoid multipl'],['mod','erl-dns','erldns_query_throttle','Stateful query throttling.'],['mod','erl-dns','erldns_records',[]],['mod','erl-dns','erldns_resolver','Resolve a DNS query.'],['mod','erl-dns','erldns_server_sup','The general server supervisor.'],['mod','erl-dns','erldns_sup','Application supervisor.'],['mod','erl-dns','erldns_tcp_server','Handles DNS questions arriving via TCP.'],['mod','erl-dns','erldns_txt','Functions related to TXT record parsing.'],['mod','erl-dns','erldns_udp_server','Handles DNS questions arriving via UDP.'],['mod','erl-dns','erldns_worker','Worker module that processes a single DNS packet.'],['mod','erl-dns','erldns_zone_cache','A cache holding all of the zone data.'],['mod','erl-dns','erldns_zone_encoder','A process that maintains a collection of encoders '],['mod','erl-dns','erldns_zone_loader','Funcions for loading zones from local or remote so'],['mod','erl-dns','erldns_zone_parser','Process for parsing zone data from JSON to Erlang '],['mod','erl-dns','gen_nb_server',[]],['mod','erl-dns','sample_custom_handler','Example of a custom handler.'],['mod','erl-dns','sample_custom_zone_encoder','Sample custom encoder.'],['mod','erl-dns','sample_custom_zone_parser','Sample custom zone parser.'],['fun','erl-dns','erldns:start/0',[]],['fun','erl-dns','erldns_app:start/2',[]],['fun','erl-dns','erldns_app:start_phase/3',[]],['fun','erl-dns','erldns_app:stop/1',[]],['fun','erl-dns','erldns_axfr:is_enabled/2',[]],['fun','erl-dns','erldns_axfr:optionally_append_soa/1',[]],['fun','erl-dns','erldns_config:get_address/1','Get the IP address (either IPv4 or IPv6) that the '],['fun','erl-dns','erldns_config:get_num_workers/0','Get the number of workers to run for handling DNS '],['fun','erl-dns','erldns_config:get_port/0','The the port that the DNS server should listen on.'],['fun','erl-dns','erldns_config:get_servers/0',[]],['fun','erl-dns','erldns_config:keyget/2',[]],['fun','erl-dns','erldns_config:keyget/3',[]],['fun','erl-dns','erldns_config:storage_dir/0',[]],['fun','erl-dns','erldns_config:storage_env/0',[]],['fun','erl-dns','erldns_config:storage_host/0',[]],['fun','erl-dns','erldns_config:storage_pass/0',[]],['fun','erl-dns','erldns_config:storage_port/0',[]],['fun','erl-dns','erldns_config:storage_type/0',[]],['fun','erl-dns','erldns_config:storage_user/0',[]],['fun','erl-dns','erldns_config:use_root_hints/0',[]],['fun','erl-dns','erldns_config:websocket_env/0',[]],['fun','erl-dns','erldns_config:websocket_host/0',[]],['fun','erl-dns','erldns_config:websocket_path/0',[]],['fun','erl-dns','erldns_config:websocket_port/0',[]],['fun','erl-dns','erldns_config:websocket_protocol/0',[]],['fun','erl-dns','erldns_config:websocket_url/0',[]],['fun','erl-dns','erldns_config:zone_server_env/0',[]],['fun','erl-dns','erldns_config:zone_server_host/0',[]],['fun','erl-dns','erldns_config:zone_server_max_processes/0',[]],['fun','erl-dns','erldns_config:zone_server_port/0',[]],['fun','erl-dns','erldns_config:zone_server_protocol/0',[]],['fun','erl-dns','erldns_decoder:decode_message/1','Decode the binary data into its Erlang representat'],['fun','erl-dns','erldns_dnssec:handle/1',[]],['fun','erl-dns','erldns_edns:get_opts/1','Get a property list of EDNS0 options.'],['fun','erl-dns','erldns_encoder:encode_message/1','Encode the DNS message into its binary representat'],['fun','erl-dns','erldns_encoder:encode_message/1','Encode the DNS message into its binary representat'],['fun','erl-dns','erldns_event_handler:code_change/3',[]],['fun','erl-dns','erldns_event_handler:handle_call/2',[]],['fun','erl-dns','erldns_event_handler:handle_event/2',[]],['fun','erl-dns','erldns_event_handler:handle_info/2',[]],['fun','erl-dns','erldns_event_handler:init/1',[]],['fun','erl-dns','erldns_event_handler:terminate/2',[]],['fun','erl-dns','erldns_events:add_handler/1','Add an event handler with arguments.'],['fun','erl-dns','erldns_events:add_handler/1','Add an event handler.'],['fun','erl-dns','erldns_events:notify/1','Fire an event.'],['fun','erl-dns','erldns_events:start_link/0','Start the event process.'],['fun','erl-dns','erldns_handler:code_change/3',[]],['fun','erl-dns','erldns_handler:do_handle/2',[]],['fun','erl-dns','erldns_handler:get_handlers/0','Get all registered handlers along with the DNS typ'],['fun','erl-dns','erldns_handler:handle/2',[]],['fun','erl-dns','erldns_handler:handle_call/3',[]],['fun','erl-dns','erldns_handler:handle_cast/2',[]],['fun','erl-dns','erldns_handler:handle_info/2',[]],['fun','erl-dns','erldns_handler:handle_message/2',[]],['fun','erl-dns','erldns_handler:init/1',[]],['fun','erl-dns','erldns_handler:register_handler/1','Register a record handler.'],['fun','erl-dns','erldns_handler:start_link/0','Start the handler registry process.'],['fun','erl-dns','erldns_handler:terminate/2',[]],['fun','erl-dns','erldns_packet_cache:clear/0','Clean the cache.'],['fun','erl-dns','erldns_packet_cache:code_change/3',[]],['fun','erl-dns','erldns_packet_cache:get/1','Try to retrieve a cached response for the given qu'],['fun','erl-dns','erldns_packet_cache:get/1','Try to retrieve a cached response for the given qu'],['fun','erl-dns','erldns_packet_cache:handle_call/3',[]],['fun','erl-dns','erldns_packet_cache:handle_cast/2',[]],['fun','erl-dns','erldns_packet_cache:handle_info/2',[]],['fun','erl-dns','erldns_packet_cache:init/1',[]],['fun','erl-dns','erldns_packet_cache:put/1','Put the response in the cache for the given questi'],['fun','erl-dns','erldns_packet_cache:start_link/0','Start the cache.'],['fun','erl-dns','erldns_packet_cache:stop/0','Stop the cache.'],['fun','erl-dns','erldns_packet_cache:sweep/0','Remove all old cached packets from the cache.'],['fun','erl-dns','erldns_packet_cache:terminate/2',[]],['fun','erl-dns','erldns_query_throttle:code_change/3',[]],['fun','erl-dns','erldns_query_throttle:handle_call/3',[]],['fun','erl-dns','erldns_query_throttle:handle_cast/2',[]],['fun','erl-dns','erldns_query_throttle:handle_info/2',[]],['fun','erl-dns','erldns_query_throttle:init/1',[]],['fun','erl-dns','erldns_query_throttle:start_link/0','Start the query throttle process.'],['fun','erl-dns','erldns_query_throttle:stop/0','Stop the query throttle process normally.'],['fun','erl-dns','erldns_query_throttle:sweep/0','Sweep the query throttle table for expired host re'],['fun','erl-dns','erldns_query_throttle:terminate/2',[]],['fun','erl-dns','erldns_query_throttle:throttle/1','Throttle the given message if necessary.'],['fun','erl-dns','erldns_records:default_priority/1','Return the Priority value or 0 if it is undefined.'],['fun','erl-dns','erldns_records:default_ttl/1','Return the TTL value or 3600 if it is undefined.'],['fun','erl-dns','erldns_records:match_delegation/1',[]],['fun','erl-dns','erldns_records:match_name/1',[]],['fun','erl-dns','erldns_records:match_name_and_type/2',[]],['fun','erl-dns','erldns_records:match_type/1',[]],['fun','erl-dns','erldns_records:match_types/1',[]],['fun','erl-dns','erldns_records:match_wildcard/0',[]],['fun','erl-dns','erldns_records:minimum_soa_ttl/1','Applies a minimum TTL based on the SOA minumum val'],['fun','erl-dns','erldns_records:name_type/1','Returns the type value given a binary string.'],['fun','erl-dns','erldns_records:optionally_convert_wildcard/2',[]],['fun','erl-dns','erldns_records:replace_name/1',[]],['fun','erl-dns','erldns_records:root_hints/0',[]],['fun','erl-dns','erldns_records:wildcard_qname/1','Get a wildcard variation of a Qname.'],['fun','erl-dns','erldns_resolver:resolve/1','Resolve the questions in the message.'],['fun','erl-dns','erldns_server_sup:init/1',[]],['fun','erl-dns','erldns_server_sup:start_link/0',[]],['fun','erl-dns','erldns_sup:gc/0','Garbage collect all processes.'],['fun','erl-dns','erldns_sup:gc_registered/0','Garbage collect all registered processes.'],['fun','erl-dns','erldns_sup:gc_registered/1','Garbage collect a named process.'],['fun','erl-dns','erldns_sup:init/1',[]],['fun','erl-dns','erldns_sup:start_link/0',[]],['fun','erl-dns','erldns_tcp_server:code_change/3',[]],['fun','erl-dns','erldns_tcp_server:handle_call/3',[]],['fun','erl-dns','erldns_tcp_server:handle_cast/2',[]],['fun','erl-dns','erldns_tcp_server:handle_info/2',[]],['fun','erl-dns','erldns_tcp_server:handle_request/2',[]],['fun','erl-dns','erldns_tcp_server:init/1',[]],['fun','erl-dns','erldns_tcp_server:new_connection/2',[]],['fun','erl-dns','erldns_tcp_server:sock_opts/0',[]],['fun','erl-dns','erldns_tcp_server:start_link/1',[]],['fun','erl-dns','erldns_tcp_server:start_link/1',[]],['fun','erl-dns','erldns_tcp_server:terminate/2',[]],['fun','erl-dns','erldns_txt:parse/1','Parse a string into a collection of bit strings, e'],['fun','erl-dns','erldns_udp_server:code_change/3',[]],['fun','erl-dns','erldns_udp_server:handle_call/3',[]],['fun','erl-dns','erldns_udp_server:handle_cast/2',[]],['fun','erl-dns','erldns_udp_server:handle_info/2',[]],['fun','erl-dns','erldns_udp_server:handle_request/5',[]],['fun','erl-dns','erldns_udp_server:init/1',[]],['fun','erl-dns','erldns_udp_server:is_running/0','Return true if the UDP server process is running.'],['fun','erl-dns','erldns_udp_server:start_link/1',[]],['fun','erl-dns','erldns_udp_server:start_link/1','Start the UDP server process.'],['fun','erl-dns','erldns_udp_server:start_link/5',[]],['fun','erl-dns','erldns_udp_server:terminate/2',[]],['fun','erl-dns','erldns_worker:code_change/3',[]],['fun','erl-dns','erldns_worker:handle_call/3',[]],['fun','erl-dns','erldns_worker:handle_cast/2',[]],['fun','erl-dns','erldns_worker:handle_info/2',[]],['fun','erl-dns','erldns_worker:init/1',[]],['fun','erl-dns','erldns_worker:start_link/1',[]],['fun','erl-dns','erldns_worker:terminate/2',[]],['fun','erl-dns','erldns_zone_cache:code_change/3',[]],['fun','erl-dns','erldns_zone_cache:delete_zone/1','Remove a zone from the cache without waiting for a'],['fun','erl-dns','erldns_zone_cache:find_zone/1','Find a zone for a given qname.'],['fun','erl-dns','erldns_zone_cache:find_zone/1','Find a zone for a given qname.'],['fun','erl-dns','erldns_zone_cache:get_authority/1','Find the SOA record for the given DNS question.'],['fun','erl-dns','erldns_zone_cache:get_delegations/1','Get the list of NS and glue records for the given '],['fun','erl-dns','erldns_zone_cache:get_records_by_name/1','Return the record set for the given dname.'],['fun','erl-dns','erldns_zone_cache:get_zone/1','Get a zone for the specific name.'],['fun','erl-dns','erldns_zone_cache:get_zone_with_records/1','Get a zone for the specific name, including the re'],['fun','erl-dns','erldns_zone_cache:handle_call/3','Write the zone into the cache.'],['fun','erl-dns','erldns_zone_cache:handle_cast/2',[]],['fun','erl-dns','erldns_zone_cache:handle_info/2',[]],['fun','erl-dns','erldns_zone_cache:in_zone/1','Check if the name is in a zone.'],['fun','erl-dns','erldns_zone_cache:init/1','Initialize the zone cache.'],['fun','erl-dns','erldns_zone_cache:put_zone/1','Put a zone into the cache and wait for a response.'],['fun','erl-dns','erldns_zone_cache:put_zone/1','Put a name and its records into the cache, along w'],['fun','erl-dns','erldns_zone_cache:put_zone_async/1','Put a zone into the cache without waiting for a re'],['fun','erl-dns','erldns_zone_cache:put_zone_async/1','Put a zone into the cache without waiting for a re'],['fun','erl-dns','erldns_zone_cache:start_link/0','Start the zone cache process.'],['fun','erl-dns','erldns_zone_cache:terminate/2',[]],['fun','erl-dns','erldns_zone_cache:zone_names_and_versions/0','Return a list of tuples with each tuple as a name '],['fun','erl-dns','erldns_zone_encoder:code_change/3',[]],['fun','erl-dns','erldns_zone_encoder:handle_call/3',[]],['fun','erl-dns','erldns_zone_encoder:handle_cast/2',[]],['fun','erl-dns','erldns_zone_encoder:handle_info/2',[]],['fun','erl-dns','erldns_zone_encoder:init/1',[]],['fun','erl-dns','erldns_zone_encoder:register_encoder/1','Register a single encoder module.'],['fun','erl-dns','erldns_zone_encoder:register_encoders/1','Register a list of encoder modules.'],['fun','erl-dns','erldns_zone_encoder:start_link/0','Start the encoder process.'],['fun','erl-dns','erldns_zone_encoder:terminate/2',[]],['fun','erl-dns','erldns_zone_encoder:zone_to_json/1','Encode a Zone record into JSON.'],['fun','erl-dns','erldns_zone_loader:load_zones/0','Load zones from a file.'],['fun','erl-dns','erldns_zone_parser:code_change/3',[]],['fun','erl-dns','erldns_zone_parser:handle_call/3',[]],['fun','erl-dns','erldns_zone_parser:handle_cast/2',[]],['fun','erl-dns','erldns_zone_parser:handle_info/2',[]],['fun','erl-dns','erldns_zone_parser:init/1',[]],['fun','erl-dns','erldns_zone_parser:list_parsers/0',[]],['fun','erl-dns','erldns_zone_parser:register_parser/1','Regiaer a custom parser module.'],['fun','erl-dns','erldns_zone_parser:register_parsers/1','Register a list of custom parser modules.'],['fun','erl-dns','erldns_zone_parser:start_link/0','Start the parser processor.'],['fun','erl-dns','erldns_zone_parser:terminate/2',[]],['fun','erl-dns','erldns_zone_parser:zone_to_erlang/1','Takes a JSON zone and turns it into the tuple {Nam'],['fun','erl-dns','gen_nb_server:start_link/4','Start server listening on IpAddr:Port.'],['fun','erl-dns','sample_custom_handler:code_change/3',[]],['fun','erl-dns','sample_custom_handler:filter/1',[]],['fun','erl-dns','sample_custom_handler:handle/3',[]],['fun','erl-dns','sample_custom_handler:handle_call/3',[]],['fun','erl-dns','sample_custom_handler:handle_cast/2',[]],['fun','erl-dns','sample_custom_handler:handle_info/2',[]],['fun','erl-dns','sample_custom_handler:init/1',[]],['fun','erl-dns','sample_custom_handler:start_link/0',[]],['fun','erl-dns','sample_custom_handler:terminate/2',[]],['fun','erl-dns','sample_custom_zone_encoder:encode_record/1',[]],['fun','erl-dns','sample_custom_zone_parser:json_record_to_erlang/1',[]]];