var index = [['app','erfb','erfb','[application]'],['mod','erfb','bstr','String implemented over an Erlang binary.'],['mod','erfb','erfb_client','RFB Client Main Supervisor.'],['mod','erfb','erfb_client_event_dispatcher','Event Dispatcher for server events received by cli'],['mod','erfb','erfb_client_listener','Listener process for RFB clients.'],['mod','erfb','erfb_client_manager','Supervisor for Client Processes.'],['mod','erfb','erfb_client_process','RFB Client Process.'],['mod','erfb','erfb_encoding','Encoding Behaviour.'],['mod','erfb','erfb_encoding_copy_rect','CopyRect RFB Encoding implementation.'],['mod','erfb','erfb_encoding_corre','CoRRE RFB Encoding implementation.'],['mod','erfb','erfb_encoding_cursor','Cursor RFB Encoding implementation.'],['mod','erfb','erfb_encoding_desktop_name','DesktopSize RFB Encoding implementation.'],['mod','erfb','erfb_encoding_desktop_size','DesktopSize RFB Encoding implementation.'],['mod','erfb','erfb_encoding_hextile','Hextile RFB Encoding implementation.'],['mod','erfb','erfb_encoding_no_data','RFB Encoding implementation for those pseudo-encod'],['mod','erfb','erfb_encoding_raw','Raw RFB Encoding implementation.'],['mod','erfb','erfb_encoding_rre','RRE RFB Encoding implementation.'],['mod','erfb','erfb_encoding_tight','Tight RFB Encoding implementation.'],['mod','erfb','erfb_encoding_wmvi','WMVI RFB Encoding implementation.'],['mod','erfb','erfb_encoding_zlib','ZLib RFB Encoding implementation.'],['mod','erfb','erfb_encoding_zlibhex','ZLibHEX RFB Encoding implementation.'],['mod','erfb','erfb_encoding_zrle','ZRLE RFB Encoding implementation.'],['mod','erfb','erfb_server','RFB Server Main Supervisor.'],['mod','erfb','erfb_server_event_dispatcher','Event Dispatcher for client events received by the'],['mod','erfb','erfb_server_listener','Listener process for RFB servers.'],['mod','erfb','erfb_server_listener_manager','Supervisor for Server Listener Processes.'],['mod','erfb','erfb_server_manager','Supervisor for Server Processes.'],['mod','erfb','erfb_server_process','RFB Server Process.'],['mod','erfb','erfb_utils','RFB Utility Functions.'],['mod','erfb','uuid','String implemented over an Erlang binary.'],['fun','erfb','bstr:bstr/1',' Convert an "object" to a bstr.'],['fun','erfb','bstr:chomp/1',' Remove all the newlines (\r and \n) present at th'],['fun','erfb','bstr:concat/1',' Concatenate 2 strings.'],['fun','erfb','bstr:duplicate/1',' Return Number copies of a string.'],['fun','erfb','bstr:equal/1',' Test if 2 strings are equal.'],['fun','erfb','bstr:from_atom/1',' Convert an atom to a bstr.'],['fun','erfb','bstr:from_integer/1',' Convert an integer to a bstr in base n format i'],['fun','erfb','bstr:from_integer/1',' Convert an integer to a bstr in base n format.'],['fun','erfb','bstr:from_integer/1',' Convert an integer to a bstr in base 10 format.'],['fun','erfb','bstr:from_list/1',' Convert a list containing a string to a bstr.'],['fun','erfb','bstr:get_line/1',' Get the first text line from a binary string.'],['fun','erfb','bstr:hex_char_to_integer/1','Convert an hexadecimal character to an integer.'],['fun','erfb','bstr:hexdecode/1',' Decode a bstr with an hexadecimal representation '],['fun','erfb','bstr:hexencode/1',' Encode a bstr converting each character to its he'],['fun','erfb','bstr:index/1',' Return the index of the first appearance of a cha'],['fun','erfb','bstr:insert/1',' Insert a string into another one at the indicated'],['fun','erfb','bstr:integer_to_hex_char/1','Convert an integer between 0 and 15 to an hexadeci'],['fun','erfb','bstr:is_alnum/1',' Determines if a string is composed of alphanumeri'],['fun','erfb','bstr:is_alnum_char/1','Determine if a character is alphanumeric.'],['fun','erfb','bstr:is_alpha/1',' Determines if a string is composed of alphabetic '],['fun','erfb','bstr:is_alpha_char/1','Determine if a character is alphabetic.'],['fun','erfb','bstr:is_atom_as_binary/1',' Determines if a string is an unquoted atom.'],['fun','erfb','bstr:is_atom_char/1','Determine if a character is lower case, numeric, '],['fun','erfb','bstr:is_blank/1',' Determines if a string is composed of blank chara'],['fun','erfb','bstr:is_blank_char/1','Determine if a character is blank (\n, \r, \t, \f,'],['fun','erfb','bstr:is_digit/1',' Determines if a string is composed of digits.'],['fun','erfb','bstr:is_digit_char/1','Determine if a character is a digit.'],['fun','erfb','bstr:is_lower/1',' Determines if a string is composed of lower-case '],['fun','erfb','bstr:is_lower_char/1','Determine if a character is lower-case.'],['fun','erfb','bstr:is_space/1',' Determines if a string is composed of spaces or t'],['fun','erfb','bstr:is_space_char/1','Determine if a character is a space or a tab.'],['fun','erfb','bstr:is_upper/1',' Determines if a string is composed of upper-case '],['fun','erfb','bstr:is_upper_char/1','Determine if a character is upper-case.'],['fun','erfb','bstr:is_xdigit/1',' Determines if a string is composed of hexadecimal'],['fun','erfb','bstr:is_xdigit_char/1','Determine if a character is a digit.'],['fun','erfb','bstr:join/1',' Join a a list of strings into one string, adding '],['fun','erfb','bstr:join/1',' Join a a list of strings into one string, adding '],['fun','erfb','bstr:join/1',' Join a a list of strings into one string.'],['fun','erfb','bstr:left/1',' Return a substring of Len bytes starting from t'],['fun','erfb','bstr:len/1',' Return the length of a string.'],['fun','erfb','bstr:lower/1',' Convert all the characters in a bstr to lowercase'],['fun','erfb','bstr:lpad/1',' Return a string of Len bytes left-padded with '],['fun','erfb','bstr:lpad/1',' Return a string of Len bytes left-padded with s'],['fun','erfb','bstr:lstrip/1',' Remove all the Chars present to the left of the'],['fun','erfb','bstr:lstrip/1',' Remove all the spaces present to the left of the '],['fun','erfb','bstr:member/1',' Return whether the character is present in the st'],['fun','erfb','bstr:nth/1',' Return the character in the nth position of the s'],['fun','erfb','bstr:pad/1',' Return a string of Len bytes padded with Chars'],['fun','erfb','bstr:pad/1',' Return a string of Len bytes padded with spaces'],['fun','erfb','bstr:prefix/1',' Indicates whether a string is a prefix of another'],['fun','erfb','bstr:right/1',' Return a substring of Len bytes starting from t'],['fun','erfb','bstr:rindex/1',' Return the index of the last appearance of a char'],['fun','erfb','bstr:rpad/1',' Return a string of Len bytes right-padded with '],['fun','erfb','bstr:rpad/1',' Return a string of Len bytes right-padded with '],['fun','erfb','bstr:rstrip/1',' Remove all the Chars present to the right of th'],['fun','erfb','bstr:rstrip/1',' Remove all the spaces present to the right of the'],['fun','erfb','bstr:split/1',' Divide a string into a list of tokens that were o'],['fun','erfb','bstr:strip/1',' Remove all the Chars present both to the left a'],['fun','erfb','bstr:strip/1',' Remove all the spaces present both to the left an'],['fun','erfb','bstr:substr/1',' Return a substring starting at position Pos wit'],['fun','erfb','bstr:substr/1',' Return a substring starting at position Pos.'],['fun','erfb','bstr:suffix/1',' Indicates whether a string is a suffix of another'],['fun','erfb','bstr:to_atom/1',' Convert a bstr containing a string to an Erlang a'],['fun','erfb','bstr:to_boolean/1',' Convert a bstr containing a string to an Erlang l'],['fun','erfb','bstr:to_existing_atom/1',' Convert a bstr containing a string to an Erlang a'],['fun','erfb','bstr:to_integer/1',' Convert a bstr containing a string representing a'],['fun','erfb','bstr:to_integer/1',' Convert a bstr containing a string representing a'],['fun','erfb','bstr:to_list/1',' Convert a bstr containing a string to an Erlang l'],['fun','erfb','bstr:upper/1',' Convert all the characters in a bstr to uppercase'],['fun','erfb','bstr:urldecode/1',' Decode a bstr using the URL-encoding scheme.'],['fun','erfb','bstr:urlencode/1',' Encode a bstr using the URL-encoding scheme.'],['fun','erfb','bstr:xmldecode/1',' Decode a bstr using the XML-encoding scheme to re'],['fun','erfb','bstr:xmlencode/1',' Encode a bstr using the XML-encoding scheme.'],['fun','erfb','erfb_client:start_link/1',' Starts a new RFB client supervisor.'],['fun','erfb','erfb_client_event_dispatcher:notify/1',' Sends an event to the subscribed handlers.'],['fun','erfb','erfb_client_event_dispatcher:notify/1',' Sends an event to the subscribed handlers.'],['fun','erfb','erfb_client_event_dispatcher:start_link/0',' Starts a new event dispatcher.'],['fun','erfb','erfb_client_event_dispatcher:start_link_unregistered/0',' Starts a new event dispatcher for a particular se'],['fun','erfb','erfb_client_event_dispatcher:subscribe/1',' Subscribes a handler to the event dispatcher.'],['fun','erfb','erfb_client_event_dispatcher:subscribe/1',' Subscribes a handler to the event dispatcher.'],['fun','erfb','erfb_client_event_dispatcher:subscribe_link/1',' Subscribes and links a handler to the event dispa'],['fun','erfb','erfb_client_event_dispatcher:subscribe_link/1',' Subscribes and links a handler to the event dispa'],['fun','erfb','erfb_client_event_dispatcher:subscriptions/0',' Returns the list of subscriptions.'],['fun','erfb','erfb_client_event_dispatcher:subscriptions/1',' Returns the list of subscriptions.'],['fun','erfb','erfb_client_event_dispatcher:unsubscribe/1',' Unsubscribes a handler from the event dispatcher.'],['fun','erfb','erfb_client_event_dispatcher:unsubscribe/1',' Unsubscribes a handler from the event dispatcher.'],['fun','erfb','erfb_client_listener:start_link/1',' Starts a new client listener.'],['fun','erfb','erfb_client_manager:start_client/0',' Starts a new client process.'],['fun','erfb','erfb_client_manager:start_link/0',' Starts the supervisor process.'],['fun','erfb','erfb_client_process:client_cut_text/1','Equivalent to send_event(Server, #client_cut_text{'],['fun','erfb','erfb_client_process:client_disconnected/1','Equivalent to send_event(Server,	   #client_disco'],['fun','erfb','erfb_client_process:event_dispatcher/1',' Returns the event dispatcher associated to this p'],['fun','erfb','erfb_client_process:key/1','Equivalent to send_event(Server, #key{down = Down,'],['fun','erfb','erfb_client_process:pointer/1','Equivalent to send_event(Server,	   #pointer{butt'],['fun','erfb','erfb_client_process:send_event/1',' Sends an client event to the server.'],['fun','erfb','erfb_client_process:set_encodings/1','Equivalent to send_event(Client,	   #set_encoding'],['fun','erfb','erfb_client_process:set_pixel_format/1','Equivalent to send_event(Client,	   #set_pixel_fo'],['fun','erfb','erfb_client_process:update_request/1','Equivalent to send_event(Client,	   #update_reque'],['fun','erfb','erfb_encoding:behaviour_info/1',' Behaviour information.'],['fun','erfb','erfb_server:start_link/0',' Starts a new RFB server main supervisor.'],['fun','erfb','erfb_server_event_dispatcher:notify/1',' Sends an event to the subscribed handlers.'],['fun','erfb','erfb_server_event_dispatcher:notify/1',' Sends an event to the subscribed handlers.'],['fun','erfb','erfb_server_event_dispatcher:start_link/0',' Starts a new event dispatcher.'],['fun','erfb','erfb_server_event_dispatcher:start_link_unregistered/0',' Starts a new event dispatcher for a particular se'],['fun','erfb','erfb_server_event_dispatcher:subscribe/1',' Subscribes a handler to the event dispatcher.'],['fun','erfb','erfb_server_event_dispatcher:subscribe/1',' Subscribes a handler to the event dispatcher.'],['fun','erfb','erfb_server_event_dispatcher:subscribe_link/1',' Subscribes and links a handler to the event dispa'],['fun','erfb','erfb_server_event_dispatcher:subscribe_link/1',' Subscribes and links a handler to the event dispa'],['fun','erfb','erfb_server_event_dispatcher:subscriptions/0',' Returns the list of subscriptions.'],['fun','erfb','erfb_server_event_dispatcher:subscriptions/1',' Returns the list of subscriptions.'],['fun','erfb','erfb_server_event_dispatcher:unsubscribe/1',' Unsubscribes a handler from the event dispatcher.'],['fun','erfb','erfb_server_event_dispatcher:unsubscribe/1',' Unsubscribes a handler from the event dispatcher.'],['fun','erfb','erfb_server_listener:set_pixel_format/1',' Modifies the informed pixel_format in a running l'],['fun','erfb','erfb_server_listener:start_link/2',' Starts a new server listerner.'],['fun','erfb','erfb_server_listener:stop/1',' Stops a running listener.'],['fun','erfb','erfb_server_listener_manager:start_link/0',' Starts the supervisor process.'],['fun','erfb','erfb_server_listener_manager:start_listener/2',' Starts a new listener process.'],['fun','erfb','erfb_server_manager:start_link/0',' Starts the supervisor process.'],['fun','erfb','erfb_server_manager:start_server/2',' Starts a new server process.'],['fun','erfb','erfb_server_process:bell/1','Equivalent to send_event(Server, #bell{}).'],['fun','erfb','erfb_server_process:event_dispatcher/1',' Returns the event dispatcher associated to this p'],['fun','erfb','erfb_server_process:send_event/1',' Sends an server event to the client.'],['fun','erfb','erfb_server_process:server_cut_text/1','Equivalent to send_event(Server, #server_cut_text{'],['fun','erfb','erfb_server_process:server_disconnected/1','Equivalent to send_event(Server,	   #server_disco'],['fun','erfb','erfb_server_process:set_colour_map_entries/1','Equivalent to send_event(Server,	   #set_colour_m'],['fun','erfb','erfb_server_process:update/1','Equivalent to send_event(Server, #rfbupdate{rectan'],['fun','erfb','erfb_utils:build_string/1',' Converts a binary string into an RFB string:  &lt'],['fun','erfb','erfb_utils:ceiling/1',' Returns the ceiling (next bigest integer) of X'],['fun','erfb','erfb_utils:complete/1',' Completes Prefix until it gets FullLength bytes f'],['fun','erfb','erfb_utils:complete/1',' Completes Prefix until it gets FullLength bytes f'],['fun','erfb','erfb_utils:default_pixel_format/1',' Returns a #pixel_format that matches the received'],['fun','erfb','erfb_utils:floor/1',' Returns the floor (next smallest integer) of X'],['fun','erfb','erfb_utils:get_full_string/1',' Gets the complete string from its prefix and the '],['fun','erfb','erfb_utils:pf_to_binary/1',' Converts a #pixel_format{} record into its binary'],['fun','erfb','erfb_utils:tcp_send/1',' Sends a message through TCP socket or fails grace'],['fun','erfb','erfb_utils:timestamp/0',' Returns the current timestamp in POSIX usecs.'],['fun','erfb','uuid:as_bstr/0',' Generate a v4 UUID as a string encoded in a binar'],['fun','erfb','uuid:as_string/0',' Generate a v4 UUID as a string.'],['fun','erfb','uuid:is_valid/1',' Determine if a string is a valid UUID.'],['fun','erfb','uuid:new/0',' Generate a binary representing a v4 UUID (see RFC'],['fun','erfb','uuid:to_bstr/1',' Convert a UUID to a string encoded in a binary.'],['fun','erfb','uuid:to_string/1',' Convert a UUID to a string.']];