var index = [['app','coding_exercises','coding_exercises','[application]'],['mod','coding_exercises','anagrams','Given a dictionary, return pair of words that are '],['mod','coding_exercises','binary_search','Binary Search an ordered list       erlc binary_s'],['mod','coding_exercises','bst','Binary Search Tree       erlc bst.erl       erl '],['mod','coding_exercises','compute_square_root','Compute square root for 16-bit integer numbers   '],['mod','coding_exercises','dict_words','Checks if word is in dictionary       erlc dict_w'],['mod','coding_exercises','fizz_buzz','FizzBuzz       erlc fizz_buzz.erl       erl -nos'],['mod','coding_exercises','intersect_sorted_lists','Given two sorted arrays, return intersection of tw'],['mod','coding_exercises','make_change','Given two words in a large text file, find make_ch'],['mod','coding_exercises','median','Write a method to find and maintain the median val'],['mod','coding_exercises','pair_sum','Given two words in a large text file, find pair_su'],['mod','coding_exercises','permutations','Generate permutations of string       erlc perms.'],['mod','coding_exercises','shortest_dist','Given two words in a large text file, find shortes'],['mod','coding_exercises','transform_words','Given two words of equal length, write a method to'],['fun','coding_exercises','anagrams:anagrams/1',[]],['fun','coding_exercises','anagrams:test_anagrams/0',[]],['fun','coding_exercises','binary_search:binary_search/2',[]],['fun','coding_exercises','binary_search:test_binary_search/0',[]],['fun','coding_exercises','bst:bst_search/2',[]],['fun','coding_exercises','bst:test_bst_search/0',[]],['fun','coding_exercises','compute_square_root:compute_square_root/1',[]],['fun','coding_exercises','compute_square_root:test_compute_square_root/0',[]],['fun','coding_exercises','dict_words:word_exists/1',[]],['fun','coding_exercises','fizz_buzz:fizz_buzz/0',[]],['fun','coding_exercises','intersect_sorted_lists:intersect_sorted_lists/2',[]],['fun','coding_exercises','intersect_sorted_lists:test_intersect_sorted_lists/0',[]],['fun','coding_exercises','make_change:make_change/2',[]],['fun','coding_exercises','make_change:test_make_change/0',[]],['fun','coding_exercises','median:add_number/3',[]],['fun','coding_exercises','median:median/2',[]],['fun','coding_exercises','median:test_median/0',[]],['fun','coding_exercises','pair_sum:pair_sum/2',[]],['fun','coding_exercises','pair_sum:test_pair_sum/0',[]],['fun','coding_exercises','permutations:perms/1',[]],['fun','coding_exercises','permutations:test_perms/0',[]],['fun','coding_exercises','shortest_dist:shortest/3',[]],['fun','coding_exercises','shortest_dist:test_shortest/0',[]],['fun','coding_exercises','transform_words:test_transform_words/0',[]],['fun','coding_exercises','transform_words:transform_words/2',[]]];