var index = [['app','couchbeam','couchbeam','[application]'],['mod','couchbeam','couchbeam_app',[]],['mod','couchbeam','couchbeam_attachments','This module contains utilities to manage attachmen'],['mod','couchbeam','couchbeam_changes',[]],['mod','couchbeam','couchbeam_deps',[]],['mod','couchbeam','couchbeam_doc',[]],['mod','couchbeam','couchbeam_sup',[]],['mod','couchbeam','couchbeam_util',[]],['mod','couchbeam','couchbeam_view',[]],['fun','couchbeam','couchbeam_app:start/2',[]],['fun','couchbeam','couchbeam_app:stop/1',[]],['fun','couchbeam','couchbeam_attachments:add_inline/1','add attachment  to a doc and encode it with Conten'],['fun','couchbeam','couchbeam_attachments:add_inline/1','add attachment  to a doc and encode it.'],['fun','couchbeam','couchbeam_attachments:attachment_acceptor/3','initiate attachment fetching.'],['fun','couchbeam','couchbeam_attachments:delete_inline/1','delete an attachment record in doc.'],['fun','couchbeam','couchbeam_attachments:wait_for_attachment/2','collect all attachments chunks.'],['fun','couchbeam','couchbeam_changes:continuous_acceptor/2','initiate continuous loop.'],['fun','couchbeam','couchbeam_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','couchbeam','couchbeam_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','couchbeam','couchbeam_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','couchbeam','couchbeam_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','couchbeam','couchbeam_deps:get_base_dir/1','Return the application directory for Module.'],['fun','couchbeam','couchbeam_deps:local_path/1','Return an application-relative directory for this '],['fun','couchbeam','couchbeam_deps:local_path/1','Return an application-relative directory from Modu'],['fun','couchbeam','couchbeam_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','couchbeam','couchbeam_doc:delete_value/1','Deletes all entries associated with Key in json ob'],['fun','couchbeam','couchbeam_doc:extend/1','extend a jsonobject by a property or list of prope'],['fun','couchbeam','couchbeam_doc:extend/1','extend a jsonobject by key, value.'],['fun','couchbeam','couchbeam_doc:get_id/1','get document id.'],['fun','couchbeam','couchbeam_doc:get_idrev/1','get  a tuple containing docucment id and revision.'],['fun','couchbeam','couchbeam_doc:get_rev/1','get document revision.'],['fun','couchbeam','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','couchbeam','couchbeam_doc:get_value/1','Returns the value of a simple key/value property i'],['fun','couchbeam','couchbeam_doc:is_saved/1','If document have been saved (revision is defined) '],['fun','couchbeam','couchbeam_doc:set_value/1','set a value for a key in jsonobj.'],['fun','couchbeam','couchbeam_sup:init/1',[]],['fun','couchbeam','couchbeam_sup:start_link/0',[]],['fun','couchbeam','couchbeam_util:encode_docid/1',[]],['fun','couchbeam','couchbeam_util:json_decode/1',[]],['fun','couchbeam','couchbeam_util:json_encode/1',[]],['fun','couchbeam','couchbeam_util:parse_options/1','make view options a list.'],['fun','couchbeam','couchbeam_util:parse_options/2',[]],['fun','couchbeam','couchbeam_util:to_atom/1',[]],['fun','couchbeam','couchbeam_util:to_binary/1',[]],['fun','couchbeam','couchbeam_util:to_integer/1',[]],['fun','couchbeam','couchbeam_util:to_list/1',[]],['fun','couchbeam','couchbeam_view:count/1','get number of results in the view.'],['fun','couchbeam','couchbeam_view:fetch/1','get all results in a view.'],['fun','couchbeam','couchbeam_view:first/1','get first row in results of the view.'],['fun','couchbeam','couchbeam_view:fold/2','Calls Fun on successive keys and values of View Re'],['fun','couchbeam','couchbeam_view:foreach/2','Calls Fun(Elem) for each element Row in view resul']];