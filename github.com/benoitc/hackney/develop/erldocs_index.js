var index = [['app','hackney','hackney','[application]'],['mod','hackney','hackney',[]],['mod','hackney','hackney_app',[]],['mod','hackney','hackney_deps',[]],['mod','hackney','hackney_disp','Dispatcher for hackney using dispcount.'],['mod','hackney','hackney_disp_handler','Dispcount worker implementation for TCP socket han'],['mod','hackney','hackney_headers',[]],['mod','hackney','hackney_multipart','module to encode/decode forms.'],['mod','hackney','hackney_pool','pool of sockets connections.'],['mod','hackney','hackney_pool_handler',[]],['mod','hackney','hackney_request','module handling the request.'],['mod','hackney','hackney_response','module handling the response.'],['mod','hackney','hackney_ssl_transport',[]],['mod','hackney','hackney_stream',[]],['mod','hackney','hackney_sup',[]],['mod','hackney','hackney_tcp_transport',[]],['mod','hackney','hackney_url','module to manage urls.'],['mod','hackney','hackney_util',[]],['fun','hackney','hackney:body/1','Return the full body sent with the response as lon'],['fun','hackney','hackney:body/1','Return the full body sent with the response.'],['fun','hackney','hackney:checkout/1',[]],['fun','hackney','hackney:checkout/2',[]],['fun','hackney','hackney:checkout/3',[]],['fun','hackney','hackney:checkout/4',[]],['fun','hackney','hackney:close/1','close the client.'],['fun','hackney','hackney:close_stream/1','close the stream we are receiving on.'],['fun','hackney','hackney:connect/1','connect a socket and create a client state.'],['fun','hackney','hackney:connect/3',[]],['fun','hackney','hackney:connect/4',[]],['fun','hackney','hackney:controlling_process/2','Assign a new controlling process Pid to Client.'],['fun','hackney','hackney:copy/1',[]],['fun','hackney','hackney:copy/2',[]],['fun','hackney','hackney:copy/3',[]],['fun','hackney','hackney:copy/4',[]],['fun','hackney','hackney:delete/1',[]],['fun','hackney','hackney:delete/2',[]],['fun','hackney','hackney:delete/3',[]],['fun','hackney','hackney:delete/4',[]],['fun','hackney','hackney:demonitor_stream/1','demonitor response stream.'],['fun','hackney','hackney:end_stream_request_body/1','end streaming the request body.'],['fun','hackney','hackney:get/1',[]],['fun','hackney','hackney:get/2',[]],['fun','hackney','hackney:get/3',[]],['fun','hackney','hackney:get/4',[]],['fun','hackney','hackney:head/1',[]],['fun','hackney','hackney:head/2',[]],['fun','hackney','hackney:head/3',[]],['fun','hackney','hackney:head/4',[]],['fun','hackney','hackney:is_pool/1','get current pool pid or name used by a client if n'],['fun','hackney','hackney:lock/1',[]],['fun','hackney','hackney:lock/2',[]],['fun','hackney','hackney:lock/3',[]],['fun','hackney','hackney:lock/4',[]],['fun','hackney','hackney:merge/1',[]],['fun','hackney','hackney:merge/2',[]],['fun','hackney','hackney:merge/3',[]],['fun','hackney','hackney:merge/4',[]],['fun','hackney','hackney:mkactivity/1',[]],['fun','hackney','hackney:mkactivity/2',[]],['fun','hackney','hackney:mkactivity/3',[]],['fun','hackney','hackney:mkactivity/4',[]],['fun','hackney','hackney:mkcol/1',[]],['fun','hackney','hackney:mkcol/2',[]],['fun','hackney','hackney:mkcol/3',[]],['fun','hackney','hackney:mkcol/4',[]],['fun','hackney','hackney:monitor_stream/1','monitor response stream.'],['fun','hackney','hackney:move/1',[]],['fun','hackney','hackney:move/2',[]],['fun','hackney','hackney:move/3',[]],['fun','hackney','hackney:move/4',[]],['fun','hackney','hackney:msearch/1',[]],['fun','hackney','hackney:msearch/2',[]],['fun','hackney','hackney:msearch/3',[]],['fun','hackney','hackney:msearch/4',[]],['fun','hackney','hackney:notify/1',[]],['fun','hackney','hackney:notify/2',[]],['fun','hackney','hackney:notify/3',[]],['fun','hackney','hackney:notify/4',[]],['fun','hackney','hackney:options/1',[]],['fun','hackney','hackney:options/2',[]],['fun','hackney','hackney:options/3',[]],['fun','hackney','hackney:options/4',[]],['fun','hackney','hackney:patch/1',[]],['fun','hackney','hackney:patch/2',[]],['fun','hackney','hackney:patch/3',[]],['fun','hackney','hackney:patch/4',[]],['fun','hackney','hackney:pause_stream/1','pause a response stream, the stream process will h'],['fun','hackney','hackney:post/1',[]],['fun','hackney','hackney:post/2',[]],['fun','hackney','hackney:post/3',[]],['fun','hackney','hackney:post/4',[]],['fun','hackney','hackney:propfind/1',[]],['fun','hackney','hackney:propfind/2',[]],['fun','hackney','hackney:propfind/3',[]],['fun','hackney','hackney:propfind/4',[]],['fun','hackney','hackney:proppatch/1',[]],['fun','hackney','hackney:proppatch/2',[]],['fun','hackney','hackney:proppatch/3',[]],['fun','hackney','hackney:proppatch/4',[]],['fun','hackney','hackney:purge/1',[]],['fun','hackney','hackney:purge/2',[]],['fun','hackney','hackney:purge/3',[]],['fun','hackney','hackney:purge/4',[]],['fun','hackney','hackney:put/1',[]],['fun','hackney','hackney:put/2',[]],['fun','hackney','hackney:put/3',[]],['fun','hackney','hackney:put/4',[]],['fun','hackney','hackney:raw/1','Extract raw informations from the client context  '],['fun','hackney','hackney:report/1',[]],['fun','hackney','hackney:report/2',[]],['fun','hackney','hackney:report/3',[]],['fun','hackney','hackney:report/4',[]],['fun','hackney','hackney:request/1','make a request.'],['fun','hackney','hackney:request/1','make a request.'],['fun','hackney','hackney:request/1','make a request.'],['fun','hackney','hackney:request/1','make a request.'],['fun','hackney','hackney:request/1','make a request.'],['fun','hackney','hackney:resume_stream/1','resume a paused response stream, the stream proces'],['fun','hackney','hackney:search/1',[]],['fun','hackney','hackney:search/2',[]],['fun','hackney','hackney:search/3',[]],['fun','hackney','hackney:search/4',[]],['fun','hackney','hackney:send_request/2','send a request using the current client state.'],['fun','hackney','hackney:set_sockopts/2','add set sockets options in the client.'],['fun','hackney','hackney:skip_body/1','skip the full body.'],['fun','hackney','hackney:start/0','Start the couchbeam process.'],['fun','hackney','hackney:start/1',[]],['fun','hackney','hackney:start_response/1','start a response.'],['fun','hackney','hackney:stop/0','Stop the couchbeam process.'],['fun','hackney','hackney:stop_async/1','stop to receive asynchronously.'],['fun','hackney','hackney:stream_body/1','Stream the response body.'],['fun','hackney','hackney:stream_multipart_request/2','stream a multipart request until eof  Possible va'],['fun','hackney','hackney:stream_next/1','continue to the next stream message.'],['fun','hackney','hackney:stream_pid/1','return the Pid of a response stream.'],['fun','hackney','hackney:stream_request_body/1','stream the request body.'],['fun','hackney','hackney:subscribe/1',[]],['fun','hackney','hackney:subscribe/2',[]],['fun','hackney','hackney:subscribe/3',[]],['fun','hackney','hackney:subscribe/4',[]],['fun','hackney','hackney:trace/1',[]],['fun','hackney','hackney:trace/2',[]],['fun','hackney','hackney:trace/3',[]],['fun','hackney','hackney:trace/4',[]],['fun','hackney','hackney:unlock/1',[]],['fun','hackney','hackney:unlock/2',[]],['fun','hackney','hackney:unlock/3',[]],['fun','hackney','hackney:unlock/4',[]],['fun','hackney','hackney:unsubscribe/1',[]],['fun','hackney','hackney:unsubscribe/2',[]],['fun','hackney','hackney:unsubscribe/3',[]],['fun','hackney','hackney:unsubscribe/4',[]],['fun','hackney','hackney_app:ensure_deps_started/0',[]],['fun','hackney','hackney_app:get_app_env/1','return a config value.'],['fun','hackney','hackney_app:get_app_env/2','return a config value.'],['fun','hackney','hackney_app:start/2',[]],['fun','hackney','hackney_app:stop/1',[]],['fun','hackney','hackney_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','hackney','hackney_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','hackney','hackney_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','hackney','hackney_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','hackney','hackney_deps:get_base_dir/1','Return the application directory for Module.'],['fun','hackney','hackney_deps:local_path/1','Return an application-relative directory for this '],['fun','hackney','hackney_deps:local_path/1','Return an application-relative directory from Modu'],['fun','hackney','hackney_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','hackney','hackney_disp:checkin/1',[]],['fun','hackney','hackney_disp:checkin/2',[]],['fun','hackney','hackney_disp:checkout/4',[]],['fun','hackney','hackney_disp:start/0',[]],['fun','hackney','hackney_disp_handler:checkin/2',[]],['fun','hackney','hackney_disp_handler:checkout/2',[]],['fun','hackney','hackney_disp_handler:code_change/3',[]],['fun','hackney','hackney_disp_handler:dead/1',[]],['fun','hackney','hackney_disp_handler:handle_info/2',[]],['fun','hackney','hackney_disp_handler:init/1',[]],['fun','hackney','hackney_disp_handler:terminate/2',[]],['fun','hackney','hackney_headers:delete/2',[]],['fun','hackney','hackney_headers:fold/3',[]],['fun','hackney','hackney_headers:get_value/2',[]],['fun','hackney','hackney_headers:get_value/3',[]],['fun','hackney','hackney_headers:insert/3',[]],['fun','hackney','hackney_headers:new/0',[]],['fun','hackney','hackney_headers:new/1',[]],['fun','hackney','hackney_headers:to_list/1',[]],['fun','hackney','hackney_headers:update/2',[]],['fun','hackney','hackney_multipart:boundary/0',[]],['fun','hackney','hackney_multipart:decode_form/1',[]],['fun','hackney','hackney_multipart:encode_form/1','encode a list of properties in a form.'],['fun','hackney','hackney_multipart:stream/2',[]],['fun','hackney','hackney_pool:checkin/2','release a socket in the pool.'],['fun','hackney','hackney_pool:checkout/4','fetch a socket from the pool.'],['fun','hackney','hackney_pool:child_spec/2','return a child spec suitable for embeding your poo'],['fun','hackney','hackney_pool:code_change/3',[]],['fun','hackney','hackney_pool:handle_call/3',[]],['fun','hackney','hackney_pool:handle_cast/2',[]],['fun','hackney','hackney_pool:handle_info/2',[]],['fun','hackney','hackney_pool:init/1',[]],['fun','hackney','hackney_pool:max_connections/1','get max pool size.'],['fun','hackney','hackney_pool:pool_size/1','get total pool size.'],['fun','hackney','hackney_pool:pool_size/2','get the pool size for {Transport, Host0, Port}'],['fun','hackney','hackney_pool:set_max_connections/2','change the pool size.'],['fun','hackney','hackney_pool:set_timeout/2','change the connection timeout.'],['fun','hackney','hackney_pool:start/0',[]],['fun','hackney','hackney_pool:start_link/2',[]],['fun','hackney','hackney_pool:start_pool/2','start a pool.'],['fun','hackney','hackney_pool:stop_pool/1','stop a pool.'],['fun','hackney','hackney_pool:terminate/2',[]],['fun','hackney','hackney_pool:timeout/1','get timeout.'],['fun','hackney','hackney_request:encode_form/1','encode a list of properties in a form.'],['fun','hackney','hackney_request:end_stream_body/1',[]],['fun','hackney','hackney_request:perform/2',[]],['fun','hackney','hackney_request:send/2',[]],['fun','hackney','hackney_request:send_chunk/2',[]],['fun','hackney','hackney_request:sendfile/3',[]],['fun','hackney','hackney_request:stream_body/2',[]],['fun','hackney','hackney_response:body/1','Return the full body sent with the request as long'],['fun','hackney','hackney_response:body/1','Return the full body sent with the request.'],['fun','hackney','hackney_response:close/1',[]],['fun','hackney','hackney_response:expect_response/1','handle Expect header.'],['fun','hackney','hackney_response:skip_body/1',[]],['fun','hackney','hackney_response:start_response/1','Start the response It parse the request lines and '],['fun','hackney','hackney_response:stream_body/1',[]],['fun','hackney','hackney_response:stream_header/1',[]],['fun','hackney','hackney_response:stream_headers/1','fetch all headers.'],['fun','hackney','hackney_response:stream_status/1','parse the status line.'],['fun','hackney','hackney_ssl_transport:close/1','Close a TCP socket.'],['fun','hackney','hackney_ssl_transport:connect/3',[]],['fun','hackney','hackney_ssl_transport:connect/4',[]],['fun','hackney','hackney_ssl_transport:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_ssl_transport:messages/0','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_ssl_transport:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_ssl_transport:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_ssl_transport:recv/2',[]],['fun','hackney','hackney_ssl_transport:send/1','Send a packet on a socket.'],['fun','hackney','hackney_ssl_transport:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_ssl_transport:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_stream:async_recv/4',[]],['fun','hackney','hackney_stream:init/4',[]],['fun','hackney','hackney_stream:maybe_continue/4',[]],['fun','hackney','hackney_stream:start_link/3',[]],['fun','hackney','hackney_stream:system_code_change/4',[]],['fun','hackney','hackney_stream:system_continue/3',[]],['fun','hackney','hackney_stream:system_terminate/1',[]],['fun','hackney','hackney_sup:init/1',[]],['fun','hackney','hackney_sup:start_link/0',[]],['fun','hackney','hackney_tcp_transport:close/1','Close a TCP socket.'],['fun','hackney','hackney_tcp_transport:connect/3',[]],['fun','hackney','hackney_tcp_transport:connect/4',[]],['fun','hackney','hackney_tcp_transport:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_tcp_transport:messages/0','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_tcp_transport:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_tcp_transport:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_tcp_transport:recv/2',[]],['fun','hackney','hackney_tcp_transport:send/1','Send a packet on a socket.'],['fun','hackney','hackney_tcp_transport:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_tcp_transport:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_url:make_url/1',' construct an url from a base url, a path and a li'],['fun','hackney','hackney_url:parse_qs/1',[]],['fun','hackney','hackney_url:parse_url/1','Parse an url and return a #hackney_url record.'],['fun','hackney','hackney_url:qs/1','encode query properties to binary.'],['fun','hackney','hackney_url:transport_scheme/1',[]],['fun','hackney','hackney_url:unparse_url/1',[]],['fun','hackney','hackney_url:urldecode/1','Decode a URL encoded binary.'],['fun','hackney','hackney_url:urldecode/1','Decode a URL encoded binary.'],['fun','hackney','hackney_url:urlencode/1','URL encode a string binary.'],['fun','hackney','hackney_url:urlencode/1','URL encode a string binary.'],['fun','hackney','hackney_util:char_to_lower/1','Convert [A-Z] characters to lowercase.'],['fun','hackney','hackney_util:char_to_upper/1','Convert [a-z] characters to uppercase.'],['fun','hackney','hackney_util:content_type/1',[]],['fun','hackney','hackney_util:is_ipv6/1',[]],['fun','hackney','hackney_util:join/2',[]],['fun','hackney','hackney_util:maybe_apply_defaults/2',[]],['fun','hackney','hackney_util:require/1','Start the given applications if they were not alre'],['fun','hackney','hackney_util:to_binary/1',[]],['fun','hackney','hackney_util:to_hex/1',[]],['fun','hackney','hackney_util:to_lower/1','Convert a binary string to lowercase.'],['fun','hackney','hackney_util:to_upper/1',[]],['fun','hackney','hackney_util:token/1','Parse a token.'],['fun','hackney','hackney_util:token_ci/1','Parse a case-insensitive token.']];