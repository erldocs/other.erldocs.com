var index = [['app','hackney','hackney','[application]'],['mod','hackney','hackney',[]],['mod','hackney','hackney_app',[]],['mod','hackney','hackney_bstr',[]],['mod','hackney','hackney_cookie',[]],['mod','hackney','hackney_date',[]],['mod','hackney','hackney_deps',[]],['mod','hackney','hackney_dummy_metrics','dummy metric module.'],['mod','hackney','hackney_exometer_metrics',[]],['mod','hackney','hackney_folsom_metrics',[]],['mod','hackney','hackney_headers','module to manipulate HTTP headers.'],['mod','hackney','hackney_http','HTTP parser in pure Erlang   This parser is able '],['mod','hackney','hackney_http_connect',[]],['mod','hackney','hackney_idna',[]],['mod','hackney','hackney_manager',[]],['mod','hackney','hackney_mimetypes',[]],['mod','hackney','hackney_multipart','module to encode/decode multipart.'],['mod','hackney','hackney_socket',[]],['mod','hackney','hackney_sockets_pool',[]],['mod','hackney','hackney_sockets_pool_sup',[]],['mod','hackney','hackney_sockets_server',[]],['mod','hackney','hackney_socks5','socks 5 transport.'],['mod','hackney','hackney_ssl',[]],['mod','hackney','hackney_stream',[]],['mod','hackney','hackney_sup',[]],['mod','hackney','hackney_tcp',[]],['mod','hackney','hackney_trace',[]],['mod','hackney','hackney_util',[]],['fun','hackney','hackney:body/1','Return the full body sent with the response as lon'],['fun','hackney','hackney:body/1','Return the full body sent with the response.'],['fun','hackney','hackney:cancel_request/1','Extract raw informations from the client context  '],['fun','hackney','hackney:checkout/1',[]],['fun','hackney','hackney:checkout/2',[]],['fun','hackney','hackney:checkout/3',[]],['fun','hackney','hackney:checkout/4',[]],['fun','hackney','hackney:close/1','close the client.'],['fun','hackney','hackney:connect/1',[]],['fun','hackney','hackney:connect/2',[]],['fun','hackney','hackney:connect/3','connect a socket and create a client state.'],['fun','hackney','hackney:connect/4',[]],['fun','hackney','hackney:controlling_process/1','Assign a new controlling process Pid to Client.'],['fun','hackney','hackney:cookies/1',[]],['fun','hackney','hackney:copy/1',[]],['fun','hackney','hackney:copy/2',[]],['fun','hackney','hackney:copy/3',[]],['fun','hackney','hackney:copy/4',[]],['fun','hackney','hackney:delete/1',[]],['fun','hackney','hackney:delete/2',[]],['fun','hackney','hackney:delete/3',[]],['fun','hackney','hackney:delete/4',[]],['fun','hackney','hackney:finish_send_body/1',[]],['fun','hackney','hackney:get/1',[]],['fun','hackney','hackney:get/2',[]],['fun','hackney','hackney:get/3',[]],['fun','hackney','hackney:get/4',[]],['fun','hackney','hackney:head/1',[]],['fun','hackney','hackney:head/2',[]],['fun','hackney','hackney:head/3',[]],['fun','hackney','hackney:head/4',[]],['fun','hackney','hackney:location/1','return the requested location.'],['fun','hackney','hackney:lock/1',[]],['fun','hackney','hackney:lock/2',[]],['fun','hackney','hackney:lock/3',[]],['fun','hackney','hackney:lock/4',[]],['fun','hackney','hackney:merge/1',[]],['fun','hackney','hackney:merge/2',[]],['fun','hackney','hackney:merge/3',[]],['fun','hackney','hackney:merge/4',[]],['fun','hackney','hackney:mkactivity/1',[]],['fun','hackney','hackney:mkactivity/2',[]],['fun','hackney','hackney:mkactivity/3',[]],['fun','hackney','hackney:mkactivity/4',[]],['fun','hackney','hackney:mkcol/1',[]],['fun','hackney','hackney:mkcol/2',[]],['fun','hackney','hackney:mkcol/3',[]],['fun','hackney','hackney:mkcol/4',[]],['fun','hackney','hackney:move/1',[]],['fun','hackney','hackney:move/2',[]],['fun','hackney','hackney:move/3',[]],['fun','hackney','hackney:move/4',[]],['fun','hackney','hackney:msearch/1',[]],['fun','hackney','hackney:msearch/2',[]],['fun','hackney','hackney:msearch/3',[]],['fun','hackney','hackney:msearch/4',[]],['fun','hackney','hackney:notify/1',[]],['fun','hackney','hackney:notify/2',[]],['fun','hackney','hackney:notify/3',[]],['fun','hackney','hackney:notify/4',[]],['fun','hackney','hackney:options/1',[]],['fun','hackney','hackney:options/2',[]],['fun','hackney','hackney:options/3',[]],['fun','hackney','hackney:options/4',[]],['fun','hackney','hackney:patch/1',[]],['fun','hackney','hackney:patch/2',[]],['fun','hackney','hackney:patch/3',[]],['fun','hackney','hackney:patch/4',[]],['fun','hackney','hackney:pause_stream/1','pause a response stream, the stream process will h'],['fun','hackney','hackney:post/1',[]],['fun','hackney','hackney:post/2',[]],['fun','hackney','hackney:post/3',[]],['fun','hackney','hackney:post/4',[]],['fun','hackney','hackney:propfind/1',[]],['fun','hackney','hackney:propfind/2',[]],['fun','hackney','hackney:propfind/3',[]],['fun','hackney','hackney:propfind/4',[]],['fun','hackney','hackney:proppatch/1',[]],['fun','hackney','hackney:proppatch/2',[]],['fun','hackney','hackney:proppatch/3',[]],['fun','hackney','hackney:proppatch/4',[]],['fun','hackney','hackney:purge/1',[]],['fun','hackney','hackney:purge/2',[]],['fun','hackney','hackney:purge/3',[]],['fun','hackney','hackney:purge/4',[]],['fun','hackney','hackney:put/1',[]],['fun','hackney','hackney:put/2',[]],['fun','hackney','hackney:put/3',[]],['fun','hackney','hackney:put/4',[]],['fun','hackney','hackney:redirect_location/1',[]],['fun','hackney','hackney:report/1',[]],['fun','hackney','hackney:report/2',[]],['fun','hackney','hackney:report/3',[]],['fun','hackney','hackney:report/4',[]],['fun','hackney','hackney:request/1','make a request.'],['fun','hackney','hackney:request/1','make a request.'],['fun','hackney','hackney:request/1','make a request.'],['fun','hackney','hackney:request/1','make a request.'],['fun','hackney','hackney:request/1','make a request.'],['fun','hackney','hackney:request_info/1','get request info.'],['fun','hackney','hackney:resume_stream/1','resume a paused response stream, the stream proces'],['fun','hackney','hackney:search/1',[]],['fun','hackney','hackney:search/2',[]],['fun','hackney','hackney:search/3',[]],['fun','hackney','hackney:search/4',[]],['fun','hackney','hackney:send_body/1','send the request body until eob.'],['fun','hackney','hackney:send_multipart_body/1','send a multipart body until eof  Possible value a'],['fun','hackney','hackney:send_request/2','send a request using the current client state.'],['fun','hackney','hackney:send_request/3','send a request using the current client state and '],['fun','hackney','hackney:setopts/1','set client options.'],['fun','hackney','hackney:skip_body/1','skip the full body.'],['fun','hackney','hackney:skip_multipart/1','Stream the response body.'],['fun','hackney','hackney:start/0','Start the hackney process.'],['fun','hackney','hackney:start/1',[]],['fun','hackney','hackney:start_response/1','start a response.'],['fun','hackney','hackney:stop/0','Stop the hackney process.'],['fun','hackney','hackney:stop_async/1','stop to receive asynchronously.'],['fun','hackney','hackney:stream_body/1','Stream the response body.'],['fun','hackney','hackney:stream_multipart/1','Stream the response body.'],['fun','hackney','hackney:stream_next/1','continue to the next stream message.'],['fun','hackney','hackney:subscribe/1',[]],['fun','hackney','hackney:subscribe/2',[]],['fun','hackney','hackney:subscribe/3',[]],['fun','hackney','hackney:subscribe/4',[]],['fun','hackney','hackney:trace/1',[]],['fun','hackney','hackney:trace/2',[]],['fun','hackney','hackney:trace/3',[]],['fun','hackney','hackney:trace/4',[]],['fun','hackney','hackney:unlock/1',[]],['fun','hackney','hackney:unlock/2',[]],['fun','hackney','hackney:unlock/3',[]],['fun','hackney','hackney:unlock/4',[]],['fun','hackney','hackney:unsubscribe/1',[]],['fun','hackney','hackney:unsubscribe/2',[]],['fun','hackney','hackney:unsubscribe/3',[]],['fun','hackney','hackney:unsubscribe/4',[]],['fun','hackney','hackney_app:ensure_deps_started/0',[]],['fun','hackney','hackney_app:get_app_env/1','return a config value.'],['fun','hackney','hackney_app:get_app_env/2','return a config value.'],['fun','hackney','hackney_app:start/2',[]],['fun','hackney','hackney_app:stop/1',[]],['fun','hackney','hackney_bstr:alpha/1','Parse a list of case-insensitive alpha characters.'],['fun','hackney','hackney_bstr:char_to_lower/1','Convert [A-Z] characters to lowercase.'],['fun','hackney','hackney_bstr:char_to_upper/1','Convert [a-z] characters to uppercase.'],['fun','hackney','hackney_bstr:digits/1',[]],['fun','hackney','hackney_bstr:digits/1',[]],['fun','hackney','hackney_bstr:digits/1','Parse a list of digits as a non negative integer.'],['fun','hackney','hackney_bstr:join/2',[]],['fun','hackney','hackney_bstr:list/1','Parse a list of the given type.'],['fun','hackney','hackney_bstr:nonempty_list/1','Parse a non-empty list of the given type.'],['fun','hackney','hackney_bstr:parameterized_tokens/1','Parse a non empty list of tokens followed with opt'],['fun','hackney','hackney_bstr:params/1','Parse a list of parameters (a=b;c=d).'],['fun','hackney','hackney_bstr:quoted_string/1',[]],['fun','hackney','hackney_bstr:to_binary/1',[]],['fun','hackney','hackney_bstr:to_hex/1',[]],['fun','hackney','hackney_bstr:to_lower/1','Convert a binary string to lowercase.'],['fun','hackney','hackney_bstr:to_upper/1',[]],['fun','hackney','hackney_bstr:token/1','Parse a token.'],['fun','hackney','hackney_bstr:token_ci/1','Parse a case-insensitive token.'],['fun','hackney','hackney_bstr:trim/1',[]],['fun','hackney','hackney_bstr:whitespace/1','Skip whitespace.'],['fun','hackney','hackney_bstr:word/1','Parse either a token or a quoted string.'],['fun','hackney','hackney_cookie:parse_cookie/1','Parse a cookie header string and return a list of '],['fun','hackney','hackney_cookie:setcookie/1','Convert a cookie name, value and options to its io'],['fun','hackney','hackney_date:asctime_to_date/1','Parse an asctime date.'],['fun','hackney','hackney_date:date_to_rfc2109/1','Return the date formatted according to RFC2109.'],['fun','hackney','hackney_date:parse_http_date/1','Parse an HTTP date (RFC1123, RFC850 or asctime dat'],['fun','hackney','hackney_date:rfc1123_to_date/1','Parse an RFC1123 date.'],['fun','hackney','hackney_date:rfc2109_to_date/1','Parse an RFC2109 date.'],['fun','hackney','hackney_date:rfc850_to_date/1','Parse an RFC850 date.'],['fun','hackney','hackney_deps:deps_on_path/0','List of project dependencies on the path.'],['fun','hackney','hackney_deps:ensure/0','Ensure that the ebin and include paths for depende'],['fun','hackney','hackney_deps:ensure/1','Ensure that all ebin and include paths for depende'],['fun','hackney','hackney_deps:get_base_dir/0','Return the application directory for this applicat'],['fun','hackney','hackney_deps:get_base_dir/1','Return the application directory for Module.'],['fun','hackney','hackney_deps:local_path/1','Return an application-relative directory for this '],['fun','hackney','hackney_deps:local_path/1','Return an application-relative directory from Modu'],['fun','hackney','hackney_deps:new_siblings/1','Find new siblings paths relative to Module that ar'],['fun','hackney','hackney_dummy_metrics:decrement_counter/1',[]],['fun','hackney','hackney_dummy_metrics:decrement_counter/2',[]],['fun','hackney','hackney_dummy_metrics:delete/1',[]],['fun','hackney','hackney_dummy_metrics:increment_counter/1',[]],['fun','hackney','hackney_dummy_metrics:increment_counter/2',[]],['fun','hackney','hackney_dummy_metrics:new/2',[]],['fun','hackney','hackney_dummy_metrics:update_gauge/2',[]],['fun','hackney','hackney_dummy_metrics:update_histogram/2',[]],['fun','hackney','hackney_dummy_metrics:update_meter/2',[]],['fun','hackney','hackney_exometer_metrics:decrement_counter/1',[]],['fun','hackney','hackney_exometer_metrics:decrement_counter/1',[]],['fun','hackney','hackney_exometer_metrics:delete/1',[]],['fun','hackney','hackney_exometer_metrics:increment_counter/1',[]],['fun','hackney','hackney_exometer_metrics:increment_counter/1',[]],['fun','hackney','hackney_exometer_metrics:new/1',[]],['fun','hackney','hackney_exometer_metrics:update_gauge/1',[]],['fun','hackney','hackney_exometer_metrics:update_histogram/1',[]],['fun','hackney','hackney_exometer_metrics:update_meter/1',[]],['fun','hackney','hackney_folsom_metrics:decrement_counter/1',[]],['fun','hackney','hackney_folsom_metrics:decrement_counter/1',[]],['fun','hackney','hackney_folsom_metrics:delete/1',[]],['fun','hackney','hackney_folsom_metrics:increment_counter/1',[]],['fun','hackney','hackney_folsom_metrics:increment_counter/1',[]],['fun','hackney','hackney_folsom_metrics:new/1',[]],['fun','hackney','hackney_folsom_metrics:update_gauge/1',[]],['fun','hackney','hackney_folsom_metrics:update_histogram/1',[]],['fun','hackney','hackney_folsom_metrics:update_meter/1',[]],['fun','hackney','hackney_headers:content_disposition/1','Parse a content disposition.'],['fun','hackney','hackney_headers:content_type/1','Parse a content type.'],['fun','hackney','hackney_headers:delete/2','Delete the header corresponding to key if it is pr'],['fun','hackney','hackney_headers:fold/3','fold the list of headers.'],['fun','hackney','hackney_headers:get_value/2','get the value of the header.'],['fun','hackney','hackney_headers:get_value/3',[]],['fun','hackney','hackney_headers:header_value/2','join value and params in a binary.'],['fun','hackney','hackney_headers:insert/3','Insert the pair into the headers, merging with any'],['fun','hackney','hackney_headers:insert/4','same as insert/3 but allows to add params to the h'],['fun','hackney','hackney_headers:make_header/2',[]],['fun','hackney','hackney_headers:make_header/3',[]],['fun','hackney','hackney_headers:new/0','initialise an header dict.'],['fun','hackney','hackney_headers:new/2',[]],['fun','hackney','hackney_headers:parse/1','Semantically parse headers.'],['fun','hackney','hackney_headers:store/3','store the pair into the headers, replacing any pre'],['fun','hackney','hackney_headers:to_binary/1','return all the headers as a binary that can be sen'],['fun','hackney','hackney_headers:to_list/1',[]],['fun','hackney','hackney_headers:update/2','extend the headers with a new list of {Key, Value}'],['fun','hackney','hackney_http:execute/1','Execute the parser with the current buffer.'],['fun','hackney','hackney_http:execute/2','Execute the parser with the new buffer.'],['fun','hackney','hackney_http:get/1','retrieve a parser property.'],['fun','hackney','hackney_http:parse_response_version/2',[]],['fun','hackney','hackney_http:parser/0','Create a new HTTP parser.'],['fun','hackney','hackney_http:parser/1','create a new HTTP parser with options.'],['fun','hackney','hackney_http_connect:close/1','Close a socks5 socket.'],['fun','hackney','hackney_http_connect:connect/3',[]],['fun','hackney','hackney_http_connect:connect/4',[]],['fun','hackney','hackney_http_connect:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_http_connect:messages/1','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_http_connect:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_http_connect:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_http_connect:recv/2',[]],['fun','hackney','hackney_http_connect:send/1','Send a packet on a socket.'],['fun','hackney','hackney_http_connect:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_http_connect:shutdown/1','Immediately close a socket in one or two direction'],['fun','hackney','hackney_http_connect:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_idna:to_ascii/1','encode a IDNA domain to ascii.'],['fun','hackney','hackney_manager:async_response_pid/1',[]],['fun','hackney','hackney_manager:cancel_request/1',[]],['fun','hackney','hackney_manager:close_request/1',[]],['fun','hackney','hackney_manager:code_change/3',[]],['fun','hackney','hackney_manager:controlling_process/2',[]],['fun','hackney','hackney_manager:get_state/1',[]],['fun','hackney','hackney_manager:get_state/2',[]],['fun','hackney','hackney_manager:handle_call/3',[]],['fun','hackney','hackney_manager:handle_cast/2',[]],['fun','hackney','hackney_manager:handle_error/1',[]],['fun','hackney','hackney_manager:handle_info/2',[]],['fun','hackney','hackney_manager:init/1',[]],['fun','hackney','hackney_manager:new_request/1',[]],['fun','hackney','hackney_manager:start_async_response/1',[]],['fun','hackney','hackney_manager:start_link/0',[]],['fun','hackney','hackney_manager:stop_async_response/1',[]],['fun','hackney','hackney_manager:store_state/1',[]],['fun','hackney','hackney_manager:store_state/2',[]],['fun','hackney','hackney_manager:take_control/2',[]],['fun','hackney','hackney_manager:terminate/2',[]],['fun','hackney','hackney_manager:update_state/1',[]],['fun','hackney','hackney_manager:update_state/2',[]],['fun','hackney','hackney_manager:with_async_response_pid/2',[]],['fun','hackney','hackney_mimetypes:extension/1','Transform an extension to a mimetype.'],['fun','hackney','hackney_mimetypes:filename/1','Return the mimetype for any file by looking at its'],['fun','hackney','hackney_mimetypes:mime_to_exts/1','Return the list of extensions for a mimetype.'],['fun','hackney','hackney_multipart:boundary/0',[]],['fun','hackney','hackney_multipart:decode_form/1','decode a multipart form.'],['fun','hackney','hackney_multipart:encode_form/1',[]],['fun','hackney','hackney_multipart:encode_form/1','encode a list of parts a multiart form.'],['fun','hackney','hackney_multipart:len_mp_stream/2','get the size of a mp stream.'],['fun','hackney','hackney_multipart:mp_data_header/1','return the multipart header for a data.'],['fun','hackney','hackney_multipart:mp_eof/1','return the boundary ennding a multipart.'],['fun','hackney','hackney_multipart:mp_file_header/2','return the multipart header for a file that will b'],['fun','hackney','hackney_multipart:mp_header/2','create a generic multipart header.'],['fun','hackney','hackney_multipart:mp_mixed_header/1','return the mixed multipart header.'],['fun','hackney','hackney_multipart:parser/1','Return a multipart parser for the given boundary.'],['fun','hackney','hackney_multipart:part/3','create a part.'],['fun','hackney','hackney_socket:close/1','Close a TCP socket.'],['fun','hackney','hackney_socket:connect/1',[]],['fun','hackney','hackney_socket:connect/1','connect to a Port using a specific transport.'],['fun','hackney','hackney_socket:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_socket:messages/1','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_socket:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_socket:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_socket:recv/1',[]],['fun','hackney','hackney_socket:send/1','Send a packet on a socket.'],['fun','hackney','hackney_socket:sendfile/1','Sends Bytes from the file referenced by RawFile be'],['fun','hackney','hackney_socket:sendfile/1','Sends the file Filename to Socket.'],['fun','hackney','hackney_socket:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_socket:shutdown/1','Immediately close a socket in one or two direction'],['fun','hackney','hackney_socket:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_sockets_pool:checkin/2',[]],['fun','hackney','hackney_sockets_pool:checkout/5',[]],['fun','hackney','hackney_sockets_pool:code_change/3',[]],['fun','hackney','hackney_sockets_pool:handle_call/3',[]],['fun','hackney','hackney_sockets_pool:handle_cast/2',[]],['fun','hackney','hackney_sockets_pool:handle_info/2',[]],['fun','hackney','hackney_sockets_pool:init/1',[]],['fun','hackney','hackney_sockets_pool:start_link/2',[]],['fun','hackney','hackney_sockets_pool:start_pool/1',[]],['fun','hackney','hackney_sockets_pool:start_pool/2',[]],['fun','hackney','hackney_sockets_pool:stop/1',[]],['fun','hackney','hackney_sockets_pool:terminate/2',[]],['fun','hackney','hackney_sockets_pool_sup:init/1',[]],['fun','hackney','hackney_sockets_pool_sup:start_link/0',[]],['fun','hackney','hackney_sockets_server:code_change/3',[]],['fun','hackney','hackney_sockets_server:decr_active_pool/1',[]],['fun','hackney','hackney_sockets_server:get_pool_size/1',[]],['fun','hackney','hackney_sockets_server:get_socket_pool/1',[]],['fun','hackney','hackney_sockets_server:handle_call/3',[]],['fun','hackney','hackney_sockets_server:handle_cast/2',[]],['fun','hackney','hackney_sockets_server:handle_info/2',[]],['fun','hackney','hackney_sockets_server:incr_active_pool/1',[]],['fun','hackney','hackney_sockets_server:init/1',[]],['fun','hackney','hackney_sockets_server:init_pool/2',[]],['fun','hackney','hackney_sockets_server:int_to_max/1',[]],['fun','hackney','hackney_sockets_server:max_to_int/1',[]],['fun','hackney','hackney_sockets_server:pool_info/1',[]],['fun','hackney','hackney_sockets_server:reset_pool_count/1',[]],['fun','hackney','hackney_sockets_server:set_pool_size/2',[]],['fun','hackney','hackney_sockets_server:set_socket_pool/2',[]],['fun','hackney','hackney_sockets_server:start_link/0',[]],['fun','hackney','hackney_sockets_server:terminate/2',[]],['fun','hackney','hackney_sockets_server:with_pool/2',[]],['fun','hackney','hackney_socks5:close/1','Close a socks5 socket.'],['fun','hackney','hackney_socks5:connect/3',[]],['fun','hackney','hackney_socks5:connect/4',[]],['fun','hackney','hackney_socks5:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_socks5:messages/1','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_socks5:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_socks5:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_socks5:recv/2',[]],['fun','hackney','hackney_socks5:send/1','Send a packet on a socket.'],['fun','hackney','hackney_socks5:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_socks5:shutdown/1','Immediately close a socket in one or two direction'],['fun','hackney','hackney_socks5:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_ssl:close/1','Close a TCP socket.'],['fun','hackney','hackney_ssl:connect/3',[]],['fun','hackney','hackney_ssl:connect/4',[]],['fun','hackney','hackney_ssl:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_ssl:messages/1','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_ssl:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_ssl:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_ssl:recv/2',[]],['fun','hackney','hackney_ssl:send/1','Send a packet on a socket.'],['fun','hackney','hackney_ssl:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_ssl:shutdown/1','Immediately close a socket in one or two direction'],['fun','hackney','hackney_ssl:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_stream:init/4',[]],['fun','hackney','hackney_sup:init/1',[]],['fun','hackney','hackney_sup:start_link/0',[]],['fun','hackney','hackney_tcp:close/1','Close a TCP socket.'],['fun','hackney','hackney_tcp:connect/3',[]],['fun','hackney','hackney_tcp:connect/4',[]],['fun','hackney','hackney_tcp:controlling_process/1','Assign a new controlling process Pid to Socket.'],['fun','hackney','hackney_tcp:messages/1','Atoms used to identify messages in {active, once |'],['fun','hackney','hackney_tcp:peername/1','Return the address and port for the other end of a'],['fun','hackney','hackney_tcp:recv/1','Receive a packet from a socket in passive mode.'],['fun','hackney','hackney_tcp:recv/2',[]],['fun','hackney','hackney_tcp:send/1','Send a packet on a socket.'],['fun','hackney','hackney_tcp:setopts/1','Set one or more options for a socket.'],['fun','hackney','hackney_tcp:shutdown/1','Immediately close a socket in one or two direction'],['fun','hackney','hackney_tcp:sockname/1','Get the local address and port of a socket.'],['fun','hackney','hackney_trace:disable/0','stop tracing.'],['fun','hackney','hackney_trace:enable/1','start tracing  start tracing at level Level and s'],['fun','hackney','hackney_trace:report_event/4',[]],['fun','hackney','hackney_trace:set_level/1','change the trace level when tracing has already st'],['fun','hackney','hackney_util:filter_options/1','filter a proplists and only keep allowed keys.'],['fun','hackney','hackney_util:get_value/1','faster alternative to prolists:get_value/3  Inste'],['fun','hackney','hackney_util:get_value/1','faster alternative to prolists:get_value/2.'],['fun','hackney','hackney_util:increment/1',[]],['fun','hackney','hackney_util:increment/2',[]],['fun','hackney','hackney_util:is_ipv6/1',[]],['fun','hackney','hackney_util:maybe_apply_defaults/2',[]],['fun','hackney','hackney_util:maybe_seed/0',[]],['fun','hackney','hackney_util:mod_metrics/0',[]],['fun','hackney','hackney_util:privdir/0',[]],['fun','hackney','hackney_util:rand_increment/1',[]],['fun','hackney','hackney_util:rand_increment/2',[]],['fun','hackney','hackney_util:require/1','Start the given applications if they were not alre'],['fun','hackney','hackney_util:set_option_default/2','set the default options in a proplists if not defi'],['fun','hackney','hackney_util:to_atom/1',[]],['fun','hackney','hackney_util:user_opts/2',[]],['fun','hackney','hackney_util:user_opts/3',[]],['fun','hackney','hackney_util:valid_opts/2',[]]];