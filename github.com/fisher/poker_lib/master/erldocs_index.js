var index = [['app','poker_lib','poker_lib','[application]'],['mod','poker_lib','poker_lib','.'],['mod','poker_lib','vsport_math','      Auxiliary module with calculations in it.'],['fun','poker_lib','poker_lib:analyse_hand/1','     Returns recognized type of combo.'],['fun','poker_lib','poker_lib:bin2card/1','reverse transformation for card2bin/1 @spec bin2ca'],['fun','poker_lib','poker_lib:card2bin/1','returns printable representation of particular car'],['fun','poker_lib','poker_lib:compare_hands/2','compare two given hands.'],['fun','poker_lib','poker_lib:fair_shuffle/1','       Associate each element in the list with a '],['fun','poker_lib','poker_lib:fisher_shuffle/1','       Fisher-Yates shuffle adopted for fun lango'],['fun','poker_lib','poker_lib:get_chances/1','get the winning probability for a given starting h'],['fun','poker_lib','poker_lib:get_random_card/1','gets random card from Deck.'],['fun','poker_lib','poker_lib:get_rank/1','returns comparable value (rank) of a particular Ca'],['fun','poker_lib','poker_lib:get_suit/1','returns suit of a particular Card.'],['fun','poker_lib','poker_lib:is_flush/1',[]],['fun','poker_lib','poker_lib:is_four_of_a_kind/1',[]],['fun','poker_lib','poker_lib:is_full_house/1',[]],['fun','poker_lib','poker_lib:is_one_pair/1',[]],['fun','poker_lib','poker_lib:is_royal_flush/1','1.'],['fun','poker_lib','poker_lib:is_straight/1',[]],['fun','poker_lib','poker_lib:is_straight_flush/1',[]],['fun','poker_lib','poker_lib:is_three_of_a_kind/1',[]],['fun','poker_lib','poker_lib:is_two_pair/1',[]],['fun','poker_lib','poker_lib:new_deck/0','returns new deck of 52 cards, sorted from 2s to A'],['fun','poker_lib','poker_lib:rank2bin/1','returns UTF-8 representation of a cards rank in b'],['fun','poker_lib','poker_lib:shuffle/1','Shuffles the Deck of cards.'],['fun','poker_lib','poker_lib:suit2bin/1','returns UTF-8 representation of a suit in binary()'],['fun','poker_lib','vsport_math:binomial/2',[]],['fun','poker_lib','vsport_math:calc_probabilities/1','calc probabilities from given list of weight quoti'],['fun','poker_lib','vsport_math:calc_probabilities/3','calc probabilities from a given set of weight quot'],['fun','poker_lib','vsport_math:calc_seq_prob/1','calculate sequence probabilities       The formul'],['fun','poker_lib','vsport_math:count_permutation/1','number of possible permutations equals to factoria'],['fun','poker_lib','vsport_math:count_sequence/2','count the number of possible sequencies of K eleme'],['fun','poker_lib','vsport_math:count_uniq_comb/2','count the number of possible K-element uniq combin'],['fun','poker_lib','vsport_math:diversity_index/2','1 / sum(i=1, n, p^2).'],['fun','poker_lib','vsport_math:diversity_index_strict/2','strict version of diversion_index -- it just ensur'],['fun','poker_lib','vsport_math:etalon_uniq_comb/1','this is inefficient but pure algos to compare with'],['fun','poker_lib','vsport_math:fact/1','simple factorial(N)      NB: fact(0) == 1; lists:'],['fun','poker_lib','vsport_math:gaussian_cdp/3','Cumulative distribution function of the standard n'],['fun','poker_lib','vsport_math:mean_arythmetic/1','arythmetic mean, MA       russian: среднее'],['fun','poker_lib','vsport_math:n_over_m/3','returns true if element N comes first in List, fal'],['fun','poker_lib','vsport_math:perms/1','real slowpoke from the book.'],['fun','poker_lib','vsport_math:permutation/1','returns permutation of given set L       english '],['fun','poker_lib','vsport_math:sequence/2','return possible sequences of length K from the giv'],['fun','poker_lib','vsport_math:standart_deviation/1','standart deviation, also known as Sigma       rus'],['fun','poker_lib','vsport_math:sum/1','simple sum function.'],['fun','poker_lib','vsport_math:sum/2','simple sum function.'],['fun','poker_lib','vsport_math:uniq_comb/1','return the list of K-element uniq combinations of '],['fun','poker_lib','vsport_math:variance/1','the variance, often called sigma-squared       ma']];