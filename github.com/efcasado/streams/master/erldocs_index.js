var index = [['app','streams','streams','[application]'],['mod','streams','streams',[]],['fun','streams','streams:append/1','  Returns a new stream which is the result of app'],['fun','streams','streams:drop/1','  Returns a new stream consisting of the last M e'],['fun','streams','streams:equal/1','  Returns true if the two streams hold the same v'],['fun','streams','streams:filter/1',[]],['fun','streams','streams:filtermap/1',[]],['fun','streams','streams:foreach/1','  Iterates over the first N elements of the strea'],['fun','streams','streams:foreach/1','  Iterates over the given stream executing the pr'],['fun','streams','streams:from_list/1','  Converts the given list into a stream.'],['fun','streams','streams:is_empty/1','  Returns true if the stream is empty.'],['fun','streams','streams:length/1','  Returns the length of the given stream.'],['fun','streams','streams:map/1',[]],['fun','streams','streams:map/1',[]],['fun','streams','streams:reduce/1',[]],['fun','streams','streams:reduce/1',[]],['fun','streams','streams:reverse/1','  Returns a new stream which consists in a revers'],['fun','streams','streams:seq/2','  Creates the specified [F, T] sequence using a u'],['fun','streams','streams:seq/3','  Creates the specified [F, T] sequence using the'],['fun','streams','streams:take/1','  Returns a new stream consisting of the first N '],['fun','streams','streams:to_list/1','  Converts the given stream into a list.']];