var index = [['app','smak','smak','[application]'],['mod','smak','smak_auth_basic','Smak basic authentication middleware.'],['mod','smak','smak_auth_cookie','Smak cookie-based session/authentication middlewar'],['mod','smak','smak_auth_digest','Smak digest authentication middleware.'],['mod','smak','smak_dispatch','Smak request dispatching.'],['mod','smak','smak_hex','Tools for manipulating hexadecimal string represen'],['mod','smak','smak_http_response','Smak HTTP response utility functions for dealing w'],['mod','smak','smak_http_status','Smak HTTP status methods.'],['mod','smak','smak_log','Smak basic logging middleware.'],['mod','smak','smak_log_console','Smak console logging gen_event handler.'],['mod','smak','smak_log_file','Smak file logging gen_event handler.'],['mod','smak','smak_media_types','Smak media types.'],['mod','smak','smak_method_overload','Basic Smak HTTP method override middleware.'],['mod','smak','smak_mw','Smak middleware utilities.'],['mod','smak','smak_random','Smak utilities for generating random numbers.'],['mod','smak','smak_route','Smak URL routing.'],['mod','smak','smak_sn_cookie','Implementation of compressed, signed, encrypted sh'],['mod','smak','smak_streams','Smak "streams" implementation for compatibility wi'],['mod','smak','smak_string','Smak miscellaneous string functions.'],['mod','smak','smak_test',[]],['mod','smak','smak_timer','Smak request timing.'],['mod','smak','smak_url','Smak URL handling methods.'],['fun','smak','smak_auth_basic:init/1','Initializes basic authentication middleware.'],['fun','smak','smak_auth_cookie:init/1','Initializes authentication middleware and returns '],['fun','smak','smak_auth_digest:init/1','Creates an application which checks for digest aut'],['fun','smak','smak_dispatch:gb_tree/1','Returns an EWGI dispatcher application which uses '],['fun','smak','smak_dispatch:pattern/1','Returns an EWGI dispatcher application which uses '],['fun','smak','smak_hex:hexdigit/1','Convert an integer less than 16 to a hex digit.'],['fun','smak','smak_hex:test/0','Test this module.'],['fun','smak','smak_hex:to_bin/1','Convert a hexadecimal string to a binary.'],['fun','smak','smak_hex:to_hex/1','Convert an iolist to a hexadecimal string.'],['fun','smak','smak_hex:to_int/1','Convert a hexadecimal string to an integer.'],['fun','smak','smak_hex:unhexdigit/1','Convert a hex digit to its integer value.'],['fun','smak','smak_http_response:init/1',[]],['fun','smak','smak_http_response:init/1',[]],['fun','smak','smak_http_response:replace_header/1','Replace the first occurrence of the header specifi'],['fun','smak','smak_http_status:accepted/1','Returns a 202 Accepted message.'],['fun','smak','smak_http_status:bad_gateway/1','Returns a 502 Bad Gateway error.'],['fun','smak','smak_http_status:bad_request/1','Returns a 400 Bad Request error.'],['fun','smak','smak_http_status:conflict/1','Returns a 409 Conflict error.'],['fun','smak','smak_http_status:created/1','Returns a 201 Created message.'],['fun','smak','smak_http_status:expectation_failed/1','Returns a 417 Expectation Failed error.'],['fun','smak','smak_http_status:forbidden/1','Returns a 403 Forbidden error.'],['fun','smak','smak_http_status:found/1','Returns a 302 Found redirection.'],['fun','smak','smak_http_status:gateway_timeout/1','Returns a 504 Gateway Timeout error.'],['fun','smak','smak_http_status:gone/1','Returns a 410 Gone error.'],['fun','smak','smak_http_status:http_error/1','This middleware automatically catches exceptions o'],['fun','smak','smak_http_status:internal_server_error/1','Returns a 500 Internal Server error.'],['fun','smak','smak_http_status:length_required/1','Returns a 411 Length Required error.'],['fun','smak','smak_http_status:method_not_allowed/1','Returns a 405 Method Not Allowed error.'],['fun','smak','smak_http_status:moved_perm/1','Returns a 301 Moved Permanently redirection.'],['fun','smak','smak_http_status:multiple_choices/1','Returns a 300 Multiple Choices redirection.'],['fun','smak','smak_http_status:no_content/1','Returns a 204 No Content message.'],['fun','smak','smak_http_status:non_auth_info/1','Returns a 203 Non-Authoritative Information messag'],['fun','smak','smak_http_status:not_acceptable/1','Returns a 406 Not Acceptable error.'],['fun','smak','smak_http_status:not_found/1','Returns a 404 Not Found error.'],['fun','smak','smak_http_status:not_implemented/1','Returns a 501 Not Implemented error.'],['fun','smak','smak_http_status:not_modified/1','Returns a 304 Not Modified redirection.'],['fun','smak','smak_http_status:ok/1','Returns a 200 OK message.'],['fun','smak','smak_http_status:partial_content/1','Returns a 206 Partial Content message.'],['fun','smak','smak_http_status:payment_required/1','Returns a 402 Payment Required error.'],['fun','smak','smak_http_status:precondition_failed/1','Returns a 412 Precondition Failed error.'],['fun','smak','smak_http_status:proxy_authentication_required/1','Returns a 407 Proxy Authentication Required error.'],['fun','smak','smak_http_status:request_entity_too_large/1','Returns a 413 Request Entity Too Large error.'],['fun','smak','smak_http_status:request_range_not_satisfiable/1','Returns a 416 Request Range Not Satisfiable error.'],['fun','smak','smak_http_status:request_timeout/1','Returns a 408 Request Timeout error.'],['fun','smak','smak_http_status:request_uri_too_long/1','Returns a 414 Request-URI Too Long error.'],['fun','smak','smak_http_status:reset_content/1','Returns a 205 Reset Content message.'],['fun','smak','smak_http_status:see_other/1','Returns a 303 See Other redirection.'],['fun','smak','smak_http_status:service_unavailable/1','Returns a 503 Service Unavailable error.'],['fun','smak','smak_http_status:temporary_redir/1','Returns a 307 Temporary Redirect redirection.'],['fun','smak','smak_http_status:unauthorized/1','Returns a 401 Unauthorized error.'],['fun','smak','smak_http_status:unsupported_media_type/1','Returns a 415 Unsupported Media Type error.'],['fun','smak','smak_http_status:use_proxy/1','Returns a 305 Use Proxy redirection.'],['fun','smak','smak_http_status:version_not_supported/1','Returns a 505 Version Not Supported error.'],['fun','smak','smak_log:init/1','Initialises the logging middleware which provides '],['fun','smak','smak_log:level_compare/1',[]],['fun','smak','smak_log:start_link/0',[]],['fun','smak','smak_log:start_link/2',[]],['fun','smak','smak_log_console:add/1',[]],['fun','smak','smak_log_console:add/1',[]],['fun','smak','smak_log_console:code_change/3',[]],['fun','smak','smak_log_console:delete/0',[]],['fun','smak','smak_log_console:delete/1',[]],['fun','smak','smak_log_console:handle_call/2',[]],['fun','smak','smak_log_console:handle_event/2',[]],['fun','smak','smak_log_console:handle_info/2',[]],['fun','smak','smak_log_console:init/1',[]],['fun','smak','smak_log_console:terminate/2',[]],['fun','smak','smak_log_file:add/1',[]],['fun','smak','smak_log_file:add/1',[]],['fun','smak','smak_log_file:code_change/3',[]],['fun','smak','smak_log_file:delete/0',[]],['fun','smak','smak_log_file:delete/1',[]],['fun','smak','smak_log_file:handle_call/2',[]],['fun','smak','smak_log_file:handle_event/2',[]],['fun','smak','smak_log_file:handle_info/2',[]],['fun','smak','smak_log_file:init/1',[]],['fun','smak','smak_log_file:terminate/2',[]],['fun','smak','smak_media_types:all/0',[]],['fun','smak','smak_media_types:application_all/0','Media type for: All application documents.'],['fun','smak','smak_media_types:application_all_xml/0','Media type for: All application/*+xml documents.'],['fun','smak','smak_media_types:application_atom_service_xml/0','Media type for: Atom service documents.'],['fun','smak','smak_media_types:application_atom_xml/0','Media type for: Atom syndication documents.'],['fun','smak','smak_media_types:application_cab/0','Media type for: Microsoft Cabinet archive.'],['fun','smak','smak_media_types:application_compress/0','Media type for: Compressed filed.'],['fun','smak','smak_media_types:application_excel/0','Media type for: Microsoft Excel document.'],['fun','smak','smak_media_types:application_flash/0','Media type for: Shockwave Flash object.'],['fun','smak','smak_media_types:application_gnu_tar/0','Media type for: GNU Tar archive.'],['fun','smak','smak_media_types:application_gnu_zip/0','Media type for: GNU Zip archive.'],['fun','smak','smak_media_types:application_http_cookies/0','Media type for: HTTP cookies.'],['fun','smak','smak_media_types:application_java/0','Media type for: Java class.'],['fun','smak','smak_media_types:application_java_archive/0','Media type for: Java archive.'],['fun','smak','smak_media_types:application_java_object/0','Media type for: Java serialized object.'],['fun','smak','smak_media_types:application_javascript/0','Media type for: Javascript document.'],['fun','smak','smak_media_types:application_jnlp/0','Media type for: JNLP.'],['fun','smak','smak_media_types:application_json/0','Media type for: JavaScript Object Notation documen'],['fun','smak','smak_media_types:application_latex/0','Media type for: LaTeX.'],['fun','smak','smak_media_types:application_mac_binhex40/0','Media type for: Mac binhex40.'],['fun','smak','smak_media_types:application_mathml_xml/0','Media type for: Mathml XML document.'],['fun','smak','smak_media_types:application_octet_stream/0','Media type for: Raw octet stream.'],['fun','smak','smak_media_types:application_pdf/0','Media type for: Adobe PDF document.'],['fun','smak','smak_media_types:application_postscript/0','Media type for: Postscript document.'],['fun','smak','smak_media_types:application_powerpoint/0','Media type for: Microsoft Powerpoint document.'],['fun','smak','smak_media_types:application_project/0','Media type for: Microsoft Project document.'],['fun','smak','smak_media_types:application_rdf_xml/0','Media type for: XML serialized Resource Descriptio'],['fun','smak','smak_media_types:application_relaxng_compact/0','Media type for: Relax NG Schema document, Compact '],['fun','smak','smak_media_types:application_relaxng_xml/0','Media type for: Relax NG Schema document, XML synt'],['fun','smak','smak_media_types:application_rss_xml/0','Media type for: Really Simple Syndication document'],['fun','smak','smak_media_types:application_rtf/0','Media type for: Rich Text Format document.'],['fun','smak','smak_media_types:application_stuffit/0','Media type for: Stuffit archive.'],['fun','smak','smak_media_types:application_tar/0','Media type for: Tar archive.'],['fun','smak','smak_media_types:application_tex/0','Media type for: Tex file.'],['fun','smak','smak_media_types:application_troff_man/0','Media type for: LaTeX.'],['fun','smak','smak_media_types:application_voicexml/0','Media type for: VoiceXML.'],['fun','smak','smak_media_types:application_w3c_schema_xml/0','Media type for: W3C XML Schema document.'],['fun','smak','smak_media_types:application_w3c_xslt/0','Media type for: W3C XSLT Stylesheet.'],['fun','smak','smak_media_types:application_wadl_xml/0','Media type for: Web Application Description Langua'],['fun','smak','smak_media_types:application_word/0','Media type for: Microsoft Word document.'],['fun','smak','smak_media_types:application_www_form/0','Media type for: Web form (URL encoded).'],['fun','smak','smak_media_types:application_xhtml_xml/0','Media type for: XHTML document.'],['fun','smak','smak_media_types:application_xml/0','Media type for: XML document.'],['fun','smak','smak_media_types:application_xml_dtd/0','Media type for: XML DTD.'],['fun','smak','smak_media_types:application_xul/0','Media type for: XUL document.'],['fun','smak','smak_media_types:application_zip/0','Media type for: Zip archive.'],['fun','smak','smak_media_types:audio_all/0','Media type for: All audios.'],['fun','smak','smak_media_types:audio_basic/0','Media type for: AU audio.'],['fun','smak','smak_media_types:audio_midi/0','Media type for: MIDI audio.'],['fun','smak','smak_media_types:audio_mpeg/0','Media type for: MPEG audio (MP3).'],['fun','smak','smak_media_types:audio_real/0','Media type for: Real audio.'],['fun','smak','smak_media_types:audio_wav/0','Media type for: Waveform audio.'],['fun','smak','smak_media_types:description/1','Sets the description for MediaType to Desc.'],['fun','smak','smak_media_types:description/1','Returns the description for MediaType.'],['fun','smak','smak_media_types:equals/1','Returns whether or not two media types are equal.'],['fun','smak','smak_media_types:equals/1','Equivalent to equals(L, R, false).'],['fun','smak','smak_media_types:image_all/0','Media type for: All images.'],['fun','smak','smak_media_types:image_bmp/0','Media type for: Windows bitmap.'],['fun','smak','smak_media_types:image_gif/0','Media type for: GIF image.'],['fun','smak','smak_media_types:image_icon/0','Media type for: Windows icon (Favicon).'],['fun','smak','smak_media_types:image_jpeg/0','Media type for: JPEG image.'],['fun','smak','smak_media_types:image_png/0','Media type for: PNG image.'],['fun','smak','smak_media_types:image_svg/0','Media type for: Scalable Vector Graphics.'],['fun','smak','smak_media_types:image_tiff/0','Media type for: TIFF image.'],['fun','smak','smak_media_types:includes/1','Returns whether or not a given media type is inclu'],['fun','smak','smak_media_types:is_compatible/1','Checks if two media types are compatible.'],['fun','smak','smak_media_types:is_concrete/1','Checks if a media type is concrete (i.e.'],['fun','smak','smak_media_types:main_type/1','Returns the main media type.'],['fun','smak','smak_media_types:media_type/1','Returns the media type record with the given MIME '],['fun','smak','smak_media_types:media_type/1','Equivalent to media_type(MimeType, Description, []'],['fun','smak','smak_media_types:message_all/0','Media type for: All messages.'],['fun','smak','smak_media_types:message_http/0','Media type for: HTTP message.'],['fun','smak','smak_media_types:message_imdn_xml/0','Media type for: Instant Message Disposition Notifi'],['fun','smak','smak_media_types:mime_type/1','Sets the MIME type for MediaType to MimeType.'],['fun','smak','smak_media_types:mime_type/1','Returns the MIME type for MediaType.'],['fun','smak','smak_media_types:model_all/0','Media type for: All models.'],['fun','smak','smak_media_types:model_vrml/0','Media type for: VRML.'],['fun','smak','smak_media_types:most_specific/1','Returns the first, most specific media type for a '],['fun','smak','smak_media_types:multipart_all/0','Media type for: All multipart data.'],['fun','smak','smak_media_types:multipart_byteranges/0','Media type for: Content of multiple byte ranges.'],['fun','smak','smak_media_types:multipart_form_data/0','Media type for: Multipart form data.'],['fun','smak','smak_media_types:parameters/1','Sets the parameters for MediaType to Params.'],['fun','smak','smak_media_types:parameters/1','Returns the parameters for MediaType.'],['fun','smak','smak_media_types:sub_type/1','Returns the media sub-type.'],['fun','smak','smak_media_types:text_all/0','Media type for: All texts.'],['fun','smak','smak_media_types:text_calendar/0','Media type for: iCalendar event.'],['fun','smak','smak_media_types:text_css/0','Media type for: CSS stylesheet.'],['fun','smak','smak_media_types:text_csv/0','Media type for: Comma-Separated Values.'],['fun','smak','smak_media_types:text_html/0','Media type for: HTML document.'],['fun','smak','smak_media_types:text_j2me_app_descriptor/0','Media type for: J2ME Application Descriptor.'],['fun','smak','smak_media_types:text_javascript/0','Media type for: Javascript document.'],['fun','smak','smak_media_types:text_plain/0','Media type for: Plain text.'],['fun','smak','smak_media_types:text_rdf_n3/0','Media type for: N3 serialized Resource Description'],['fun','smak','smak_media_types:text_uri_list/0','Media type for: List of URIs.'],['fun','smak','smak_media_types:text_vcard/0','Media type for: vCard.'],['fun','smak','smak_media_types:text_xml/0','Media type for: XML text.'],['fun','smak','smak_media_types:to_string/1','Returns the string representation of a media type.'],['fun','smak','smak_media_types:video_all/0','Media type for: All videos.'],['fun','smak','smak_media_types:video_avi/0','Media type for: AVI video.'],['fun','smak','smak_media_types:video_mp4/0','Media type for: MPEG-4 video.'],['fun','smak','smak_media_types:video_mpeg/0','Media type for: MPEG video.'],['fun','smak','smak_media_types:video_quicktime/0','Media type for: Quicktime video.'],['fun','smak','smak_media_types:video_wmv/0','Media type for: Windows movie.'],['fun','smak','smak_method_overload:init/0',[]],['fun','smak','smak_method_overload:init/1',[]],['fun','smak','smak_mw:compose/1','Compose two EWGI applications: G ∘ F  Equivalen'],['fun','smak','smak_mw:foldl/1','Fold over middleware components L, processing each'],['fun','smak','smak_mw:foldr/1','Same as foldl/2 but in the opposite direction.'],['fun','smak','smak_mw:noop/0','Simple noop middleware that returns the EWGI con'],['fun','smak','smak_mw:process/1','If the context contains no errors, processes a mid'],['fun','smak','smak_mw:wrapper/1','Creates a wrapper EWGI application which combine'],['fun','smak','smak_random:bytes/1',[]],['fun','smak','smak_random:init/0',[]],['fun','smak','smak_random:uniform/0',[]],['fun','smak','smak_random:uniform/1','N =&gt; 1, gives an integer between 1 and N.'],['fun','smak','smak_route:init/1','Initialises an EWGI middleware application which u'],['fun','smak','smak_route:resolve/1','Resolve a particular URL using the routing tree.'],['fun','smak','smak_route:reverse/1','Naive reverse matching.'],['fun','smak','smak_route:route/1','Creates a named route Name with a pattern specifie'],['fun','smak','smak_route:route/1','Equivalent to route(Name, Doc, Pat, []).'],['fun','smak','smak_route:route/1','Equivalent to route(Name, &lt;&lt;""&gt;&gt;, Pat)'],['fun','smak','smak_route:routes/1','Creates a route lookup tree for the list of routes'],['fun','smak','smak_route:routes_all/0','Creates a route lookup tree by searching all loade'],['fun','smak','smak_route:routes_all/1','Creates a route lookup tree by searching the modul'],['fun','smak','smak_sn_cookie:decode/1','Checks the signature and timeout and decrypts the '],['fun','smak','smak_sn_cookie:encode/1','Encodes and signs the data using the specified sec'],['fun','smak','smak_sn_cookie:encode/1','Encodes and signs the data using the specified sec'],['fun','smak','smak_streams:append/1','Append the stream S2 to S1, returning a new stream'],['fun','smak','smak_streams:constant/1','The infinite stream of elements X.'],['fun','smak','smak_streams:drop/1','The stream [EN+1, EN+2, ...], if S is [E1, ..., EN'],['fun','smak','smak_streams:dropwhile/1','Drops elements from a stream while the unary predi'],['fun','smak','smak_streams:duplicate/1','The stream of length N, where each element is X.'],['fun','smak','smak_streams:empty/0','Returns an empty stream.'],['fun','smak','smak_streams:filter/1','The stream of all elements E in S (in the same ord'],['fun','smak','smak_streams:first/1','The stream consisting of the first N elements of S'],['fun','smak','smak_streams:foldl/1','Computes (...((A F E1) F E2)...'],['fun','smak','smak_streams:foldr/1','Computes (E1 F ...(EN-1 F (EN F A))...), if S is ['],['fun','smak','smak_streams:foreach/1','Evaluates F(E1), F(E2), ..., if S is [E1, E2, ...]'],['fun','smak','smak_streams:integers/1','The stream of integers starting at N.'],['fun','smak','smak_streams:list_to_stream/1','Turns a proper normal list into a stream.'],['fun','smak','smak_streams:map/1','The stream [F(E1), F(E2), F(E3), ...] if S is [E1,'],['fun','smak','smak_streams:member/1','Returns true if X is in the stream S, and false ot'],['fun','smak','smak_streams:merge/1','Returns the stream of elements in S1 and S2 where '],['fun','smak','smak_streams:nth/1','Returns the Nth element of stream S.'],['fun','smak','smak_streams:nthtail/1','Returns the stream [AN+1, AN+2, ...] if S is [A1, '],['fun','smak','smak_streams:push/1','Pushes H onto the head of T.'],['fun','smak','smak_streams:seq/1','The stream of integers [From, From + D, From + 2*D'],['fun','smak','smak_streams:seq/1','Returns a stream consisting of integers in the int'],['fun','smak','smak_streams:seq/1','Returns an *infinite* stream starting at From in a'],['fun','smak','smak_streams:subsequence/1','The stream [EN, EN+1, ..., EN+D], if S is [E1, E2,'],['fun','smak','smak_streams:takewhile/1','Accumulates elements from a stream while the unary'],['fun','smak','smak_streams:to_list/1','Converts a stream into a list.'],['fun','smak','smak_string:is_whitespace/1','Tests if a character is whitespace.'],['fun','smak','smak_string:partition/2','Inspired by Python 2.5s str.partition:       par'],['fun','smak','smak_string:split/1','Return a list of strings of the strings in String,'],['fun','smak','smak_string:split/1','Return a list of strings of the strings in String,'],['fun','smak','smak_string:split/1','Return a list of strings of the strings in String '],['fun','smak','smak_string:strip/1','Strips Dir of string of any characters specified.'],['fun','smak','smak_string:strip/1','Strips Dir sides of string of any whitespace.'],['fun','smak','smak_string:strip/1','Strips both left and right sides of string of any '],['fun','smak','smak_test:test/0',[]],['fun','smak','smak_timer:init/1','Initialises a timer middleware which measures the '],['fun','smak','smak_url:defrag/1',[]],['fun','smak','smak_url:join/2',[]],['fun','smak','smak_url:join/3',[]],['fun','smak','smak_url:parse/1',[]],['fun','smak','smak_url:parse/2',[]],['fun','smak','smak_url:parse/3',[]],['fun','smak','smak_url:quote/1',[]],['fun','smak','smak_url:quote/2',[]],['fun','smak','smak_url:split/1',[]],['fun','smak','smak_url:unparse/6',[]],['fun','smak','smak_url:unquote/1',[]],['fun','smak','smak_url:unsplit/5',[]]];