var index = [['app','erl_helpers','erl_helpers','[application]'],['mod','erl_helpers','eh_http','Helper module for http operations with httpc and m'],['mod','erl_helpers','eh_list','Helper module to list.'],['mod','erl_helpers','eh_maybe','Helper module to leverage kind of shy "maybe monad'],['mod','erl_helpers','eh_supervisor','Utility functions to supervisor modules.'],['mod','erl_helpers','eh_uuid','Helper module to generate UUID.'],['mod','erl_helpers','mochijson2','Yet another JSON (RFC 4627) library for Erlang.'],['mod','erl_helpers','struct','Utilities for working with mochijson2 struct.'],['fun','erl_helpers','eh_http:http_delete/1',[]],['fun','erl_helpers','eh_http:http_get/1',[]],['fun','erl_helpers','eh_http:http_post/2',[]],['fun','erl_helpers','eh_http:http_put/2',[]],['fun','erl_helpers','eh_http:http_response/2',[]],['fun','erl_helpers','eh_http:http_response/3',[]],['fun','erl_helpers','eh_http:http_response/4',[]],['fun','erl_helpers','eh_list:to_properties/1','Turn a list in a property list.'],['fun','erl_helpers','eh_maybe:maybe_binary/1',[]],['fun','erl_helpers','eh_maybe:maybe_integer/1',[]],['fun','erl_helpers','eh_maybe:maybe_ok/1',[]],['fun','erl_helpers','eh_maybe:maybe_padding/1',[]],['fun','erl_helpers','eh_maybe:maybe_string/1',[]],['fun','erl_helpers','eh_maybe:maybe_undefined/1',[]],['fun','erl_helpers','eh_supervisor:upgrade/1','Remover and add processes if necessary.'],['fun','erl_helpers','eh_uuid:new/0',[]],['fun','erl_helpers','eh_uuid:test_unique/0',[]],['fun','erl_helpers','mochijson2:decode/1','Decode the given iolist to Erlang terms.'],['fun','erl_helpers','mochijson2:decoder/1','Create a decoder/1 with the given options.'],['fun','erl_helpers','mochijson2:encode/1','Encode the given as JSON to an iolist.'],['fun','erl_helpers','mochijson2:encoder/1','Create an encoder/1 with the given options.'],['fun','erl_helpers','struct:delete/1',[]],['fun','erl_helpers','struct:extend/1','Extend a json struct with one or more json struct '],['fun','erl_helpers','struct:from_json/1','by codezone, using mochijson2:decode/1.'],['fun','erl_helpers','struct:from_json/1','by codezone, using mochijson2:decode/1.'],['fun','erl_helpers','struct:get_value/1',[]],['fun','erl_helpers','struct:get_value/2','by codezone.'],['fun','erl_helpers','struct:new/1','by codezone.'],['fun','erl_helpers','struct:set_value/1',[]],['fun','erl_helpers','struct:to_json/1','by codezone, using mochijson2:encode/1.'],['fun','erl_helpers','struct:withdraw/1','withdraw acts in the exact opposite way of extend ']];