var index = [['app','estreams','estreams','[application]'],['mod','estreams','streams','Streams for Erlang.'],['fun','estreams','streams:concat/1','Concatenates two streams into one.'],['fun','estreams','streams:concat/1','Concatenates a list of streams into one stream.'],['fun','estreams','streams:cycle/1','Returns the infinite repetition of the original li'],['fun','estreams','streams:drop/1','Drops first N elements of a steam.'],['fun','estreams','streams:fibonacci/0','Returns a stream of Fibonacci sequence numbers.'],['fun','estreams','streams:hd/1','Equivalent to head.'],['fun','estreams','streams:head/1','Returns the head of a stream, a.k.a.'],['fun','estreams','streams:intersperse/1','Takes an element X and inserts it between the elem'],['fun','estreams','streams:is_finished/1','Checks if stream is finished.'],['fun','estreams','streams:iterate/1','Returns an infinite stream of repeated application'],['fun','estreams','streams:map/1','Returns a stream obtained by applying F to each el'],['fun','estreams','streams:natural/0','Returns a stream of natural numbers counting from '],['fun','estreams','streams:nth/1','Returns the Nth element from a stream.'],['fun','estreams','streams:random/1','Returns a stream of random integers from 1 to N.'],['fun','estreams','streams:repeat/1','Returns an infinite stream of X values.'],['fun','estreams','streams:replicate/1','Returns a stream of length N with X the value of e'],['fun','estreams','streams:tail/1','Returns the tail of a stream.'],['fun','estreams','streams:take/1','Takes first N elements from a stream.'],['fun','estreams','streams:tl/1','Equivalent to tail.']];