var index = [['app','erlaz','erlaz','[application]'],['mod','erlaz','treap','A Treap is a tree data structure in which each nod'],['mod','erlaz','treap_test','   EUnit tests for the treap module.'],['fun','erlaz','treap:append/1','This function appends a new Value to the current l'],['fun','erlaz','treap:append_list/1','This function appends a list of values Values to t'],['fun','erlaz','treap:count_values/1','Returns the the total number of all items stored i'],['fun','erlaz','treap:debug_tree/1',[]],['fun','erlaz','treap:erase/1','This function erases all items with a given key fr'],['fun','erlaz','treap:fetch/1','This function returns the value associated with Ke'],['fun','erlaz','treap:fetch_keys/1','This function returns a list of all keys in the tr'],['fun','erlaz','treap:fetch_keysl/1','This function returns a list of all keys in the tr'],['fun','erlaz','treap:fetch_keysr/1','This function returns a list of all keys in the tr'],['fun','erlaz','treap:filter/1','Returns NewTreap, which is a treap of only the key'],['fun','erlaz','treap:find/1','This function searches for a key in a treap.'],['fun','erlaz','treap:fold/1','Call Fun on successive keys and values of Treap to'],['fun','erlaz','treap:foldl/1','Call Fun on successive keys and values of Treap to'],['fun','erlaz','treap:foldr/1','Call Fun on successive keys and values of Treap to'],['fun','erlaz','treap:foreach/1','Do a level-order traversal and call Fun for every '],['fun','erlaz','treap:foreach_spawn/1','Traverse Treap by starting a new process for every'],['fun','erlaz','treap:foreachl/1','Traverse Treap in ascending order of the keys and '],['fun','erlaz','treap:foreachr/1','Traverse Treap in descending order of the keys and'],['fun','erlaz','treap:from_dict/1','Returns a treap resulting from adding all the key/'],['fun','erlaz','treap:from_dict/1','Returns a new treap containing the same key/values'],['fun','erlaz','treap:from_list/1','Converts a key/value list to a treap.'],['fun','erlaz','treap:is_key/1','This function tests if Key is contained in the tre'],['fun','erlaz','treap:map/1','Returns a new treap NewTreap, build by mapping the'],['fun','erlaz','treap:merge/1','Merges two treaps, Treap1 and Treap2, to create a '],['fun','erlaz','treap:new/0','Returns a new empty treap.'],['fun','erlaz','treap:size/1','Returns the number of elements in dict.'],['fun','erlaz','treap:split/1','This function splits the Treap in 2 separate treap'],['fun','erlaz','treap:store/1','This function stores a Key - Value pair in a treap'],['fun','erlaz','treap:to_dict/1','Returns a dictionary resulting from adding all the'],['fun','erlaz','treap:to_dict/1','Returns a new dictionary containing the same key/v'],['fun','erlaz','treap:to_json/1','Returns a printable JSON represnetation of the tre'],['fun','erlaz','treap:to_list/1','Converts the treap to a key/value (unordered) list'],['fun','erlaz','treap:to_listl/1','Converts the treap to a key/value list sorted by t'],['fun','erlaz','treap:to_listr/1','Converts the treap to a key/value list sorted by t'],['fun','erlaz','treap:to_xml/1','Returns a printable XML represnetation of the trea'],['fun','erlaz','treap:unsplit/1','This function merges two treaps that meet the requ'],['fun','erlaz','treap:update/1','Update the a value in a treap by calling Fun on th'],['fun','erlaz','treap:update/1','Update the a value in a treap by calling Fun on th'],['fun','erlaz','treap:update_counter/1','Add Inc to the value associated with Key and store']];